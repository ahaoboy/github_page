(window["webpackJsonp"] = window["webpackJsonp"] || []).push([
  ["chunk-vendors"],
  {
    "00dc": function(t, e, n) {
      (function(t) {
        var r = n("58a2"),
          i = n("c24d"),
          a = n("561d");
        function o(e) {
          var n = new t(i[e].prime, "hex"),
            r = new t(i[e].gen, "hex");
          return new a(n, r);
        }
        var s = { binary: !0, hex: !0, base64: !0 };
        function u(e, n, i, o) {
          return t.isBuffer(n) || void 0 === s[n]
            ? u(e, "binary", n, i)
            : ((n = n || "binary"),
              (o = o || "binary"),
              (i = i || new t([2])),
              t.isBuffer(i) || (i = new t(i, o)),
              "number" === typeof e
                ? new a(r(e, i), i, !0)
                : (t.isBuffer(e) || (e = new t(e, n)), new a(e, i, !0)));
        }
        (e.DiffieHellmanGroup = e.createDiffieHellmanGroup = e.getDiffieHellman = o),
          (e.createDiffieHellman = e.DiffieHellman = u);
      }.call(this, n("b639").Buffer));
    },
    "0145": function(t, e) {
      (e.encrypt = function(t, e) {
        return t._cipher.encryptBlock(e);
      }),
        (e.decrypt = function(t, e) {
          return t._cipher.decryptBlock(e);
        });
    },
    "0184": function(t, e, n) {
      "use strict";
      var r = n("da3e");
      function i(t) {
        (this.options = t),
          (this.type = this.options.type),
          (this.blockSize = 8),
          this._init(),
          (this.buffer = new Array(this.blockSize)),
          (this.bufferOff = 0);
      }
      (t.exports = i),
        (i.prototype._init = function() {}),
        (i.prototype.update = function(t) {
          return 0 === t.length
            ? []
            : "decrypt" === this.type
            ? this._updateDecrypt(t)
            : this._updateEncrypt(t);
        }),
        (i.prototype._buffer = function(t, e) {
          for (
            var n = Math.min(this.buffer.length - this.bufferOff, t.length - e),
              r = 0;
            r < n;
            r++
          )
            this.buffer[this.bufferOff + r] = t[e + r];
          return (this.bufferOff += n), n;
        }),
        (i.prototype._flushBuffer = function(t, e) {
          return (
            this._update(this.buffer, 0, t, e),
            (this.bufferOff = 0),
            this.blockSize
          );
        }),
        (i.prototype._updateEncrypt = function(t) {
          var e = 0,
            n = 0,
            r = ((this.bufferOff + t.length) / this.blockSize) | 0,
            i = new Array(r * this.blockSize);
          0 !== this.bufferOff &&
            ((e += this._buffer(t, e)),
            this.bufferOff === this.buffer.length &&
              (n += this._flushBuffer(i, n)));
          for (
            var a = t.length - ((t.length - e) % this.blockSize);
            e < a;
            e += this.blockSize
          )
            this._update(t, e, i, n), (n += this.blockSize);
          for (; e < t.length; e++, this.bufferOff++)
            this.buffer[this.bufferOff] = t[e];
          return i;
        }),
        (i.prototype._updateDecrypt = function(t) {
          for (
            var e = 0,
              n = 0,
              r = Math.ceil((this.bufferOff + t.length) / this.blockSize) - 1,
              i = new Array(r * this.blockSize);
            r > 0;
            r--
          )
            (e += this._buffer(t, e)), (n += this._flushBuffer(i, n));
          return (e += this._buffer(t, e)), i;
        }),
        (i.prototype.final = function(t) {
          var e, n;
          return (
            t && (e = this.update(t)),
            (n =
              "encrypt" === this.type
                ? this._finalEncrypt()
                : this._finalDecrypt()),
            e ? e.concat(n) : n
          );
        }),
        (i.prototype._pad = function(t, e) {
          if (0 === e) return !1;
          while (e < t.length) t[e++] = 0;
          return !0;
        }),
        (i.prototype._finalEncrypt = function() {
          if (!this._pad(this.buffer, this.bufferOff)) return [];
          var t = new Array(this.blockSize);
          return this._update(this.buffer, 0, t, 0), t;
        }),
        (i.prototype._unpad = function(t) {
          return t;
        }),
        (i.prototype._finalDecrypt = function() {
          r.equal(this.bufferOff, this.blockSize, "Not enough data to decrypt");
          var t = new Array(this.blockSize);
          return this._flushBuffer(t, 0), this._unpad(t);
        });
    },
    "01f9": function(t, e, n) {
      "use strict";
      var r = n("2d00"),
        i = n("5ca1"),
        a = n("2aba"),
        o = n("32e9"),
        s = n("84f2"),
        u = n("41a0"),
        c = n("7f20"),
        l = n("38fd"),
        f = n("2b4c")("iterator"),
        h = !([].keys && "next" in [].keys()),
        p = "@@iterator",
        d = "keys",
        m = "values",
        v = function() {
          return this;
        };
      t.exports = function(t, e, n, y, g, b, w) {
        u(n, e, y);
        var _,
          x,
          E,
          S = function(t) {
            if (!h && t in C) return C[t];
            switch (t) {
              case d:
                return function() {
                  return new n(this, t);
                };
              case m:
                return function() {
                  return new n(this, t);
                };
            }
            return function() {
              return new n(this, t);
            };
          },
          N = e + " Iterator",
          O = g == m,
          I = !1,
          C = t.prototype,
          A = C[f] || C[p] || (g && C[g]),
          k = A || S(g),
          P = g ? (O ? S("entries") : k) : void 0,
          T = ("Array" == e && C.entries) || A;
        if (
          (T &&
            ((E = l(T.call(new t()))),
            E !== Object.prototype &&
              E.next &&
              (c(E, N, !0), r || "function" == typeof E[f] || o(E, f, v))),
          O &&
            A &&
            A.name !== m &&
            ((I = !0),
            (k = function() {
              return A.call(this);
            })),
          (r && !w) || (!h && !I && C[f]) || o(C, f, k),
          (s[e] = k),
          (s[N] = v),
          g)
        )
          if (
            ((_ = { values: O ? k : S(m), keys: b ? k : S(d), entries: P }), w)
          )
            for (x in _) x in C || a(C, x, _[x]);
          else i(i.P + i.F * (h || I), e, _);
        return _;
      };
    },
    "0211": function(t, e, n) {
      var r = e;
      (r._reverse = function(t) {
        var e = {};
        return (
          Object.keys(t).forEach(function(n) {
            (0 | n) == n && (n |= 0);
            var r = t[n];
            e[r] = n;
          }),
          e
        );
      }),
        (r.der = n("8b71"));
    },
    "02f4": function(t, e, n) {
      var r = n("4588"),
        i = n("be13");
      t.exports = function(t) {
        return function(e, n) {
          var a,
            o,
            s = String(i(e)),
            u = r(n),
            c = s.length;
          return u < 0 || u >= c
            ? t
              ? ""
              : void 0
            : ((a = s.charCodeAt(u)),
              a < 55296 ||
              a > 56319 ||
              u + 1 === c ||
              (o = s.charCodeAt(u + 1)) < 56320 ||
              o > 57343
                ? t
                  ? s.charAt(u)
                  : a
                : t
                ? s.slice(u, u + 2)
                : o - 56320 + ((a - 55296) << 10) + 65536);
        };
      };
    },
    "0390": function(t, e, n) {
      "use strict";
      var r = n("02f4")(!0);
      t.exports = function(t, e, n) {
        return e + (n ? r(t, e).length : 1);
      };
    },
    "0706": function(module, exports, __webpack_require__) {
      var indexOf = __webpack_require__("ee34"),
        Object_keys = function(t) {
          if (Object.keys) return Object.keys(t);
          var e = [];
          for (var n in t) e.push(n);
          return e;
        },
        forEach = function(t, e) {
          if (t.forEach) return t.forEach(e);
          for (var n = 0; n < t.length; n++) e(t[n], n, t);
        },
        defineProp = (function() {
          try {
            return (
              Object.defineProperty({}, "_", {}),
              function(t, e, n) {
                Object.defineProperty(t, e, {
                  writable: !0,
                  enumerable: !1,
                  configurable: !0,
                  value: n
                });
              }
            );
          } catch (t) {
            return function(t, e, n) {
              t[e] = n;
            };
          }
        })(),
        globals = [
          "Array",
          "Boolean",
          "Date",
          "Error",
          "EvalError",
          "Function",
          "Infinity",
          "JSON",
          "Math",
          "NaN",
          "Number",
          "Object",
          "RangeError",
          "ReferenceError",
          "RegExp",
          "String",
          "SyntaxError",
          "TypeError",
          "URIError",
          "decodeURI",
          "decodeURIComponent",
          "encodeURI",
          "encodeURIComponent",
          "escape",
          "eval",
          "isFinite",
          "isNaN",
          "parseFloat",
          "parseInt",
          "undefined",
          "unescape"
        ];
      function Context() {}
      Context.prototype = {};
      var Script = (exports.Script = function(t) {
        if (!(this instanceof Script)) return new Script(t);
        this.code = t;
      });
      (Script.prototype.runInContext = function(t) {
        if (!(t instanceof Context))
          throw new TypeError("needs a 'context' argument.");
        var e = document.createElement("iframe");
        e.style || (e.style = {}),
          (e.style.display = "none"),
          document.body.appendChild(e);
        var n = e.contentWindow,
          r = n.eval,
          i = n.execScript;
        !r && i && (i.call(n, "null"), (r = n.eval)),
          forEach(Object_keys(t), function(e) {
            n[e] = t[e];
          }),
          forEach(globals, function(e) {
            t[e] && (n[e] = t[e]);
          });
        var a = Object_keys(n),
          o = r.call(n, this.code);
        return (
          forEach(Object_keys(n), function(e) {
            (e in t || -1 === indexOf(a, e)) && (t[e] = n[e]);
          }),
          forEach(globals, function(e) {
            e in t || defineProp(t, e, n[e]);
          }),
          document.body.removeChild(e),
          o
        );
      }),
        (Script.prototype.runInThisContext = function() {
          return eval(this.code);
        }),
        (Script.prototype.runInNewContext = function(t) {
          var e = Script.createContext(t),
            n = this.runInContext(e);
          return (
            forEach(Object_keys(e), function(n) {
              t[n] = e[n];
            }),
            n
          );
        }),
        forEach(Object_keys(Script.prototype), function(t) {
          exports[t] = Script[t] = function(e) {
            var n = Script(e);
            return n[t].apply(n, [].slice.call(arguments, 1));
          };
        }),
        (exports.createScript = function(t) {
          return exports.Script(t);
        }),
        (exports.createContext = Script.createContext = function(t) {
          var e = new Context();
          return (
            "object" === typeof t &&
              forEach(Object_keys(t), function(n) {
                e[n] = t[n];
              }),
            e
          );
        });
    },
    "07e3": function(t, e) {
      var n = {}.hasOwnProperty;
      t.exports = function(t, e) {
        return n.call(t, e);
      };
    },
    "07f2": function(t, e, n) {
      "use strict";
      var r = n("c3c0"),
        i = n("6eed");
      function a() {
        if (!(this instanceof a)) return new a();
        i.call(this),
          (this.h = [
            3238371032,
            914150663,
            812702999,
            4144912697,
            4290775857,
            1750603025,
            1694076839,
            3204075428
          ]);
      }
      r.inherits(a, i),
        (t.exports = a),
        (a.blockSize = 512),
        (a.outSize = 224),
        (a.hmacStrength = 192),
        (a.padLength = 64),
        (a.prototype._digest = function(t) {
          return "hex" === t
            ? r.toHex32(this.h.slice(0, 7), "big")
            : r.split32(this.h.slice(0, 7), "big");
        });
    },
    "087f": function(t, e, n) {
      var r = n("3fb5"),
        i = n("b672"),
        a = n("8707").Buffer,
        o = [1518500249, 1859775393, -1894007588, -899497514],
        s = new Array(80);
      function u() {
        this.init(), (this._w = s), i.call(this, 64, 56);
      }
      function c(t) {
        return (t << 5) | (t >>> 27);
      }
      function l(t) {
        return (t << 30) | (t >>> 2);
      }
      function f(t, e, n, r) {
        return 0 === t
          ? (e & n) | (~e & r)
          : 2 === t
          ? (e & n) | (e & r) | (n & r)
          : e ^ n ^ r;
      }
      r(u, i),
        (u.prototype.init = function() {
          return (
            (this._a = 1732584193),
            (this._b = 4023233417),
            (this._c = 2562383102),
            (this._d = 271733878),
            (this._e = 3285377520),
            this
          );
        }),
        (u.prototype._update = function(t) {
          for (
            var e = this._w,
              n = 0 | this._a,
              r = 0 | this._b,
              i = 0 | this._c,
              a = 0 | this._d,
              s = 0 | this._e,
              u = 0;
            u < 16;
            ++u
          )
            e[u] = t.readInt32BE(4 * u);
          for (; u < 80; ++u)
            e[u] = e[u - 3] ^ e[u - 8] ^ e[u - 14] ^ e[u - 16];
          for (var h = 0; h < 80; ++h) {
            var p = ~~(h / 20),
              d = (c(n) + f(p, r, i, a) + s + e[h] + o[p]) | 0;
            (s = a), (a = i), (i = l(r)), (r = n), (n = d);
          }
          (this._a = (n + this._a) | 0),
            (this._b = (r + this._b) | 0),
            (this._c = (i + this._c) | 0),
            (this._d = (a + this._d) | 0),
            (this._e = (s + this._e) | 0);
        }),
        (u.prototype._hash = function() {
          var t = a.allocUnsafe(20);
          return (
            t.writeInt32BE(0 | this._a, 0),
            t.writeInt32BE(0 | this._b, 4),
            t.writeInt32BE(0 | this._c, 8),
            t.writeInt32BE(0 | this._d, 12),
            t.writeInt32BE(0 | this._e, 16),
            t
          );
        }),
        (t.exports = u);
    },
    "0960": function(t, e, n) {
      t.exports = n("b19a");
    },
    "097d": function(t, e, n) {
      "use strict";
      var r = n("5ca1"),
        i = n("8378"),
        a = n("7726"),
        o = n("ebd6"),
        s = n("bcaa");
      r(r.P + r.R, "Promise", {
        finally: function(t) {
          var e = o(this, i.Promise || a.Promise),
            n = "function" == typeof t;
          return this.then(
            n
              ? function(n) {
                  return s(e, t()).then(function() {
                    return n;
                  });
                }
              : t,
            n
              ? function(n) {
                  return s(e, t()).then(function() {
                    throw n;
                  });
                }
              : t
          );
        }
      });
    },
    "09f5": function(t, e, n) {
      var r = n("39f5"),
        i = n("8707").Buffer,
        a = n("6430"),
        o = n("3fb5");
      function s(t, e, n, o) {
        a.call(this),
          (this._cipher = new r.AES(e)),
          (this._prev = i.from(n)),
          (this._cache = i.allocUnsafe(0)),
          (this._secCache = i.allocUnsafe(0)),
          (this._decrypt = o),
          (this._mode = t);
      }
      o(s, a),
        (s.prototype._update = function(t) {
          return this._mode.encrypt(this, t, this._decrypt);
        }),
        (s.prototype._final = function() {
          this._cipher.scrub();
        }),
        (t.exports = s);
    },
    "0be8": function(t, e) {
      (e["des-ecb"] = { key: 8, iv: 0 }),
        (e["des-cbc"] = e.des = { key: 8, iv: 8 }),
        (e["des-ede3-cbc"] = e.des3 = { key: 24, iv: 8 }),
        (e["des-ede3"] = { key: 24, iv: 0 }),
        (e["des-ede-cbc"] = { key: 16, iv: 8 }),
        (e["des-ede"] = { key: 16, iv: 0 });
    },
    "0bfb": function(t, e, n) {
      "use strict";
      var r = n("cb7c");
      t.exports = function() {
        var t = r(this),
          e = "";
        return (
          t.global && (e += "g"),
          t.ignoreCase && (e += "i"),
          t.multiline && (e += "m"),
          t.unicode && (e += "u"),
          t.sticky && (e += "y"),
          e
        );
      };
    },
    "0cbb": function(t, e, n) {
      "use strict";
      var r,
        i = e,
        a = n("7d92"),
        o = n("3337"),
        s = o.utils.assert;
      function u(t) {
        "short" === t.type
          ? (this.curve = new o.curve.short(t))
          : "edwards" === t.type
          ? (this.curve = new o.curve.edwards(t))
          : (this.curve = new o.curve.mont(t)),
          (this.g = this.curve.g),
          (this.n = this.curve.n),
          (this.hash = t.hash),
          s(this.g.validate(), "Invalid curve"),
          s(this.g.mul(this.n).isInfinity(), "Invalid curve, G*N != O");
      }
      function c(t, e) {
        Object.defineProperty(i, t, {
          configurable: !0,
          enumerable: !0,
          get: function() {
            var n = new u(e);
            return (
              Object.defineProperty(i, t, {
                configurable: !0,
                enumerable: !0,
                value: n
              }),
              n
            );
          }
        });
      }
      (i.PresetCurve = u),
        c("p192", {
          type: "short",
          prime: "p192",
          p: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",
          a: "ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",
          b: "64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",
          n: "ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",
          hash: a.sha256,
          gRed: !1,
          g: [
            "188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012",
            "07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"
          ]
        }),
        c("p224", {
          type: "short",
          prime: "p224",
          p: "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",
          a: "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",
          b: "b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",
          n: "ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",
          hash: a.sha256,
          gRed: !1,
          g: [
            "b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21",
            "bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"
          ]
        }),
        c("p256", {
          type: "short",
          prime: null,
          p:
            "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",
          a:
            "ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",
          b:
            "5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",
          n:
            "ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",
          hash: a.sha256,
          gRed: !1,
          g: [
            "6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296",
            "4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"
          ]
        }),
        c("p384", {
          type: "short",
          prime: null,
          p:
            "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",
          a:
            "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",
          b:
            "b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",
          n:
            "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",
          hash: a.sha384,
          gRed: !1,
          g: [
            "aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7",
            "3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"
          ]
        }),
        c("p521", {
          type: "short",
          prime: null,
          p:
            "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",
          a:
            "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",
          b:
            "00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",
          n:
            "000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",
          hash: a.sha512,
          gRed: !1,
          g: [
            "000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66",
            "00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"
          ]
        }),
        c("curve25519", {
          type: "mont",
          prime: "p25519",
          p:
            "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
          a: "76d06",
          b: "1",
          n:
            "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
          hash: a.sha256,
          gRed: !1,
          g: ["9"]
        }),
        c("ed25519", {
          type: "edwards",
          prime: "p25519",
          p:
            "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",
          a: "-1",
          c: "1",
          d:
            "52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",
          n:
            "1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",
          hash: a.sha256,
          gRed: !1,
          g: [
            "216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a",
            "6666666666666666666666666666666666666666666666666666666666666658"
          ]
        });
      try {
        r = n("409b");
      } catch (l) {
        r = void 0;
      }
      c("secp256k1", {
        type: "short",
        prime: "k256",
        p:
          "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",
        a: "0",
        b: "7",
        n:
          "ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",
        h: "1",
        hash: a.sha256,
        beta:
          "7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",
        lambda:
          "5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",
        basis: [
          {
            a: "3086d221a7d46bcde86c90e49284eb15",
            b: "-e4437ed6010e88286f547fa90abfe4c3"
          },
          {
            a: "114ca50f7a8e2f3f657c1108d9d44cfd8",
            b: "3086d221a7d46bcde86c90e49284eb15"
          }
        ],
        gRed: !1,
        g: [
          "79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798",
          "483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",
          r
        ]
      });
    },
    "0d58": function(t, e, n) {
      var r = n("ce10"),
        i = n("e11e");
      t.exports =
        Object.keys ||
        function(t) {
          return r(t, i);
        };
    },
    "0da4": function(t, e, n) {
      "use strict";
      var r = n("da3e"),
        i = n("3fb5"),
        a = {};
      function o(t) {
        r.equal(t.length, 8, "Invalid IV length"), (this.iv = new Array(8));
        for (var e = 0; e < this.iv.length; e++) this.iv[e] = t[e];
      }
      function s(t) {
        function e(e) {
          t.call(this, e), this._cbcInit();
        }
        i(e, t);
        for (var n = Object.keys(a), r = 0; r < n.length; r++) {
          var o = n[r];
          e.prototype[o] = a[o];
        }
        return (
          (e.create = function(t) {
            return new e(t);
          }),
          e
        );
      }
      (e.instantiate = s),
        (a._cbcInit = function() {
          var t = new o(this.options.iv);
          this._cbcState = t;
        }),
        (a._update = function(t, e, n, r) {
          var i = this._cbcState,
            a = this.constructor.super_.prototype,
            o = i.iv;
          if ("encrypt" === this.type) {
            for (var s = 0; s < this.blockSize; s++) o[s] ^= t[e + s];
            a._update.call(this, o, 0, n, r);
            for (s = 0; s < this.blockSize; s++) o[s] = n[r + s];
          } else {
            a._update.call(this, t, e, n, r);
            for (s = 0; s < this.blockSize; s++) n[r + s] ^= o[s];
            for (s = 0; s < this.blockSize; s++) o[s] = t[e + s];
          }
        });
    },
    "0f2c": function(t, e, n) {
      var r = n("2aee"),
        i = n("f460"),
        a = n("83d5"),
        o = n("399f"),
        s = n("a958"),
        u = n("98e6"),
        c = n("5291"),
        l = n("8707").Buffer;
      function f(t, e) {
        var n = t.modulus.byteLength(),
          r = u("sha1")
            .update(l.alloc(0))
            .digest(),
          o = r.length;
        if (0 !== e[0]) throw new Error("decryption error");
        var s = e.slice(1, o + 1),
          c = e.slice(o + 1),
          f = a(s, i(c, o)),
          h = a(c, i(f, n - o - 1));
        if (p(r, h.slice(0, o))) throw new Error("decryption error");
        var d = o;
        while (0 === h[d]) d++;
        if (1 !== h[d++]) throw new Error("decryption error");
        return h.slice(d);
      }
      function h(t, e, n) {
        var r = e.slice(0, 2),
          i = 2,
          a = 0;
        while (0 !== e[i++])
          if (i >= e.length) {
            a++;
            break;
          }
        var o = e.slice(2, i - 1);
        if (
          ((("0002" !== r.toString("hex") && !n) ||
            ("0001" !== r.toString("hex") && n)) &&
            a++,
          o.length < 8 && a++,
          a)
        )
          throw new Error("decryption error");
        return e.slice(i);
      }
      function p(t, e) {
        (t = l.from(t)), (e = l.from(e));
        var n = 0,
          r = t.length;
        t.length !== e.length && (n++, (r = Math.min(t.length, e.length)));
        var i = -1;
        while (++i < r) n += t[i] ^ e[i];
        return n;
      }
      t.exports = function(t, e, n) {
        var i;
        i = t.padding ? t.padding : n ? 1 : 4;
        var a,
          u = r(t),
          p = u.modulus.byteLength();
        if (e.length > p || new o(e).cmp(u.modulus) >= 0)
          throw new Error("decryption error");
        a = n ? c(new o(e), u) : s(e, u);
        var d = l.alloc(p - a.length);
        if (((a = l.concat([d, a], p)), 4 === i)) return f(u, a);
        if (1 === i) return h(u, a, n);
        if (3 === i) return a;
        throw new Error("unknown padding");
      };
    },
    "0fc9": function(t, e, n) {
      var r = n("3a38"),
        i = Math.max,
        a = Math.min;
      t.exports = function(t, e) {
        return (t = r(t)), t < 0 ? i(t + e, 0) : a(t, e);
      };
    },
    1169: function(t, e, n) {
      var r = n("2d95");
      t.exports =
        Array.isArray ||
        function(t) {
          return "Array" == r(t);
        };
    },
    "116d": function(t, e, n) {
      t.exports = n("b4e8");
    },
    1173: function(t, e) {
      t.exports = function(t, e, n, r) {
        if (!(t instanceof e) || (void 0 !== r && r in t))
          throw TypeError(n + ": incorrect invocation!");
        return t;
      };
    },
    "11dc": function(t, e, n) {
      "use strict";
      (function(e, r) {
        var i = 65536,
          a = 4294967295;
        function o() {
          throw new Error(
            "Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11"
          );
        }
        var s = n("8707").Buffer,
          u = e.crypto || e.msCrypto;
        function c(t, e) {
          if (t > a) throw new RangeError("requested too many random bytes");
          var n = s.allocUnsafe(t);
          if (t > 0)
            if (t > i)
              for (var o = 0; o < t; o += i)
                u.getRandomValues(n.slice(o, o + i));
            else u.getRandomValues(n);
          return "function" === typeof e
            ? r.nextTick(function() {
                e(null, n);
              })
            : n;
        }
        u && u.getRandomValues ? (t.exports = c) : (t.exports = o);
      }.call(this, n("c8ba"), n("f28c")));
    },
    "11e9": function(t, e, n) {
      var r = n("52a7"),
        i = n("4630"),
        a = n("6821"),
        o = n("6a99"),
        s = n("69a8"),
        u = n("c69a"),
        c = Object.getOwnPropertyDescriptor;
      e.f = n("9e1e")
        ? c
        : function(t, e) {
            if (((t = a(t)), (e = o(e, !0)), u))
              try {
                return c(t, e);
              } catch (n) {}
            if (s(t, e)) return i(!r.f.call(t, e), t[e]);
          };
    },
    "13e2": function(t, e, n) {
      "use strict";
      var r = n("c3c0"),
        i = n("edc9"),
        a = n("aa56"),
        o = r.rotl32,
        s = r.sum32,
        u = r.sum32_5,
        c = a.ft_1,
        l = i.BlockHash,
        f = [1518500249, 1859775393, 2400959708, 3395469782];
      function h() {
        if (!(this instanceof h)) return new h();
        l.call(this),
          (this.h = [
            1732584193,
            4023233417,
            2562383102,
            271733878,
            3285377520
          ]),
          (this.W = new Array(80));
      }
      r.inherits(h, l),
        (t.exports = h),
        (h.blockSize = 512),
        (h.outSize = 160),
        (h.hmacStrength = 80),
        (h.padLength = 64),
        (h.prototype._update = function(t, e) {
          for (var n = this.W, r = 0; r < 16; r++) n[r] = t[e + r];
          for (; r < n.length; r++)
            n[r] = o(n[r - 3] ^ n[r - 8] ^ n[r - 14] ^ n[r - 16], 1);
          var i = this.h[0],
            a = this.h[1],
            l = this.h[2],
            h = this.h[3],
            p = this.h[4];
          for (r = 0; r < n.length; r++) {
            var d = ~~(r / 20),
              m = u(o(i, 5), c(d, a, l, h), p, n[r], f[d]);
            (p = h), (h = l), (l = o(a, 30)), (a = i), (i = m);
          }
          (this.h[0] = s(this.h[0], i)),
            (this.h[1] = s(this.h[1], a)),
            (this.h[2] = s(this.h[2], l)),
            (this.h[3] = s(this.h[3], h)),
            (this.h[4] = s(this.h[4], p));
        }),
        (h.prototype._digest = function(t) {
          return "hex" === t
            ? r.toHex32(this.h, "big")
            : r.split32(this.h, "big");
        });
    },
    1495: function(t, e, n) {
      var r = n("86cc"),
        i = n("cb7c"),
        a = n("0d58");
      t.exports = n("9e1e")
        ? Object.defineProperties
        : function(t, e) {
            i(t);
            var n,
              o = a(e),
              s = o.length,
              u = 0;
            while (s > u) r.f(t, (n = o[u++]), e[n]);
            return t;
          };
    },
    1545: function(t, e, n) {
      "use strict";
      (e.utils = n("5ee7")),
        (e.Cipher = n("0184")),
        (e.DES = n("4e2b")),
        (e.CBC = n("0da4")),
        (e.EDE = n("1fec"));
    },
    1654: function(t, e, n) {
      "use strict";
      var r = n("71c1")(!0);
      n("30f1")(
        String,
        "String",
        function(t) {
          (this._t = String(t)), (this._i = 0);
        },
        function() {
          var t,
            e = this._t,
            n = this._i;
          return n >= e.length
            ? { value: void 0, done: !0 }
            : ((t = r(e, n)), (this._i += t.length), { value: t, done: !1 });
        }
      );
    },
    1691: function(t, e) {
      t.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(
        ","
      );
    },
    1991: function(t, e, n) {
      var r,
        i,
        a,
        o = n("9b43"),
        s = n("31f4"),
        u = n("fab2"),
        c = n("230e"),
        l = n("7726"),
        f = l.process,
        h = l.setImmediate,
        p = l.clearImmediate,
        d = l.MessageChannel,
        m = l.Dispatch,
        v = 0,
        y = {},
        g = "onreadystatechange",
        b = function() {
          var t = +this;
          if (y.hasOwnProperty(t)) {
            var e = y[t];
            delete y[t], e();
          }
        },
        w = function(t) {
          b.call(t.data);
        };
      (h && p) ||
        ((h = function(t) {
          var e = [],
            n = 1;
          while (arguments.length > n) e.push(arguments[n++]);
          return (
            (y[++v] = function() {
              s("function" == typeof t ? t : Function(t), e);
            }),
            r(v),
            v
          );
        }),
        (p = function(t) {
          delete y[t];
        }),
        "process" == n("2d95")(f)
          ? (r = function(t) {
              f.nextTick(o(b, t, 1));
            })
          : m && m.now
          ? (r = function(t) {
              m.now(o(b, t, 1));
            })
          : d
          ? ((i = new d()),
            (a = i.port2),
            (i.port1.onmessage = w),
            (r = o(a.postMessage, a, 1)))
          : l.addEventListener &&
            "function" == typeof postMessage &&
            !l.importScripts
          ? ((r = function(t) {
              l.postMessage(t + "", "*");
            }),
            l.addEventListener("message", w, !1))
          : (r =
              g in c("script")
                ? function(t) {
                    u.appendChild(c("script"))[g] = function() {
                      u.removeChild(this), b.call(t);
                    };
                  }
                : function(t) {
                    setTimeout(o(b, t, 1), 0);
                  })),
        (t.exports = { set: h, clear: p });
    },
    "1a2a": function(t, e, n) {
      "use strict";
      var r = n("3fb5"),
        i = n("d424"),
        a = n("6430"),
        o = n("8707").Buffer,
        s = n("5a76"),
        u = n("b5ca"),
        c = n("69f2"),
        l = o.alloc(128);
      function f(t, e) {
        a.call(this, "digest"), "string" === typeof e && (e = o.from(e));
        var n = "sha512" === t || "sha384" === t ? 128 : 64;
        if (((this._alg = t), (this._key = e), e.length > n)) {
          var r = "rmd160" === t ? new u() : c(t);
          e = r.update(e).digest();
        } else e.length < n && (e = o.concat([e, l], n));
        for (
          var i = (this._ipad = o.allocUnsafe(n)),
            s = (this._opad = o.allocUnsafe(n)),
            f = 0;
          f < n;
          f++
        )
          (i[f] = 54 ^ e[f]), (s[f] = 92 ^ e[f]);
        (this._hash = "rmd160" === t ? new u() : c(t)), this._hash.update(i);
      }
      r(f, a),
        (f.prototype._update = function(t) {
          this._hash.update(t);
        }),
        (f.prototype._final = function() {
          var t = this._hash.digest(),
            e = "rmd160" === this._alg ? new u() : c(this._alg);
          return e
            .update(this._opad)
            .update(t)
            .digest();
        }),
        (t.exports = function(t, e) {
          return (
            (t = t.toLowerCase()),
            "rmd160" === t || "ripemd160" === t
              ? new f("rmd160", e)
              : "md5" === t
              ? new i(s, e)
              : new f(t, e)
          );
        });
    },
    "1bc3": function(t, e, n) {
      var r = n("f772");
      t.exports = function(t, e) {
        if (!r(t)) return t;
        var n, i;
        if (e && "function" == typeof (n = t.toString) && !r((i = n.call(t))))
          return i;
        if ("function" == typeof (n = t.valueOf) && !r((i = n.call(t))))
          return i;
        if (!e && "function" == typeof (n = t.toString) && !r((i = n.call(t))))
          return i;
        throw TypeError("Can't convert object to primitive value");
      };
    },
    "1c46": function(t, e, n) {
      "use strict";
      (e.randomBytes = e.rng = e.pseudoRandomBytes = e.prng = n("11dc")),
        (e.createHash = e.Hash = n("98e6")),
        (e.createHmac = e.Hmac = n("1a2a"));
      var r = n("116d"),
        i = Object.keys(r),
        a = [
          "sha1",
          "sha224",
          "sha256",
          "sha384",
          "sha512",
          "md5",
          "rmd160"
        ].concat(i);
      e.getHashes = function() {
        return a;
      };
      var o = n("a099");
      (e.pbkdf2 = o.pbkdf2), (e.pbkdf2Sync = o.pbkdf2Sync);
      var s = n("956a");
      (e.Cipher = s.Cipher),
        (e.createCipher = s.createCipher),
        (e.Cipheriv = s.Cipheriv),
        (e.createCipheriv = s.createCipheriv),
        (e.Decipher = s.Decipher),
        (e.createDecipher = s.createDecipher),
        (e.Decipheriv = s.Decipheriv),
        (e.createDecipheriv = s.createDecipheriv),
        (e.getCiphers = s.getCiphers),
        (e.listCiphers = s.listCiphers);
      var u = n("00dc");
      (e.DiffieHellmanGroup = u.DiffieHellmanGroup),
        (e.createDiffieHellmanGroup = u.createDiffieHellmanGroup),
        (e.getDiffieHellman = u.getDiffieHellman),
        (e.createDiffieHellman = u.createDiffieHellman),
        (e.DiffieHellman = u.DiffieHellman);
      var c = n("b692");
      (e.createSign = c.createSign),
        (e.Sign = c.Sign),
        (e.createVerify = c.createVerify),
        (e.Verify = c.Verify),
        (e.createECDH = n("e1d3"));
      var l = n("6442");
      (e.publicEncrypt = l.publicEncrypt),
        (e.privateEncrypt = l.privateEncrypt),
        (e.publicDecrypt = l.publicDecrypt),
        (e.privateDecrypt = l.privateDecrypt);
      var f = n("75cc");
      (e.randomFill = f.randomFill),
        (e.randomFillSync = f.randomFillSync),
        (e.createCredentials = function() {
          throw new Error(
            [
              "sorry, createCredentials is not implemented yet",
              "we accept pull requests",
              "https://github.com/crypto-browserify/crypto-browserify"
            ].join("\n")
          );
        }),
        (e.constants = {
          DH_CHECK_P_NOT_SAFE_PRIME: 2,
          DH_CHECK_P_NOT_PRIME: 1,
          DH_UNABLE_TO_CHECK_GENERATOR: 4,
          DH_NOT_SUITABLE_GENERATOR: 8,
          NPN_ENABLED: 1,
          ALPN_ENABLED: 1,
          RSA_PKCS1_PADDING: 1,
          RSA_SSLV23_PADDING: 2,
          RSA_NO_PADDING: 3,
          RSA_PKCS1_OAEP_PADDING: 4,
          RSA_X931_PADDING: 5,
          RSA_PKCS1_PSS_PADDING: 6,
          POINT_CONVERSION_COMPRESSED: 2,
          POINT_CONVERSION_UNCOMPRESSED: 4,
          POINT_CONVERSION_HYBRID: 6
        });
    },
    "1e3c": function(t, e, n) {
      var r = n("6430"),
        i = n("1545"),
        a = n("3fb5"),
        o = n("8707").Buffer,
        s = {
          "des-ede3-cbc": i.CBC.instantiate(i.EDE),
          "des-ede3": i.EDE,
          "des-ede-cbc": i.CBC.instantiate(i.EDE),
          "des-ede": i.EDE,
          "des-cbc": i.CBC.instantiate(i.DES),
          "des-ecb": i.DES
        };
      function u(t) {
        r.call(this);
        var e,
          n = t.mode.toLowerCase(),
          i = s[n];
        e = t.decrypt ? "decrypt" : "encrypt";
        var a = t.key;
        o.isBuffer(a) || (a = o.from(a)),
          ("des-ede" !== n && "des-ede-cbc" !== n) ||
            (a = o.concat([a, a.slice(0, 8)]));
        var u = t.iv;
        o.isBuffer(u) || (u = o.from(u)),
          (this._des = i.create({ key: a, iv: u, type: e }));
      }
      (s.des = s["des-cbc"]),
        (s.des3 = s["des-ede3-cbc"]),
        (t.exports = u),
        a(u, r),
        (u.prototype._update = function(t) {
          return o.from(this._des.update(t));
        }),
        (u.prototype._final = function() {
          return o.from(this._des.final());
        });
    },
    "1ec9": function(t, e, n) {
      var r = n("f772"),
        i = n("e53d").document,
        a = r(i) && r(i.createElement);
      t.exports = function(t) {
        return a ? i.createElement(t) : {};
      };
    },
    "1fa8": function(t, e, n) {
      var r = n("cb7c");
      t.exports = function(t, e, n, i) {
        try {
          return i ? e(r(n)[0], n[1]) : e(n);
        } catch (o) {
          var a = t["return"];
          throw (void 0 !== a && r(a.call(t)), o);
        }
      };
    },
    "1fb5": function(t, e, n) {
      "use strict";
      (e.byteLength = l), (e.toByteArray = h), (e.fromByteArray = m);
      for (
        var r = [],
          i = [],
          a = "undefined" !== typeof Uint8Array ? Uint8Array : Array,
          o =
            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
          s = 0,
          u = o.length;
        s < u;
        ++s
      )
        (r[s] = o[s]), (i[o.charCodeAt(s)] = s);
      function c(t) {
        var e = t.length;
        if (e % 4 > 0)
          throw new Error("Invalid string. Length must be a multiple of 4");
        var n = t.indexOf("=");
        -1 === n && (n = e);
        var r = n === e ? 0 : 4 - (n % 4);
        return [n, r];
      }
      function l(t) {
        var e = c(t),
          n = e[0],
          r = e[1];
        return (3 * (n + r)) / 4 - r;
      }
      function f(t, e, n) {
        return (3 * (e + n)) / 4 - n;
      }
      function h(t) {
        for (
          var e,
            n = c(t),
            r = n[0],
            o = n[1],
            s = new a(f(t, r, o)),
            u = 0,
            l = o > 0 ? r - 4 : r,
            h = 0;
          h < l;
          h += 4
        )
          (e =
            (i[t.charCodeAt(h)] << 18) |
            (i[t.charCodeAt(h + 1)] << 12) |
            (i[t.charCodeAt(h + 2)] << 6) |
            i[t.charCodeAt(h + 3)]),
            (s[u++] = (e >> 16) & 255),
            (s[u++] = (e >> 8) & 255),
            (s[u++] = 255 & e);
        return (
          2 === o &&
            ((e = (i[t.charCodeAt(h)] << 2) | (i[t.charCodeAt(h + 1)] >> 4)),
            (s[u++] = 255 & e)),
          1 === o &&
            ((e =
              (i[t.charCodeAt(h)] << 10) |
              (i[t.charCodeAt(h + 1)] << 4) |
              (i[t.charCodeAt(h + 2)] >> 2)),
            (s[u++] = (e >> 8) & 255),
            (s[u++] = 255 & e)),
          s
        );
      }
      function p(t) {
        return (
          r[(t >> 18) & 63] + r[(t >> 12) & 63] + r[(t >> 6) & 63] + r[63 & t]
        );
      }
      function d(t, e, n) {
        for (var r, i = [], a = e; a < n; a += 3)
          (r =
            ((t[a] << 16) & 16711680) +
            ((t[a + 1] << 8) & 65280) +
            (255 & t[a + 2])),
            i.push(p(r));
        return i.join("");
      }
      function m(t) {
        for (
          var e, n = t.length, i = n % 3, a = [], o = 16383, s = 0, u = n - i;
          s < u;
          s += o
        )
          a.push(d(t, s, s + o > u ? u : s + o));
        return (
          1 === i
            ? ((e = t[n - 1]), a.push(r[e >> 2] + r[(e << 4) & 63] + "=="))
            : 2 === i &&
              ((e = (t[n - 2] << 8) + t[n - 1]),
              a.push(r[e >> 10] + r[(e >> 4) & 63] + r[(e << 2) & 63] + "=")),
          a.join("")
        );
      }
      (i["-".charCodeAt(0)] = 62), (i["_".charCodeAt(0)] = 63);
    },
    "1fec": function(t, e, n) {
      "use strict";
      var r = n("da3e"),
        i = n("3fb5"),
        a = n("1545"),
        o = a.Cipher,
        s = a.DES;
      function u(t, e) {
        r.equal(e.length, 24, "Invalid key length");
        var n = e.slice(0, 8),
          i = e.slice(8, 16),
          a = e.slice(16, 24);
        this.ciphers =
          "encrypt" === t
            ? [
                s.create({ type: "encrypt", key: n }),
                s.create({ type: "decrypt", key: i }),
                s.create({ type: "encrypt", key: a })
              ]
            : [
                s.create({ type: "decrypt", key: a }),
                s.create({ type: "encrypt", key: i }),
                s.create({ type: "decrypt", key: n })
              ];
      }
      function c(t) {
        o.call(this, t);
        var e = new u(this.type, this.options.key);
        this._edeState = e;
      }
      i(c, o),
        (t.exports = c),
        (c.create = function(t) {
          return new c(t);
        }),
        (c.prototype._update = function(t, e, n, r) {
          var i = this._edeState;
          i.ciphers[0]._update(t, e, n, r),
            i.ciphers[1]._update(n, r, n, r),
            i.ciphers[2]._update(n, r, n, r);
        }),
        (c.prototype._pad = s.prototype._pad),
        (c.prototype._unpad = s.prototype._unpad);
    },
    "206d": function(t, e, n) {
      (function(e, r) {
        var i,
          a = n("7d2a"),
          o = n("9f9d"),
          s = n("e07b"),
          u = n("8707").Buffer,
          c = e.crypto && e.crypto.subtle,
          l = {
            sha: "SHA-1",
            "sha-1": "SHA-1",
            sha1: "SHA-1",
            sha256: "SHA-256",
            "sha-256": "SHA-256",
            sha384: "SHA-384",
            "sha-384": "SHA-384",
            "sha-512": "SHA-512",
            sha512: "SHA-512"
          },
          f = [];
        function h(t) {
          if (e.process && !e.process.browser) return Promise.resolve(!1);
          if (!c || !c.importKey || !c.deriveBits) return Promise.resolve(!1);
          if (void 0 !== f[t]) return f[t];
          i = i || u.alloc(8);
          var n = p(i, i, 10, 128, t)
            .then(function() {
              return !0;
            })
            .catch(function() {
              return !1;
            });
          return (f[t] = n), n;
        }
        function p(t, e, n, r, i) {
          return c
            .importKey("raw", t, { name: "PBKDF2" }, !1, ["deriveBits"])
            .then(function(t) {
              return c.deriveBits(
                { name: "PBKDF2", salt: e, iterations: n, hash: { name: i } },
                t,
                r << 3
              );
            })
            .then(function(t) {
              return u.from(t);
            });
        }
        function d(t, e) {
          t.then(
            function(t) {
              r.nextTick(function() {
                e(null, t);
              });
            },
            function(t) {
              r.nextTick(function() {
                e(t);
              });
            }
          );
        }
        t.exports = function(t, n, i, c, f, m) {
          "function" === typeof f && ((m = f), (f = void 0)), (f = f || "sha1");
          var v = l[f.toLowerCase()];
          if (!v || "function" !== typeof e.Promise)
            return r.nextTick(function() {
              var e;
              try {
                e = s(t, n, i, c, f);
              } catch (r) {
                return m(r);
              }
              m(null, e);
            });
          if ((a(t, n, i, c), "function" !== typeof m))
            throw new Error("No callback provided to pbkdf2");
          u.isBuffer(t) || (t = u.from(t, o)),
            u.isBuffer(n) || (n = u.from(n, o)),
            d(
              h(v).then(function(e) {
                return e ? p(t, n, i, c, v) : s(t, n, i, c, f);
              }),
              m
            );
        };
      }.call(this, n("c8ba"), n("f28c")));
    },
    "20f6": function(t, e, n) {
      var r = e;
      (r.der = n("cfbd")), (r.pem = n("8df7"));
    },
    2137: function(t, e, n) {
      "use strict";
      var r = n("c3c0"),
        i = n("da3e");
      function a(t, e, n) {
        if (!(this instanceof a)) return new a(t, e, n);
        (this.Hash = t),
          (this.blockSize = t.blockSize / 8),
          (this.outSize = t.outSize / 8),
          (this.inner = null),
          (this.outer = null),
          this._init(r.toArray(e, n));
      }
      (t.exports = a),
        (a.prototype._init = function(t) {
          t.length > this.blockSize && (t = new this.Hash().update(t).digest()),
            i(t.length <= this.blockSize);
          for (var e = t.length; e < this.blockSize; e++) t.push(0);
          for (e = 0; e < t.length; e++) t[e] ^= 54;
          for (this.inner = new this.Hash().update(t), e = 0; e < t.length; e++)
            t[e] ^= 106;
          this.outer = new this.Hash().update(t);
        }),
        (a.prototype.update = function(t, e) {
          return this.inner.update(t, e), this;
        }),
        (a.prototype.digest = function(t) {
          return this.outer.update(this.inner.digest()), this.outer.digest(t);
        });
    },
    "214f": function(t, e, n) {
      "use strict";
      n("b0c5");
      var r = n("2aba"),
        i = n("32e9"),
        a = n("79e5"),
        o = n("be13"),
        s = n("2b4c"),
        u = n("520a"),
        c = s("species"),
        l = !a(function() {
          var t = /./;
          return (
            (t.exec = function() {
              var t = [];
              return (t.groups = { a: "7" }), t;
            }),
            "7" !== "".replace(t, "$<a>")
          );
        }),
        f = (function() {
          var t = /(?:)/,
            e = t.exec;
          t.exec = function() {
            return e.apply(this, arguments);
          };
          var n = "ab".split(t);
          return 2 === n.length && "a" === n[0] && "b" === n[1];
        })();
      t.exports = function(t, e, n) {
        var h = s(t),
          p = !a(function() {
            var e = {};
            return (
              (e[h] = function() {
                return 7;
              }),
              7 != ""[t](e)
            );
          }),
          d = p
            ? !a(function() {
                var e = !1,
                  n = /a/;
                return (
                  (n.exec = function() {
                    return (e = !0), null;
                  }),
                  "split" === t &&
                    ((n.constructor = {}),
                    (n.constructor[c] = function() {
                      return n;
                    })),
                  n[h](""),
                  !e
                );
              })
            : void 0;
        if (!p || !d || ("replace" === t && !l) || ("split" === t && !f)) {
          var m = /./[h],
            v = n(o, h, ""[t], function(t, e, n, r, i) {
              return e.exec === u
                ? p && !i
                  ? { done: !0, value: m.call(e, n, r) }
                  : { done: !0, value: t.call(n, e, r) }
                : { done: !1 };
            }),
            y = v[0],
            g = v[1];
          r(String.prototype, t, y),
            i(
              RegExp.prototype,
              h,
              2 == e
                ? function(t, e) {
                    return g.call(t, this, e);
                  }
                : function(t) {
                    return g.call(t, this);
                  }
            );
        }
      };
    },
    "230e": function(t, e, n) {
      var r = n("d3f4"),
        i = n("7726").document,
        a = r(i) && r(i.createElement);
      t.exports = function(t) {
        return a ? i.createElement(t) : {};
      };
    },
    2342: function(t, e, n) {
      "use strict";
      var r = n("4f66"),
        i = function(t, e) {
          return (i =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(t, e) {
                t.__proto__ = e;
              }) ||
            function(t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        };
      /**
       * @license
       * Copyright 2019 Google LLC. All Rights Reserved.
       * Licensed under the Apache License, Version 2.0 (the "License");
       * you may not use this file except in compliance with the License.
       * You may obtain a copy of the License at
       *
       * http://www.apache.org/licenses/LICENSE-2.0
       *
       * Unless required by applicable law or agreed to in writing, software
       * distributed under the License is distributed on an "AS IS" BASIS,
       * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       * See the License for the specific language governing permissions and
       * limitations under the License.
       * =============================================================================
       */ function a(t, e) {
        function n() {
          this.constructor = t;
        }
        i(t, e),
          (t.prototype =
            null === e
              ? Object.create(e)
              : ((n.prototype = e.prototype), new n()));
      }
      var o,
        s = function() {
          return (s =
            Object.assign ||
            function(t) {
              for (var e, n = 1, r = arguments.length; n < r; n++)
                for (var i in (e = arguments[n]))
                  Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
              return t;
            }).apply(this, arguments);
        };
      function u(t, e, n, r) {
        return new (n || (n = Promise))(function(i, a) {
          function o(t) {
            try {
              u(r.next(t));
            } catch (t) {
              a(t);
            }
          }
          function s(t) {
            try {
              u(r.throw(t));
            } catch (t) {
              a(t);
            }
          }
          function u(t) {
            t.done
              ? i(t.value)
              : new n(function(e) {
                  e(t.value);
                }).then(o, s);
          }
          u((r = r.apply(t, e || [])).next());
        });
      }
      function c(t, e) {
        var n,
          r,
          i,
          a,
          o = {
            label: 0,
            sent: function() {
              if (1 & i[0]) throw i[1];
              return i[1];
            },
            trys: [],
            ops: []
          };
        return (
          (a = { next: s(0), throw: s(1), return: s(2) }),
          "function" == typeof Symbol &&
            (a[Symbol.iterator] = function() {
              return this;
            }),
          a
        );
        function s(a) {
          return function(s) {
            return (function(a) {
              if (n) throw new TypeError("Generator is already executing.");
              for (; o; )
                try {
                  if (
                    ((n = 1),
                    r &&
                      (i =
                        2 & a[0]
                          ? r.return
                          : a[0]
                          ? r.throw || ((i = r.return) && i.call(r), 0)
                          : r.next) &&
                      !(i = i.call(r, a[1])).done)
                  )
                    return i;
                  switch (((r = 0), i && (a = [2 & a[0], i.value]), a[0])) {
                    case 0:
                    case 1:
                      i = a;
                      break;
                    case 4:
                      return o.label++, { value: a[1], done: !1 };
                    case 5:
                      o.label++, (r = a[1]), (a = [0]);
                      continue;
                    case 7:
                      (a = o.ops.pop()), o.trys.pop();
                      continue;
                    default:
                      if (
                        !(i = (i = o.trys).length > 0 && i[i.length - 1]) &&
                        (6 === a[0] || 2 === a[0])
                      ) {
                        o = 0;
                        continue;
                      }
                      if (3 === a[0] && (!i || (a[1] > i[0] && a[1] < i[3]))) {
                        o.label = a[1];
                        break;
                      }
                      if (6 === a[0] && o.label < i[1]) {
                        (o.label = i[1]), (i = a);
                        break;
                      }
                      if (i && o.label < i[2]) {
                        (o.label = i[2]), o.ops.push(a);
                        break;
                      }
                      i[2] && o.ops.pop(), o.trys.pop();
                      continue;
                  }
                  a = e.call(t, o);
                } catch (t) {
                  (a = [6, t]), (r = 0);
                } finally {
                  n = i = 0;
                }
              if (5 & a[0]) throw a[1];
              return { value: a[0] ? a[1] : void 0, done: !0 };
            })([a, s]);
          };
        }
      }
      function l() {
        return null == o && (o = r["a"].get("EPSILON")), o;
      }
      function f() {
        return "channelsLast";
      }
      var h = 0;
      function p() {
        return h++;
      }
      var d = {};
      function m(t) {
        return (
          void 0 === t && (t = ""),
          t in d || (d[t] = 0),
          (d[t] += 1),
          t + d[t].toString()
        );
      }
      var v = { float32: {}, int32: {} },
        y = "float32";
      function g(t, e) {
        return (
          void 0 === e && (e = y),
          null == v[e][t] &&
            ((v[e][t] = Object(r["cc"])(t, e)), Object(r["kb"])(v[e][t])),
          v[e][t]
        );
      }
      var b = (function(t) {
          function e(n) {
            var r = t.call(this, n) || this;
            return Object.setPrototypeOf(r, e.prototype), r;
          }
          return a(e, t), e;
        })(Error),
        w = (function(t) {
          function e(n) {
            var r = t.call(this, n) || this;
            return Object.setPrototypeOf(r, e.prototype), r;
          }
          return a(e, t), e;
        })(Error),
        _ = (function(t) {
          function e(n) {
            var r = t.call(this, n) || this;
            return Object.setPrototypeOf(r, e.prototype), r;
          }
          return a(e, t), e;
        })(Error),
        x = (function(t) {
          function e(n) {
            var r = t.call(this, n) || this;
            return Object.setPrototypeOf(r, e.prototype), r;
          }
          return a(e, t), e;
        })(Error),
        E = (function(t) {
          function e(n) {
            var r = t.call(this, n) || this;
            return Object.setPrototypeOf(r, e.prototype), r;
          }
          return a(e, t), e;
        })(Error);
      (function(t) {
        function e(n) {
          var r = t.call(this, n) || this;
          return Object.setPrototypeOf(r, e.prototype), r;
        }
        a(e, t);
      })(Error);
      function S(t, e) {
        if (Array.isArray(t)) {
          for (var n = [], r = 0; r < e; r++) n = n.concat(t);
          return n;
        }
        return (n = new Array(e)).fill(t), n;
      }
      function N(t, e) {
        if (!t) throw new E(e);
      }
      function O(t, e) {
        for (var n = 0, r = 0, i = t; r < i.length; r++) i[r] === e && n++;
        return n;
      }
      function I(t) {
        return 1 === t.length ? t[0] : t;
      }
      function C(t) {
        return Array.isArray(t) ? t : [t];
      }
      function A(t) {
        var e = t
          .replace(/(.)([A-Z][a-z0-9]+)/g, "$1_$2")
          .replace(/([a-z])([A-Z])/g, "$1_$2")
          .toLowerCase();
        return "_" !== e[0] ? e : "private" + e;
      }
      function k(t) {
        return t.length <= 1
          ? t
          : -1 === t.indexOf("_")
          ? t
          : t.replace(/[_]+(\w|$)/g, function(t, e) {
              return e.toUpperCase();
            });
      }
      var P = {};
      function T(t) {
        return null === t || void 0 === t
          ? null
          : { className: t.getClassName(), config: t.getConfig() };
      }
      function R(t) {
        if (null != t && "object" == typeof t)
          if (Array.isArray(t))
            t.forEach(function(t) {
              return R(t);
            });
          else
            for (var e = 0, n = Object.keys(t); e < n.length; e++) {
              var r = n[e],
                i = t[r];
              null != i &&
                "object" == typeof i &&
                (Array.isArray(i) ||
                "ndarray" !== i.type ||
                "number" != typeof i.value
                  ? R(i)
                  : (t[r] = i.value));
            }
      }
      function D(t, e, n, r, i) {
        if (
          (void 0 === e && (e = {}),
          void 0 === n && (n = {}),
          void 0 === r && (r = "object"),
          void 0 === i && (i = !1),
          "string" == typeof t)
        ) {
          var a = t,
            o = void 0;
          if (a in n) o = n[a];
          else if (a in P) o = P[a];
          else if (null == (o = e[a]))
            throw new _(
              "Unknown " +
                r +
                ": " +
                t +
                ". This may be due to one of the following reasons:\n1. The " +
                r +
                " is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom " +
                r +
                " is defined in JavaScript, but is not registered properly with tf.serialization.registerClass()."
            );
          return o;
        }
        var u = t;
        if (null == u.className || null == u.config)
          throw new _(
            r +
              ": Improper config format: " +
              JSON.stringify(u) +
              ".\n'className' and 'config' must set."
          );
        var c,
          l,
          f,
          h = u.className,
          p = void 0,
          d = void 0;
        if (
          (h in n
            ? ((p = (c = n.get(h))[0]), (d = c[1]))
            : h in P
            ? ((p = (l = P.className)[0]), (d = l[1]))
            : h in e && ((p = (f = e[h])[0]), (d = f[1])),
          null == p)
        )
          throw new _(
            "Unknown " +
              r +
              ": " +
              h +
              ". This may be due to one of the following reasons:\n1. The " +
              r +
              " is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom " +
              r +
              " is defined in JavaScript, but is not registered properly with tf.serialization.registerClass()."
          );
        if (null != d) {
          for (var m = {}, v = 0, y = Object.keys(P); v < y.length; v++)
            m[(S = y[v])] = P[S];
          for (var g = 0, b = Object.keys(n); g < b.length; g++)
            m[(S = b[g])] = n[S];
          u.config.customObjects = m;
          for (var w = s({}, P), x = 0, E = Object.keys(n); x < E.length; x++) {
            var S = E[x];
            P[S] = n[S];
          }
          R(u.config);
          var N = d(p, u.config, n, i);
          return (P = s({}, w)), N;
        }
        w = s({}, P);
        for (var O = 0, I = Object.keys(n); O < I.length; O++)
          (S = I[O]), (P[S] = n[S]);
        return (N = new p(u.config)), (P = s({}, w)), N;
      }
      function M(t, e) {
        return t < e ? -1 : t > e ? 1 : 0;
      }
      function j(t, e) {
        return -1 * M(t, e);
      }
      function L(t) {
        switch (t) {
          case "float32":
            return "float32";
          default:
            throw new _("Invalid dtype: " + t);
        }
      }
      function B(t) {
        if (null == t) return t;
        for (var e = [], n = 0, r = t; n < r.length; n++) {
          var i = r[n];
          -1 === e.indexOf(i) && e.push(i);
        }
        return e;
      }
      function F(t) {
        if (null == t)
          throw new _("Invalid value in obj: " + JSON.stringify(t));
        for (var e in t) if (t.hasOwnProperty(e)) return !1;
        return !0;
      }
      function z(t, e, n) {
        if (null != n && t.indexOf(n) < 0)
          throw new _(
            n +
              " is not a valid " +
              e +
              ".  Valid values are " +
              t +
              " or null/undefined."
          );
      }
      function U(t, e, n, r) {
        return (
          void 0 === n && (n = 0),
          void 0 === r && (r = 1 / 0),
          N(n >= 0),
          N(r >= n),
          Array.isArray(t) &&
            t.length >= n &&
            t.length <= r &&
            t.every(function(t) {
              return typeof t === e;
            })
        );
      }
      function V(t, e) {
        return Object(r["Jc"])(function() {
          return Object(r["wc"])(Object(r["Ec"])(Object(r["Ib"])(t, t), e, !0));
        });
      }
      var W = (function(t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            a(e, t),
            (e.prototype.getConfig = function() {
              return {};
            }),
            e
          );
        })(r["gc"].Serializable),
        $ = (function(t) {
          function e(e) {
            var n = t.call(this) || this;
            return (
              (n.defaultMaxValue = 2),
              (n.defaultAxis = 0),
              (n.maxValue =
                null != e.maxValue ? e.maxValue : n.defaultMaxValue),
              (n.axis = null != e.axis ? e.axis : n.defaultAxis),
              n
            );
          }
          return (
            a(e, t),
            (e.prototype.apply = function(t) {
              var e = this;
              return Object(r["Jc"])(function() {
                var n = V(t, e.axis),
                  i = Object(r["A"])(n, 0, e.maxValue);
                return Object(
                  r["Hb"]
                )(t, Object(r["Q"])(i, Object(r["g"])(g(l()), n)));
              });
            }),
            (e.prototype.getConfig = function() {
              return { maxValue: this.maxValue, axis: this.axis };
            }),
            (e.className = "MaxNorm"),
            e
          );
        })(W);
      r["gc"].registerClass($);
      var q = (function(t) {
        function e(e) {
          var n = t.call(this) || this;
          return (
            (n.defaultAxis = 0),
            (n.axis = null != e.axis ? e.axis : n.defaultAxis),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t) {
            var e = this;
            return Object(r["Jc"])(function() {
              return Object(r["Q"])(t, Object(r["g"])(g(l()), V(t, e.axis)));
            });
          }),
          (e.prototype.getConfig = function() {
            return { axis: this.axis };
          }),
          (e.className = "UnitNorm"),
          e
        );
      })(W);
      r["gc"].registerClass(q);
      var H = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t) {
            return Object(r["Xb"])(t);
          }),
          (e.className = "NonNeg"),
          e
        );
      })(W);
      r["gc"].registerClass(H);
      var K = (function(t) {
        function e(e) {
          var n = t.call(this) || this;
          return (
            (n.defaultMinValue = 0),
            (n.defaultMaxValue = 1),
            (n.defaultRate = 1),
            (n.defaultAxis = 0),
            (n.minValue = null != e.minValue ? e.minValue : n.defaultMinValue),
            (n.maxValue = null != e.maxValue ? e.maxValue : n.defaultMaxValue),
            (n.rate = null != e.rate ? e.rate : n.defaultRate),
            (n.axis = null != e.axis ? e.axis : n.defaultAxis),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t) {
            var e = this;
            return Object(r["Jc"])(function() {
              var n = V(t, e.axis),
                i = Object(r["g"])(
                  Object(r["Hb"])(
                    g(e.rate),
                    Object(r["A"])(n, e.minValue, e.maxValue)
                  ),
                  Object(r["Hb"])(g(1 - e.rate), n)
                );
              return Object(
                r["Hb"]
              )(t, Object(r["Q"])(i, Object(r["g"])(g(l()), n)));
            });
          }),
          (e.prototype.getConfig = function() {
            return {
              minValue: this.minValue,
              maxValue: this.maxValue,
              rate: this.rate,
              axis: this.axis
            };
          }),
          (e.className = "MinMaxNorm"),
          e
        );
      })(W);
      r["gc"].registerClass(K);
      var G = {
        maxNorm: "MaxNorm",
        minMaxNorm: "MinMaxNorm",
        nonNeg: "NonNeg",
        unitNorm: "UnitNorm"
      };
      function X(t) {
        return T(t);
      }
      function J(t, e) {
        return (
          void 0 === e && (e = {}),
          D(t, r["gc"].SerializationMap.getMap().classNameMap, e, "constraint")
        );
      }
      function Y(t) {
        return null == t
          ? null
          : "string" == typeof t
          ? J({ className: t in G ? G[t] : t, config: {} })
          : t instanceof W
          ? t
          : J(t);
      }
      function Q(t) {
        return new $(t);
      }
      function Z(t) {
        return new q(t);
      }
      function tt() {
        return new H();
      }
      function et(t) {
        return new K(t);
      }
      Object.freeze({ maxNorm: Q, unitNorm: Z, nonNeg: tt, minMaxNorm: et });
      var nt = ["channelsFirst", "channelsLast"],
        rt = ["valid", "same", "causal"],
        it = ["max", "avg"],
        at = ["sum", "mul", "concat", "ave"],
        ot = new Map();
      function st(t) {
        z(nt, "DataFormat", t);
      }
      function ut(t) {
        z(rt, "PaddingMode", t);
      }
      function ct(t) {
        z(it, "PoolMode", t);
      }
      var lt = [],
        ft = "/";
      function ht(t, e) {
        lt.push(t);
        try {
          var n = e();
          return lt.pop(), n;
        } catch (t) {
          throw (lt.pop(), t);
        }
      }
      function pt() {
        return 0 === lt.length ? "" : lt.join(ft) + ft;
      }
      function dt(t) {
        if (!yt(t)) throw new Error("Not a valid tensor name: '" + t + "'");
        return pt() + t;
      }
      function mt(t) {
        if (!yt(t)) throw new Error("Not a valid tensor name: '" + t + "'");
        ot.has(t) || ot.set(t, 0);
        var e = ot.get(t);
        if ((ot.set(t, ot.get(t) + 1), e > 0)) {
          var n = t + "_" + e;
          return ot.set(n, 1), n;
        }
        return t;
      }
      var vt = new RegExp(/^[A-Za-z][-A-Za-z0-9\._\/]*$/);
      function yt(t) {
        return !!t.match(vt);
      }
      function gt(t) {
        return t === parseInt(t.toString(), 10);
      }
      function bt(t, e, n) {
        null == e && (e = 0), null == n && (n = t.length);
        for (var r = 1, i = e; i < n; ++i) r *= t[i];
        return r;
      }
      function wt(t) {
        return (
          (t = Array.isArray(t) ? new Float32Array(t) : t), Object(r["Ic"])(t)
        );
      }
      function _t(t) {
        return Object(r["Db"])(wt(t)).dataSync()[0];
      }
      function xt(t) {
        return Object(r["yb"])(wt(t)).dataSync()[0];
      }
      function Et(t, e) {
        if (e < t)
          throw new _("end (" + e + ") < begin (" + t + ") is forbidden.");
        for (var n = [], r = t; r < e; ++r) n.push(r);
        return n;
      }
      function St(t, e) {
        return t.asType(e);
      }
      function Nt(t, e) {
        void 0 === e && (e = -1);
        var n = t.shape.slice();
        return e < 0 && (e = n.length + e + 1), n.splice(e, 0, 1), t.reshape(n);
      }
      function Ot(t, e) {
        return Object(r["Jc"])(function() {
          if (2 !== t.shape.length)
            throw new _(
              "repeat() expects a rank-2 tensor, but received a rank-" +
                t.shape.length +
                " tensor."
            );
          return Dt(Nt(t, 1), [1, e, 1]);
        });
      }
      function It(t) {
        var e = [bt(t.shape)];
        return t.reshape(e);
      }
      function Ct(t) {
        if (t.rank <= 1)
          throw new _(
            "batchFlatten requires a minimum rank of 2. Got rank: " +
              t.rank +
              "."
          );
        var e = [t.shape[0], bt(t.shape, 1)];
        return t.reshape(e);
      }
      function At(t, e, n) {
        return Object(r["Jc"])(function() {
          switch (t.rank) {
            case 1:
              return Object(r["nc"])(t, e, n);
            case 2:
              return Object(r["oc"])(t, [e, 0], [n, t.shape[1]]);
            case 3:
              return Object(r["pc"])(t, [e, 0, 0], [n, t.shape[1], t.shape[2]]);
            case 4:
              return Object(
                r["qc"]
              )(t, [e, 0, 0, 0], [n, t.shape[1], t.shape[2], t.shape[3]]);
            default:
              throw new _(
                "sliceAlongFirstAxis() received an unsupported tensor rank: " +
                  t.rank
              );
          }
        });
      }
      function kt(t, e, n) {
        return Object(r["Jc"])(function() {
          switch (t.rank) {
            case 1:
              return Object(r["nc"])(t, e, n);
            case 2:
              return Object(r["oc"])(t, [0, e], [t.shape[0], n]);
            case 3:
              return Object(r["pc"])(t, [0, 0, e], [t.shape[0], t.shape[1], n]);
            case 4:
              return Object(
                r["qc"]
              )(t, [0, 0, 0, e], [t.shape[0], t.shape[1], t.shape[2], n]);
            default:
              throw new _(
                "sliceAlongLastAxis() received an unsupported tensor rank: " +
                  t.rank
              );
          }
        });
      }
      function Pt(t, e, n, i) {
        return Object(r["Jc"])(function() {
          switch (t.rank) {
            case 1:
              return Object(r["nc"])(t, e, n);
            case 2:
              switch (i) {
                case 1:
                  return At(t, e, n);
                case 2:
                  return kt(t, e, n);
                default:
                  throw new _(
                    "The axis is not within the rank of the tensor " + i
                  );
              }
            case 3:
              switch (i) {
                case 1:
                  return At(t, e, n);
                case 2:
                  return Object(
                    r["pc"]
                  )(t, [0, e, 0], [t.shape[0], n, t.shape[2]]);
                case 3:
                  return kt(t, e, n);
                default:
                  throw new _(
                    "The axis is not within the rank of the tensor " + i
                  );
              }
            case 4:
              switch (i) {
                case 1:
                  return At(t, e, n);
                case 2:
                  return Object(
                    r["qc"]
                  )(t, [0, e, 0, 0], [t.shape[0], n, t.shape[2], t.shape[3]]);
                case 3:
                  return Object(
                    r["qc"]
                  )(t, [0, 0, e, 0], [t.shape[0], t.shape[1], n, t.shape[3]]);
                case 4:
                  return kt(t, e, n);
                default:
                  throw new _(
                    "The axis is not within the rank of the tensor " + i
                  );
              }
            default:
              throw new _(
                "sliceAlongLastAxis() received an unsupported tensor rank: " +
                  t.rank
              );
          }
        });
      }
      function Tt(t, e) {
        var n;
        return (
          void 0 === e && (e = -1),
          e < 0 && (e = 0 !== (n = t[0].rank) ? n : 0),
          e === t[0].rank && (e = -1),
          Object(r["C"])(t, e)
        );
      }
      function Rt(t, e) {
        switch (t.rank) {
          case 1:
            return Object(r["D"])([t, e]);
          case 2:
            return Object(r["E"])([t, e], 0);
          case 3:
            return Object(r["F"])([t, e], 0);
          case 4:
            return Object(r["G"])([t, e], 0);
          default:
            throw new _(
              "concatAlongFirstAxis() received an unsupported tensor rank: " +
                t.rank
            );
        }
      }
      function Dt(t, e) {
        if ((Array.isArray(e) || (e = [e]), t.rank !== e.length))
          throw new _(
            "The length of input n (" +
              e.length +
              ") does not match the number of dimensions in input x (" +
              t.rank +
              ")"
          );
        return Object(r["Kc"])(t, e);
      }
      function Mt(t, e, n, i, a) {
        return (
          void 0 === e && (e = 0),
          void 0 === n && (n = 1),
          Object(r["Tb"])(t, e, n, i, a)
        );
      }
      function jt(t, e) {
        if (t.rank < 2 || e.rank < 2)
          throw new x(
            "dot requires both inputs to be rank >= 2 but got x shape = " +
              t.shape +
              " and y shape = " +
              e.shape
          );
        if (
          e.rank >= 3 &&
          (i = t.shape.slice(-1)[0]) !== (s = e.shape.slice(-2)[0])
        )
          throw new x(
            "If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = " +
              t.shape +
              " and  y shape = " +
              e.shape
          );
        if (2 === t.rank && 2 === e.rank) return Object(r["xb"])(t, e);
        var n = t.shape.slice(),
          i = n.pop();
        t = t.reshape([-1, i]);
        var a = e.shape.slice(),
          o = a.pop(),
          s = a.pop(),
          u = a.concat([o]),
          c = Array.from({ length: e.rank }, function(t, n) {
            return 0 === n ? e.rank - 2 : n <= e.rank - 2 ? n - 1 : n;
          });
        e = e.transpose(c).reshape([s, -1]);
        var l = n.concat(u);
        return Object(r["xb"])(t, e).reshape(l);
      }
      function Lt(t, e, n) {
        return Object(r["Jc"])(function() {
          return (
            (e = Array.isArray(e) ? Object(r["Ic"])(e, "int32") : e.toInt()),
            Object(r["cb"])(t, e, n)
          );
        });
      }
      function Bt(t) {
        return Object(r["Ib"])(t, t);
      }
      function Ft(t, e, n) {
        return Object(r["Jc"])(function() {
          if (
            (null == n && (n = f()), st(n), 1 !== e.rank && e.rank !== t.rank)
          )
            throw new _(
              "Unexpected bias dimensions: " +
                e.rank +
                "; expected it to be 1 or " +
                t.rank
            );
          var r,
            i = e.shape;
          if (5 === t.rank)
            "channelsFirst" === n
              ? (r =
                  1 === i.length
                    ? t.add(e.reshape([1, i[0], 1, 1, 1]))
                    : t.add(e.reshape([1, i[3], i[0], i[1], i[2]])))
              : "channelsLast" === n &&
                (r =
                  1 === i.length
                    ? t.add(e.reshape([1, 1, 1, 1, i[0]]))
                    : t.add(e.reshape([1].concat(i))));
          else if (4 === t.rank)
            "channelsFirst" === n
              ? (r =
                  1 === i.length
                    ? t.add(e.reshape([1, i[0], 1, 1]))
                    : t.add(e.reshape([1, i[2], i[0], i[1]])))
              : "channelsLast" === n &&
                (r =
                  1 === i.length
                    ? t.add(e.reshape([1, 1, 1, i[0]]))
                    : t.add(e.reshape([1].concat(i))));
          else if (3 === t.rank)
            "channelsFirst" === n
              ? (r =
                  1 === i.length
                    ? t.add(e.reshape([1, i[0], 1]))
                    : t.add(e.reshape([1, i[1], i[0]])))
              : "channelsLast" === n &&
                (r =
                  1 === i.length
                    ? t.add(e.reshape([1, 1, i[0]]))
                    : t.add(e.reshape([1].concat(i))));
          else {
            if (!(t.rank < 3))
              throw new _("Unsupported input rank by biasAdd: " + t.rank);
            r = t.add(e);
          }
          return r;
        });
      }
      function zt(t, e) {
        if ((void 0 === e && (e = 1), 1 !== e))
          throw new x(
            "Support for alpha values other than 1 (" +
              e +
              ") is not implemented yet."
          );
        return Object(r["R"])(t);
      }
      function Ut(t) {
        return Object(r["Jc"])(function() {
          return Object(r["Q"])(t, Object(r["g"])(g(1), Object(r["d"])(t)));
        });
      }
      function Vt(t, e, n, i) {
        return Object(r["Jc"])(function() {
          if (null != n && !r["Qc"].arraysEqual(t.shape, n))
            throw new x(
              "Non-default noise shape is not implemented yet: " +
                JSON.stringify(n)
            );
          if (null != i)
            throw new x("seed is not implemented for dropout yet.");
          var a = Object(r["Bc"])(
            Object(r["g"])(
              Object(r["Jb"])(e),
              Object(r["Ub"])(t.shape, 0, 1, "float32")
            )
          );
          return (
            (a = Object(r["Hb"])(
              Object(r["Q"])(g(1), Object(r["Dc"])(g(1), e)),
              a
            )),
            Object(r["Hb"])(t, a)
          );
        });
      }
      function Wt(t) {
        return Object(r["Jc"])(function() {
          var e = Object(r["g"])(g(0.5), Object(r["Hb"])(g(0.2), t));
          return Object(r["A"])(e, 0, 1);
        });
      }
      function $t(t, e, n) {
        return void 0 === n && (n = !1), n ? t() : e();
      }
      var qt = ["fanIn", "fanOut", "fanAvg"],
        Ht = ["normal", "uniform"];
      function Kt(t) {
        z(qt, "FanMode", t);
      }
      function Gt(t) {
        z(Ht, "Distribution", t);
      }
      var Xt = (function(t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            a(e, t),
            (e.prototype.fromConfigUsesCustomObjects = function() {
              return !1;
            }),
            (e.prototype.getConfig = function() {
              return {};
            }),
            e
          );
        })(r["gc"].Serializable),
        Jt = (function(t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            a(e, t),
            (e.prototype.apply = function(t, e) {
              return Object(r["Vc"])(t, e);
            }),
            (e.className = "Zeros"),
            e
          );
        })(Xt);
      r["gc"].registerClass(Jt);
      var Yt = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t, e) {
            return Object(r["Nb"])(t, e);
          }),
          (e.className = "Ones"),
          e
        );
      })(Xt);
      r["gc"].registerClass(Yt);
      var Qt = (function(t) {
        function e(e) {
          var n = t.call(this) || this;
          if ("object" != typeof e)
            throw new _(
              "Expected argument of type ConstantConfig but got " + e
            );
          if (void 0 === e.value)
            throw new _("config must have value set but got " + e);
          return (n.value = e.value), n;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              return Object(
                r["Hb"]
              )(Object(r["cc"])(n.value), Object(r["Nb"])(t, e));
            });
          }),
          (e.prototype.getConfig = function() {
            return { value: this.value };
          }),
          (e.className = "Constant"),
          e
        );
      })(Xt);
      r["gc"].registerClass(Qt);
      var Zt = (function(t) {
        function e(e) {
          var n = t.call(this) || this;
          return (
            (n.DEFAULT_MINVAL = -0.05),
            (n.DEFAULT_MAXVAL = 0.05),
            (n.minval = e.minval || n.DEFAULT_MINVAL),
            (n.maxval = e.maxval || n.DEFAULT_MAXVAL),
            (n.seed = e.seed),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t, e) {
            return Object(r["Ub"])(t, this.minval, this.maxval, e);
          }),
          (e.prototype.getConfig = function() {
            return {
              minval: this.minval,
              maxval: this.maxval,
              seed: this.seed
            };
          }),
          (e.className = "RandomUniform"),
          e
        );
      })(Xt);
      r["gc"].registerClass(Zt);
      var te = (function(t) {
        function e(e) {
          var n = t.call(this) || this;
          return (
            (n.DEFAULT_MEAN = 0),
            (n.DEFAULT_STDDEV = 0.05),
            (n.mean = e.mean || n.DEFAULT_MEAN),
            (n.stddev = e.stddev || n.DEFAULT_STDDEV),
            (n.seed = e.seed),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t, e) {
            if ("float32" !== (e = e || "float32") && "int32" !== e)
              throw new x("randomNormal does not support dType " + e + ".");
            return Mt(t, this.mean, this.stddev, e, this.seed);
          }),
          (e.prototype.getConfig = function() {
            return { mean: this.mean, stddev: this.stddev, seed: this.seed };
          }),
          (e.className = "RandomNormal"),
          e
        );
      })(Xt);
      r["gc"].registerClass(te);
      var ee = (function(t) {
        function e(e) {
          var n = t.call(this) || this;
          return (
            (n.DEFAULT_MEAN = 0),
            (n.DEFAULT_STDDEV = 0.05),
            (n.mean = e.mean || n.DEFAULT_MEAN),
            (n.stddev = e.stddev || n.DEFAULT_STDDEV),
            (n.seed = e.seed),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t, e) {
            if ("float32" !== (e = e || "float32") && "int32" !== e)
              throw new x("truncatedNormal does not support dType " + e + ".");
            return Object(r["Oc"])(t, this.mean, this.stddev, e, this.seed);
          }),
          (e.prototype.getConfig = function() {
            return { mean: this.mean, stddev: this.stddev, seed: this.seed };
          }),
          (e.className = "TruncatedNormal"),
          e
        );
      })(Xt);
      r["gc"].registerClass(ee);
      var ne = (function(t) {
        function e(e) {
          var n = t.call(this) || this;
          return (n.gain = null != e.gain ? Object(r["cc"])(e.gain) : g(1)), n;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              if (2 !== t.length || t[0] !== t[1])
                throw new _(
                  "Identity matrix initializer can only be used for 2D square matrices."
                );
              return Object(r["Hb"])(n.gain, Object(r["X"])(t[0]));
            });
          }),
          (e.prototype.getConfig = function() {
            return { gain: this.gain.get() };
          }),
          (e.className = "Identity"),
          e
        );
      })(Xt);
      function re(t, e) {
        var n, r;
        if ((void 0 === e && (e = "channelsLast"), st(e), 2 === t.length))
          (n = t[0]), (r = t[1]);
        else if (-1 !== [3, 4, 5].indexOf(t.length))
          if ("channelsFirst" === e) {
            var i = bt(t, 2);
            (n = t[1] * i), (r = t[0] * i);
          } else
            "channelsLast" === e &&
              ((i = bt(t, 0, t.length - 2)),
              (n = t[t.length - 2] * i),
              (r = t[t.length - 1] * i));
        else {
          var a = bt(t);
          (n = Math.sqrt(a)), (r = Math.sqrt(a));
        }
        return [n, r];
      }
      r["gc"].registerClass(ne);
      var ie = (function(t) {
        function e(e) {
          var n = t.call(this) || this;
          if (e.scale < 0)
            throw new _("scale must be a positive float. Got: " + e.scale);
          return (
            (n.scale = null == e.scale ? 1 : e.scale),
            (n.mode = e.mode),
            Kt(n.mode),
            (n.distribution = e.distribution),
            Gt(n.distribution),
            (n.seed = e.seed),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t, e) {
            var n = re(t),
              i = n[0],
              a = n[1],
              o = this.scale;
            if (
              ("fanIn" === this.mode
                ? (o /= Math.max(1, i))
                : "fanOut" === this.mode
                ? (o /= Math.max(1, a))
                : (o /= Math.max(1, (i + a) / 2)),
              "normal" === this.distribution)
            ) {
              var s = Math.sqrt(o);
              if ("float32" !== (e = e || "float32") && "int32" !== e)
                throw new x(
                  this.getClassName() + " does not support dType " + e + "."
                );
              return Object(r["Oc"])(t, 0, s, e, this.seed);
            }
            var u = Math.sqrt(3 * o);
            return Object(r["Ub"])(t, -u, u, e);
          }),
          (e.prototype.getConfig = function() {
            return {
              scale: this.scale,
              mode: this.mode,
              distribution: this.distribution,
              seed: this.seed
            };
          }),
          (e.className = "VarianceScaling"),
          e
        );
      })(Xt);
      r["gc"].registerClass(ie);
      var ae = (function(t) {
        function e(e) {
          return (
            t.call(this, {
              scale: 1,
              mode: "fanAvg",
              distribution: "uniform",
              seed: null == e ? null : e.seed
            }) || this
          );
        }
        return (
          a(e, t),
          (e.prototype.getClassName = function() {
            return ie.className;
          }),
          (e.className = "GlorotUniform"),
          e
        );
      })(ie);
      r["gc"].registerClass(ae);
      var oe = (function(t) {
        function e(e) {
          return (
            t.call(this, {
              scale: 1,
              mode: "fanAvg",
              distribution: "normal",
              seed: null == e ? null : e.seed
            }) || this
          );
        }
        return (
          a(e, t),
          (e.prototype.getClassName = function() {
            return ie.className;
          }),
          (e.className = "GlorotNormal"),
          e
        );
      })(ie);
      r["gc"].registerClass(oe);
      var se = (function(t) {
        function e(e) {
          return (
            t.call(this, {
              scale: 2,
              mode: "fanIn",
              distribution: "normal",
              seed: null == e ? null : e.seed
            }) || this
          );
        }
        return (
          a(e, t),
          (e.prototype.getClassName = function() {
            return ie.className;
          }),
          (e.className = "HeNormal"),
          e
        );
      })(ie);
      r["gc"].registerClass(se);
      var ue = (function(t) {
        function e(e) {
          return (
            t.call(this, {
              scale: 2,
              mode: "fanIn",
              distribution: "uniform",
              seed: null == e ? null : e.seed
            }) || this
          );
        }
        return (
          a(e, t),
          (e.prototype.getClassName = function() {
            return ie.className;
          }),
          (e.className = "HeUniform"),
          e
        );
      })(ie);
      r["gc"].registerClass(ue);
      var ce = (function(t) {
        function e(e) {
          return (
            t.call(this, {
              scale: 1,
              mode: "fanIn",
              distribution: "normal",
              seed: null == e ? null : e.seed
            }) || this
          );
        }
        return (
          a(e, t),
          (e.prototype.getClassName = function() {
            return ie.className;
          }),
          (e.className = "LeCunNormal"),
          e
        );
      })(ie);
      r["gc"].registerClass(ce);
      var le = (function(t) {
        function e(e) {
          return (
            t.call(this, {
              scale: 1,
              mode: "fanIn",
              distribution: "uniform",
              seed: null == e ? null : e.seed
            }) || this
          );
        }
        return (
          a(e, t),
          (e.prototype.getClassName = function() {
            return ie.className;
          }),
          (e.className = "LeCunNormal"),
          e
        );
      })(ie);
      r["gc"].registerClass(le);
      var fe = (function(t) {
        function e(e) {
          var n = t.call(this) || this;
          if (
            ((n.DEFAULT_GAIN = 1),
            (n.gain = null == e.gain ? n.DEFAULT_GAIN : e.gain),
            (n.seed = e.seed),
            null != n.seed)
          )
            throw new x(
              "Random seed is not implemented for Orthogonal Initializer yet."
            );
          return n;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              if (2 !== t.length)
                throw new x(
                  "The Orthogonal Initializer does not support non-2D shapes yet."
                );
              t[0] * t[1] > 2e3 &&
                console.warn(
                  "Orthogonal initializer is being called on a matrix with more than 2000 (" +
                    t[0] * t[1] +
                    ") elements: Slowness may result."
                );
              var e = Mt(t[0] > t[1] ? [t[1], t[0]] : t, 0, 1, "float32"),
                i = r["ob"].gramSchmidt(e);
              return (
                t[0] > t[1] && (i = i.transpose()),
                Object(r["Hb"])(g(n.gain), i)
              );
            });
          }),
          (e.prototype.getConfig = function() {
            return { gain: this.gain, seed: this.seed };
          }),
          (e.className = "Orthogonal"),
          e
        );
      })(Xt);
      r["gc"].registerClass(fe);
      var he = {
        constant: "Constant",
        glorotNormal: "GlorotNormal",
        glorotUniform: "GlorotUniform",
        heNormal: "HeNormal",
        heUniform: "HeUniform",
        identity: "Identity",
        leCunNormal: "LeCunNormal",
        leCunUniform: "LeCunUniform",
        ones: "Ones",
        orthogonal: "Orthogonal",
        randomNormal: "RandomNormal",
        randomUniform: "RandomUniform",
        truncatedNormal: "TruncatedNormal",
        varianceScaling: "VarianceScaling",
        zeros: "Zeros"
      };
      function pe(t, e) {
        return (
          void 0 === e && (e = {}),
          D(t, r["gc"].SerializationMap.getMap().classNameMap, e, "initializer")
        );
      }
      function de(t) {
        return T(t);
      }
      function me(t) {
        if ("string" == typeof t) {
          var e = t in he ? he[t] : t;
          return "GlorotNormal" === e
            ? new oe()
            : "GlorotUniform" === e
            ? new ae()
            : "HeNormal" === e
            ? new se()
            : "HeUniform" === e
            ? new ue()
            : "LeCunNormal" === e
            ? new ce()
            : "LeCunUniform" === e
            ? new le()
            : pe({ className: e, config: {} });
        }
        return t instanceof Xt ? t : pe(t);
      }
      function ve() {
        return new Jt();
      }
      function ye() {
        return new Yt();
      }
      function ge(t) {
        return new Qt(t);
      }
      function be(t) {
        return new Zt(t);
      }
      function we(t) {
        return new te(t);
      }
      function _e(t) {
        return new ee(t);
      }
      function xe(t) {
        return new ne(t);
      }
      function Ee(t) {
        return new ie(t);
      }
      function Se(t) {
        return new ae(t);
      }
      function Ne(t) {
        return new oe(t);
      }
      function Oe(t) {
        return new se(t);
      }
      function Ie(t) {
        return new ue(t);
      }
      function Ce(t) {
        return new ce(t);
      }
      function Ae(t) {
        return new le(t);
      }
      function ke(t) {
        return new fe(t);
      }
      Object.freeze({
        zeros: ve,
        ones: ye,
        constant: ge,
        randomUniform: be,
        randomNormal: we,
        truncatedNormal: _e,
        identity: xe,
        varianceScaling: Ee,
        glorotUniform: Se,
        glorotNormal: Ne,
        heNormal: Oe,
        heUniform: Ie,
        leCunNormal: Ce,
        leCunUniform: Ae,
        orthogonal: ke
      });
      function Pe(t) {
        return Array.isArray(t) && Array.isArray(t[0]);
      }
      function Te(t) {
        return 0 === t.length ? [] : Array.isArray(t[0]) ? t : [t];
      }
      function Re(t) {
        var e;
        if (Array.isArray(t)) {
          if (1 !== t.length)
            throw new _("Expected Tensor length to be 1; got " + t.length);
          e = t[0];
        } else e = t;
        return e;
      }
      function De(t) {
        if (Array.isArray(t) && Array.isArray(t[0])) {
          if (1 === t.length) return (t = t)[0];
          throw new _("Expected exactly 1 Shape; got " + t.length);
        }
        return t;
      }
      function Me(t) {
        for (var e = 0, n = 0, r = t; n < r.length; n++) {
          var i = r[n];
          0 === i.shape.length
            ? (e += 1)
            : (e += i.shape.reduce(function(t, e) {
                return t * e;
              }));
        }
        return e;
      }
      var je = "Variable",
        Le = (function() {
          function t(t, e, n, i, a) {
            void 0 === e && (e = "float32"),
              void 0 === n && (n = je),
              void 0 === i && (i = !0),
              void 0 === a && (a = null),
              (this.dtype = null == e ? "float32" : e),
              (this.shape = t.shape),
              (this.id = p()),
              (n = null == n ? je : n),
              (this.originalName = dt(n)),
              (this.name = mt(this.originalName)),
              (this.trainable = i),
              (this.constraint = a),
              (this.val = Object(r["Rc"])(
                t,
                this.trainable,
                this.name,
                this.dtype
              ));
          }
          return (
            (t.prototype.read = function() {
              return this.assertNotDisposed(), this.val;
            }),
            (t.prototype.write = function(t) {
              return (
                this.assertNotDisposed(),
                Be(this.val, t),
                this.val.id !== t.id &&
                  (this.val.assign(t),
                  null != this.constraint &&
                    this.val.assign(this.constraint.apply(this.val))),
                this
              );
            }),
            (t.prototype.dispose = function() {
              this.assertNotDisposed(), this.val.dispose();
            }),
            (t.prototype.assertNotDisposed = function() {
              if (this.val.isDisposed)
                throw new Error(
                  "LayersVariable " + this.name + " is already disposed."
                );
            }),
            t
          );
        })();
      function Be(t, e) {
        if (t.shape.toString() !== e.shape.toString())
          throw new Error(
            "Shape mismatch: " +
              JSON.stringify(t.shape) +
              " vs. " +
              JSON.stringify(e.shape)
          );
      }
      function Fe(t) {
        return t.map(function(t) {
          return t.read();
        });
      }
      function ze(t) {
        t.forEach(function(t) {
          t[0].write(t[1]);
        });
      }
      var Ue = (function() {
          return function(t) {
            (this.dtype = t.dtype),
              (this.shape = t.shape),
              null != t.shape
                ? (this.ndim = t.shape.length)
                : (this.ndim = t.ndim),
              (this.maxNDim = t.maxNDim),
              (this.minNDim = t.minNDim),
              (this.axes = t.axes || {});
          };
        })(),
        Ve = (function() {
          return function(t, e, n, r, i, a, o) {
            (this.dtype = t),
              (this.shape = e),
              (this.sourceLayer = n),
              (this.inputs = r),
              (this.callArgs = i),
              (this.outputTensorIndex = o),
              (this.id = p()),
              null != a &&
                ((this.originalName = dt(a)),
                (this.name = mt(this.originalName))),
              (this.rank = e.length);
          };
        })(),
        We = 0,
        $e = (function() {
          function t(t, e) {
            (this.callArgs = e),
              (this.id = We++),
              (this.outboundLayer = t.outboundLayer),
              (this.inboundLayers = t.inboundLayers),
              (this.nodeIndices = t.nodeIndices),
              (this.tensorIndices = t.tensorIndices),
              (this.inputTensors = t.inputTensors),
              (this.outputTensors = t.outputTensors),
              (this.inputMasks = t.inputMasks),
              (this.outputMasks = t.outputMasks),
              (this.inputShapes = t.inputShapes),
              (this.outputShapes = t.outputShapes);
            for (var n = 0, r = t.inboundLayers; n < r.length; n++) {
              var i = r[n];
              null != i && i.outboundNodes.push(this);
            }
            t.outboundLayer.inboundNodes.push(this);
          }
          return (
            (t.prototype.getConfig = function() {
              for (
                var t = [], e = 0, n = this.inboundLayers;
                e < n.length;
                e++
              ) {
                var r = n[e];
                null != r ? t.push(r.name) : t.push(null);
              }
              return {
                outboundLayer: this.outboundLayer
                  ? this.outboundLayer.name
                  : null,
                inboundLayers: t,
                nodeIndices: this.nodeIndices,
                tensorIndices: this.tensorIndices
              };
            }),
            t
          );
        })(),
        qe = 0,
        He = (function(t) {
          function e(e) {
            var n = t.call(this) || this;
            (n._callHook = null),
              (n._addedWeightNames = []),
              (n._stateful = !1),
              (n.id = qe++),
              (n.activityRegularizer = null),
              (n.inputSpec = null),
              (n.supportsMasking = !1),
              (n._trainableWeights = []),
              (n._nonTrainableWeights = []),
              (n._losses = []),
              (n._updates = []),
              (n._built = !1),
              (n.inboundNodes = []),
              (n.outboundNodes = []);
            var r = e.name;
            if (!r) {
              var i = n.getClassName();
              r = A(i) + "_" + m(i);
            }
            if (
              ((n.name = r),
              (n.trainable = null == e.trainable || e.trainable),
              (n.updatable = null == e.updatable || e.updatable),
              null != e.inputShape || null != e.batchInputShape)
            ) {
              var a = void 0;
              if (null != e.batchInputShape) a = e.batchInputShape;
              else if (null != e.inputShape) {
                var o = null;
                null != e.batchSize && (o = e.batchSize),
                  (a = [o].concat(e.inputShape));
              }
              n.batchInputShape = a;
              var s = e.dtype;
              null == s && (s = e.inputDType),
                null == s && (s = "float32"),
                (n.dtype = s);
            }
            return (
              null != e.weights
                ? (n.initialWeights = e.weights)
                : (n.initialWeights = null),
              (n._refCount = null),
              (n.fastWeightInitDuringBuild = !1),
              n
            );
          }
          return (
            a(e, t),
            (e.nodeKey = function(t, e) {
              return t.name + "_ib-" + e.toString();
            }),
            (e.prototype.getNodeAtIndex = function(t, e) {
              if (0 === this.inboundNodes.length)
                throw new w(
                  "The layer has never been called and thus has no defined " +
                    e +
                    "."
                );
              if (this.inboundNodes.length <= t)
                throw new _(
                  "Asked to get " +
                    e +
                    " at node " +
                    t +
                    ", but the layer has only " +
                    this.inboundNodes.length +
                    " inbound nodes."
                );
              return this.inboundNodes[t];
            }),
            (e.prototype.getInputAt = function(t) {
              return I(this.getNodeAtIndex(t, "input").inputTensors);
            }),
            (e.prototype.getOutputAt = function(t) {
              return I(this.getNodeAtIndex(t, "output").outputTensors);
            }),
            Object.defineProperty(e.prototype, "input", {
              get: function() {
                if (this.inboundNodes.length > 1)
                  throw new b(
                    "Layer " +
                      this.name +
                      ' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.'
                  );
                if (0 === this.inboundNodes.length)
                  throw new b(
                    "Layer " +
                      this.name +
                      " is not connected, no input to return."
                  );
                return I(this.getNodeAtIndex(0, "input").inputTensors);
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(e.prototype, "output", {
              get: function() {
                if (0 === this.inboundNodes.length)
                  throw new b("Layer " + this.name + " has no inbound nodes.");
                if (this.inboundNodes.length > 1)
                  throw new b(
                    "Layer " +
                      this.name +
                      ' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.'
                  );
                return I(this.getNodeAtIndex(0, "output").outputTensors);
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(e.prototype, "losses", {
              get: function() {
                return this._losses;
              },
              enumerable: !0,
              configurable: !0
            }),
            (e.prototype.calculateLosses = function() {
              return this.losses.map(function(t) {
                return t();
              });
            }),
            Object.defineProperty(e.prototype, "updates", {
              get: function() {
                return this._updates;
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(e.prototype, "built", {
              get: function() {
                return this._built;
              },
              set: function(t) {
                this._built = t;
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(e.prototype, "trainableWeights", {
              get: function() {
                return this.trainable ? this._trainableWeights : [];
              },
              set: function(t) {
                this._trainableWeights = t;
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(e.prototype, "nonTrainableWeights", {
              get: function() {
                return this.trainable
                  ? this._nonTrainableWeights
                  : this._trainableWeights.concat(this._nonTrainableWeights);
              },
              set: function(t) {
                this._nonTrainableWeights = t;
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(e.prototype, "weights", {
              get: function() {
                return this.trainableWeights.concat(this.nonTrainableWeights);
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(e.prototype, "stateful", {
              get: function() {
                return this._stateful;
              },
              enumerable: !0,
              configurable: !0
            }),
            (e.prototype.resetStates = function() {
              if (!this.stateful)
                throw new Error(
                  "Cannot call the resetStates() method of a non-stateful Layer object."
                );
            }),
            (e.prototype.assertInputCompatibility = function(t) {
              if (
                ((t = C(t)),
                null != this.inputSpec && 0 !== this.inputSpec.length)
              ) {
                var e = C(this.inputSpec);
                if (t.length !== e.length)
                  throw new _(
                    "Layer " +
                      this.name +
                      " expects " +
                      e.length +
                      " inputs, but it received " +
                      t.length +
                      " input tensors. Input received: " +
                      t
                  );
                for (var n = 0; n < t.length; n++) {
                  var r = t[n],
                    i = e[n];
                  if (null != i) {
                    var a = r.rank;
                    if (null != i.ndim && a !== i.ndim)
                      throw new _(
                        "Input " +
                          n +
                          " is incompatible with layer " +
                          this.name +
                          ": expected ndim=" +
                          i.ndim +
                          ", found ndim=" +
                          a
                      );
                    if (null != i.maxNDim && a > i.maxNDim)
                      throw new _(
                        "Input " +
                          n +
                          " is incompatible with layer " +
                          this.name +
                          ": expected max_ndim=" +
                          i.maxNDim +
                          ", found ndim=" +
                          a
                      );
                    if (null != i.minNDim && a < i.minNDim)
                      throw new _(
                        "Input " +
                          n +
                          " is incompatible with layer " +
                          this.name +
                          ": expected min_ndim=" +
                          i.minNDim +
                          ", found ndim=" +
                          a +
                          "."
                      );
                    if (null != i.dtype && r.dtype !== i.dtype)
                      throw new _(
                        "Input " +
                          n +
                          " is incompatible with layer " +
                          this.name +
                          " : expected dtype=" +
                          i.dtype +
                          ", found dtype=" +
                          r.dtype +
                          "."
                      );
                    if (i.axes) {
                      var o = r.shape;
                      for (var s in i.axes) {
                        var u = Number(s),
                          c = i.axes[s],
                          l = u >= 0 ? o[u] : o[o.length + u];
                        if (null != c && -1 === [c, null].indexOf(l))
                          throw new _(
                            "Input " +
                              n +
                              " is incompatible with layer " +
                              this.name +
                              ": expected axis " +
                              u +
                              " of input shape to have value " +
                              c +
                              " but got shape " +
                              o +
                              "."
                          );
                      }
                    }
                    if (null != i.shape)
                      for (var f = 0; f < i.shape.length; ++f) {
                        var h = i.shape[f],
                          p = r.shape[f];
                        if (null != h && null != p && h !== p)
                          throw new _(
                            "Input " +
                              n +
                              " is incompatible with layer " +
                              this.name +
                              ": expected shape=" +
                              i.shape +
                              ", found shape=${xShape}."
                          );
                      }
                  }
                }
              }
            }),
            (e.prototype.call = function(t, e) {
              return t;
            }),
            (e.prototype.invokeCallHook = function(t, e) {
              null != this._callHook && this._callHook(t, e);
            }),
            (e.prototype.setCallHook = function(t) {
              this._callHook = t;
            }),
            (e.prototype.clearCallHook = function() {
              this._callHook = null;
            }),
            (e.prototype.apply = function(t, e) {
              var n = this;
              (e = e || {}), this.assertNotDisposed();
              for (var r = C(t), i = !0, a = 0, o = r; a < o.length; a++)
                if (!(o[a] instanceof Ve)) {
                  i = !1;
                  break;
                }
              for (var s = !0, u = 0, c = r; u < c.length; u++)
                if (c[u] instanceof Ve) {
                  s = !1;
                  break;
                }
              if (i === s)
                throw new _(
                  "Arguments to apply() must be all SymbolicTensors or all Tensors"
                );
              return ht(this.name, function() {
                if (!n.built) {
                  n.assertInputCompatibility(t);
                  for (var i = [], a = 0, o = C(t); a < o.length; a++) {
                    var u = o[a];
                    i.push(u.shape);
                  }
                  n.build(I(i)),
                    (n.built = !0),
                    n.initialWeights && n.setWeights(n.initialWeights),
                    null === n._refCount && s && (n._refCount = 1);
                }
                if ((n.assertInputCompatibility(t), s)) {
                  for (
                    var c = [], l = 0, f = C((m = n.call(t, e)));
                    l < f.length;
                    l++
                  ) {
                    var h = f[l];
                    -1 !== r.indexOf(h) && (h = h.clone()), c.push(h);
                  }
                  if (((m = I(c)), null != n.activityRegularizer))
                    throw new x(
                      "Layer invocation in the presence of activity regularizer(s) is not supported yet."
                    );
                  return m;
                }
                var p = Ke(t),
                  d = n.computeOutputShape(p),
                  m = void 0,
                  v = Ge(t);
                if (
                  (n.warnOnIncompatibleInputShape(Array.isArray(t) ? p[0] : p),
                  (m =
                    null != d && d.length > 0 && Array.isArray(d[0])
                      ? d.map(function(r, i) {
                          return new Ve(v, r, n, C(t), e, n.name, i);
                        })
                      : new Ve(v, d, n, C(t), e, n.name)),
                  n.addInboundNode(t, m, null, null, p, d, e),
                  n._refCount++,
                  null != n.activityRegularizer)
                )
                  throw new x(
                    "Layer invocation in the presence of activity regularizer(s) is not supported yet."
                  );
                return m;
              });
            }),
            (e.prototype.warnOnIncompatibleInputShape = function(t) {
              if (null != this.batchInputShape)
                if (t.length !== this.batchInputShape.length)
                  console.warn(
                    "The rank of the input tensor provided (shape: " +
                      JSON.stringify(t) +
                      ") does not match that of the batchInputShape (" +
                      JSON.stringify(this.batchInputShape) +
                      ") of the layer " +
                      this.name
                  );
                else {
                  var e = !1;
                  this.batchInputShape.forEach(function(n, r) {
                    null != n && null != t[r] && t[r] !== n && (e = !0);
                  }),
                    e &&
                      console.warn(
                        "The shape of the input tensor (" +
                          JSON.stringify(t) +
                          ") does not match the expectation of layer " +
                          this.name +
                          ": " +
                          JSON.stringify(this.batchInputShape)
                      );
                }
            }),
            Object.defineProperty(e.prototype, "outputShape", {
              get: function() {
                if (null == this.inboundNodes || 0 === this.inboundNodes.length)
                  throw new b(
                    "The layer " +
                      this.name +
                      " has never been called and thus has no defined output shape."
                  );
                for (
                  var t = [], e = 0, n = this.inboundNodes;
                  e < n.length;
                  e++
                ) {
                  var r = n[e],
                    i = JSON.stringify(r.outputShapes);
                  -1 === t.indexOf(i) && t.push(i);
                }
                if (1 === t.length) {
                  var a = this.inboundNodes[0].outputShapes;
                  return Array.isArray(a) &&
                    Array.isArray(a[0]) &&
                    1 === a.length
                    ? a[0]
                    : a;
                }
                throw new b(
                  "The layer " +
                    this.name +
                    ' has multiple inbound nodes with different output shapes. Hence the notion of "outut shape" is ill-defined for the layer.'
                );
              },
              enumerable: !0,
              configurable: !0
            }),
            (e.prototype.countParams = function() {
              if (!this.built)
                throw new w(
                  "You tried to call countParams() on " +
                    this.name +
                    ", but the layer is not built yet. Build it first by calling build(batchInputShape)."
                );
              return Me(this.weights);
            }),
            (e.prototype.build = function(t) {
              this.built = !0;
            }),
            (e.prototype.getWeights = function(t) {
              return (
                void 0 === t && (t = !1),
                Fe(t ? this.trainableWeights : this.weights)
              );
            }),
            (e.prototype.setWeights = function(t) {
              var e = this;
              Object(r["Jc"])(function() {
                var n = e.weights;
                if (n.length !== t.length)
                  throw new _(
                    'You called setWeights(weights) on layer "' +
                      e.name +
                      '" with a weight list of length ' +
                      t.length +
                      ", but the layer was expecting " +
                      n.length +
                      " weights. Provided weights: " +
                      t +
                      "..."
                  );
                if (0 !== n.length) {
                  for (var i = [], a = Fe(n), o = 0; o < a.length; ++o) {
                    var s = a[o],
                      u = n[o],
                      c = t[o];
                    if (!r["Qc"].arraysEqual(s.shape, c.shape))
                      throw new _(
                        "Layer weight shape " +
                          s.shape +
                          " not compatible with provided weight shape " +
                          c.shape
                      );
                    i.push([u, c]);
                  }
                  ze(i);
                }
              });
            }),
            (e.prototype.addWeight = function(t, e, n, r, i, a, o) {
              if (-1 !== this._addedWeightNames.indexOf(t))
                throw new _(
                  "Duplicate weight name " + t + " for layer " + this.name
                );
              this._addedWeightNames.push(t),
                null == n && (n = "float32"),
                this.fastWeightInitDuringBuild && (r = me("zeros"));
              var s = r.apply(e, n),
                u = new Le(s, n, t, a, o);
              return (
                s.dispose(),
                null != i &&
                  this.addLoss(function() {
                    return i.apply(u.read());
                  }),
                null == a && (a = !0),
                a
                  ? this._trainableWeights.push(u)
                  : this._nonTrainableWeights.push(u),
                u
              );
            }),
            (e.prototype.setFastWeightInitDuringBuild = function(t) {
              this.fastWeightInitDuringBuild = t;
            }),
            (e.prototype.addLoss = function(t) {
              var e;
              null == t ||
                (Array.isArray(t) && 0 === t.length) ||
                ((t = C(t)),
                void 0 !== this._losses &&
                  null !== this._losses &&
                  (e = this.losses).push.apply(e, t));
            }),
            (e.prototype.computeOutputShape = function(t) {
              return t;
            }),
            (e.prototype.computeMask = function(t, e) {
              var n = this;
              if (!this.supportsMasking) {
                if (null != e) {
                  if (!Array.isArray(e))
                    throw new TypeError(
                      "Layer " +
                        this.name +
                        " does not support masking, but was passed an inputMask."
                    );
                  e.forEach(function(t) {
                    if (null != t)
                      throw new TypeError(
                        "Layer " +
                          n.name +
                          " does not support masking, but was passed an inputMask."
                      );
                  });
                }
                return null;
              }
              return e;
            }),
            (e.prototype.addInboundNode = function(t, e, n, r, i, a, o) {
              void 0 === o && (o = null);
              var s = C(t);
              (e = C(e)), (n = C(n)), (r = C(r)), (i = Te(i)), (a = Te(a));
              for (
                var u = [], c = [], l = [], f = 0, h = s;
                f < h.length;
                f++
              ) {
                var p = h[f];
                u.push(p.sourceLayer),
                  c.push(p.nodeIndex),
                  l.push(p.tensorIndex);
              }
              new $e(
                {
                  outboundLayer: this,
                  inboundLayers: u,
                  nodeIndices: c,
                  tensorIndices: l,
                  inputTensors: s,
                  outputTensors: e,
                  inputMasks: n,
                  outputMasks: r,
                  inputShapes: i,
                  outputShapes: a
                },
                o
              );
              for (var d = 0; d < e.length; d++)
                (e[d].sourceLayer = this),
                  (e[d].nodeIndex = this.inboundNodes.length - 1),
                  (e[d].tensorIndex = d);
            }),
            (e.prototype.getConfig = function() {
              var t = { name: this.name, trainable: this.trainable };
              return (
                null != this.batchInputShape &&
                  (t.batchInputShape = this.batchInputShape),
                null != this.dtype && (t.dtype = this.dtype),
                t
              );
            }),
            (e.prototype.disposeWeights = function() {
              return (
                this.weights.forEach(function(t) {
                  return t.dispose();
                }),
                this.weights.length
              );
            }),
            (e.prototype.assertNotDisposed = function() {
              if (0 === this._refCount)
                throw new Error(
                  "Layer '" + this.name + "' is already disposed."
                );
            }),
            (e.prototype.dispose = function() {
              if (!this.built)
                throw new Error(
                  "Cannot dispose Layer " +
                    this.name +
                    " because it has not been built yet."
                );
              if (null === this._refCount)
                throw new Error(
                  "Cannot dispose Layer " +
                    this.name +
                    " because it has not been used yet."
                );
              this.assertNotDisposed();
              var t = 0;
              return (
                0 == --this._refCount && (t = this.disposeWeights()),
                {
                  refCountAfterDispose: this._refCount,
                  numDisposedVariables: t
                }
              );
            }),
            e
          );
        })(r["gc"].Serializable);
      function Ke(t) {
        for (var e = [], n = 0, r = (t = C(t)); n < r.length; n++) {
          var i = r[n];
          e.push(i.shape);
        }
        return I(e);
      }
      function Ge(t) {
        return "float32";
      }
      function Xe(t, e, n) {
        if (
          ((null == e || (null != n && n > 0)) &&
            ((e = t.sourceLayer), (n = t.nodeIndex)),
          0 === e.inboundNodes.length)
        )
          return [t];
        var r = e.inboundNodes[n];
        if (0 === r.inboundLayers.length) return r.inputTensors;
        for (var i = [], a = 0; a < r.inboundLayers.length; a++)
          for (
            var o = 0,
              s = Xe(r.inputTensors[a], r.inboundLayers[a], r.nodeIndices[a]);
            o < s.length;
            o++
          ) {
            var u = s[o];
            -1 === i.indexOf(u) && i.push(u);
          }
        return i;
      }
      var Je,
        Ye = (function(t) {
          function e(e) {
            var n =
              t.call(this, {
                dtype: e.dtype,
                name: null != e.name ? e.name : m("input").toString()
              }) || this;
            if (
              (null == e.batchSize && (e.batchSize = null),
              null == e.sparse && (e.sparse = !1),
              (n.trainable = !1),
              (n.built = !0),
              (n.sparse = e.sparse),
              null != e.inputShape && null != e.batchInputShape)
            )
              throw new _(
                "Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time."
              );
            var r = e.batchInputShape;
            if (null == r) {
              if (null == e.inputShape)
                throw new _(
                  "An InputLayer should be passed either a `batchInputShape` or an `inputShape`."
                );
              r = [e.batchSize].concat(e.inputShape);
            } else if (null != e.batchSize)
              throw new _(
                "Cannot specify batchSize if batchInputShape isspecified when creating an InputLayer."
              );
            var i = e.dtype || "float32";
            (n.batchInputShape = r),
              (n.dtype = i),
              (n.inputSpec = [{ shape: r }]);
            var a = new Ve(n.dtype, n.batchInputShape, n, [], {}, n.name);
            return (
              (a.nodeIndex = 0),
              (a.tensorIndex = 0),
              new $e({
                outboundLayer: n,
                inboundLayers: [],
                nodeIndices: [],
                tensorIndices: [],
                inputTensors: [a],
                outputTensors: [a],
                inputMasks: [null],
                outputMasks: [null],
                inputShapes: [r],
                outputShapes: [r]
              }),
              n
            );
          }
          return (
            a(e, t),
            (e.prototype.apply = function(t, e) {
              throw new _(
                "Cannot pass any input to an InputLayer's apply() method. InputLayer name: " +
                  this.name
              );
            }),
            (e.prototype.dispose = function() {
              return {
                refCountAfterDispose: this._refCount,
                numDisposedVariables: 0
              };
            }),
            (e.prototype.getConfig = function() {
              return {
                batchInputShape: this.batchInputShape,
                dtype: this.dtype,
                sparse: this.sparse,
                name: this.name
              };
            }),
            (e.className = "InputLayer"),
            e
          );
        })(He);
      function Qe(t) {
        if (null == t.batchShape && null == t.shape)
          throw new Error(
            "Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension."
          );
        if (null != t.batchShape && null != t.shape)
          throw new _(
            "Please provide either a `shape` or `batchShape` argument to Input, but not both."
          );
        var e = t.batchShape;
        null != t.shape && null == e && (e = [null].concat(t.shape));
        var n = t.dtype;
        return (
          null == n && (n = "float32"),
          new Ye({
            batchInputShape: e,
            name: t.name,
            dtype: n,
            sparse: t.sparse
          }).inboundNodes[0].outputTensors[0]
        );
      }
      function Ze(t) {
        return u(this, void 0, void 0, function() {
          var e, n, i, a, o, s, u, l;
          return c(this, function(c) {
            switch (c.label) {
              case 0:
                if (null == t) return [2];
                for (a in ((e = []), (n = []), (i = []), t))
                  "number" != typeof (o = t[a]) &&
                    ((s = o), e.push(s.data()), n.push(a), i.push(s));
                return [4, Promise.all(e)];
              case 1:
                for (u = c.sent(), l = 0; l < u.length; ++l) t[n[l]] = u[l][0];
                return Object(r["P"])(i), [2];
            }
          });
        });
      }
      function tn(t) {
        if (null != t)
          for (var e in t) {
            var n = t[e];
            "number" != typeof n && n.dispose();
          }
      }
      r["gc"].registerClass(Ye),
        (function(t) {
          (t[(t.SILENT = 0)] = "SILENT"), (t[(t.VERBOSE = 1)] = "VERBOSE");
        })(Je || (Je = {}));
      var en = (function() {
          function t() {
            this.validationData = null;
          }
          return (
            (t.prototype.setParams = function(t) {
              this.params = t;
            }),
            (t.prototype.onEpochBegin = function(t, e) {
              return u(this, void 0, void 0, function() {
                return c(this, function(t) {
                  return [2];
                });
              });
            }),
            (t.prototype.onEpochEnd = function(t, e) {
              return u(this, void 0, void 0, function() {
                return c(this, function(t) {
                  return [2];
                });
              });
            }),
            (t.prototype.onBatchBegin = function(t, e) {
              return u(this, void 0, void 0, function() {
                return c(this, function(t) {
                  return [2];
                });
              });
            }),
            (t.prototype.onBatchEnd = function(t, e) {
              return u(this, void 0, void 0, function() {
                return c(this, function(t) {
                  return [2];
                });
              });
            }),
            (t.prototype.onTrainBegin = function(t) {
              return u(this, void 0, void 0, function() {
                return c(this, function(t) {
                  return [2];
                });
              });
            }),
            (t.prototype.onTrainEnd = function(t) {
              return u(this, void 0, void 0, function() {
                return c(this, function(t) {
                  return [2];
                });
              });
            }),
            (t.prototype.setModel = function(t) {}),
            t
          );
        })(),
        nn = (function() {
          function t(t, e) {
            void 0 === e && (e = 10),
              null == t && (t = []),
              (this.callbacks = t),
              (this.queueLength = e);
          }
          return (
            (t.prototype.append = function(t) {
              this.callbacks.push(t);
            }),
            (t.prototype.setParams = function(t) {
              for (var e = 0, n = this.callbacks; e < n.length; e++)
                n[e].setParams(t);
            }),
            (t.prototype.setModel = function(t) {
              for (var e = 0, n = this.callbacks; e < n.length; e++)
                n[e].setModel(t);
            }),
            (t.prototype.onEpochBegin = function(t, e) {
              return u(this, void 0, void 0, function() {
                var n, r;
                return c(this, function(i) {
                  switch (i.label) {
                    case 0:
                      null == e && (e = {}),
                        (n = 0),
                        (r = this.callbacks),
                        (i.label = 1);
                    case 1:
                      return n < r.length
                        ? [4, r[n].onEpochBegin(t, e)]
                        : [3, 4];
                    case 2:
                      i.sent(), (i.label = 3);
                    case 3:
                      return n++, [3, 1];
                    case 4:
                      return [2];
                  }
                });
              });
            }),
            (t.prototype.onEpochEnd = function(t, e) {
              return u(this, void 0, void 0, function() {
                var n, r;
                return c(this, function(i) {
                  switch (i.label) {
                    case 0:
                      null == e && (e = {}),
                        (n = 0),
                        (r = this.callbacks),
                        (i.label = 1);
                    case 1:
                      return n < r.length ? [4, r[n].onEpochEnd(t, e)] : [3, 4];
                    case 2:
                      i.sent(), (i.label = 3);
                    case 3:
                      return n++, [3, 1];
                    case 4:
                      return [2];
                  }
                });
              });
            }),
            (t.prototype.onBatchBegin = function(t, e) {
              return u(this, void 0, void 0, function() {
                var n, r;
                return c(this, function(i) {
                  switch (i.label) {
                    case 0:
                      null == e && (e = {}),
                        (n = 0),
                        (r = this.callbacks),
                        (i.label = 1);
                    case 1:
                      return n < r.length
                        ? [4, r[n].onBatchBegin(t, e)]
                        : [3, 4];
                    case 2:
                      i.sent(), (i.label = 3);
                    case 3:
                      return n++, [3, 1];
                    case 4:
                      return [2];
                  }
                });
              });
            }),
            (t.prototype.onBatchEnd = function(t, e) {
              return u(this, void 0, void 0, function() {
                var n, r;
                return c(this, function(i) {
                  switch (i.label) {
                    case 0:
                      null == e && (e = {}),
                        (n = 0),
                        (r = this.callbacks),
                        (i.label = 1);
                    case 1:
                      return n < r.length ? [4, r[n].onBatchEnd(t, e)] : [3, 4];
                    case 2:
                      i.sent(), (i.label = 3);
                    case 3:
                      return n++, [3, 1];
                    case 4:
                      return [2];
                  }
                });
              });
            }),
            (t.prototype.onTrainBegin = function(t) {
              return u(this, void 0, void 0, function() {
                var e, n;
                return c(this, function(r) {
                  switch (r.label) {
                    case 0:
                      null == t && (t = {}),
                        (e = 0),
                        (n = this.callbacks),
                        (r.label = 1);
                    case 1:
                      return e < n.length ? [4, n[e].onTrainBegin(t)] : [3, 4];
                    case 2:
                      r.sent(), (r.label = 3);
                    case 3:
                      return e++, [3, 1];
                    case 4:
                      return [2];
                  }
                });
              });
            }),
            (t.prototype.onTrainEnd = function(t) {
              return u(this, void 0, void 0, function() {
                var e, n;
                return c(this, function(r) {
                  switch (r.label) {
                    case 0:
                      null == t && (t = {}),
                        (e = 0),
                        (n = this.callbacks),
                        (r.label = 1);
                    case 1:
                      return e < n.length ? [4, n[e].onTrainEnd(t)] : [3, 4];
                    case 2:
                      r.sent(), (r.label = 3);
                    case 3:
                      return e++, [3, 1];
                    case 4:
                      return [2];
                  }
                });
              });
            }),
            t
          );
        })(),
        rn = (function() {
          function t(t) {
            (this.yieldEvery = t),
              (this.batchCount = 0),
              (this.batchDurationsMillis = []),
              (this.autoYieldEveryBatches = null),
              (this.batchStartMillis = r["Qc"].now());
          }
          return (
            (t.prototype.maybeYieldOnBatch = function(e) {
              return u(this, void 0, void 0, function() {
                var e, n;
                return c(this, function(i) {
                  switch (i.label) {
                    case 0:
                      return "auto" !== this.yieldEvery
                        ? [3, 5]
                        : (this.batchCount++,
                          null != this.autoYieldEveryBatches
                            ? [3, 2]
                            : ((e = r["Qc"].now()), [4, Object(r["Kb"])()]));
                    case 1:
                      return (
                        i.sent(),
                        this.batchCount > t.SKIP_FIRST_BATCHES &&
                          (this.batchDurationsMillis.push(
                            e - this.batchStartMillis
                          ),
                          this.batchDurationsMillis.length >=
                            t.DECISION_BATCH_COUNT &&
                            ((n =
                              this.batchDurationsMillis.reduce(function(t, e) {
                                return t + e;
                              }) / this.batchDurationsMillis.length),
                            (this.autoYieldEveryBatches = Math.round(
                              t.THRESHOLD_MILLIS / n
                            )),
                            this.autoYieldEveryBatches < 1 &&
                              (this.autoYieldEveryBatches = 1))),
                        (this.batchStartMillis = r["Qc"].now()),
                        (this.lastYieldBatchCount = this.batchCount),
                        [3, 4]
                      );
                    case 2:
                      return this.batchCount - this.lastYieldBatchCount >=
                        this.autoYieldEveryBatches
                        ? [4, Object(r["Kb"])()]
                        : [3, 4];
                    case 3:
                      i.sent(),
                        (this.lastYieldBatchCount = this.batchCount),
                        (i.label = 4);
                    case 4:
                      return [3, 7];
                    case 5:
                      return "batch" !== this.yieldEvery
                        ? [3, 7]
                        : [4, Object(r["Kb"])()];
                    case 6:
                      i.sent(), (i.label = 7);
                    case 7:
                      return [2];
                  }
                });
              });
            }),
            (t.prototype.maybeYieldOnEpoch = function() {
              return u(this, void 0, void 0, function() {
                return c(this, function(t) {
                  switch (t.label) {
                    case 0:
                      return "epoch" !== this.yieldEvery
                        ? [3, 2]
                        : [4, Object(r["Kb"])()];
                    case 1:
                      t.sent(), (t.label = 2);
                    case 2:
                      return [2];
                  }
                });
              });
            }),
            (t.SKIP_FIRST_BATCHES = 1),
            (t.DECISION_BATCH_COUNT = 2),
            (t.THRESHOLD_MILLIS = 16),
            t
          );
        })(),
        an = (function(t) {
          function e(e) {
            var n = t.call(this) || this;
            return (n.yieldEvery = e || "auto"), n;
          }
          return (
            a(e, t),
            (e.prototype.onTrainBegin = function(t) {
              return u(this, void 0, void 0, function() {
                return c(this, function(t) {
                  return (this.autoYielder = new rn(this.yieldEvery)), [2];
                });
              });
            }),
            (e.prototype.onEpochBegin = function(t) {
              return u(this, void 0, void 0, function() {
                return c(this, function(t) {
                  return (this.seen = 0), (this.totals = {}), [2];
                });
              });
            }),
            (e.prototype.onBatchEnd = function(t, e) {
              return u(this, void 0, void 0, function() {
                var t,
                  n,
                  i,
                  a,
                  o = this;
                return c(this, function(s) {
                  switch (s.label) {
                    case 0:
                      return [4, this.autoYielder.maybeYieldOnBatch(e)];
                    case 1:
                      for (a in (s.sent(),
                      null == e && (e = {}),
                      (t = null == e.size ? 0 : e.size),
                      (this.seen += t),
                      (n = function(n) {
                        var a = e[n];
                        if ("number" == typeof a)
                          i.totals.hasOwnProperty(n) || (i.totals[n] = 0),
                            (i.totals[n] = i.totals[n] + a * t);
                        else {
                          var s = void 0;
                          n in i.totals
                            ? (s = i.totals[n])
                            : (i.totals[n] = g(0)),
                            (i.totals[n] = Object(r["Jc"])(function() {
                              return Object(
                                r["g"]
                              )(o.totals[n], Object(r["Hb"])(a, g(t)));
                            })),
                            null != s && s.dispose();
                        }
                      }),
                      (i = this),
                      e))
                        n(a);
                      return [2];
                  }
                });
              });
            }),
            (e.prototype.onEpochEnd = function(t, e) {
              return u(this, void 0, void 0, function() {
                var t,
                  n,
                  i,
                  a,
                  o,
                  s = this;
                return c(this, function(u) {
                  switch (u.label) {
                    case 0:
                      return [4, this.autoYielder.maybeYieldOnEpoch()];
                    case 1:
                      if ((u.sent(), null != e))
                        for (
                          t = function(t) {
                            if (null == n.totals[t]) return "continue";
                            "number" == typeof n.totals[t]
                              ? (e[t] = n.totals[t] / n.seen)
                              : Object(r["Jc"])(function() {
                                  (e[t] = Object(r["Hb"])(
                                    Object(r["Q"])(g(1), g(s.seen)),
                                    s.totals[t]
                                  )),
                                    s.totals[t].dispose(),
                                    Object(r["kb"])(e[t]);
                                });
                          },
                            n = this,
                            i = 0,
                            a = this.params.metrics;
                          i < a.length;
                          i++
                        )
                          (o = a[i]), t(o);
                      return [2];
                  }
                });
              });
            }),
            e
          );
        })(en),
        on = (function(t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            a(e, t),
            (e.prototype.onTrainBegin = function(t) {
              return u(this, void 0, void 0, function() {
                return c(this, function(t) {
                  return (this.epoch = []), (this.history = {}), [2];
                });
              });
            }),
            (e.prototype.onEpochEnd = function(t, e) {
              return u(this, void 0, void 0, function() {
                var n;
                return c(this, function(r) {
                  for (n in (null == e && (e = {}), this.epoch.push(t), e))
                    null == this.history[n] && (this.history[n] = []),
                      this.history[n].push(e[n]);
                  return [2];
                });
              });
            }),
            (e.prototype.syncData = function() {
              return u(this, void 0, void 0, function() {
                var t, e, n, r, i, a, o, s, u;
                return c(this, function(c) {
                  switch (c.label) {
                    case 0:
                      for (r in ((t = []), (e = []), (n = []), this.history))
                        for (i = this.history[r], a = 0; a < i.length; ++a)
                          "number" != typeof i[a] &&
                            ((o = i[a]),
                            t.push(o.data()),
                            e.push(r),
                            n.push(a));
                      return [4, Promise.all(t)];
                    case 1:
                      for (s = c.sent(), u = 0; u < s.length; ++u)
                        this.history[e[u]][n[u]].dispose(),
                          (this.history[e[u]][n[u]] = s[u][0]);
                      return [2];
                  }
                });
              });
            }),
            e
          );
        })(en),
        sn = (function(t) {
          function e(e) {
            var n = t.call(this) || this;
            return (
              (n.trainBegin = e.onTrainBegin),
              (n.trainEnd = e.onTrainEnd),
              (n.epochBegin = e.onEpochBegin),
              (n.epochEnd = e.onEpochEnd),
              (n.batchBegin = e.onBatchBegin),
              (n.batchEnd = e.onBatchEnd),
              n
            );
          }
          return (
            a(e, t),
            (e.prototype.onEpochBegin = function(t, e) {
              return u(this, void 0, void 0, function() {
                return c(this, function(n) {
                  switch (n.label) {
                    case 0:
                      return null == this.epochBegin ? [3, 3] : [4, Ze(e)];
                    case 1:
                      return n.sent(), [4, this.epochBegin(t, e)];
                    case 2:
                      n.sent(), (n.label = 3);
                    case 3:
                      return [2];
                  }
                });
              });
            }),
            (e.prototype.onEpochEnd = function(t, e) {
              return u(this, void 0, void 0, function() {
                return c(this, function(n) {
                  switch (n.label) {
                    case 0:
                      return null == this.epochEnd ? [3, 3] : [4, Ze(e)];
                    case 1:
                      return n.sent(), [4, this.epochEnd(t, e)];
                    case 2:
                      n.sent(), (n.label = 3);
                    case 3:
                      return [2];
                  }
                });
              });
            }),
            (e.prototype.onBatchBegin = function(t, e) {
              return u(this, void 0, void 0, function() {
                return c(this, function(n) {
                  switch (n.label) {
                    case 0:
                      return null == this.batchBegin ? [3, 3] : [4, Ze(e)];
                    case 1:
                      return n.sent(), [4, this.batchBegin(t, e)];
                    case 2:
                      n.sent(), (n.label = 3);
                    case 3:
                      return [2];
                  }
                });
              });
            }),
            (e.prototype.onBatchEnd = function(t, e) {
              return u(this, void 0, void 0, function() {
                return c(this, function(n) {
                  switch (n.label) {
                    case 0:
                      return null == this.batchEnd ? [3, 3] : [4, Ze(e)];
                    case 1:
                      return n.sent(), [4, this.batchEnd(t, e)];
                    case 2:
                      n.sent(), (n.label = 3);
                    case 3:
                      return [2];
                  }
                });
              });
            }),
            (e.prototype.onTrainBegin = function(t) {
              return u(this, void 0, void 0, function() {
                return c(this, function(e) {
                  switch (e.label) {
                    case 0:
                      return null == this.trainBegin ? [3, 3] : [4, Ze(t)];
                    case 1:
                      return e.sent(), [4, this.trainBegin(t)];
                    case 2:
                      e.sent(), (e.label = 3);
                    case 3:
                      return [2];
                  }
                });
              });
            }),
            (e.prototype.onTrainEnd = function(t) {
              return u(this, void 0, void 0, function() {
                return c(this, function(e) {
                  switch (e.label) {
                    case 0:
                      return null == this.trainEnd ? [3, 3] : [4, Ze(t)];
                    case 1:
                      return e.sent(), [4, this.trainEnd(t)];
                    case 2:
                      e.sent(), (e.label = 3);
                    case 3:
                      return [2];
                  }
                });
              });
            }),
            e
          );
        })(en);
      function un(t) {
        return null == t
          ? null
          : t instanceof en
          ? [t]
          : Array.isArray(t) && t[0] instanceof en
          ? t
          : C(t).map(function(t) {
              return new sn(t);
            });
      }
      var cn = (function() {
        function t() {}
        return (
          (t.registerCallbackConstructor = function(e, n) {
            r["Qc"].assert(
              e >= 0 && Number.isInteger(e),
              "Verbosity level is expected to be an integer >= 0, but got " + e
            ),
              t.checkForDuplicate(n),
              null == t.constructors[e] && (t.constructors[e] = []),
              t.constructors[e].push(n);
          }),
          (t.checkForDuplicate = function(e) {
            for (var n in t.constructors)
              t.constructors[+n].forEach(function(t) {
                if (t === e) throw new _("Duplicate callback constructor.");
              });
          }),
          (t.clear = function() {
            t.constructors = {};
          }),
          (t.createCallbacks = function(e) {
            var n = [];
            for (var r in t.constructors) {
              var i = +r;
              e >= i && n.push.apply(n, t.constructors[i]);
            }
            return n.map(function(t) {
              return new t();
            });
          }),
          (t.constructors = {}),
          t
        );
      })();
      function ln(t, e, n, r, i, a, o, s, u, c) {
        var l = new on(),
          f = [new an(e)].concat(cn.createCallbacks(n));
        null != t && f.push.apply(f, t), f.push(l);
        var h = new nn(f);
        return (
          h.setParams({
            epochs: r,
            initialEpoch: i,
            samples: a,
            steps: o,
            batchSize: s,
            verbose: n,
            doValidation: u,
            metrics: c
          }),
          { callbackList: h, history: l }
        );
      }
      function fn(t, e) {
        return Object(r["Jc"])(function() {
          var n = Object(r["Ec"])(Bt(t), e, !0),
            i = Object(r["Hb"])(Object(r["cc"])(l()), Object(r["Ob"])(t)),
            a = Object(r["wc"])(Object(r["Ab"])(n, i));
          return Object(r["Q"])(t, a);
        });
      }
      function hn(t, e) {
        return Object(r["Jc"])(function() {
          return Object(r["Bb"])(Bt(Object(r["Dc"])(e, t)), -1);
        });
      }
      function pn(t, e) {
        return Object(r["Jc"])(function() {
          return Object(r["Bb"])(Object(r["d"])(Object(r["Dc"])(e, t)), -1);
        });
      }
      function dn(t, e) {
        return Object(r["Jc"])(function() {
          var n = Object(r["Dc"])(t, e),
            i = Object(r["A"])(Object(r["d"])(t), l(), Number.MAX_VALUE),
            a = Object(r["d"])(Object(r["Q"])(n, i));
          return Object(r["Hb"])(g(100), Object(r["Bb"])(a, -1));
        });
      }
      function mn(t, e) {
        return Object(r["Jc"])(function() {
          var n = g(1),
            i = Object(r["A"])(e, l(), Number.MAX_VALUE),
            a = Object(r["rb"])(Object(r["g"])(n, i)),
            o = Object(r["A"])(t, l(), Number.MAX_VALUE),
            s = Object(r["rb"])(Object(r["g"])(n, o));
          return Object(r["Bb"])(Bt(Object(r["Dc"])(a, s)), -1);
        });
      }
      function vn(t, e) {
        return Object(r["Jc"])(function() {
          var n = g(0),
            i = g(1),
            a = Object(r["Ab"])(n, Object(r["Dc"])(i, Object(r["Hb"])(t, e)));
          return Object(r["Bb"])(Bt(a), -1);
        });
      }
      function yn(t, e) {
        return Object(r["Jc"])(function() {
          var n = g(0),
            i = g(1),
            a = Object(r["Ab"])(n, Object(r["Dc"])(i, Object(r["Hb"])(t, e)));
          return Object(r["Bb"])(a, -1);
        });
      }
      function gn(t, e) {
        return Object(r["Jc"])(function() {
          var n = g(0),
            i = g(1),
            a = Object(r["Ec"])(Object(r["Hb"])(t, e), -1),
            o = Object(r["yb"])(Object(r["Hb"])(Object(r["Dc"])(i, t), e), -1);
          return Object(r["Ab"])(n, Object(r["g"])(i, Object(r["Dc"])(o, a)));
        });
      }
      function bn(t, e) {
        return Object(r["Jc"])(function() {
          var n = g(Math.log(2)),
            i = Object(r["Dc"])(e, t),
            a = Object(r["Dc"])(
              Object(r["g"])(i, Object(r["sc"])(Object(r["Hb"])(g(-2), i))),
              n
            );
          return Object(r["Bb"])(a, -1);
        });
      }
      function wn(t, e, n) {
        return (
          void 0 === n && (n = !1),
          Object(r["Jc"])(function() {
            if (n) e = Object(r["rc"])(e);
            else {
              var i = Object(r["Ec"])(e, e.shape.length - 1, !0);
              e = Object(r["Q"])(e, i);
            }
            return (
              (e = Object(r["A"])(e, l(), 1 - l())),
              Object(r["Jb"])(
                Object(r["Ec"])(
                  Object(r["Hb"])(t.toFloat(), Object(r["rb"])(e)),
                  e.shape.length - 1
                )
              )
            );
          })
        );
      }
      function _n(t, e) {
        return Object(r["Jc"])(function() {
          var n = Object(r["ab"])(It(t)).toInt(),
            i = (e = Object(r["A"])(e, l(), 1 - l())).shape;
          return wn(Object(r["Mb"])(n, i[i.length - 1]).reshape(i), e, !1);
        });
      }
      function xn(t, e) {
        if (!r["Qc"].arraysEqual(t.shape, e.shape))
          throw new _(
            "logits and labels must have the same shape, but got shapes " +
              JSON.stringify(t.shape) +
              " and " +
              JSON.stringify(e.shape)
          );
        return Object(r["Jc"])(function() {
          var n = e.relu(),
            r = e.abs().neg();
          return n.sub(e.mul(t)).add(r.exp().log1p());
        });
      }
      function En(t, e) {
        return Object(r["Jc"])(function() {
          var n;
          return (
            (n = Object(r["A"])(e, l(), 1 - l())),
            (n = Object(r["rb"])(Object(r["Q"])(n, Object(r["Dc"])(g(1), n)))),
            Object(r["Bb"])(xn(t, n), -1)
          );
        });
      }
      function Sn(t, e) {
        return Object(r["Jc"])(function() {
          var n = Object(r["A"])(t, l(), 1),
            i = Object(r["A"])(e, l(), 1);
          return Object(
            r["Ec"]
          )(Object(r["Hb"])(t, Object(r["rb"])(Object(r["Q"])(n, i))), -1);
        });
      }
      function Nn(t, e) {
        return Object(r["Jc"])(function() {
          var n = Object(r["rb"])(Object(r["g"])(g(l()), e));
          return Object(r["Bb"])(Object(r["Dc"])(e, Object(r["Hb"])(t, n)), -1);
        });
      }
      function On(t, e) {
        return Object(r["Jc"])(function() {
          var n = fn(t, -1),
            i = fn(e, -1),
            a = Object(r["Hb"])(n, i);
          return Object(r["Jb"])(Object(r["Ec"])(a, -1));
        });
      }
      function In(t) {
        var e = {
          meanSquaredError: hn,
          meanAbsoluteError: pn,
          meanAbsolutePercentageError: dn,
          meanSquaredLogarithmicError: mn,
          squaredHinge: vn,
          hinge: yn,
          categoricalHinge: gn,
          logcosh: bn,
          categoricalCrossentropy: wn,
          sparseCategoricalCrossentropy: _n,
          binaryCrossentropy: En,
          kullbackLeiblerDivergence: Sn,
          poisson: Nn,
          cosineProximity: On
        };
        if ("string" == typeof t) {
          if (t in e) return e[t];
          var n = "Unknown loss " + t;
          throw (t.toLowerCase().includes("softmaxcrossentropy") &&
            (n =
              "Unknown loss " +
              t +
              '. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),
          new _(n));
        }
        return t;
      }
      function Cn(t, e) {
        return Object(r["Jc"])(function() {
          var n = Object(r["Hb"])(g(0.5), Object(r["Ob"])(e)),
            i = St(Object(r["eb"])(e, n), t.dtype);
          return Object(r["Bb"])(Object(r["S"])(t, i), -1);
        });
      }
      function An(t, e) {
        return Object(r["Jc"])(function() {
          return St(
            Object(r["S"])(Object(r["k"])(t, -1), Object(r["k"])(e, -1)),
            "float32"
          );
        });
      }
      function kn(t, e) {
        return Object(r["Jc"])(function() {
          var n = g(1);
          return Object(r["ub"])(t.equal(n), e.equal(n))
            .sum()
            .cast("float32");
        });
      }
      function Pn(t, e) {
        return Object(r["Jc"])(function() {
          var n = g(1),
            i = g(0);
          return Object(r["ub"])(t.equal(n), e.equal(i))
            .sum()
            .cast("float32");
        });
      }
      function Tn(t, e) {
        return Object(r["Jc"])(function() {
          var n = g(1),
            i = g(0);
          return Object(r["ub"])(t.equal(i), e.equal(n))
            .sum()
            .cast("float32");
        });
      }
      function Rn(t, e) {
        return Object(r["Jc"])(function() {
          var n = g(0),
            i = kn(t, e),
            a = Tn(t, e),
            o = i.add(a);
          return Object(r["Tc"])(Object(r["eb"])(o, n), i.div(o), n).cast(
            "float32"
          );
        });
      }
      function Dn(t, e) {
        return Object(r["Jc"])(function() {
          var n = g(0),
            i = kn(t, e),
            a = Pn(t, e),
            o = i.add(a);
          return Object(r["Tc"])(Object(r["eb"])(o, n), i.div(o), n).cast(
            "float32"
          );
        });
      }
      function Mn(t, e) {
        return En(t, e);
      }
      function jn(t, e) {
        return (
          t.rank === e.rank && (t = t.squeeze([t.rank - 1])),
          (e = e.argMax(-1)).dtype !== t.dtype && (e = e.asType(t.dtype)),
          Object(r["S"])(t, e).asType("float32")
        );
      }
      var Ln = hn,
        Bn = hn,
        Fn = pn,
        zn = pn,
        Un = dn,
        Vn = dn,
        Wn = wn,
        $n = On,
        qn = _n;
      function Hn(t) {
        var e = {
          binaryAccuracy: Cn,
          categoricalAccuracy: An,
          precision: Rn,
          categoricalCrossentropy: Wn,
          sparseCategoricalCrossentropy: qn,
          mse: Ln,
          MSE: Bn,
          mae: Fn,
          MAE: zn,
          mape: Un,
          MAPE: Vn,
          cosine: $n
        };
        if ("string" == typeof t && t in e) return e[t];
        if ("string" != typeof t && null != t) return t;
        throw new _("Unknown metric " + t);
      }
      function Kn(t) {
        var e = {
          Adagrad: function() {
            return r["Mc"].adagrad(0.01);
          },
          Adadelta: function() {
            return r["Mc"].adadelta(1, 0.95, l());
          },
          Adam: function() {
            return r["Mc"].adam(0.001, 0.9, 0.999, l());
          },
          Adamax: function() {
            return r["Mc"].adamax(0.002, 0.9, 0.999, l(), 0);
          },
          RMSProp: function() {
            return r["Mc"].rmsprop(0.001, 0.9, 0, l());
          },
          SGD: function() {
            return r["Mc"].sgd(0.01);
          }
        };
        if (
          ((e.adagrad = e.Adagrad),
          (e.adadelta = e.Adadelta),
          (e.adam = e.Adam),
          (e.adamax = e.Adamax),
          (e.rmsprop = e.RMSProp),
          (e.sgd = e.SGD),
          t in e)
        )
          return e[t]();
        throw new _("Unknown Optimizer " + t);
      }
      function Gn(t, e, n, r) {
        void 0 === r && (r = console.log);
        var i,
          a = Jn(t),
          o = ["Layer (type)", "Output shape", "Param #"];
        if (
          (a
            ? ((e = e || 65), (n = n || [0.45, 0.85, 1]))
            : ((e = e || 98), (n = n || [0.33, 0.55, 0.67, 1])),
          n[n.length - 1] <= 1 &&
            (n = n.map(function(t) {
              return Math.floor(e * t);
            })),
          !a)
        )
          for (var s in (o.push("Receives inputs"), (i = []), t.nodesByDepth))
            i.push.apply(i, t.nodesByDepth[s]);
        r("_".repeat(e)), Yn(o, n, r), r("=".repeat(e));
        for (var u = t.layers, c = 0; c < u.length; ++c)
          a ? Qn(u[c], n, r) : Zn(u[c], n, i, r),
            r((c === u.length - 1 ? "=" : "_").repeat(e));
        t.checkTrainableWeightsConsistency();
        var l = Xn(t),
          f = Me(t.nonTrainableWeights);
        r("Total params: " + (l + f)),
          r("Trainable params: " + l),
          r("Non-trainable params: " + f),
          r("_".repeat(e));
      }
      function Xn(t) {
        return null != t.collectedTrainableWeights
          ? Me(t.collectedTrainableWeights)
          : Me(t.trainableWeights);
      }
      function Jn(t) {
        var e = !0,
          n = [],
          r = [];
        for (var i in t.nodesByDepth) n.push(t.nodesByDepth[i]);
        for (var a = 0, o = n; a < o.length; a++) {
          var s = o[a];
          if (
            s.length > 1 ||
            (1 === s.length && s[0].inboundLayers.length > 1)
          ) {
            e = !1;
            break;
          }
          r.push.apply(r, s);
        }
        if (e)
          for (var u = 0, c = t.layers; u < c.length; u++) {
            for (var l = !1, f = 0, h = c[u].inboundNodes; f < h.length; f++) {
              var p = h[f];
              if (-1 !== r.indexOf(p)) {
                if (l) {
                  e = !1;
                  break;
                }
                l = !0;
              }
            }
            if (!e) break;
          }
        return e;
      }
      function Yn(t, e, n) {
        void 0 === n && (n = console.log);
        for (var r = "", i = 0; i < t.length; ++i)
          i > 0 && (r = r.slice(0, r.length - 1) + " "),
            (r = (r += t[i]).slice(0, e[i])),
            (r += " ".repeat(e[i] - r.length));
        n(r);
      }
      function Qn(t, e, n) {
        var r;
        try {
          r = JSON.stringify(t.outputShape);
        } catch (t) {
          r = "multiple";
        }
        Yn(
          [
            t.name + " (" + t.getClassName() + ")",
            r,
            t.countParams().toString()
          ],
          e,
          n
        );
      }
      function Zn(t, e, n, r) {
        var i;
        try {
          i = JSON.stringify(t.outputShape);
        } catch (t) {
          i = "multiple";
        }
        for (var a = [], o = 0, s = t.inboundNodes; o < s.length; o++) {
          var u = s[o];
          if (!(null != n && n.length > 0 && -1 === n.indexOf(u)))
            for (var c = 0; c < u.inboundLayers.length; ++c) {
              var l = u.inboundLayers[c].name,
                f = u.nodeIndices[c],
                h = u.tensorIndices[c];
              a.push(l + "[" + f + "][" + h + "]");
            }
        }
        var p = t.name,
          d = t.getClassName(),
          m = 0 === a.length ? "" : a[0];
        for (
          Yn([p + " (" + d + ")", i, t.countParams().toString(), m], e, r),
            c = 1;
          c < a.length;
          ++c
        )
          Yn(["", "", "", a[c]], e, r);
      }
      function tr(t, e, n) {
        return (
          void 0 === e && (e = {}),
          void 0 === n && (n = !1),
          D(t, r["gc"].SerializationMap.getMap().classNameMap, e, "layer", n)
        );
      }
      function er(t, e, n) {
        return (
          ("inboundNodes" === t ||
            "outputLayers" === t ||
            "inputLayers" === t) &&
          0 === e &&
          "string" == typeof n
        );
      }
      function nr(t, e) {
        if (null === t) return null;
        if ("string" == typeof t) return k(t);
        if ("number" == typeof t || "boolean" == typeof t) return t;
        if (t instanceof Array) {
          for (var n = [], r = t.length, i = 0; i < r; ++i) {
            var a = t[i];
            er(e, i, a) ? n.push(a) : n.push(nr(a, e));
          }
          return n;
        }
        for (var o = {}, s = 0, u = Object.keys(t); s < u.length; s++) {
          var c = u[s],
            l = t[c];
          if ("name" === c && "string" == typeof l) o[c] = l;
          else {
            var f = k(c);
            o[f] = nr(l, f);
          }
        }
        return o;
      }
      function rr(t, e) {
        if (null === t || void 0 === t) return null;
        if ("string" == typeof t) return A(t);
        if ("number" == typeof t || "boolean" == typeof t) return t;
        if (t instanceof Array) {
          for (var n = [], r = t.length, i = 0; i < r; ++i) {
            var a = t[i];
            er(e, i, a) ? n.push(a) : n.push(rr(a, e));
          }
          return n;
        }
        for (var o = {}, s = 0, u = Object.keys(t); s < u.length; s++) {
          var c = u[s],
            l = t[c],
            f = A(c);
          o[f] =
            ("name" !== c && "className" !== c) || "string" != typeof l
              ? rr(l, c)
              : l;
        }
        return o;
      }
      var ir = "0.10.3";
      function ar(t, e) {
        if (null == t.dtype || t.dtype === e.dtype) return e;
        try {
          return Object(r["y"])(e, t.dtype);
        } catch (n) {
          throw new _(
            "The dtype of the feed (" +
              e.dtype +
              ") can not be cast to the dtype of the key '" +
              t.name +
              "' (" +
              t.dtype +
              ")."
          );
        }
      }
      var or = (function() {
          function t(e) {
            if (
              ((this.id2Value = {}),
              (this.id2Mask = {}),
              (this.name2Id = {}),
              e instanceof t)
            )
              for (var n in e.id2Value)
                (this.id2Value[n] = e.id2Value[n]),
                  n in e.id2Mask && (this.id2Mask[n] = e.id2Mask[n]);
            else {
              if (null == e) return;
              for (var r = 0, i = e; r < i.length; r++) {
                var a = i[r];
                this.add(a.key, a.value);
              }
            }
          }
          return (
            (t.prototype.add = function(t, e, n) {
              if (null != this.id2Value[t.id])
                throw new _("Duplicate key: name=" + t.name + ", id=" + t.id);
              return (
                (this.id2Value[t.id] = ar(t, e)),
                (this.name2Id[t.name] = t.id),
                null != n && (this.id2Mask[t.id] = n),
                this
              );
            }),
            (t.prototype.addFeed = function(t) {
              this.add(t.key, t.value);
            }),
            (t.prototype.hasKey = function(t) {
              return null != this.id2Value[t.id];
            }),
            (t.prototype.names = function() {
              return Object.keys(this.name2Id);
            }),
            (t.prototype.getValue = function(t) {
              if (t instanceof Ve) {
                if (null == this.id2Value[t.id])
                  throw new _("Nonexistent key: " + t.name);
                return this.id2Value[t.id];
              }
              var e = this.name2Id[t];
              if (null == e)
                throw new _("Feed dict has no SymbolicTensor name: " + t);
              return this.id2Value[e];
            }),
            (t.prototype.getMask = function(t) {
              if (t instanceof Ve) {
                if (null == this.id2Value[t.id])
                  throw new _("Nonexistent key: " + t.name);
                return this.id2Mask[t.id];
              }
              var e = this.name2Id[t];
              if (null == e)
                throw new _("Feed dict has no SymbolicTensor name: " + t);
              return this.id2Mask[e];
            }),
            (t.prototype.disposeMasks = function() {
              null != this.id2Mask && Object(r["P"])(this.id2Mask);
            }),
            t
          );
        })(),
        sr = {},
        ur = {};
      function cr(t, e, n, i) {
        for (
          var a = null != n && n.training,
            o = Array.isArray(t),
            s = o ? t : [t],
            u = s.map(function(t) {
              return t.name;
            }),
            c = [],
            l = e.names(),
            f = 0,
            h = u;
          f < h.length;
          f++
        ) {
          var p = h[f];
          -1 !== l.indexOf(p) ? c.push(e.getValue(p)) : c.push(null);
        }
        null != i && ((i.maxNumTensors = -1 / 0), (i.minNumTensors = 1 / 0));
        var d,
          m,
          v = u.join(",") + "|" + e.names().join(",");
        if (null == sr[v]) {
          var y = lr(s, e);
          (d = y.sorted), (m = y.recipientCounts), (sr[v] = d), (ur[v] = m);
        }
        (d = sr[v]), (m = {}), a || Object.assign(m, ur[v]);
        for (var g = new or(e), b = 0; b < d.length; ++b) {
          if (null != i) {
            var w = Object(r["Cb"])().numTensors;
            w > i.maxNumTensors && (i.maxNumTensors = w),
              w < i.minNumTensors && (i.minNumTensors = w);
          }
          var _ = d[b],
            x = _.sourceLayer;
          if (!(x instanceof Ye)) {
            for (
              var E = [], S = [], N = [], O = !1, I = 0, A = _.inputs;
              I < A.length;
              I++
            ) {
              var k = A[I],
                P = g.getValue(k),
                T = g.getMask(k);
              E.push(P),
                S.push(T),
                null != T && (O = !0),
                a ||
                  (m[k.name]--,
                  0 !== m[k.name] ||
                    e.hasKey(k) ||
                    -1 !== u.indexOf(k.name) ||
                    P.isDisposed ||
                    N.push(P));
            }
            O && ((n = n || {}).mask = S[0]);
            var R = C(x.apply(E, n)),
              D = null;
            x.supportsMasking && (D = x.computeMask(E, S));
            for (
              var M = pr(_), j = Array.isArray(M) ? M : [M], L = 0;
              L < j.length;
              ++L
            ) {
              g.hasKey(j[L]) || g.add(j[L], R[L], Array.isArray(D) ? D[0] : D);
              var B = u.indexOf(j[L].name);
              -1 !== B && (c[B] = R[L]);
            }
            a || Object(r["P"])(N);
          }
        }
        return g.disposeMasks(), o ? c : c[0];
      }
      function lr(t, e) {
        r["Qc"].assert(
          null != t && t.length > 0,
          "Exepcted at least one fetch, got none"
        );
        var n = [],
          i = {};
        if (1 === t.length) {
          var a = hr(t[0], e);
          (n = a.sorted), (i = a.recipientMap);
        } else
          for (var o = new Set(), s = 0, u = t; s < u.length; s++) {
            for (
              var c = hr(u[s], e),
                l = c.sorted,
                f = c.recipientMap,
                h = 0,
                p = l;
              h < p.length;
              h++
            ) {
              var d = p[h];
              o.has(d.name) || (n.push(d), o.add(d.name));
            }
            var m = function(t) {
              null == i[t] && (i[t] = new Set()),
                f[t].forEach(function(e) {
                  return i[t].add(e);
                });
            };
            for (var v in f) m(v);
          }
        return { sorted: n, recipientCounts: fr(i) };
      }
      function fr(t) {
        var e = {};
        for (var n in t) e[n] = t[n].size;
        return e;
      }
      function hr(t, e) {
        for (
          var n = new Set(), r = [], i = {}, a = 0, o = e.names();
          a < o.length;
          a++
        ) {
          var s = o[a];
          n.add(s);
        }
        var u = [],
          c = [];
        for (u.push(t); u.length > 0; ) {
          var l = u[u.length - 1];
          if (n.has(l.name)) u.pop();
          else {
            var f = c[c.length - 1] === u.length - 1;
            if (0 === l.inputs.length || f)
              u.pop(), r.push(l), n.add(l.name), f && c.pop();
            else {
              c.push(u.length - 1);
              for (var h = 0, p = l.inputs; h < p.length; h++) {
                var d = p[h];
                null == i[d.name] && (i[d.name] = new Set()),
                  i[d.name].add(l.name),
                  n.has(d.name) || u.push(d);
              }
            }
          }
        }
        return { sorted: r, recipientMap: i };
      }
      function pr(t) {
        var e;
        if (1 === t.sourceLayer.inboundNodes.length) e = t.sourceLayer.output;
        else {
          for (var n = null, r = 0; r < t.sourceLayer.inboundNodes.length; ++r)
            for (
              var i = 0, a = t.sourceLayer.inboundNodes[r].outputTensors;
              i < a.length;
              i++
            )
              if (a[i].id === t.id) {
                n = r;
                break;
              }
          e = t.sourceLayer.getOutputAt(n);
        }
        return e;
      }
      function dr(t, e, n, r) {
        if (!n.startsWith("2."))
          throw new _(
            "Unsupported Keras version in weights being loaded: " + n
          );
        return e;
      }
      function mr(t, e, n) {
        var i = L(t);
        return r["c"].make(
          e,
          { values: 0 === e.length ? n : r["Qc"].flatten(n) },
          i
        );
      }
      function vr(t, e, n) {
        void 0 === n && (n = !1);
        for (
          var i = t.keras_version,
            a = t.backend,
            o = e.map(function(t) {
              return t.name;
            }),
            s = {},
            u = 0,
            c = e;
          u < c.length;
          u++
        )
          null != (w = c[u]).name &&
            (null == s[w.name] && (s[w.name] = []), s[w.name].push(w));
        for (var l = t.weights, f = [], h = 0; h < o.length; ++h) {
          var p = o[h],
            d = l[p];
          null == d && (d = []);
          for (var m = [], v = 0; v < d.length; ++v) {
            var y = d[v];
            m.push(new Le(mr(y.dtype, y.shape, y.value)));
          }
          for (var g = 0, b = s[p]; g < b.length; g++) {
            var w,
              x = (w = b[g]).weights;
            if ((m = dr(w, m, i, a)).length !== x.length) {
              if (!n)
                throw new _(
                  "Layer #" +
                    h +
                    ' (named "' +
                    w.name +
                    '") expects ' +
                    x.length +
                    " weight(s), but the saved weights have " +
                    m.length +
                    " element(s)."
                );
              console.warn(
                "Skipping loading of weights of layer " +
                  w.name +
                  " due to mismatch in number of weights: (" +
                  m.length +
                  " vs " +
                  x.length +
                  ")."
              );
            }
            for (var E = 0; E < m.length; ++E)
              !n || r["Qc"].arraysEqual(x[E].shape, m[E].shape)
                ? f.push([x[E], m[E].read()])
                : console.warn(
                    "Skipping loading of weights for layer " +
                      w.name +
                      " due to mismatch in shape (" +
                      x[E].shape +
                      " vs " +
                      m[E].shape +
                      ")"
                  );
          }
        }
        ze(f);
      }
      function yr(t, e, n) {
        void 0 === n && (n = !0);
        for (var r = {}, i = 0, a = 0, o = e; a < o.length; a++)
          for (var s = 0, u = o[a].weights; s < u.length; s++) {
            var c = u[s];
            if (null != r[c.originalName])
              throw new _("Duplicate weight name: " + c.originalName);
            (r[c.originalName] = c), i++;
          }
        var l = [];
        for (var f in t) {
          if (null != r[f]) l.push([r[f], t[f]]);
          else if (n)
            throw new _("Provided weight data has no target variable: " + f);
          delete r[f];
        }
        if (n) {
          var h = [];
          for (var p in r) h.push(p);
          if (h.length > 0)
            throw new _(h.length + " of " + i + " weights are not set: " + h);
        }
        ze(l);
      }
      var gr = (function(t) {
          function e(n) {
            var r = t.call(this, {}) || this;
            if (
              ((r.containerNodes = new Set()),
              (r.name = n.name),
              null == r.name)
            ) {
              var i = r.getClassName().toLowerCase();
              r.name = m(i);
            }
            if (
              ((r.supportsMasking = !1),
              (r.trainable = !0),
              (r.updatable = !0),
              Array.isArray(n.inputs)
                ? (r.inputs = n.inputs.slice())
                : (r.inputs = [n.inputs]),
              Array.isArray(n.outputs)
                ? (r.outputs = n.outputs.slice())
                : (r.outputs = [n.outputs]),
              B(r.inputs).length !== r.inputs.length)
            )
              throw new _(
                "The list of inputs passed to the model is redundant. All inputs should only appear once. Found: " +
                  r.inputs.map(function(t) {
                    return t.name;
                  })
              );
            B(r.outputs).length !== r.outputs.length &&
              console.warn(
                "The list of outputs passed to the model is redundant. All outputs should only appear once. Found: " +
                  r.outputs.map(function(t) {
                    return t.name;
                  })
              ),
              (r.inputLayers = []),
              (r.inputLayersNodeIndices = []),
              (r.inputLayersTensorIndices = []),
              (r.outputLayers = []),
              (r.outputLayersNodeIndices = []),
              (r.outputLayersTensorIndices = []),
              (r.layers = []);
            for (var a = 0, o = r.outputs; a < o.length; a++) {
              var s = (k = o[a]).sourceLayer,
                u = k.nodeIndex,
                c = k.tensorIndex;
              r.outputLayers.push(s),
                r.outputLayersNodeIndices.push(u),
                r.outputLayersTensorIndices.push(c);
            }
            for (var l = 0, f = r.inputs; l < f.length; l++)
              (s = (k = f[l]).sourceLayer),
                (u = k.nodeIndex),
                (c = k.tensorIndex),
                N(0 === u, "input layer has >1 nodes"),
                N(0 === c, "input layer has >1 tensors"),
                r.inputLayers.push(s),
                r.inputLayersNodeIndices.push(u),
                r.inputLayersTensorIndices.push(c);
            (r.inputNames = []),
              (r.outputNames = []),
              (r.feedInputShapes = []),
              (r.feedInputNames = []),
              (r.feedOutputNames = []);
            for (var h = 0; h < r.inputLayers.length; h++) {
              if (!((s = r.inputLayers[h]) instanceof Ye))
                throw new TypeError(
                  "Input layers to a Model must be InputLayer objects. Received inputs: " +
                    n.inputs +
                    ". Input " +
                    h +
                    " (0-based) originates from layer type " +
                    s.getClassName() +
                    "."
                );
              r.inputNames.push(s.name),
                r.feedInputShapes.push(s.batchInputShape),
                r.feedInputNames.push(s.name);
            }
            for (var p = 0, d = r.outputLayers; p < d.length; p++)
              (s = d[p]), r.outputNames.push(s.name);
            (r.internalInputShapes = r.inputs.map(function(t) {
              return t.shape;
            })),
              (r.internalOutputShapes = r.outputs.map(function(t) {
                return t.shape;
              }));
            for (
              var v = {},
                y = {},
                g = {},
                b = {},
                x = {},
                E = [],
                S = function(t, n, i, a, o, s) {
                  (null != a && null != o && null != s) ||
                    ((a = t.sourceLayer),
                    (o = t.nodeIndex),
                    (s = t.tensorIndex));
                  var u = a.inboundNodes[o];
                  if (-1 !== i.indexOf(u))
                    throw new w(
                      "The tensor " +
                        t.name +
                        ' at layer "' +
                        a.name +
                        '" is part of a cycle.'
                    );
                  if (-1 === n.indexOf(u)) {
                    r.containerNodes.add(e.nodeKey(a, o)),
                      (a.id in x) || (x[a.id] = Object.keys(x).length),
                      -1 === i.indexOf(u) && i.push(u);
                    for (var c = u.inboundLayers.length, l = 0; l < c; l++) {
                      var f = u.inputTensors[l],
                        h = u.inboundLayers[l],
                        p = u.nodeIndices[l],
                        d = u.tensorIndices[l];
                      S(f, n, i, h, p, d);
                    }
                    for (n.push(u); i.indexOf(u) >= 0; )
                      i.splice(i.indexOf(u), 1);
                    E.push(u);
                  }
                },
                O = [],
                I = [],
                C = 0,
                A = r.outputs;
              C < A.length;
              C++
            ) {
              var k = A[C];
              S(k, O, I);
            }
            for (var P = 0, T = E.slice().reverse(); P < T.length; P++) {
              (y[(nt = T[P]).id] = nt), nt.id in v || (v[nt.id] = 0);
              var R = v[nt.id],
                D = null == g[nt.outboundLayer.id] ? 0 : g[nt.outboundLayer.id];
              for (
                R = Math.max(R, D),
                  g[nt.outboundLayer.id] = R,
                  b[nt.outboundLayer.id] = nt.outboundLayer,
                  v[nt.id] = R,
                  h = 0;
                h < nt.inboundLayers.length;
                h++
              ) {
                var M = nt.inboundLayers[h],
                  L = ((u = nt.nodeIndices[h]), M.inboundNodes[u]),
                  F = null == v[L.id] ? 0 : v[L.id];
                (v[L.id] = Math.max(R + 1, F)), (y[L.id] = L);
              }
            }
            var z = {};
            for (var U in v) (R = v[U]) in z || (z[R] = []), z[R].push(y[U]);
            var V = {};
            for (var W in g) (R = g[W]) in V || (V[R] = []), V[R].push(b[W]);
            var $ = Object.keys(V)
              .map(function(t) {
                return parseInt(t, 10);
              })
              .sort(j);
            r.layers = [];
            for (var q = 0, H = $; q < H.length; q++) {
              var K = V[(R = H[q])];
              K.sort(function(t, e) {
                var n = x[t.id],
                  r = x[e.id];
                return n < r ? -1 : n > r ? 1 : 0;
              });
              for (var G = 0, X = K; G < X.length; G++)
                (s = X[G]), r.layers.push(s);
            }
            (r.layersByDepth = V),
              ($ = Object.keys(z)
                .map(function(t) {
                  return parseInt(t, 10);
                })
                .sort(j));
            for (
              var J = r.inputs.slice(), Y = [], Q = 0, Z = $;
              Q < Z.length;
              Q++
            )
              for (var tt = 0, et = z[(R = Z[Q])]; tt < et.length; tt++) {
                var nt;
                if (null != (s = (nt = et[tt]).outboundLayer)) {
                  for (var rt = 0, it = nt.inputTensors; rt < it.length; rt++)
                    if (((k = it[rt]), -1 === J.indexOf(k)))
                      throw new w(
                        "Graph disconnected: cannot obtain value for tensor " +
                          k +
                          ' at layer "' +
                          s.name +
                          '". The following previous layers were accessed without issue: ' +
                          Y
                      );
                  for (var at = 0, ot = nt.outputTensors; at < ot.length; at++)
                    (k = ot[at]), J.push(k);
                  Y.push(s.name);
                }
              }
            r.nodesByDepth = z;
            for (
              var st = r.layers.map(function(t) {
                  return t.name;
                }),
                ut = function(t) {
                  var e = st.filter(function(e) {
                    return e === t;
                  }).length;
                  if (1 !== e)
                    throw new w(
                      'The name "' +
                        t +
                        '" is used ' +
                        e +
                        " times in the model. All layer names should be unique. Layer names: " +
                        JSON.stringify(st)
                    );
                },
                ct = 0,
                lt = st;
              ct < lt.length;
              ct++
            )
              ut(lt[ct]);
            return (
              (r.outboundNodes = []),
              (r.inboundNodes = []),
              new $e({
                outboundLayer: r,
                inboundLayers: [],
                nodeIndices: [],
                tensorIndices: [],
                inputTensors: r.inputs,
                outputTensors: r.outputs,
                inputMasks: r.inputs.map(function(t) {
                  return null;
                }),
                outputMasks: r.outputs.map(function(t) {
                  return null;
                }),
                inputShapes: r.inputs.map(function(t) {
                  return t.shape;
                }),
                outputShapes: r.outputs.map(function(t) {
                  return t.shape;
                })
              }),
              (r.built = !0),
              (r._refCount = 1),
              r
            );
          }
          return (
            a(e, t),
            (e.prototype.assertNotDisposed = function() {
              if (0 === this._refCount)
                throw new Error(
                  "Container '" + this.name + "' is already disposed."
                );
            }),
            (e.prototype.dispose = function() {
              this.assertNotDisposed();
              var t = { refCountAfterDispose: null, numDisposedVariables: 0 };
              if (0 == --this._refCount)
                for (var e = 0, n = this.layers; e < n.length; e++) {
                  var r = n[e];
                  t.numDisposedVariables += r.dispose().numDisposedVariables;
                }
              return (t.refCountAfterDispose = this._refCount), t;
            }),
            Object.defineProperty(e.prototype, "trainableWeights", {
              get: function() {
                if (this._trainableWeights.length > 0)
                  throw new _(
                    "Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array."
                  );
                if (!this.trainable) return [];
                for (var t = [], e = 0, n = this.layers; e < n.length; e++) {
                  var r = n[e];
                  t = t.concat(r.trainableWeights);
                }
                return t;
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(e.prototype, "nonTrainableWeights", {
              get: function() {
                for (var t = [], e = 0, n = this.layers; e < n.length; e++) {
                  var r = n[e];
                  t.push.apply(t, r.nonTrainableWeights);
                }
                if (!this.trainable) {
                  for (var i = [], a = 0, o = this.layers; a < o.length; a++)
                    (r = o[a]), i.push.apply(i, r.trainableWeights);
                  return i.concat(t);
                }
                return t;
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(e.prototype, "weights", {
              get: function() {
                return this.trainableWeights.concat(this.nonTrainableWeights);
              },
              enumerable: !0,
              configurable: !0
            }),
            (e.prototype.loadWeights = function(t, e, n, r) {
              void 0 === e && (e = !1),
                void 0 === n && (n = !1),
                void 0 === r && (r = !0),
                n ? yr(t, this.layers, r) : vr(t, this.layers, e);
            }),
            (e.prototype.updatedConfig = function() {
              var t = this.getConfig();
              return {
                className: this.getClassName(),
                config: t,
                kerasVersion: "tfjs-layers " + ir,
                backend: "TensorFlow.js"
              };
            }),
            (e.prototype.toJSON = function(t, e) {
              void 0 === e && (e = !0);
              var n = rr(this.updatedConfig());
              return e ? JSON.stringify(n) : n;
            }),
            (e.prototype.call = function(t, e) {
              var n = this;
              return Object(r["Jc"])(function() {
                t = C(t);
                for (var r = new or(), i = 0; i < n.inputs.length; ++i)
                  r.add(n.inputs[i], t[i]);
                return cr(n.outputs, r, e);
              });
            }),
            (e.prototype.computeMask = function(t, e) {
              var n = this;
              return Object(r["Jc"])(function() {
                var r;
                return (
                  (t = C(t)),
                  (r = null == e ? S(null, t.length) : C(e)),
                  n.runInternalGraph(t, r)[1]
                );
              });
            }),
            (e.prototype.computeOutputShape = function(t) {
              var e = Te(t);
              if (e.length !== this.inputLayers.length)
                throw new _(
                  "Invalid inputShape argument " +
                    t +
                    ": model has " +
                    this.inputLayers.length +
                    " tensor inputs."
                );
              for (var n = {}, r = 0; r < e.length; r++) {
                var i = this.inputLayers[r],
                  a = e[r];
                n[(S = i.name + "_0_0")] = a;
              }
              var o = Object.keys(this.nodesByDepth)
                .map(function(t) {
                  return parseInt(t, 10);
                })
                .sort(j);
              if (o.length > 1)
                for (var s = 0, u = o; s < u.length; s++)
                  for (
                    var c = u[s], l = 0, f = this.nodesByDepth[c];
                    l < f.length;
                    l++
                  ) {
                    var h = f[l];
                    if (
                      ((i = h.outboundLayer),
                      -1 ===
                        this.inputLayers
                          .map(function(t) {
                            return t.id;
                          })
                          .indexOf(i.id))
                    ) {
                      for (var p = [], d = 0; d < h.inboundLayers.length; d++) {
                        var m = h.inboundLayers[d],
                          v = h.nodeIndices[d],
                          y = h.tensorIndices[d],
                          g = n[(S = m.name + "_" + v + "_" + y)];
                        p.push(g);
                      }
                      var b = Te(i.computeOutputShape(I(p))),
                        w = i.inboundNodes.indexOf(h);
                      for (d = 0; d < b.length; d++)
                        n[(S = i.name + "_" + w + "_" + d)] = b[d];
                    }
                  }
              var x = [],
                E = [];
              for (r = 0; r < this.outputLayers.length; r++) {
                (i = this.outputLayers[r]),
                  (w = this.outputLayersNodeIndices[r]),
                  (y = this.outputLayersTensorIndices[r]);
                var S = i.name + "_" + w + "_" + y;
                E.push(S);
              }
              for (r = 0; r < E.length; r++) {
                var O = E[r];
                N(O in n), x.push(n[O]);
              }
              return I(x);
            }),
            (e.prototype.runInternalGraph = function(t, e) {
              null == e && (e = S(null, t.length));
              for (var n = {}, r = 0; r < this.inputs.length; ++r) {
                var i = this.inputs[r],
                  a = t[r],
                  o = e[r];
                n[i.id] = [a, o];
              }
              for (
                var s = 0,
                  u = Object.keys(this.nodesByDepth)
                    .map(function(t) {
                      return parseInt(t, 10);
                    })
                    .sort(j);
                s < u.length;
                s++
              )
                for (
                  var c = u[s], l = 0, f = this.nodesByDepth[c];
                  l < f.length;
                  l++
                ) {
                  for (
                    var h = f[l],
                      p = h.outboundLayer,
                      d = h.inputTensors,
                      m = h.outputTensors,
                      v = new Array(),
                      y = 0,
                      g = d;
                    y < g.length;
                    y++
                  )
                    (i = g[y]).id in n && v.push(n[i.id]);
                  if (v.length === d.length) {
                    var b = {},
                      w = void 0,
                      _ = void 0,
                      E = void 0,
                      O = void 0;
                    if (
                      (null != h.callArgs && (b = h.callArgs), 1 === v.length)
                    ) {
                      var I = v[0],
                        A = I[0],
                        k = I[1];
                      null == b.mask && (b.mask = k),
                        (E = C(p.call(A, b))),
                        (O = C(p.computeMask(A, k))),
                        (w = [A]),
                        (_ = [k]);
                    } else
                      (w = v.map(function(t) {
                        return t[0];
                      })),
                        (_ = v.map(function(t) {
                          return t[1];
                        })),
                        null == b.mask && (b.mask = _),
                        (E = C(p.call(w, b))),
                        (O = C(p.computeMask(w, _)));
                    if (p.activityRegularizer)
                      throw new x(
                        "Model invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet."
                      );
                    for (r = 0; r < m.length; ++r)
                      (i = m[r]), (a = E[r]), (o = O[r]), (n[i.id] = [a, o]);
                  }
                }
              for (
                var P = [], T = [], R = [], D = 0, M = this.outputs;
                D < M.length;
                D++
              ) {
                N(
                  (i = M[D]).id in n,
                  "Could not compute output " + i.name + " : " + i.id
                );
                var L = n[i.id],
                  B = L[0];
                (o = L[1]), R.push(B.shape), P.push(B), T.push(o);
              }
              return [P, T, R];
            }),
            (e.prototype.buildNodeConversionMap = function(t) {
              for (var n, r = {}, i = 0, a = this.layers; i < a.length; i++) {
                var o = a[i];
                n = o instanceof e ? 1 : 0;
                for (var s = 0; s < o.inboundNodes.length; s++) {
                  var u = e.nodeKey(o, s);
                  this.containerNodes.has(u) && ((r[u] = n), (n += 1));
                }
              }
              return r;
            }),
            (e.prototype.getLayer = function(t, e) {
              if (null != e) {
                if (this.layers.length <= e)
                  throw new _(
                    "Was asked to retrieve layer at index " +
                      e +
                      ", but model only has " +
                      this.layers.length +
                      " layer(s)."
                  );
                return this.layers[e];
              }
              if (null == t)
                throw new _("Provide either a layer name or layer index");
              for (var n = 0, r = this.layers; n < r.length; n++) {
                var i = r[n];
                if (i.name === t) return i;
              }
              throw new _("No such layer: " + t);
            }),
            (e.prototype.calculateLosses = function() {
              var t = this;
              return Object(r["Jc"])(function() {
                for (var n = [], r = 0, i = t.layers; r < i.length; r++)
                  for (var a = i[r], o = 0; o < a.inboundNodes.length; ++o) {
                    var s = e.nodeKey(a, o);
                    t.containerNodes.has(s) &&
                      n.push.apply(n, a.calculateLosses());
                  }
                return n;
              });
            }),
            (e.prototype.getConfig = function() {
              for (
                var t = { name: this.name },
                  n = this.buildNodeConversionMap(this.layers),
                  r = [],
                  i = 0,
                  a = this.layers;
                i < a.length;
                i++
              ) {
                for (
                  var o = (b = a[i]).getClassName(),
                    s = b.getConfig(),
                    u = [],
                    c = 0;
                  c < b.inboundNodes.length;
                  c++
                ) {
                  var l = b.inboundNodes[c],
                    f = e.nodeKey(b, c),
                    h = {};
                  if (this.containerNodes.has(f)) {
                    if (l.callArgs)
                      try {
                        JSON.stringify(l.callArgs), (h = l.callArgs);
                      } catch (t) {
                        console.warn(
                          "Layer " +
                            b.name +
                            " was passed non-serializable keyword arguments: " +
                            l.callArgs +
                            ". They will not be included in the serialized model (and thus will be missing at deserialization time)."
                        ),
                          (h = {});
                      }
                    if (l.inboundLayers.length > 0) {
                      for (var p = [], d = 0; d < l.inboundLayers.length; d++) {
                        var m = l.inboundLayers[d],
                          v = l.nodeIndices[d],
                          y = l.tensorIndices[d];
                        null == (_ = n[e.nodeKey(m, v)]) && (_ = 0),
                          p.push([m.name, _, y, h]);
                      }
                      u.push(p);
                    }
                  }
                }
                r.push({
                  name: b.name,
                  className: o,
                  config: s,
                  inboundNodes: u
                });
              }
              t.layers = r;
              var g = [];
              for (d = 0; d < this.inputLayers.length; d++) {
                var b = this.inputLayers[d];
                (v = this.inputLayersNodeIndices[d]),
                  (f = e.nodeKey(b, v)),
                  this.containerNodes.has(f) &&
                    ((null !== (_ = n[f]) && void 0 !== _) || (_ = 0),
                    (y = this.inputLayersTensorIndices[d]),
                    g.push([b.name, _, y]));
              }
              t.inputLayers = g;
              var w = [];
              for (d = 0; d < this.outputLayers.length; d++) {
                var _;
                if (
                  ((b = this.outputLayers[d]),
                  (v = this.outputLayersNodeIndices[d]),
                  (f = e.nodeKey(b, v)),
                  this.containerNodes.has(f))
                )
                  (null !== (_ = n[f]) && void 0 !== _) || (_ = 0),
                    (y = this.outputLayersTensorIndices[d]),
                    w.push([b.name, _, y]);
              }
              return (t.outputLayers = w), t;
            }),
            (e.fromConfig = function(t, e, n, r) {
              void 0 === n && (n = {}), void 0 === r && (r = !1);
              var i = {},
                a = {};
              function o(t, e) {
                t.name in a ? a[t.name].push(e) : (a[t.name] = [e]);
              }
              function s(t, e) {
                for (var n, r = [], a = 0, s = e; a < s.length; a++) {
                  var u = s[a],
                    c = u[0],
                    l = u[1],
                    f = u[2];
                  if (3 === u.length) n = {};
                  else {
                    if (4 !== u.length)
                      throw new _(
                        "Improperly formatted model config for layer " +
                          JSON.stringify(t) +
                          ": " +
                          JSON.stringify(u)
                      );
                    n = u[3];
                  }
                  if (!(c in i)) return void o(t, e);
                  var h = i[c];
                  if (h.inboundNodes.length <= l) return void o(t, e);
                  var p = h.inboundNodes[l];
                  r.push(p.outputTensors[f]);
                }
                r.length > 0 && t.apply(I(r), n);
              }
              function u(t) {
                var n = t.name,
                  a = tr(t, null != e.customObjects ? e.customObjects : {});
                a.setFastWeightInitDuringBuild(r), (i[n] = a);
                for (var s = 0, u = t.inboundNodes; s < u.length; s++) {
                  var c = u[s];
                  if (!(c instanceof Array))
                    throw new _(
                      "Corrupted configuration, expected array for nodeData: " +
                        c
                    );
                  o(a, c);
                }
              }
              for (
                var c = e.name, l = e.layers, f = 0, h = l;
                f < h.length;
                f++
              )
                u((m = h[f]));
              for (; !F(a); )
                for (var p = 0, d = l; p < d.length; p++) {
                  var m = d[p];
                  if ((T = i[m.name]).name in a) {
                    var v = a[T.name];
                    delete a[T.name];
                    for (var y = 0, g = v; y < g.length; y++) s(T, g[y]);
                  }
                }
              for (
                var b = [], w = [], x = 0, E = e.inputLayers;
                x < E.length;
                x++
              ) {
                var S = (m = E[x])[0],
                  O = m[1],
                  C = m[2];
                N(S in i);
                var A = (T = i[S]).inboundNodes[O].outputTensors;
                b.push(A[C]);
              }
              for (var k = 0, P = e.outputLayers; k < P.length; k++) {
                var T;
                (S = (m = P[k])[0]),
                  (O = m[1]),
                  (C = m[2]),
                  N(S in i),
                  (A = (T = i[S]).inboundNodes[O].outputTensors),
                  w.push(A[C]);
              }
              return new t({ inputs: b, outputs: w, name: c });
            }),
            Object.defineProperty(e.prototype, "stateful", {
              get: function() {
                if (this._stateful)
                  throw new _(
                    "Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false."
                  );
                for (var t = 0, e = this.layers; t < e.length; t++)
                  if (e[t].stateful) return !0;
                return !1;
              },
              enumerable: !0,
              configurable: !0
            }),
            (e.prototype.resetStates = function() {
              var t = this;
              Object(r["Jc"])(function() {
                t.layers.forEach(function(t) {
                  t.stateful && t.resetStates();
                });
              });
            }),
            e
          );
        })(He),
        br = 32;
      function wr(t, e) {
        if (t.outputs.length > 1)
          throw new x(
            "Support for training a model with multiple output tensors with a dataset object is not implemented yet."
          );
        r["Qc"].assert(
          Array.isArray(e) && 2 === e.length,
          "Dataset iterator for fitDataset() is expected to generate an Array of length 2: `[xs, ys]`, but instead generates " +
            e
        );
        var n = e,
          i = n[0],
          a = n[1];
        if (i instanceof r["c"])
          return (
            r["Qc"].assert(
              1 === t.inputs.length,
              "Model has multiple " +
                t.inputs.length +
                " inputs, hence it expects the input dataset to generate a dictionary of tensors  (with keys " +
                JSON.stringify(t.inputNames) +
                ", but received a single tensor."
            ),
            r["Qc"].assert(
              i.shape[0] === a.shape[0],
              "Mismatch in batch size between x and y tensors (" +
                i.shape[0] +
                " vs. " +
                a.shape[0] +
                ")"
            ),
            [i, a]
          );
        var o = void 0;
        i = i;
        for (var s = [], u = 0, c = t.inputNames; u < c.length; u++) {
          var l = c[u];
          if (null == i[l])
            throw new _(
              "The feature data generated by the dataset lacks the required input key '" +
                l +
                "'."
            );
          s.push(i[l]),
            null == o
              ? (o = i[l].shape[0])
              : r["Qc"].assert(
                  i[l].shape[0] === o,
                  "Mismatch in batch size between x and y tensors (" +
                    i[l].shape[0] +
                    " vs. " +
                    a.shape[0] +
                    ")"
                );
        }
        return s.concat(a);
      }
      function _r(t) {
        if (3 === t.length)
          throw new x("Validation with sample weights is not implemented yet.");
        return { xs: t[0], ys: t[1] };
      }
      function xr(t, e, n) {
        return u(this, void 0, void 0, function() {
          var i,
            a,
            o,
            s,
            u,
            l,
            f,
            h,
            p,
            d,
            m,
            v,
            y,
            g,
            b,
            w,
            _,
            x,
            E,
            S,
            N,
            O,
            I,
            A,
            k,
            P,
            T;
          return c(this, function(c) {
            switch (c.label) {
              case 0:
                if (
                  ((i = null != n.batchesPerEpoch),
                  r["Qc"].assert(
                    null != t.optimizer,
                    "You must compile a model before training/testing. Use Model.compile(modelCompileConfig)."
                  ),
                  r["Qc"].assert(
                    null != n,
                    "For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."
                  ),
                  r["Qc"].assert(
                    null != n.epochs &&
                      n.epochs > 0 &&
                      Number.isInteger(n.epochs),
                    "For fitDataset(), config.epochs is expected to be a positive integer, but got " +
                      n.epochs
                  ),
                  r["Qc"].assert(
                    !i ||
                      (n.batchesPerEpoch > 0 &&
                        Number.isInteger(n.batchesPerEpoch)),
                    "For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got " +
                      n.batchesPerEpoch
                  ),
                  r["Qc"].assert(
                    null == n.validationSplit,
                    "`validationSplit` is not supported by `fitDataset()`. Use validationData instead."
                  ),
                  t.isTraining)
                )
                  throw new Error(
                    "Cannot start training because another fit() call is ongoing."
                  );
                (t.isTraining = !0), (c.label = 1);
              case 1:
                return (
                  c.trys.push([1, , 22, 23]),
                  (a = null != n.validationData),
                  (o = void 0),
                  (s = void 0),
                  a &&
                    (Sr(n.validationData)
                      ? r["Qc"].assert(
                          null == n.validationBatches ||
                            (n.validationBatches > 0 &&
                              Number.isInteger(n.validationBatches)),
                          "For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got " +
                            n.validationBatches
                        )
                      : ((u = _r(n.validationData)), (o = u.xs), (s = u.ys))),
                  (l = t.makeTrainFunction()),
                  (f = t.getDedupedMetricsNames()),
                  (h = void 0),
                  (h = a
                    ? f.slice().concat(
                        f.map(function(t) {
                          return "val_" + t;
                        })
                      )
                    : f.slice()),
                  (p = un(n.callbacks)),
                  (d = null == n.verbose ? 1 : n.verbose),
                  (m = ln(
                    p,
                    n.yieldEvery,
                    d,
                    n.epochs,
                    null,
                    null,
                    Er(e, n),
                    null,
                    a,
                    h
                  )),
                  (v = m.callbackList),
                  (y = m.history),
                  v.setModel(t),
                  (t.history = y),
                  [4, v.onTrainBegin()]
                );
              case 2:
                return (
                  c.sent(),
                  (t.stopTraining_ = !1),
                  (g = null == n.initialEpoch ? 0 : n.initialEpoch),
                  [4, e.iterator()]
                );
              case 3:
                (b = c.sent()), (c.label = 4);
              case 4:
                return g < n.epochs
                  ? ((w = {}), [4, v.onEpochBegin(g)])
                  : [3, 19];
              case 5:
                return (
                  c.sent(), (_ = 0), (x = 0), i ? [3, 7] : [4, e.iterator()]
                );
              case 6:
                (b = c.sent()), (c.label = 7);
              case 7:
                return !i || _ < n.batchesPerEpoch ? [4, b.next()] : [3, 17];
              case 8:
                return (
                  (E = c.sent()),
                  i && E.done
                    ? (console.warn(
                        "You provided `batchesPerEpoch` as " +
                          n.batchesPerEpoch +
                          ", but your dataset iterator ran out of data after " +
                          _ +
                          " batches; interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, " +
                          n.batchesPerEpoch * n.epochs +
                          " batches). You may need to use the repeat() function when building your dataset."
                      ),
                      [3, 17])
                    : null == E.value
                    ? [3, 11]
                    : ((S = wr(t, E.value)),
                      ((N = {}).batch = x),
                      (N.size = S[0].shape[0]),
                      [4, v.onBatchBegin(x, N)])
                );
              case 9:
                for (
                  c.sent(), O = l(S), Object(r["P"])(S), T = 0;
                  T < f.length;
                  ++T
                )
                  (I = f[T]), (A = O[T]), (N[I] = A), Object(r["kb"])(A);
                return [4, v.onBatchEnd(x, N)];
              case 10:
                c.sent(), tn(N), x++, _++, (c.label = 11);
              case 11:
                return (i
                ? _ >= n.batchesPerEpoch
                : E.done)
                  ? a
                    ? ((k = void 0),
                      Sr(n.validationData)
                        ? ((P = C),
                          [
                            4,
                            t.evaluateDataset(n.validationData, {
                              batches: n.validationBatches
                            })
                          ])
                        : [3, 13])
                    : [3, 15]
                  : [3, 16];
              case 12:
                return (k = P.apply(void 0, [c.sent()])), [3, 14];
              case 13:
                (k = C(
                  t.evaluate(o, s, {
                    batchSize:
                      null == n.validationBatchSize
                        ? br
                        : n.validationBatchSize,
                    verbose: 0
                  })
                )),
                  (c.label = 14);
              case 14:
                for (T = 0; T < t.metricsNames.length; ++T)
                  w["val_" + t.metricsNames[T]] = k[T];
                c.label = 15;
              case 15:
                return [3, 17];
              case 16:
                return t.stopTraining_ ? [3, 17] : [3, 7];
              case 17:
                return [4, v.onEpochEnd(g, w)];
              case 18:
                return c.sent(), g++, t.stopTraining_ ? [3, 19] : [3, 4];
              case 19:
                return [4, v.onTrainEnd()];
              case 20:
                return c.sent(), [4, t.history.syncData()];
              case 21:
                return c.sent(), [2, t.history];
              case 22:
                return (t.isTraining = !1), [7];
              case 23:
                return [2];
            }
          });
        });
      }
      function Er(t, e) {
        var n = null;
        return (
          null != e.batchesPerEpoch
            ? (n = e.batchesPerEpoch)
            : Number.isFinite(t.size) && (n = t.size),
          n
        );
      }
      function Sr(t) {
        return "function" == typeof t.iterator;
      }
      function Nr(t) {
        return "function" == typeof t.next;
      }
      function Or(t, e, n) {
        return u(this, void 0, void 0, function() {
          var i, a, o, s, u, l, f, h, p, d;
          return c(this, function(m) {
            switch (m.label) {
              case 0:
                if (
                  ((i = null != (n = n || {}).batches),
                  (a = t.testFunction),
                  (o = []),
                  n.verbose > 0)
                )
                  throw new x("Verbose mode is not implemented yet.");
                return (
                  r["Qc"].assert(
                    !i || (n.batches > 0 && Number.isInteger(n.batches)),
                    "Test loop expects `batches` to be a positive integer, but received " +
                      JSON.stringify(n.batches)
                  ),
                  Nr(e) ? ((u = e), [3, 3]) : [3, 1]
                );
              case 1:
                return [4, e.iterator()];
              case 2:
                (u = m.sent()), (m.label = 3);
              case 3:
                (s = u),
                  (l = 0),
                  (f = 0),
                  (h = function() {
                    var e, u, h, p, d, m;
                    return c(this, function(c) {
                      switch (c.label) {
                        case 0:
                          return [4, s.next()];
                        case 1:
                          if ((e = c.sent()).value) {
                            if (
                              ((u = wr(t, e.value)),
                              (h = Object(r["Jc"])(function() {
                                return a(u);
                              })),
                              Object(r["P"])(u),
                              0 === f)
                            )
                              for (m = 0; m < h.length; ++m) o.push(g(0));
                            for (
                              p = u[0].shape[0],
                                d = function(t) {
                                  var e = h[t],
                                    n = o[t];
                                  (o[t] = Object(r["Jc"])(function() {
                                    return Object(
                                      r["g"]
                                    )(o[t], Object(r["Hb"])(g(p), e));
                                  })),
                                    f > 0 && Object(r["P"])(n);
                                },
                                m = 0;
                              m < h.length;
                              ++m
                            )
                              d(m);
                            Object(r["P"])(h), (l += p), ++f;
                          }
                          return e.done
                            ? (i &&
                                console.warn(
                                  "Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` batches (in this case, " +
                                    n.batches +
                                    " batches). You may need to use the repeat() function when building your dataset."
                                ),
                              [2, "break"])
                            : [2];
                      }
                    });
                  }),
                  (m.label = 4);
              case 4:
                return !i || f < n.batches ? [5, h()] : [3, 6];
              case 5:
                return "break" === m.sent() ? [3, 6] : [3, 4];
              case 6:
                for (
                  p = function(t) {
                    var e = o[t];
                    (o[t] = Object(r["Jc"])(function() {
                      return Object(r["Q"])(o[t], g(l));
                    })),
                      Object(r["P"])(e);
                  },
                    d = 0;
                  d < o.length;
                  ++d
                )
                  p(d);
                return [2, I(o)];
            }
          });
        });
      }
      function Ir(t) {
        r["Qc"].assert(
          t > 0 && Number.isInteger(t),
          "batchSize is required to be a positive integer, but got " + t
        );
      }
      function Cr(t, e, n) {
        return null == t
          ? [null]
          : Array.isArray(t)
          ? t.map(function(t) {
              return At(t, e, n - e);
            })
          : At(t, e, n - e);
      }
      function Ar(t, e) {
        return Object(r["Jc"])(function() {
          return null == t
            ? null
            : Array.isArray(t)
            ? t.map(function(t) {
                return Ar(t, e);
              })
            : Lt(t, "int32" === e.dtype ? e : e.toInt());
        });
      }
      function kr(t, e) {
        for (var n = [], r = 0, i = null; r < t; )
          (i = r + e) >= t && (i = t), n.push([r, i]), (r = i);
        return n;
      }
      function Pr(t, e, n, i, a, o, s, l, f, h, p, d, m, v, y, g) {
        return u(this, void 0, void 0, function() {
          var u, b, w, E, S, N, O, I;
          return c(this, function(C) {
            switch (C.label) {
              case 0:
                if (
                  (null == a && (a = 32),
                  null == o && (o = 1),
                  null == p && (p = !0),
                  null == m && (m = 0),
                  (u = !1),
                  null != f && null != h && (u = !0),
                  null != y && ((u = !0), null == v))
                )
                  throw new _(
                    "Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set."
                  );
                return (
                  null != (b = t.checkNumSamples(n, a, v, "steps_per_epoch")) &&
                    (w = Et(0, b)),
                  null == s && (s = 1),
                  (E = ln(l, g, s, o, m, b, v, a, u, d)),
                  (S = E.callbackList),
                  (N = E.history),
                  S.setModel(t),
                  (t.history = N),
                  [4, S.onTrainBegin()]
                );
              case 1:
                C.sent(),
                  (t.stopTraining_ = !1),
                  (O = function(o) {
                    var s, l, d, m, y;
                    return c(this, function(g) {
                      switch (g.label) {
                        case 0:
                          return [4, S.onEpochBegin(o)];
                        case 1:
                          if ((g.sent(), (s = {}), null == v)) return [3, 2];
                          throw new x(
                            "stepsPerEpoch mode is not implemented yet."
                          );
                        case 2:
                          if ("batch" === p)
                            throw new x(
                              "batch shuffling is not implemneted yet"
                            );
                          p && r["Qc"].shuffle(w),
                            (l = Object(r["Ic"])(w)),
                            (d = kr(b, a)),
                            (m = function(o) {
                              var p;
                              return c(this, function(c) {
                                switch (c.label) {
                                  case 0:
                                    return (p = {}), [4, S.onBatchBegin(o, p)];
                                  case 1:
                                    return (
                                      c.sent(),
                                      Object(r["Jc"])(function() {
                                        var c = d[o][0],
                                          m = d[o][1],
                                          v = At(l, c, m - c);
                                        (p.batch = o), (p.size = m - c);
                                        for (
                                          var y = Ar(n, v), g = e(y), b = 0;
                                          b < i.length;
                                          ++b
                                        ) {
                                          var w = i[b],
                                            _ = g[b];
                                          (p[w] = _), Object(r["kb"])(_);
                                        }
                                        if (o === d.length - 1 && u) {
                                          var x = t.testLoop(f, h, a);
                                          for (b = 0; b < i.length; ++b)
                                            (w = i[b]),
                                              (_ = x[b]),
                                              Object(r["kb"])(_),
                                              (s["val_" + w] = _);
                                        }
                                      }),
                                      [4, S.onBatchEnd(o, p)]
                                    );
                                  case 2:
                                    return (
                                      c.sent(),
                                      tn(p),
                                      t.stopTraining_ ? [2, "break"] : [2]
                                    );
                                }
                              });
                            }),
                            (y = 0),
                            (g.label = 3);
                        case 3:
                          return y < d.length ? [5, m(y)] : [3, 6];
                        case 4:
                          if ("break" === g.sent()) return [3, 6];
                          g.label = 5;
                        case 5:
                          return ++y, [3, 3];
                        case 6:
                          l.dispose(), (g.label = 7);
                        case 7:
                          return [4, S.onEpochEnd(o, s)];
                        case 8:
                          return g.sent(), t.stopTraining_ ? [2, "break"] : [2];
                      }
                    });
                  }),
                  (I = m),
                  (C.label = 2);
              case 2:
                return I < o ? [5, O(I)] : [3, 5];
              case 3:
                if ("break" === C.sent()) return [3, 5];
                C.label = 4;
              case 4:
                return ++I, [3, 2];
              case 5:
                return [4, S.onTrainEnd()];
              case 6:
                return C.sent(), [4, t.history.syncData()];
              case 7:
                return C.sent(), [2, t.history];
            }
          });
        });
      }
      function Tr(t, e, n, r) {
        return (
          void 0 === r && (r = {}),
          u(this, void 0, void 0, function() {
            var i, a, o, s, u, l, f, h, p, d, m, v, y, g, b, w, E, S, N;
            return c(this, function(c) {
              switch (c.label) {
                case 0:
                  if (t.isTraining)
                    throw new Error(
                      "Cannot start training because another fit() call is ongoing."
                    );
                  (t.isTraining = !0), (c.label = 1);
                case 1:
                  if (
                    (c.trys.push([1, , 3, 4]),
                    Ir((f = null == r.batchSize ? 32 : r.batchSize)),
                    (h = t.standardizeUserData(e, n, !1, f)),
                    (i = h[0]),
                    (a = h[1]),
                    (p = !1),
                    (d = void 0),
                    null != r.validationData && r.validationData.length > 0)
                  ) {
                    if (((p = !0), 2 !== r.validationData.length))
                      throw 3 === r.validationData.length
                        ? new x(
                            "validationData including sample weights is not supported yet."
                          )
                        : new _(
                            "When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; " +
                              r.validationData +
                              " is invalid."
                          );
                    (o = r.validationData[0]),
                      (s = r.validationData[1]),
                      (m = t.standardizeUserData(o, s, !0, f)),
                      (u = m[0]),
                      (l = m[1]),
                      (d = u.concat(l));
                  } else null != r.validationSplit && r.validationSplit > 0 && r.validationSplit < 1 ? ((p = !0), (v = Math.floor(i[0].shape[0] * (1 - r.validationSplit))), (y = i[0].shape[0]), (u = Cr(i, v, y)), (i = Cr(i, 0, v)), (l = Cr(a, v, y)), (a = Cr(a, 0, v)), (d = u.concat(l))) : null != r.validationSteps && (p = !0);
                  return (
                    (g = i.concat(a)),
                    t.checkTrainableWeightsConsistency(),
                    (b = t.makeTrainFunction()),
                    (w = t.getDedupedMetricsNames()),
                    (E = void 0),
                    (S = void 0),
                    p
                      ? (t.makeTestFunction(),
                        (E = t.testFunction),
                        (S = w.slice().concat(
                          w.map(function(t) {
                            return "val_" + t;
                          })
                        )))
                      : ((E = null), (d = []), (S = w.slice())),
                    (N = un(r.callbacks)),
                    [
                      4,
                      Pr(
                        t,
                        b,
                        g,
                        w,
                        f,
                        r.epochs,
                        r.verbose,
                        N,
                        E,
                        d,
                        r.shuffle,
                        S,
                        r.initialEpoch,
                        null,
                        null,
                        r.yieldEvery
                      )
                    ]
                  );
                case 2:
                  return [2, c.sent()];
                case 3:
                  return (
                    (t.isTraining = !1),
                    Dr(i, e),
                    Dr(a, n),
                    Dr(u, o),
                    Dr(l, s),
                    [7]
                  );
                case 4:
                  return [2];
              }
            });
          })
        );
      }
      function Rr(t) {
        var e = [];
        t instanceof r["c"] && (t = [t]);
        for (var n = 0; n < t.length; ++n) {
          var i = t[n];
          if (1 === i.rank) e.push(Nt(i, 1));
          else {
            if (0 === i.rank)
              throw new Error(
                "Expected tensor to be at least 1D, but received a 0D tensor (scalar)."
              );
            e.push(i);
          }
        }
        return e;
      }
      function Dr(t, e) {
        if (null != t) {
          var n = [];
          if (e instanceof r["c"]) n.push(e.id);
          else if (Array.isArray(e))
            e.forEach(function(t) {
              return n.push(t.id);
            });
          else if (null != e)
            for (var i in e) {
              var a = e[i];
              n.push(a.id);
            }
          var o = [];
          if (t instanceof r["c"]) -1 === n.indexOf(t.id) && o.push(t);
          else if (Array.isArray(t))
            t.forEach(function(t) {
              -1 === n.indexOf(t.id) && o.push(t);
            });
          else if (null != t)
            for (var s in t) {
              var u = t[s];
              -1 === n.indexOf(u.id) && o.push(u);
            }
          o.forEach(function(t) {
            t.isDisposed || t.dispose();
          });
        }
      }
      function Mr(t) {
        return t instanceof r["c"];
      }
      function jr(t) {
        return Array.isArray(t);
      }
      function Lr(t) {
        return !Mr(t) && !jr(t);
      }
      function Br(t, e, n, r, i) {
        if (
          (void 0 === r && (r = !0),
          void 0 === i && (i = ""),
          null == e || 0 === e.length)
        ) {
          if (null != t) {
            var a = !1;
            if (jr(t) && t.length > 0) a = !0;
            else if (Lr(t)) {
              for (var o in t)
                if (t.hasOwnProperty(o)) {
                  a = !0;
                  break;
                }
            } else a = !0;
            if (a)
              throw new _(
                "Error when checking model " +
                  i +
                  " expected no data, but got " +
                  t
              );
          }
          return [];
        }
        if (null == t)
          return e.map(function(t) {
            return null;
          });
        var s;
        if (Lr(t)) {
          (t = t), (s = []);
          for (var u = 0, c = e; u < c.length; u++) {
            var l = c[u];
            if (null == t[l])
              throw new _(
                'No data provided for "' +
                  l +
                  '". Need data for each key in: ' +
                  e
              );
            s.push(t[l]);
          }
        } else if (jr(t)) {
          if ((t = t).length !== e.length)
            throw new _(
              "Error when checking model " +
                i +
                ": the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see " +
                e.length +
                " Tensor(s), but instead got the following list of Tensor(s): " +
                t
            );
          s = t;
        } else {
          if (((t = t), e.length > 1))
            throw new _(
              "The model " +
                i +
                " expects " +
                e.length +
                " Tensor(s), but only received one Tensor. Found: Tensor with shape " +
                t.shape
            );
          s = [t];
        }
        if (((s = Rr(s)), null != n))
          for (var f = 0; f < e.length; ++f)
            if (null != n[f]) {
              var h = s[f];
              if (h.shape.length !== n[f].length)
                throw new _(
                  "Error when checking " +
                    i +
                    ": expected " +
                    e[f] +
                    " to have " +
                    n[f].length +
                    " dimension(s). but got array with shape " +
                    h.shape
                );
              for (var p = 0; p < n[f].length; ++p)
                if (0 !== p || r) {
                  var d = h.shape[p],
                    m = n[f][p];
                  if (null != m && m >= 0 && d !== m)
                    throw new _(
                      "Error when checking " +
                        i +
                        ": expected " +
                        e[f] +
                        " to have shape [" +
                        n[f] +
                        "], but got array with shape [" +
                        h.shape +
                        "]."
                    );
                }
            }
        return s;
      }
      function Fr(t, e, n) {
        var i = B(
          t.map(function(t) {
            return t.shape[0];
          })
        );
        i.sort();
        var a = B(
          e.map(function(t) {
            return t.shape[0];
          })
        );
        if ((a.sort(), i.length > 1))
          throw new _(
            "All input Tensors (x) should have the same number of samples. Got array shapes: " +
              JSON.stringify(
                t.map(function(t) {
                  return t.shape;
                })
              )
          );
        if (a.length > 1)
          throw new _(
            "All target Tensors (y) should have the same number of samples. Got array shapes: " +
              JSON.stringify(
                e.map(function(t) {
                  return t.shape;
                })
              )
          );
        if (i.length > 0 && a.length > 0 && !r["Qc"].arraysEqual(i, a))
          throw new _(
            "Input Tensors should have the same number of samples as target Tensors. Found " +
              i[0] +
              " input sample(s) and " +
              a[0] +
              " target sample(s)."
          );
      }
      function zr(t, e, n) {
        for (var r = [hn, En, wn], i = 0; i < t.length; ++i) {
          var a = t[i],
            o = e[i],
            s = n[i];
          if (null != o) {
            if (o === wn && 1 === a.shape[a.shape.length - 1])
              throw new _(
                "You are passing a target array of shape " +
                  a.shape +
                  " while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes]."
              );
            if (-1 !== r.indexOf(o))
              for (
                var u = a.shape.slice(1), c = s.slice(1), l = 0;
                l < u.length;
                ++l
              ) {
                var f = u[l],
                  h = c[l];
                if (null != h && f !== h)
                  throw new _(
                    "A target Tensor with shape " +
                      a.shape +
                      " was passed for an output of shape " +
                      s +
                      ", while using a loss function that expects targets to have the same shape as the output."
                  );
              }
          }
        }
      }
      function Ur(t, e, n, r, i) {
        var a;
        if (
          (void 0 === r && (r = !0), void 0 === i && (i = ""), Array.isArray(t))
        ) {
          if (t.length !== e.length)
            throw new _(
              "Error when checking model " +
                i +
                ": the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see " +
                e.length +
                " Tensor(s), but instead got " +
                t.length +
                " Tensors(s)."
            );
          a = t;
        } else {
          if (e.length > 1)
            throw new _(
              "The model expects " +
                e.length +
                " " +
                i +
                " Tensors, but only received one Tensor. Found: array with shape " +
                JSON.stringify(t.shape) +
                "."
            );
          a = [t];
        }
        if (null != n)
          for (var o = 0; o < e.length; ++o)
            if (null != n[o]) {
              var s = a[o];
              if (s.shape.length !== n[o].length)
                throw new _(
                  "Error when checking " +
                    i +
                    ": expected " +
                    e[o] +
                    " to have " +
                    n[o].length +
                    " dimension(s), but got array with shape " +
                    JSON.stringify(s.shape)
                );
              for (var u = 0; u < n[o].length; ++u)
                if (0 !== u || r) {
                  var c = s.shape[u],
                    l = n[o][u];
                  if (null != l && l !== c)
                    throw new _(
                      "Error when checking " +
                        i +
                        ": expected " +
                        e[o] +
                        " to have shape " +
                        JSON.stringify(n[o]) +
                        " but got array with shape " +
                        JSON.stringify(s.shape) +
                        "."
                    );
                }
            }
      }
      function Vr(t, e) {
        if (null == t || (Array.isArray(t) && 0 === t.length))
          return e.map(function(t) {
            return [];
          });
        if (Array.isArray(t))
          return e.map(function(e) {
            return t;
          });
        if (null != t) {
          for (var n = [], r = 0, i = e; r < i.length; r++) {
            var a = i[r],
              o = t.hasOwnProperty(a) ? t[a] : [];
            Array.isArray(o) || (o = [o]), n.push(o);
          }
          return n;
        }
        throw new TypeError(
          "Type of metrics argument not understood. Expected an Array or Object, found: " +
            t
        );
      }
      var Wr = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (n.isTraining = !1), n;
        }
        return (
          a(e, t),
          (e.prototype.summary = function(t, e, n) {
            if ((void 0 === n && (n = console.log), !this.built))
              throw new _(
                "This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data)."
              );
            Gn(this, t, e, n);
          }),
          (e.prototype.compile = function(t) {
            var e = this;
            if (
              (null == t.loss && (t.loss = []),
              (this.loss = t.loss),
              "string" == typeof t.optimizer)
            )
              this.optimizer = Kn(t.optimizer);
            else {
              if (!(t.optimizer instanceof r["b"]))
                throw new _(
                  "User-defined optimizer must be an instance of tf.Optimizer."
                );
              this.optimizer = t.optimizer;
            }
            var n = [];
            if (
              Array.isArray(t.loss) ||
              "string" == typeof t.loss ||
              "function" == typeof t.loss
            )
              if (Array.isArray(t.loss)) {
                if (t.loss.length !== this.outputs.length)
                  throw new _(
                    "When passing an Array as loss, it should have one entry per model output. The model has " +
                      this.outputs.length +
                      " output(s), but you passed loss=" +
                      t.loss +
                      "."
                  );
                var i = t.loss;
                n = i.map(function(t) {
                  return In(t);
                });
              } else {
                var a = In(t.loss);
                this.outputs.forEach(function(t) {
                  n.push(a);
                });
              }
            else {
              for (var o in ((t.loss = t.loss), t.loss))
                if (-1 === this.outputNames.indexOf(o))
                  throw new _(
                    'Unknown entry in loss dictionary: "' +
                      o +
                      '". Only expected the following keys: ' +
                      this.outputNames
                  );
              for (var s = 0, u = this.outputNames; s < u.length; s++) {
                var c = u[s];
                null == t.loss[c] &&
                  console.warn(
                    'Output "' +
                      c +
                      '" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ' +
                      c +
                      " during training"
                  ),
                  n.push(In(t.loss[c]));
              }
            }
            (this.lossFunctions = n),
              (this.feedOutputNames = []),
              (this.feedOutputShapes = []),
              (this.feedLossFns = []);
            for (var l = 0; l < this.outputs.length; ++l) {
              var f = this.internalOutputShapes[l],
                h = this.outputNames[l];
              this.feedOutputNames.push(h),
                this.feedOutputShapes.push(f),
                this.feedLossFns.push(this.lossFunctions[l]);
            }
            var p = [];
            (this.metrics = t.metrics),
              (this.metricsNames = ["loss"]),
              (this.metricsTensors = []),
              ht("loss", function() {
                for (var t = 0; t < e.outputs.length; ++t)
                  if (-1 === p.indexOf(t)) {
                    var n = e.lossFunctions[t];
                    e.outputs.length > 1 &&
                      (e.metricsTensors.push([n, t]),
                      e.metricsNames.push(e.outputNames[t] + "_loss"));
                  }
              });
            var d = Vr(t.metrics, this.outputNames);
            ht("metric", function() {
              for (
                var t = function(t) {
                    if (-1 !== p.indexOf(t)) return "continue";
                    !(function(n) {
                      for (
                        var r,
                          i,
                          a,
                          o = function(n) {
                            if (
                              -1 !==
                              ["accuracy", "acc", "crossentropy", "ce"].indexOf(
                                n
                              )
                            ) {
                              var o = e.internalOutputShapes[t];
                              1 === o[o.length - 1] || e.lossFunctions[t] === En
                                ? -1 !== ["accuracy", "acc"].indexOf(n)
                                  ? (i = Cn)
                                  : -1 !== ["crossentropy", "ce"].indexOf(n) &&
                                    (i = Mn)
                                : e.lossFunctions[t] === _n
                                ? -1 !== ["accuracy", "acc"].indexOf(n)
                                  ? (i = jn)
                                  : -1 !== ["crossentropy", "ce"].indexOf(n) &&
                                    (i = qn)
                                : -1 !== ["accuracy", "acc"].indexOf(n)
                                ? (i = An)
                                : -1 !== ["crossentropy", "ce"].indexOf(n) &&
                                  (i = Wn);
                              var s = void 0;
                              -1 !== ["accuracy", "acc"].indexOf(n)
                                ? (s = "acc")
                                : -1 !== ["crossentropy", "ce"].indexOf(n) &&
                                  (s = "ce"),
                                (a = i),
                                (r = "" + s);
                            } else {
                              var u = Hn(n);
                              (a = u), (r = "" + n);
                            }
                            var c;
                            ht(r, function() {
                              c = a;
                            }),
                              (function(t, n, r) {
                                e.outputNames.length > 1 &&
                                  (n = e.outputNames[t] + "_" + n),
                                  e.metricsNames.push(n),
                                  e.metricsTensors.push([r, t]);
                              })(t, r, c);
                          },
                          s = 0,
                          u = n;
                        s < u.length;
                        s++
                      )
                        o(u[s]);
                    })(d[t]);
                  },
                  n = 0;
                n < e.outputs.length;
                ++n
              )
                t(n);
            }),
              (this.collectedTrainableWeights = this.trainableWeights);
          }),
          (e.prototype.checkTrainableWeightsConsistency = function() {
            null != this.collectedTrainableWeights &&
              this.trainableWeights.length !==
                this.collectedTrainableWeights.length &&
              console.warn(
                "Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?"
              );
          }),
          (e.prototype.evaluate = function(t, e, n) {
            void 0 === n && (n = {});
            var r = null == n.batchSize ? 32 : n.batchSize;
            Ir(r);
            var i = this.standardizeUserData(t, e, !0, r);
            try {
              var a = i[0].concat(i[1]);
              this.makeTestFunction();
              var o = this.testFunction;
              return I(this.testLoop(o, a, r, n.verbose, n.steps));
            } finally {
              Dr(i[0], t), Dr(i[1], e);
            }
          }),
          (e.prototype.evaluateDataset = function(t, e) {
            return u(this, void 0, void 0, function() {
              return c(this, function(n) {
                return this.makeTestFunction(), [2, Or(this, t, e)];
              });
            });
          }),
          (e.prototype.checkNumSamples = function(t, e, n, r) {
            var i;
            if ((void 0 === r && (r = "steps"), null != n)) {
              if (((i = null), null != e))
                throw new _(
                  "If " +
                    r +
                    " is set, batchSize must be null or undefined.Got batchSize = " +
                    e
                );
            } else {
              if (null == t)
                throw new _(
                  "Either the input data should have a defined shape, or " +
                    r +
                    " shoud be specified."
                );
              i = Array.isArray(t) ? t[0].shape[0] : t.shape[0];
            }
            return i;
          }),
          (e.prototype.execute = function(t, e) {
            if (Array.isArray(e) && 0 === e.length)
              throw new _("`outputs` is an empty Array, which is not allowed.");
            var n = Array.isArray(e),
              i = n ? e : [e],
              a = this.retrieveSymbolicTensors(i),
              o = new or();
            if ((t instanceof r["c"] && (t = [t]), Array.isArray(t))) {
              if (t.length !== this.inputs.length)
                throw new _(
                  "The number of inputs provided (" +
                    t.length +
                    ") does not match the number of inputs of this model (" +
                    this.inputs.length +
                    ")."
                );
              for (var s = 0; s < this.inputs.length; ++s)
                o.add(this.inputs[s], t[s]);
            } else
              for (var u = 0, c = this.inputs; u < c.length; u++) {
                var l = c[u],
                  f = t[l.name];
                if (null == f)
                  throw new _(
                    "No value is provided for the model's input " + l.name
                  );
                o.add(l, f);
              }
            var h = cr(a, o);
            return n ? h : h[0];
          }),
          (e.prototype.retrieveSymbolicTensors = function(t) {
            for (
              var e = S(null, t.length), n = t.length, r = 0, i = this.layers;
              r < i.length;
              r++
            ) {
              for (
                var a = i[r],
                  o = Array.isArray(a.output) ? a.output : [a.output],
                  s = o.map(function(t) {
                    return t.name;
                  }),
                  u = 0;
                u < t.length;
                ++u
              ) {
                var c = s.indexOf(t[u]);
                if ((-1 !== c && ((e[u] = o[c]), n--), 0 === n)) break;
              }
              if (0 === n) break;
            }
            if (n > 0) {
              var l = [];
              throw (e.forEach(function(e, n) {
                null == e && l.push(t[n]);
              }),
              new _(
                "Cannot find SymbolicTensors for output name(s): " +
                  JSON.stringify(l)
              ));
            }
            return e;
          }),
          (e.prototype.predictLoop = function(t, e, n) {
            var i = this;
            return (
              void 0 === e && (e = 32),
              void 0 === n && (n = !1),
              Object(r["Jc"])(function() {
                var a = i.checkNumSamples(t);
                if (n)
                  throw new x("Verbose predictLoop() is not implemented yet.");
                for (
                  var o = kr(a, e),
                    s = i.outputs.map(function(t) {
                      return [];
                    }),
                    u = function(e) {
                      Object(r["Jc"])(function() {
                        var n = o[e][0],
                          r = o[e][1],
                          a = Cr(t, n, r),
                          s = [];
                        if (Array.isArray(a))
                          for (var u = 0; u < a.length; ++u)
                            s.push({ key: i.inputs[u], value: a[u] });
                        else s.push({ key: i.inputs[0], value: a });
                        var c = new or(s);
                        return cr(i.outputs, c);
                      }).forEach(function(t, e) {
                        return s[e].push(t);
                      });
                    },
                    c = 0;
                  c < o.length;
                  ++c
                )
                  u(c);
                return I(
                  s.map(function(t) {
                    return Object(r["C"])(t, 0);
                  })
                );
              })
            );
          }),
          (e.prototype.predict = function(t, e) {
            void 0 === e && (e = {});
            var n = Rr(t);
            Ur(n, this.inputNames, this.feedInputShapes, !1);
            try {
              var r = null == e.batchSize ? 32 : e.batchSize;
              return Ir(r), this.predictLoop(n, r);
            } finally {
              Dr(n, t);
            }
          }),
          (e.prototype.predictOnBatch = function(t) {
            return (
              Ur(t, this.inputNames, this.feedInputShapes, !0),
              this.predictLoop(t, t.shape[0])
            );
          }),
          (e.prototype.standardizeUserData = function(t, e, n, r) {
            if ((void 0 === n && (n = !0), null == this.optimizer))
              throw new w(
                "You must compile a model before training/testing. Use Model.compile(modelCompileArgs)."
              );
            for (var i = [], a = 0; a < this.feedOutputShapes.length; ++a) {
              var o = this.feedOutputShapes[a];
              this.feedLossFns[a] === _n
                ? i.push(o.slice(0, o.length - 1).concat([1]))
                : i.push(o);
            }
            if (
              (Fr(
                (t = Br(
                  t,
                  this.feedInputNames,
                  this.feedInputShapes,
                  !1,
                  "input"
                )),
                (e = Br(e, this.feedOutputNames, i, !1, "target")),
                null
              ),
              zr(e, this.feedLossFns, this.feedOutputShapes),
              this.stateful && null != r && r > 0 && t[0].shape[0] % r != 0)
            )
              throw new _(
                "In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size " +
                  r +
                  ". Found: " +
                  t[0].shape[0] +
                  " sample(s)."
              );
            return [t, e, null];
          }),
          (e.prototype.testLoop = function(t, e, n, i, a) {
            var o = this;
            return (
              void 0 === i && (i = 0),
              Object(r["Jc"])(function() {
                var s = o.checkNumSamples(e, n, a, "steps"),
                  u = [];
                if (i > 0) throw new x("Verbose mode is not implemented yet.");
                if (null != a)
                  throw new x(
                    "steps mode in testLoop() is not implemented yet"
                  );
                for (
                  var c = kr(s, n), l = Object(r["Ic"])(Et(0, s)), f = 0;
                  f < c.length;
                  ++f
                ) {
                  var h = c[f][0],
                    p = c[f][1],
                    d = At(l, h, p - h),
                    m = Ar(e, d),
                    v = t(m);
                  if (0 === f) for (var y = 0; y < v.length; ++y) u.push(g(0));
                  for (y = 0; y < v.length; ++y) {
                    var b = v[y];
                    u[y] = Object(r["g"])(u[y], Object(r["Hb"])(g(p - h), b));
                  }
                }
                for (y = 0; y < u.length; ++y)
                  u[y] = Object(r["Q"])(u[y], g(s));
                return u;
              })
            );
          }),
          (e.prototype.getDedupedMetricsNames = function() {
            for (var t = this.metricsNames, e = [], n = 0; n < t.length; ++n) {
              var r = t[n],
                i = r;
              O(t, r) > 1 && (i += "_" + O(t.slice(0, n), r)), e.push(i);
            }
            return e;
          }),
          (e.prototype.makeTrainFunction = function() {
            var t = this;
            return function(e) {
              var n = e.slice(0, t.inputs.length),
                i = e.slice(
                  t.inputs.length,
                  t.inputs.length + t.outputs.length
                ),
                a = [],
                o = t.collectedTrainableWeights.map(function(t) {
                  return t.read();
                });
              return [
                t.optimizer.minimize(
                  function() {
                    for (var e = [], o = 0; o < t.inputs.length; ++o)
                      e.push({ key: t.inputs[o], value: n[o] });
                    var s,
                      u = new or(e),
                      c = cr(t.outputs, u, { training: !0 });
                    for (o = 0; o < t.lossFunctions.length; ++o) {
                      var l = (0, t.lossFunctions[o])(i[o], c[o]);
                      Object(r["Bb"])(l),
                        (s = 0 === o ? l : Object(r["g"])(s, l));
                    }
                    for (o = 0; o < t.metricsTensors.length; ++o) {
                      var f = t.metricsTensors[o][0],
                        h = t.metricsTensors[o][1],
                        p = Object(r["Bb"])(f(i[h], c[h]));
                      Object(r["kb"])(p), a.push(p);
                    }
                    return (
                      (s = Object(r["Bb"])(s)),
                      t.calculateLosses().forEach(function(t) {
                        s = Object(r["g"])(s, t);
                      }),
                      s
                    );
                  },
                  !0,
                  o
                )
              ].concat(a);
            };
          }),
          (e.prototype.makeTestFunction = function() {
            var t = this;
            this.testFunction = function(e) {
              return Object(r["Jc"])(function() {
                for (
                  var n,
                    i = [],
                    a = e.slice(0, t.inputs.length),
                    o = e.slice(
                      t.inputs.length,
                      t.inputs.length + t.outputs.length
                    ),
                    s = [],
                    u = 0;
                  u < t.inputs.length;
                  ++u
                )
                  s.push({ key: t.inputs[u], value: a[u] });
                var c = new or(s),
                  l = cr(t.outputs, c);
                for (u = 0; u < t.lossFunctions.length; ++u) {
                  var f = t.lossFunctions[u],
                    h = Object(r["Bb"])(f(o[u], l[u]));
                  (n = 0 === u ? h : Object(r["g"])(n, h)), i.push(n);
                }
                for (u = 0; u < t.metricsTensors.length; ++u) {
                  var p = t.metricsTensors[u][0],
                    d = t.metricsTensors[u][1],
                    m = Object(r["Bb"])(p(o[d], l[d]));
                  i.push(m);
                }
                return i;
              });
            };
          }),
          (e.prototype.fit = function(t, e, n) {
            return (
              void 0 === n && (n = {}),
              u(this, void 0, void 0, function() {
                return c(this, function(r) {
                  return [2, Tr(this, t, e, n)];
                });
              })
            );
          }),
          (e.prototype.fitDataset = function(t, e) {
            return u(this, void 0, void 0, function() {
              return c(this, function(n) {
                return [2, xr(this, t, e)];
              });
            });
          }),
          (e.prototype.trainOnBatch = function(t, e) {
            return u(this, void 0, void 0, function() {
              var n, i, a, o, s, u, l, f, h, p, d;
              return c(this, function(c) {
                switch (c.label) {
                  case 0:
                    (n = this.standardizeUserData(t, e)),
                      (i = n[0]),
                      (a = n[1]),
                      (o = this.makeTrainFunction()),
                      (s = o(i.concat(a))),
                      (u = []),
                      (l = 0),
                      (f = s),
                      (c.label = 1);
                  case 1:
                    return l < f.length
                      ? ((h = f[l]), (d = (p = u).push), [4, h.data()])
                      : [3, 4];
                  case 2:
                    d.apply(p, [c.sent()[0]]), (c.label = 3);
                  case 3:
                    return l++, [3, 1];
                  case 4:
                    return Object(r["P"])(s), [2, I(u)];
                }
              });
            });
          }),
          (e.prototype.getNamedWeights = function(t) {
            for (
              var e = {},
                n = null != t && t.trainableOnly,
                r = n ? this.trainableWeights : this.weights,
                i = this.getWeights(n),
                a = 0;
              a < r.length;
              ++a
            )
              (n && !r[a].trainable) || (e[r[a].originalName] = i[a]);
            return e;
          }),
          Object.defineProperty(e.prototype, "stopTraining", {
            set: function(t) {
              this.stopTraining_ = t;
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.save = function(t, e) {
            return u(this, void 0, void 0, function() {
              var n, i, a, o, s;
              return c(this, function(u) {
                switch (u.label) {
                  case 0:
                    if ("string" == typeof t) {
                      if (0 === (n = r["ib"].getSaveHandlers(t)).length)
                        throw new _(
                          "Cannot find any save handlers for URL '" + t + "'"
                        );
                      if (n.length > 1)
                        throw new _(
                          "Found more than one (" +
                            n.length +
                            ") save handlers for URL '" +
                            t +
                            "'"
                        );
                      t = n[0];
                    }
                    if (null == t.save)
                      throw new _(
                        "Model.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined."
                      );
                    return [4, r["ib"].encodeWeights(this.getNamedWeights(e))];
                  case 1:
                    return (
                      (i = u.sent()),
                      (a = !1),
                      (o = null),
                      (s = this.toJSON(o, a)),
                      [
                        2,
                        t.save({
                          modelTopology: s,
                          weightData: i.data,
                          weightSpecs: i.specs
                        })
                      ]
                    );
                }
              });
            });
          }),
          (e.className = "Model"),
          e
        );
      })(gr);
      function $r(t, e) {
        return u(this, void 0, void 0, function() {
          var n, i, a, o, s, u, l, f, h, p;
          return c(this, function(c) {
            switch (c.label) {
              case 0:
                return (
                  "modelTopology" in t || (t = { modelTopology: t }),
                  null != (n = (t = t).modelTopology).model_config &&
                    (n = n.model_config),
                  (i = nr(n)),
                  (a = tr(i, e)),
                  null == t.weightsManifest
                    ? [3, 2]
                    : [
                        4,
                        r["ib"].loadWeights(
                          t.weightsManifest,
                          t.pathPrefix,
                          a.weights.map(function(t) {
                            return t.originalName;
                          })
                        )
                      ]
                );
              case 1:
                for (
                  o = c.sent(), s = {}, u = 0, l = a.weights;
                  u < l.length;
                  u++
                )
                  (f = l[u]), (s[f.originalName] = o[f.originalName]);
                (h = null), (p = !0), a.loadWeights(s, h, p), (c.label = 2);
              case 2:
                return [2, a];
            }
          });
        });
      }
      r["gc"].registerClass(Wr);
      var qr = (function(t) {
        function e(e) {
          var n = t.call(this, { inputs: [], outputs: [] }) || this;
          if (
            ((e = e || {}),
            (n.trainable = !0),
            (n._updatable = !0),
            (n.built = !1),
            (n.name = null != e.name ? e.name : m("sequential_")),
            null != e.layers)
          )
            for (var r = 0, i = e.layers; r < i.length; r++) {
              var a = i[r];
              n.add(a);
            }
          return n;
        }
        return (
          a(e, t),
          (e.prototype.checkShape = function(t) {
            if (
              t.inboundNodes[0].outputTensors[0].shape.some(function(t) {
                return t < 0;
              })
            )
              throw new _(
                "Negative dimension size caused by adding layer " +
                  t.name +
                  " with input shape [" +
                  t.inboundNodes[0].inputTensors[0].shape +
                  "]"
              );
          }),
          (e.prototype.add = function(t) {
            var n,
              r = t instanceof e || t instanceof Wr;
            if (r) {
              if (1 !== (n = t).outputs.length)
                throw new _(
                  "All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API."
                );
              if (1 !== n.inputs.length)
                throw new _(
                  "All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API."
                );
            }
            if (0 === this.outputs.length) {
              if (0 === t.inboundNodes.length) {
                if (null == t.batchInputShape)
                  throw new _(
                    "The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument."
                  );
                var i = Qe({
                  batchShape: t.batchInputShape,
                  dtype: t.dtype,
                  name: t.name + "_input"
                });
                t.apply(i);
              }
              if (r) (this.outputs = n.outputs), (this.inputs = n.inputs);
              else {
                if (1 !== t.inboundNodes.length)
                  throw new _(
                    "A layer added to a Sequential model must not already be connected somewhere else. Model received layer " +
                      t.name +
                      " which has " +
                      t.inboundNodes.length +
                      " pre-existing inbound connections."
                  );
                if (1 !== t.inboundNodes[0].outputTensors.length)
                  throw new _(
                    "All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API."
                  );
                this.checkShape(t),
                  (this.outputs = [t.inboundNodes[0].outputTensors[0]]),
                  (this.inputs = Xe(this.outputs[0]));
              }
              (this.inboundNodes = []),
                new $e({
                  outboundLayer: this,
                  inboundLayers: [],
                  nodeIndices: [],
                  tensorIndices: [],
                  inputTensors: this.inputs,
                  outputTensors: this.outputs,
                  inputMasks: S(null, this.inputs.length),
                  outputMasks: [null],
                  inputShapes: this.inputs.map(function(t) {
                    return t.shape;
                  }),
                  outputShapes: this.outputs[0].shape
                });
            } else {
              var a = t.apply(this.outputs[0]);
              if (Array.isArray(a))
                throw new TypeError(
                  "All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API."
                );
              this.checkShape(t),
                (this.outputs = [a]),
                (this.inboundNodes[0].outputTensors = this.outputs),
                (this.inboundNodes[0].outputShapes = [this.outputs[0].shape]);
            }
            this.layers.push(t), (this.built = !1);
          }),
          (e.prototype.pop = function() {
            if (0 === this.layers.length)
              throw new TypeError("There are no layers in the model.");
            if ((this.layers.pop(), 0 === this.layers.length))
              (this.outputs = []),
                (this.inboundNodes = []),
                (this.outboundNodes = []);
            else {
              var t = this.layers.length - 1;
              (this.layers[t].outboundNodes = []),
                (this.outputs = [this.layers[t].output]),
                (this.inboundNodes[0].outputTensors = this.outputs),
                (this.inboundNodes[0].outputShapes = [this.outputs[0].shape]);
            }
          }),
          (e.prototype.call = function(t, e) {
            return null == this.model && this.build(), this.model.call(t, e);
          }),
          (e.prototype.build = function(t) {
            if ((De(t), 0 === this.inputs.length || 0 === this.outputs.length))
              throw new TypeError(
                "Sequential model cannot be built: model is empty. Add some layers first."
              );
            (this.model = new Wr({
              inputs: this.inputs,
              outputs: this.outputs[0],
              name: this.name + "_model"
            })),
              (this.model.trainable = this.trainable),
              (this.model.updatable = this.updatable),
              (this.supportsMasking = this.model.supportsMasking),
              (this.inputLayers = this.model.inputLayers),
              (this.inputLayersNodeIndices = this.model.inputLayersNodeIndices),
              (this.inputLayersTensorIndices = this.model.inputLayersTensorIndices),
              (this.outputLayers = this.model.outputLayers),
              (this.outputLayersNodeIndices = this.model.outputLayersNodeIndices),
              (this.outputLayersTensorIndices = this.model.outputLayersTensorIndices),
              (this.nodesByDepth = this.model.nodesByDepth),
              (this.containerNodes = this.model.containerNodes),
              (this.outputNames = this.model.outputNames),
              (this.inputNames = this.model.inputNames),
              (this.built = !0);
          }),
          (e.prototype.countParams = function() {
            return (
              this.built || this.build(), t.prototype.countParams.call(this)
            );
          }),
          (e.prototype.summary = function(e, n, r) {
            void 0 === r && (r = console.log),
              this.built || this.build(),
              t.prototype.summary.call(this, e, n, r);
          }),
          (e.prototype.setWeights = function(t) {
            null == this.model && this.build(), this.model.setWeights(t);
          }),
          Object.defineProperty(e.prototype, "updatable", {
            get: function() {
              return this._updatable;
            },
            set: function(t) {
              this.built && (this.model.updatable = t), (this._updatable = t);
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.evaluate = function(t, e, n) {
            if ((void 0 === n && (n = {}), !this.built))
              throw new w("The model needs to be compiled before being used.");
            return this.model.evaluate(t, e, n);
          }),
          (e.prototype.evaluateDataset = function(t, e) {
            return u(this, void 0, void 0, function() {
              return c(this, function(n) {
                if (!this.built)
                  throw new w(
                    "The model needs to be compiled before being used."
                  );
                return [2, this.model.evaluateDataset(t, e)];
              });
            });
          }),
          (e.prototype.predict = function(t, e) {
            return (
              void 0 === e && (e = {}),
              null == this.model && this.build(),
              this.model.predict(t, e)
            );
          }),
          (e.prototype.predictOnBatch = function(t) {
            return (
              null == this.model && this.build(), this.model.predictOnBatch(t)
            );
          }),
          (e.prototype.compile = function(t) {
            this.build(),
              this.model.compile(t),
              (this.optimizer = this.model.optimizer),
              (this.loss = this.model.loss),
              (this.metrics = this.model.metrics),
              (this.metricsTensors = this.model.metricsTensors),
              (this.metricsNames = this.model.metricsNames);
          }),
          (e.prototype.fit = function(t, e, n) {
            return (
              void 0 === n && (n = {}),
              u(this, void 0, void 0, function() {
                return c(this, function(r) {
                  if (!this.built)
                    throw new w(
                      "The model needs to be compiled before being used."
                    );
                  return [2, this.model.fit(t, e, n)];
                });
              })
            );
          }),
          (e.prototype.fitDataset = function(t, e) {
            return u(this, void 0, void 0, function() {
              return c(this, function(n) {
                if (!this.built)
                  throw new w(
                    "The model needs to be compiled before being used."
                  );
                return [2, this.model.fitDataset(t, e)];
              });
            });
          }),
          (e.prototype.trainOnBatch = function(t, e) {
            return u(this, void 0, void 0, function() {
              return c(this, function(n) {
                return [2, this.model.trainOnBatch(t, e)];
              });
            });
          }),
          (e.fromConfig = function(t, n, i, a) {
            var o;
            void 0 === i && (i = {}), void 0 === a && (a = !1);
            var s = {};
            if (n instanceof Array) {
              if (null == n[0].className || "Merge" === n[0].className)
                throw new _("Legacy serialization format not supported yet.");
              o = n;
            } else
              r["Qc"].assert(
                null != n.layers,
                "When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."
              ),
                (o = n.layers),
                delete n.layers,
                (s = n);
            var u = new t(s);
            if (!(u instanceof e))
              throw new x(
                "Sequential.fromConfig called on non-Sequential input: " + u
              );
            for (var c = 0, l = o; c < l.length; c++) {
              var f = tr(l[c], void 0, a);
              a && f.setFastWeightInitDuringBuild(!0), u.add(f);
            }
            return u;
          }),
          Object.defineProperty(e.prototype, "stopTraining", {
            set: function(t) {
              this.model.stopTraining = t;
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.getConfig = function() {
            for (var t = [], e = 0, n = this.layers; e < n.length; e++) {
              var r = n[e];
              t.push({ className: r.getClassName(), config: r.getConfig() });
            }
            return t;
          }),
          (e.className = "Sequential"),
          e
        );
      })(Wr);
      function Hr(t) {
        return Qe(t);
      }
      r["gc"].registerClass(qr);
      var Kr = (function(t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            a(e, t),
            (e.prototype.getConfig = function() {
              return {};
            }),
            e
          );
        })(r["gc"].Serializable),
        Gr = (function(t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            a(e, t),
            (e.prototype.apply = function(t, e) {
              return void 0 === e && (e = 1), zt(t, e);
            }),
            (e.className = "elu"),
            e
          );
        })(Kr);
      r["gc"].registerClass(Gr);
      var Xr = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t) {
            return Object(r["ec"])(t);
          }),
          (e.className = "selu"),
          e
        );
      })(Kr);
      r["gc"].registerClass(Xr);
      var Jr = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t) {
            return Object(r["Xb"])(t);
          }),
          (e.className = "relu"),
          e
        );
      })(Kr);
      r["gc"].registerClass(Jr);
      var Yr = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t) {
            return Object(r["Jc"])(function() {
              return Object(r["Eb"])(g(6), Object(r["Xb"])(t));
            });
          }),
          (e.className = "relu6"),
          e
        );
      })(Kr);
      r["gc"].registerClass(Yr);
      var Qr = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t) {
            return t;
          }),
          (e.className = "linear"),
          e
        );
      })(Kr);
      r["gc"].registerClass(Qr);
      var Zr = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t) {
            return Object(r["ic"])(t);
          }),
          (e.className = "sigmoid"),
          e
        );
      })(Kr);
      r["gc"].registerClass(Zr);
      var ti = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t) {
            return Wt(t);
          }),
          (e.className = "hardSigmoid"),
          e
        );
      })(Kr);
      r["gc"].registerClass(ti);
      var ei = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t) {
            return Object(r["sc"])(t);
          }),
          (e.className = "softplus"),
          e
        );
      })(Kr);
      r["gc"].registerClass(ei);
      var ni = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t) {
            return Ut(t);
          }),
          (e.className = "softsign"),
          e
        );
      })(Kr);
      r["gc"].registerClass(ni);
      var ri = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t) {
            return Object(r["Gc"])(t);
          }),
          (e.className = "tanh"),
          e
        );
      })(Kr);
      r["gc"].registerClass(ri);
      var ii = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          a(e, t),
          (e.prototype.apply = function(t, e) {
            return void 0 === e && (e = -1), Object(r["rc"])(t, e);
          }),
          (e.className = "softmax"),
          e
        );
      })(Kr);
      function ai(t) {
        return t.getClassName();
      }
      function oi(t, e) {
        return (
          void 0 === e && (e = {}),
          D(t, r["gc"].SerializationMap.getMap().classNameMap, e, "activation")
        );
      }
      function si(t) {
        return null == t
          ? oi({ className: "linear", config: {} })
          : "string" == typeof t
          ? oi({ className: t, config: {} })
          : t instanceof Kr
          ? t
          : oi(t);
      }
      r["gc"].registerClass(ii);
      var ui = (function(t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return a(e, t), e;
        })(r["gc"].Serializable),
        ci = (function(t) {
          function e(e) {
            var n = t.call(this) || this,
              r = null == e || null == e.l1 ? 0.01 : e.l1,
              i = null == e || null == e.l2 ? 0.01 : e.l2;
            return (
              (n.hasL1 = 0 !== r),
              (n.hasL2 = 0 !== i),
              (n.l1 = g(r)),
              (n.l2 = g(i)),
              n
            );
          }
          return (
            a(e, t),
            (e.prototype.apply = function(t) {
              var e = this;
              return Object(r["Jc"])(function() {
                var n = Object(r["Vc"])([1]);
                return (
                  e.hasL1 &&
                    (n = Object(r["g"])(
                      n,
                      Object(r["Ec"])(Object(r["Hb"])(e.l1, Object(r["d"])(t)))
                    )),
                  e.hasL2 &&
                    (n = Object(r["g"])(
                      n,
                      Object(r["Ec"])(Object(r["Hb"])(e.l2, Bt(t)))
                    )),
                  n.asScalar()
                );
              });
            }),
            (e.prototype.getConfig = function() {
              return { l1: this.l1.dataSync()[0], l2: this.l2.dataSync()[0] };
            }),
            (e.fromConfig = function(t, e) {
              return new t({ l1: e.l1, l2: e.l2 });
            }),
            (e.className = "L1L2"),
            e
          );
        })(ui);
      function li(t) {
        return new ci({ l1: null != t ? t.l1 : null, l2: 0 });
      }
      function fi(t) {
        return new ci({ l2: null != t ? t.l2 : null, l1: 0 });
      }
      r["gc"].registerClass(ci);
      var hi = { l1l2: "L1L2" };
      function pi(t) {
        return T(t);
      }
      function di(t, e) {
        return (
          void 0 === e && (e = {}),
          D(t, r["gc"].SerializationMap.getMap().classNameMap, e, "regularizer")
        );
      }
      function mi(t) {
        return null == t
          ? null
          : "string" == typeof t
          ? di({ className: t in hi ? hi[t] : t, config: {} })
          : t instanceof ui
          ? t
          : di(t);
      }
      var vi = (function(t) {
        function e(e) {
          var n = t.call(this, null == e ? {} : e) || this;
          return (
            (n.supportsMasking = !0), null != e && (n.maxValue = e.maxValue), n
          );
        }
        return (
          a(e, t),
          (e.prototype.call = function(t, e) {
            t = Re(t);
            var n = Object(r["Xb"])(t);
            return (
              null != this.maxValue &&
                (n = Object(r["A"])(n, 0, this.maxValue)),
              n
            );
          }),
          (e.prototype.computeOutputShape = function(t) {
            return t;
          }),
          (e.prototype.getConfig = function() {
            var e = { maxValue: this.maxValue },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "ReLU"),
          e
        );
      })(He);
      r["gc"].registerClass(vi);
      var yi = (function(t) {
        function e(e) {
          var n = t.call(this, null == e ? {} : e) || this;
          return (
            (n.DEFAULT_ALPHA = 0.3),
            null == e && (e = {}),
            (n.alpha = null == e.alpha ? n.DEFAULT_ALPHA : e.alpha),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.call = function(t, e) {
            var n = Re(t);
            return Object(r["lb"])(n, this.alpha);
          }),
          (e.prototype.computeOutputShape = function(t) {
            return t;
          }),
          (e.prototype.getConfig = function() {
            var e = { alpha: this.alpha },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "LeakyReLU"),
          e
        );
      })(He);
      r["gc"].registerClass(yi);
      var gi = (function(t) {
        function e(e) {
          var n = t.call(this, null == e ? {} : e) || this;
          if (
            ((n.DEFAULT_ALPHA_INITIALIZER = "zeros"),
            null == e && (e = {}),
            (n.supportsMasking = !0),
            (n.alphaInitializer = me(
              e.alphaInitializer || n.DEFAULT_ALPHA_INITIALIZER
            )),
            (n.alphaRegularizer = mi(e.alphaRegularizer)),
            (n.alphaConstraint = Y(e.alphaConstraint)),
            null == e.sharedAxes)
          )
            n.sharedAxes = null;
          else if (Array.isArray(e.sharedAxes)) n.sharedAxes = e.sharedAxes;
          else {
            if ("number" != typeof e.sharedAxes)
              throw new _(
                "Expected sharedAxes to be a number or an array of numbers, but got " +
                  e.sharedAxes
              );
            n.sharedAxes = [e.sharedAxes];
          }
          return n;
        }
        return (
          a(e, t),
          (e.prototype.build = function(t) {
            var e = (t = De(t)).slice(1);
            if (null != this.sharedAxes)
              for (var n = 0, r = this.sharedAxes; n < r.length; n++)
                e[(a = r[n]) - 1] = 1;
            this.alpha = this.addWeight(
              "alpha",
              e,
              "float32",
              this.alphaInitializer,
              this.alphaRegularizer,
              !0,
              this.alphaConstraint
            );
            var i = {};
            if (null != this.sharedAxes)
              for (var a = 1; a < t.length; ++a) i[a] = t[a];
            (this.inputSpec = [new Ue({ ndim: t.length, axes: i })]),
              (this.built = !0);
          }),
          (e.prototype.call = function(t, e) {
            return (t = Re(t)), Object(r["Rb"])(t, this.alpha.read());
          }),
          (e.prototype.getConfig = function() {
            var e = {
                alphaInitializer: de(this.alphaInitializer),
                alphaRegularizer: pi(this.alphaRegularizer),
                alphaConstraint: X(this.alphaConstraint),
                sharedAxes: this.sharedAxes
              },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "PReLU"),
          e
        );
      })(He);
      r["gc"].registerClass(gi);
      var bi = (function(t) {
        function e(e) {
          var n = t.call(this, null == e ? {} : e) || this;
          if (
            ((n.DEFAULT_ALPHA = 1),
            null == e && (e = {}),
            null != e.alpha && e.alpha !== n.DEFAULT_ALPHA)
          )
            throw new x(
              "Non-default alpha value (" +
                e.alpha +
                ") is not supported by the ELU layer yet."
            );
          return (n.alpha = null == e.alpha ? n.DEFAULT_ALPHA : e.alpha), n;
        }
        return (
          a(e, t),
          (e.prototype.call = function(t, e) {
            var n = Re(t);
            return Object(r["R"])(n);
          }),
          (e.prototype.computeOutputShape = function(t) {
            return t;
          }),
          (e.prototype.getConfig = function() {
            var e = { alpha: this.alpha },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "ELU"),
          e
        );
      })(He);
      r["gc"].registerClass(bi);
      var wi = (function(t) {
        function e(e) {
          var n = t.call(this, null == e ? {} : e) || this;
          return (
            (n.DEFAULT_THETA = 1),
            null == e && (e = {}),
            (n.theta = null == e.theta ? n.DEFAULT_THETA : e.theta),
            (n.thetaTensor = g(n.theta)),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.call = function(t, e) {
            var n = Re(t);
            return n.mul(St(n.greater(this.thetaTensor), "float32"));
          }),
          (e.prototype.computeOutputShape = function(t) {
            return t;
          }),
          (e.prototype.getConfig = function() {
            var e = { theta: this.theta },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "ThresholdedReLU"),
          e
        );
      })(He);
      r["gc"].registerClass(wi);
      var _i = (function(t) {
        function e(e) {
          var n = t.call(this, null == e ? {} : e) || this;
          return (
            (n.DEFAULT_AXIS = 1),
            null == e && (e = {}),
            (n.softmax = new ii().apply),
            (n.axis = null == e.axis ? n.DEFAULT_AXIS : e.axis),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.call = function(t, e) {
            var n = Re(t);
            return this.softmax(n, this.axis);
          }),
          (e.prototype.computeOutputShape = function(t) {
            return t;
          }),
          (e.prototype.getConfig = function() {
            var e = { axis: this.axis },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "Softmax"),
          e
        );
      })(He);
      function xi(t, e, n) {
        if ("number" == typeof t) return S(t, e);
        if (t.length !== e)
          throw new _(
            "The " +
              n +
              " argument must be a tuple of " +
              e +
              " integers. Received: " +
              t.length +
              " elements."
          );
        for (var r = 0; r < e; ++r) {
          var i = t[r];
          if (!gt(i))
            throw new _(
              "The " +
                n +
                " argument must be a tuple of " +
                e +
                " integers. Received: " +
                JSON.stringify(t) +
                " including a non-integer number " +
                i
            );
        }
        return t;
      }
      function Ei(t, e, n, r, i) {
        return (
          void 0 === i && (i = 1),
          null == t
            ? t
            : ((a = "same" === n ? t : t - (e + (e - 1) * (i - 1)) + 1),
              Math.floor((a + r - 1) / r))
        );
        var a;
      }
      function Si(t, e, n, r) {
        if (null == t) return null;
        if ("valid" === r) t = t * e + xt([n - e, 0]);
        else {
          if ("same" !== r) throw new _("Unsupport padding mode: " + r + ".");
          t *= e;
        }
        return t;
      }
      function Ni(t, e) {
        return Object(r["Jc"])(function() {
          return (
            st(e), "channelsFirst" === e ? Object(r["Nc"])(t, [0, 2, 3, 1]) : t
          );
        });
      }
      function Oi(t, e, n, i, a, o, s) {
        return (
          void 0 === i && (i = 1),
          void 0 === a && (a = "valid"),
          void 0 === s && (s = 1),
          Object(r["Jc"])(function() {
            if ((null == o && (o = f()), st(o), 3 !== t.shape.length))
              throw new _(
                "The input of a conv1dWithBias operation should be 3, but is " +
                  t.shape.length +
                  " instead."
              );
            if (3 !== e.shape.length)
              throw new _(
                "The kernel for a conv1dWithBias operation should be 3, but is " +
                  e.shape.length +
                  " instead"
              );
            if (null != n && 1 !== n.shape.length)
              throw new _(
                "The bias for a conv1dWithBias operation should be 1, but is " +
                  e.shape.length +
                  " instead"
              );
            if (
              ("channelsFirst" === o && (t = Object(r["Nc"])(t, [0, 2, 1])),
              "causal" === a)
            )
              throw new x(
                "The support for CAUSAL padding mode in conv1dWithBias is not implemented yet."
              );
            var u = Object(r["H"])(
              t,
              e,
              i,
              "same" === a ? "same" : "valid",
              "NWC",
              s
            );
            return null != n && (u = Ft(u, n)), u;
          })
        );
      }
      function Ii(t, e, n, i, a, o, s) {
        return (
          void 0 === i && (i = [1, 1]),
          void 0 === a && (a = "valid"),
          Object(r["Jc"])(function() {
            if ((null == o && (o = f()), st(o), 3 !== t.rank && 4 !== t.rank))
              throw new _(
                "conv2dWithBias expects input to be of rank 3 or 4, but received " +
                  t.rank +
                  "."
              );
            if (3 !== e.rank && 4 !== e.rank)
              throw new _(
                "conv2dWithBias expects kernel to be of rank 3 or 4, but received " +
                  t.rank +
                  "."
              );
            var u = Ni(t, o);
            if ("causal" === a)
              throw new x(
                "The support for CAUSAL padding mode in conv1dWithBias is not implemented yet."
              );
            return (
              (u = Object(r["I"])(
                u,
                e,
                i,
                "same" === a ? "same" : "valid",
                "NHWC",
                s
              )),
              null != n && (u = Ft(u, n)),
              "channelsFirst" === o && (u = Object(r["Nc"])(u, [0, 3, 1, 2])),
              u
            );
          })
        );
      }
      r["gc"].registerClass(_i);
      var Ci = (function(t) {
          function e(n, r) {
            var i = t.call(this, r) || this;
            if (
              ((i.bias = null),
              (i.DEFAULT_KERNEL_INITIALIZER = "glorotNormal"),
              (i.DEFAULT_BIAS_INITIALIZER = "zeros"),
              e.verifyArgs(r),
              (i.rank = n),
              1 !== i.rank && 2 !== i.rank)
            )
              throw new x(
                "Convolution layer for rank other than 1 or 2 (" +
                  i.rank +
                  ") is not implemented yet."
              );
            if (
              ((i.kernelSize = xi(r.kernelSize, n, "kernelSize")),
              (i.strides = xi(null == r.strides ? 1 : r.strides, n, "strides")),
              (i.padding = null == r.padding ? "valid" : r.padding),
              ut(i.padding),
              (i.dataFormat =
                null == r.dataFormat ? "channelsLast" : r.dataFormat),
              st(i.dataFormat),
              (i.activation = si(r.activation)),
              (i.useBias = null == r.useBias || r.useBias),
              (i.biasInitializer = me(
                r.biasInitializer || i.DEFAULT_BIAS_INITIALIZER
              )),
              (i.biasConstraint = Y(r.biasConstraint)),
              (i.biasRegularizer = mi(r.biasRegularizer)),
              (i.activityRegularizer = mi(r.activityRegularizer)),
              (i.dilationRate = xi(
                null == r.dilationRate ? 1 : r.dilationRate,
                n,
                "dilationRate"
              )),
              1 === i.rank &&
                Array.isArray(i.dilationRate) &&
                1 !== i.dilationRate.length)
            )
              throw new _(
                "dilationRate must be a number or an array of a single number for 1D convolution, but received " +
                  JSON.stringify(i.dilationRate)
              );
            if (2 === i.rank)
              if ("number" == typeof i.dilationRate)
                i.dilationRate = [i.dilationRate, i.dilationRate];
              else if (2 !== i.dilationRate.length)
                throw new _(
                  "dilationRate must be a number or array of two numbers for 2D convolution, but received " +
                    JSON.stringify(i.dilationRate)
                );
            return i;
          }
          return (
            a(e, t),
            (e.verifyArgs = function(t) {
              if (
                (N(
                  "kernelSize" in t,
                  "required key 'kernelSize' not in config"
                ),
                "number" != typeof t.kernelSize &&
                  !U(t.kernelSize, "number", 1, 2))
              )
                throw new _(
                  "BaseConv expects config.kernelSize to be number or number[] with length 1 or 2, but received " +
                    JSON.stringify(t.kernelSize) +
                    "."
                );
            }),
            (e.prototype.getConfig = function() {
              var e = {
                  kernelSize: this.kernelSize,
                  strides: this.strides,
                  padding: this.padding,
                  dataFormat: this.dataFormat,
                  dilationRate: this.dilationRate,
                  activation: ai(this.activation),
                  useBias: this.useBias,
                  biasInitializer: de(this.biasInitializer),
                  biasRegularizer: pi(this.biasRegularizer),
                  activityRegularizer: pi(this.activityRegularizer),
                  biasConstraint: X(this.biasConstraint)
                },
                n = t.prototype.getConfig.call(this);
              return Object.assign(e, n), e;
            }),
            e
          );
        })(He),
        Ai = (function(t) {
          function e(n, r) {
            var i = t.call(this, n, r) || this;
            return (
              (i.kernel = null),
              e.verifyArgs(r),
              (i.filters = r.filters),
              (i.kernelInitializer = me(
                r.kernelInitializer || i.DEFAULT_KERNEL_INITIALIZER
              )),
              (i.kernelConstraint = Y(r.kernelConstraint)),
              (i.kernelRegularizer = mi(r.kernelRegularizer)),
              i
            );
          }
          return (
            a(e, t),
            (e.prototype.build = function(t) {
              t = De(t);
              var e = "channelsFirst" === this.dataFormat ? 1 : t.length - 1;
              if (null == t[e])
                throw new _(
                  "The channel dimension of the input should be defined. Found " +
                    t[e]
                );
              var n,
                r = t[e],
                i = this.kernelSize.concat([r, this.filters]);
              (this.kernel = this.addWeight(
                "kernel",
                i,
                null,
                this.kernelInitializer,
                this.kernelRegularizer,
                !0,
                this.kernelConstraint
              )),
                this.useBias &&
                  (this.bias = this.addWeight(
                    "bias",
                    [this.filters],
                    null,
                    this.biasInitializer,
                    this.biasRegularizer,
                    !0,
                    this.biasConstraint
                  )),
                (this.inputSpec = [
                  { ndim: this.rank + 2, axes: ((n = {}), (n[e] = r), n) }
                ]),
                (this.built = !0);
            }),
            (e.prototype.call = function(t, e) {
              var n = this;
              return Object(r["Jc"])(function() {
                var e;
                t = Re(t);
                var r = null == n.bias ? null : n.bias.read();
                if (1 === n.rank)
                  e = Oi(
                    t,
                    n.kernel.read(),
                    r,
                    n.strides[0],
                    n.padding,
                    n.dataFormat,
                    n.dilationRate[0]
                  );
                else if (2 === n.rank)
                  e = Ii(
                    t,
                    n.kernel.read(),
                    r,
                    n.strides,
                    n.padding,
                    n.dataFormat,
                    n.dilationRate
                  );
                else if (3 === n.rank)
                  throw new x("3D convolution is not implemented yet.");
                return null != n.activation && (e = n.activation.apply(e)), e;
              });
            }),
            (e.prototype.computeOutputShape = function(t) {
              t = De(t);
              for (
                var e = [],
                  n =
                    "channelsLast" === this.dataFormat
                      ? t.slice(1, t.length - 1)
                      : t.slice(2),
                  r = 0;
                r < n.length;
                ++r
              ) {
                var i = Ei(
                  n[r],
                  this.kernelSize[r],
                  this.padding,
                  this.strides[r],
                  "number" == typeof this.dilationRate
                    ? this.dilationRate
                    : this.dilationRate[r]
                );
                e.push(i);
              }
              var a = [t[0]];
              return (
                "channelsLast" === this.dataFormat
                  ? (a = a.concat(e)).push(this.filters)
                  : (a.push(this.filters), (a = a.concat(e))),
                a
              );
            }),
            (e.prototype.getConfig = function() {
              var e = {
                  filters: this.filters,
                  kernelInitializer: de(this.kernelInitializer),
                  kernelRegularizer: pi(this.kernelRegularizer),
                  kernelConstraint: X(this.kernelConstraint)
                },
                n = t.prototype.getConfig.call(this);
              return Object.assign(e, n), e;
            }),
            (e.verifyArgs = function(t) {
              if (
                !("filters" in t) ||
                "number" != typeof t.filters ||
                t.filters < 1
              )
                throw new _(
                  "Convolution layer expected config.filters to be a 'number' > 0 but got " +
                    JSON.stringify(t.filters)
                );
            }),
            e
          );
        })(Ci),
        ki = (function(t) {
          function e(n) {
            var r = t.call(this, 2, n) || this;
            return e.verifyArgs(n), r;
          }
          return (
            a(e, t),
            (e.prototype.getConfig = function() {
              var e = t.prototype.getConfig.call(this);
              return delete e.rank, e;
            }),
            (e.verifyArgs = function(t) {
              if (
                "number" != typeof t.kernelSize &&
                !U(t.kernelSize, "number", 1, 2)
              )
                throw new _(
                  "Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received " +
                    JSON.stringify(t.kernelSize) +
                    "."
                );
            }),
            (e.className = "Conv2D"),
            e
          );
        })(Ai);
      r["gc"].registerClass(ki);
      var Pi = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          if (
            ((n.inputSpec = [new Ue({ ndim: 4 })]),
            "same" !== n.padding && "valid" !== n.padding)
          )
            throw new _(
              "Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode " +
                n.padding
            );
          return n;
        }
        return (
          a(e, t),
          (e.prototype.build = function(t) {
            if (4 !== (t = De(t)).length)
              throw new _(
                "Input should have rank 4; Received input shape: " +
                  JSON.stringify(t)
              );
            var e = "channelsFirst" === this.dataFormat ? 1 : t.length - 1;
            if (null == t[e])
              throw new _(
                "The channel dimension of the inputs should be defined. Found `None`."
              );
            var n,
              r = t[e],
              i = this.kernelSize.concat([this.filters, r]);
            (this.kernel = this.addWeight(
              "kernel",
              i,
              "float32",
              this.kernelInitializer,
              this.kernelRegularizer,
              !0,
              this.kernelConstraint
            )),
              this.useBias &&
                (this.bias = this.addWeight(
                  "bias",
                  [this.filters],
                  "float32",
                  this.biasInitializer,
                  this.biasRegularizer,
                  !0,
                  this.biasConstraint
                )),
              (this.inputSpec = [
                new Ue({ ndim: 4, axes: ((n = {}), (n[e] = r), n) })
              ]),
              (this.built = !0);
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              var e = Re(t);
              if (4 !== e.shape.length)
                throw new _(
                  "Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-" +
                    e.shape.length
                );
              var i,
                a,
                o = e.shape,
                s = o[0];
              "channelsFirst" === n.dataFormat
                ? ((i = 2), (a = 3))
                : ((i = 1), (a = 2));
              var u = o[i],
                c = o[a],
                l = n.kernelSize[0],
                f = n.kernelSize[1],
                h = n.strides[0],
                p = n.strides[1],
                d = [
                  s,
                  Si(u, h, l, n.padding),
                  Si(c, p, f, n.padding),
                  n.filters
                ];
              "channelsLast" !== n.dataFormat &&
                (e = Object(r["Nc"])(e, [0, 2, 3, 1]));
              var m = Object(r["J"])(
                e,
                n.kernel.read(),
                d,
                n.strides,
                n.padding
              );
              return (
                "channelsLast" !== n.dataFormat &&
                  (m = Object(r["Nc"])(m, [0, 3, 1, 2])),
                null != n.bias && (m = Ft(m, n.bias.read(), n.dataFormat)),
                null != n.activation && (m = n.activation.apply(m)),
                m
              );
            });
          }),
          (e.prototype.computeOutputShape = function(t) {
            var e,
              n,
              r,
              i = (t = De(t)).slice();
            "channelsFirst" === this.dataFormat
              ? ((e = 1), (n = 2), (r = 3))
              : ((e = 3), (n = 1), (r = 2));
            var a = this.kernelSize[0],
              o = this.kernelSize[1],
              s = this.strides[0],
              u = this.strides[1];
            return (
              (i[e] = this.filters),
              (i[n] = Si(i[n], s, a, this.padding)),
              (i[r] = Si(i[r], u, o, this.padding)),
              i
            );
          }),
          (e.prototype.getConfig = function() {
            var e = t.prototype.getConfig.call(this);
            return delete e.dilationRate, e;
          }),
          (e.className = "Conv2DTranspose"),
          e
        );
      })(ki);
      r["gc"].registerClass(Pi);
      var Ti = (function(t) {
          function e(e, n) {
            var r = t.call(this, e, n) || this;
            if (
              ((r.DEFAULT_DEPTHWISE_INITIALIZER = "glorotUniform"),
              (r.DEFAULT_POINTWISE_INITIALIZER = "glorotUniform"),
              (r.depthwiseKernel = null),
              (r.pointwiseKernel = null),
              null == n.filters)
            )
              throw new _(
                "The `filters` configuration field is required by SeparableConv, but is unspecified."
              );
            if (
              null != n.kernelInitializer ||
              null != n.kernelRegularizer ||
              null != n.kernelConstraint
            )
              throw new _(
                "Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead."
              );
            if (
              null != n.padding &&
              "same" !== n.padding &&
              "valid" !== n.padding
            )
              throw new _(
                "SeparableConv" +
                  r.rank +
                  "D supports only padding modes: 'same' and 'valid', but received " +
                  JSON.stringify(n.padding)
              );
            return (
              (r.depthMultiplier =
                null == n.depthMultiplier ? 1 : n.depthMultiplier),
              (r.depthwiseInitializer = me(
                n.depthwiseInitializer || r.DEFAULT_DEPTHWISE_INITIALIZER
              )),
              (r.depthwiseRegularizer = mi(n.depthwiseRegularizer)),
              (r.depthwiseConstraint = Y(n.depthwiseConstraint)),
              (r.pointwiseInitializer = me(
                n.depthwiseInitializer || r.DEFAULT_POINTWISE_INITIALIZER
              )),
              (r.pointwiseRegularizer = mi(n.pointwiseRegularizer)),
              (r.pointwiseConstraint = Y(n.pointwiseConstraint)),
              r
            );
          }
          return (
            a(e, t),
            (e.prototype.build = function(t) {
              if ((t = De(t)).length < this.rank + 2)
                throw new _(
                  "Inputs to SeparableConv" +
                    this.rank +
                    "D should have rank " +
                    (this.rank + 2) +
                    ", but received input shape: " +
                    JSON.stringify(t)
                );
              var e,
                n = "channelsFirst" === this.dataFormat ? 1 : t.length - 1;
              if (null == t[n] || t[n] < 0)
                throw new _(
                  "The channel dimension of the inputs should be defined, but found " +
                    JSON.stringify(t[n])
                );
              for (
                var r = t[n],
                  i = this.kernelSize.concat([r, this.depthMultiplier]),
                  a = [],
                  o = 0;
                o < this.rank;
                ++o
              )
                a.push(1);
              a.push(r * this.depthMultiplier, this.filters),
                (this.depthwiseKernel = this.addWeight(
                  "depthwise_kernel",
                  i,
                  "float32",
                  this.depthwiseInitializer,
                  this.depthwiseRegularizer,
                  !0,
                  this.depthwiseConstraint
                )),
                (this.pointwiseKernel = this.addWeight(
                  "pointwise_kernel",
                  a,
                  "float32",
                  this.pointwiseInitializer,
                  this.pointwiseRegularizer,
                  !0,
                  this.pointwiseConstraint
                )),
                this.useBias
                  ? (this.bias = this.addWeight(
                      "bias",
                      [this.filters],
                      "float32",
                      this.biasInitializer,
                      this.biasRegularizer,
                      !0,
                      this.biasConstraint
                    ))
                  : (this.bias = null),
                (this.inputSpec = [
                  new Ue({
                    ndim: this.rank + 2,
                    axes: ((e = {}), (e[n] = r), e)
                  })
                ]),
                (this.built = !0);
            }),
            (e.prototype.call = function(t, e) {
              var n = this;
              return Object(r["Jc"])(function() {
                var e;
                if (((t = Re(t)), 1 === n.rank))
                  throw new x(
                    "1D separable convolution is not implemented yet."
                  );
                return (
                  2 === n.rank &&
                    ("channelsFirst" === n.dataFormat &&
                      (t = Object(r["Nc"])(t, [0, 2, 3, 1])),
                    (e = Object(r["fc"])(
                      t,
                      n.depthwiseKernel.read(),
                      n.pointwiseKernel.read(),
                      n.strides,
                      n.padding,
                      n.dilationRate,
                      "NHWC"
                    ))),
                  n.useBias && (e = Ft(e, n.bias.read(), n.dataFormat)),
                  null != n.activation && (e = n.activation.apply(e)),
                  "channelsFirst" === n.dataFormat &&
                    (e = Object(r["Nc"])(e, [0, 3, 1, 2])),
                  e
                );
              });
            }),
            (e.prototype.getConfig = function() {
              var e = t.prototype.getConfig.call(this);
              return (
                delete e.rank,
                delete e.kernelInitializer,
                delete e.kernelRegularizer,
                delete e.kernelConstraint,
                (e.depthwiseInitializer = de(this.depthwiseInitializer)),
                (e.pointwiseInitializer = de(this.pointwiseInitializer)),
                (e.depthwiseRegularizer = pi(this.depthwiseRegularizer)),
                (e.pointwiseRegularizer = pi(this.pointwiseRegularizer)),
                (e.depthwiseConstraint = X(this.depthwiseConstraint)),
                (e.pointwiseConstraint = X(this.pointwiseConstraint)),
                e
              );
            }),
            (e.className = "SeparableConv"),
            e
          );
        })(Ai),
        Ri = (function(t) {
          function e(e) {
            return t.call(this, 2, e) || this;
          }
          return a(e, t), (e.className = "SeparableConv2D"), e;
        })(Ti);
      r["gc"].registerClass(Ri);
      var Di = (function(t) {
        function e(n) {
          var r = t.call(this, 1, n) || this;
          return e.verifyArgs(n), (r.inputSpec = [{ ndim: 3 }]), r;
        }
        return (
          a(e, t),
          (e.prototype.getConfig = function() {
            var e = t.prototype.getConfig.call(this);
            return delete e.rank, delete e.dataFormat, e;
          }),
          (e.verifyArgs = function(t) {
            if (
              "number" != typeof t.kernelSize &&
              !U(t.kernelSize, "number", 1, 1)
            )
              throw new _(
                "Conv1D expects config.kernelSize to be number or number[] with length 1, but received " +
                  JSON.stringify(t.kernelSize) +
                  "."
              );
          }),
          (e.className = "Conv1D"),
          e
        );
      })(Ai);
      r["gc"].registerClass(Di);
      var Mi = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (
            "number" == typeof e.cropping
              ? (n.cropping = [
                  [e.cropping, e.cropping],
                  [e.cropping, e.cropping]
                ])
              : "number" == typeof e.cropping[0]
              ? (n.cropping = [
                  [e.cropping[0], e.cropping[0]],
                  [e.cropping[1], e.cropping[1]]
                ])
              : (n.cropping = e.cropping),
            (n.dataFormat =
              void 0 === e.dataFormat ? "channelsLast" : e.dataFormat),
            (n.inputSpec = [{ ndim: 4 }]),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.computeOutputShape = function(t) {
            return "channelsFirst" === this.dataFormat
              ? [
                  t[0],
                  t[1],
                  t[2] - this.cropping[0][0] - this.cropping[0][1],
                  t[3] - this.cropping[1][0] - this.cropping[1][1]
                ]
              : [
                  t[0],
                  t[1] - this.cropping[0][0] - this.cropping[0][1],
                  t[2] - this.cropping[1][0] - this.cropping[1][1],
                  t[3]
                ];
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              return (
                (t = Re(t)),
                "channelsLast" === n.dataFormat
                  ? Pt(
                      Pt(
                        t,
                        n.cropping[0][0],
                        t.shape[1] - n.cropping[0][0] - n.cropping[0][1],
                        2
                      ),
                      n.cropping[1][0],
                      t.shape[2] - n.cropping[1][1] - n.cropping[1][0],
                      3
                    )
                  : Pt(
                      Pt(
                        t,
                        n.cropping[0][0],
                        t.shape[2] - n.cropping[0][0] - n.cropping[0][1],
                        3
                      ),
                      n.cropping[1][0],
                      t.shape[3] - n.cropping[1][1] - n.cropping[1][0],
                      4
                    )
              );
            });
          }),
          (e.prototype.getConfig = function() {
            var e = { cropping: this.cropping, dataFormat: this.dataFormat },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "Cropping2D"),
          e
        );
      })(He);
      r["gc"].registerClass(Mi);
      var ji = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (
            (n.DEFAULT_SIZE = [2, 2]),
            (n.inputSpec = [{ ndim: 4 }]),
            (n.size = null == e.size ? n.DEFAULT_SIZE : e.size),
            (n.dataFormat =
              null == e.dataFormat ? "channelsLast" : e.dataFormat),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.computeOutputShape = function(t) {
            if ("channelsFirst" === this.dataFormat) {
              var e = null == t[2] ? null : this.size[0] * t[2],
                n = null == t[3] ? null : this.size[1] * t[3];
              return [t[0], t[1], e, n];
            }
            return (
              (e = null == t[1] ? null : this.size[0] * t[1]),
              (n = null == t[2] ? null : this.size[1] * t[2]),
              [t[0], e, n, t[3]]
            );
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              var e = Re(t),
                i = e.shape;
              if ("channelsFirst" === n.dataFormat) {
                e = Object(r["Nc"])(e, [0, 2, 3, 1]);
                var a = n.size[0] * i[2],
                  o = n.size[1] * i[3],
                  s = e.resizeNearestNeighbor([a, o]);
                return Object(r["Nc"])(s, [0, 3, 1, 2]);
              }
              return (
                (a = n.size[0] * i[1]),
                (o = n.size[1] * i[2]),
                e.resizeNearestNeighbor([a, o])
              );
            });
          }),
          (e.prototype.getConfig = function() {
            var e = { size: this.size, dataFormat: this.dataFormat },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "UpSampling2D"),
          e
        );
      })(He);
      function Li(t, e, n, i, a, o) {
        return (
          void 0 === n && (n = [1, 1]),
          void 0 === i && (i = "valid"),
          Object(r["Jc"])(function() {
            null == a && (a = f()), st(a);
            var s = Ni(t, a);
            if (4 !== t.rank)
              throw new _(
                "Input for depthwiseConv2d is required to be 4-D, but is instead " +
                  t.rank +
                  "-D"
              );
            if (4 !== e.rank)
              throw new _(
                "depthwiseKernel is required to be 4-D, but is instead " +
                  e.rank +
                  "-D"
              );
            return (
              (s = Object(r["O"])(
                s,
                e,
                n,
                "same" === i ? "same" : "valid",
                "NHWC",
                o
              )),
              "channelsFirst" === a && (s = Object(r["Nc"])(s, [0, 3, 1, 2])),
              s
            );
          })
        );
      }
      r["gc"].registerClass(ji);
      var Bi = (function(t) {
        function e(e) {
          var n = t.call(this, 2, e) || this;
          return (
            (n.depthwiseKernel = null),
            (n.depthMultiplier =
              null == e.depthMultiplier ? 1 : e.depthMultiplier),
            (n.depthwiseInitializer = me(
              e.depthwiseInitializer || n.DEFAULT_KERNEL_INITIALIZER
            )),
            (n.depthwiseConstraint = Y(e.depthwiseConstraint)),
            (n.depthwiseRegularizer = mi(e.depthwiseRegularizer)),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.build = function(t) {
            if ((t = De(t)).length < 4)
              throw new _(
                "Inputs to DepthwiseConv2D should have rank 4. Received input shape: " +
                  JSON.stringify(t) +
                  "."
              );
            var e = "channelsFirst" === this.dataFormat ? 1 : 3;
            if (null == t[e] || t[e] < 0)
              throw new _(
                "The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (" +
                  t[e] +
                  ")."
              );
            var n = t[e],
              r = [
                this.kernelSize[0],
                this.kernelSize[1],
                n,
                this.depthMultiplier
              ];
            (this.depthwiseKernel = this.addWeight(
              "depthwise_kernel",
              r,
              null,
              this.depthwiseInitializer,
              this.depthwiseRegularizer,
              !0,
              this.depthwiseConstraint
            )),
              this.useBias
                ? (this.bias = this.addWeight(
                    "bias",
                    [n * this.depthMultiplier],
                    null,
                    this.biasInitializer,
                    this.biasRegularizer,
                    !0,
                    this.biasConstraint
                  ))
                : (this.bias = null),
              (this.built = !0);
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              var e = Li(
                (t = Re(t)),
                n.depthwiseKernel.read(),
                n.strides,
                n.padding,
                n.dataFormat,
                null
              );
              return (
                n.useBias && (e = Ft(e, n.bias.read(), n.dataFormat)),
                null != n.activation && (e = n.activation.apply(e)),
                e
              );
            });
          }),
          (e.prototype.computeOutputShape = function(t) {
            t = De(t);
            var e = "channelsFirst" === this.dataFormat ? t[2] : t[1],
              n = "channelsFirst" === this.dataFormat ? t[3] : t[2],
              r =
                "channelsFirst" === this.dataFormat
                  ? t[1] * this.depthMultiplier
                  : t[3] * this.depthMultiplier,
              i = Ei(e, this.kernelSize[0], this.padding, this.strides[0]),
              a = Ei(n, this.kernelSize[1], this.padding, this.strides[1]);
            return "channelsFirst" === this.dataFormat
              ? [t[0], r, i, a]
              : [t[0], i, a, r];
          }),
          (e.prototype.getConfig = function() {
            var e = t.prototype.getConfig.call(this);
            return (
              (e.depthMultiplier = this.depthMultiplier),
              (e.depthwiseInitializer = de(this.depthwiseInitializer)),
              (e.depthwiseRegularizer = pi(this.depthwiseRegularizer)),
              (e.depthwiseConstraint = X(this.depthwiseRegularizer)),
              e
            );
          }),
          (e.className = "DepthwiseConv2D"),
          e
        );
      })(Ci);
      r["gc"].registerClass(Bi);
      var Fi = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          if (
            ((n.rate = Math.max(Math.min(e.rate, 1), 0)),
            (n.rateScalar = g(n.rate)),
            (n.noiseShape = e.noiseShape),
            (n.seed = e.seed),
            null != n.seed)
          )
            throw new x(
              "Non-default seed is not implemented in Dropout layer yet: " +
                n.seed
            );
          return (n.supportsMasking = !0), n;
        }
        return (
          a(e, t),
          (e.prototype.getNoiseShape = function(t) {
            if (null == this.noiseShape) return this.noiseShape;
            for (
              var e = t.shape, n = [], r = 0;
              r < this.noiseShape.length;
              ++r
            )
              n.push(null == this.noiseShape[r] ? e[r] : this.noiseShape[r]);
            return n;
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              n.invokeCallHook(t, e);
              var i = Re(t);
              if (
                null != n.noiseShape &&
                !r["Qc"].arraysEqual(i.shape, n.noiseShape)
              )
                throw new x(
                  "Non-default noise shape is not implemented in Dropout layer yet: " +
                    JSON.stringify(n.noiseShape)
                );
              if (0 < n.rate && n.rate < 1) {
                var a = null != e.training && e.training,
                  o = n.getNoiseShape(i);
                return $t(
                  function() {
                    return Vt(i, n.rateScalar, o, n.seed);
                  },
                  function() {
                    return i;
                  },
                  a
                );
              }
              return t;
            });
          }),
          (e.prototype.getConfig = function() {
            var e = {
                rate: this.rate,
                noiseShape: this.noiseShape,
                seed: this.seed
              },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.prototype.dispose = function() {
            var e = t.prototype.dispose.call(this);
            return (
              this.rateScalar.isDisposed ||
                (this.rateScalar.dispose(), e.numDisposedVariables++),
              e
            );
          }),
          (e.className = "Dropout"),
          e
        );
      })(He);
      r["gc"].registerClass(Fi);
      var zi = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          if (
            ((n.activation = null),
            (n.useBias = !0),
            (n.kernel = null),
            (n.bias = null),
            (n.DEFAULT_KERNEL_INITIALIZER = "glorotNormal"),
            (n.DEFAULT_BIAS_INITIALIZER = "zeros"),
            null == e.batchInputShape &&
              null == e.inputShape &&
              null != e.inputDim)
          ) {
            var r = null;
            null != e.batchSize && (r = e.batchSize),
              (n.batchInputShape = [r, e.inputDim]);
          }
          return (
            (n.units = e.units),
            (n.activation = si(e.activation)),
            null != e.useBias && (n.useBias = e.useBias),
            (n.kernelInitializer = me(
              e.kernelInitializer || n.DEFAULT_KERNEL_INITIALIZER
            )),
            (n.biasInitializer = me(
              e.biasInitializer || n.DEFAULT_BIAS_INITIALIZER
            )),
            (n.kernelConstraint = Y(e.kernelConstraint)),
            (n.biasConstraint = Y(e.biasConstraint)),
            (n.kernelRegularizer = mi(e.kernelRegularizer)),
            (n.biasRegularizer = mi(e.biasRegularizer)),
            (n.activityRegularizer = mi(e.activityRegularizer)),
            (n.supportsMasking = !0),
            (n.inputSpec = [{ minNDim: 2 }]),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.build = function(t) {
            var e,
              n = (t = De(t))[t.length - 1];
            null == this.kernel &&
              ((this.kernel = this.addWeight(
                "kernel",
                [n, this.units],
                null,
                this.kernelInitializer,
                this.kernelRegularizer,
                !0,
                this.kernelConstraint
              )),
              this.useBias &&
                (this.bias = this.addWeight(
                  "bias",
                  [this.units],
                  null,
                  this.biasInitializer,
                  this.biasRegularizer,
                  !0,
                  this.biasConstraint
                ))),
              (this.inputSpec = [
                { minNDim: 2, axes: ((e = {}), (e[-1] = n), e) }
              ]),
              (this.built = !0);
          }),
          (e.prototype.computeOutputShape = function(t) {
            var e = (t = De(t)).slice();
            return (e[e.length - 1] = this.units), e;
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              n.invokeCallHook(t, e);
              var r = jt(Re(t), n.kernel.read());
              return (
                null != n.bias && (r = Ft(r, n.bias.read())),
                null != n.activation && (r = n.activation.apply(r)),
                r
              );
            });
          }),
          (e.prototype.getConfig = function() {
            var e = {
                units: this.units,
                activation: ai(this.activation),
                useBias: this.useBias,
                kernelInitializer: de(this.kernelInitializer),
                biasInitializer: de(this.biasInitializer),
                kernelRegularizer: pi(this.kernelRegularizer),
                biasRegularizer: pi(this.biasRegularizer),
                activityRegularizer: pi(this.activityRegularizer),
                kernelConstraint: X(this.kernelConstraint),
                biasConstraint: X(this.biasConstraint)
              },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "Dense"),
          e
        );
      })(He);
      r["gc"].registerClass(zi);
      var Ui = (function(t) {
        function e(e) {
          var n = t.call(this, e || {}) || this;
          return (n.inputSpec = [{ minNDim: 3 }]), n;
        }
        return (
          a(e, t),
          (e.prototype.computeOutputShape = function(t) {
            for (var e = 0, n = (t = De(t)).slice(1); e < n.length; e++)
              if (null == n[e])
                throw new _(
                  'The shape of the input to "Flatten" is not fully defined (got ' +
                    t.slice(1) +
                    '). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.'
                );
            return [t[0], bt(t, 1)];
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              return n.invokeCallHook(t, e), Ct(Re(t));
            });
          }),
          (e.className = "Flatten"),
          e
        );
      })(He);
      r["gc"].registerClass(Ui);
      var Vi = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (n.supportsMasking = !0), (n.activation = si(e.activation)), n;
        }
        return (
          a(e, t),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              n.invokeCallHook(t, e);
              var r = Re(t);
              return n.activation.apply(r);
            });
          }),
          (e.prototype.getConfig = function() {
            var e = { activation: ai(this.activation) },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "Activation"),
          e
        );
      })(He);
      r["gc"].registerClass(Vi);
      var Wi = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (n.n = e.n), (n.inputSpec = [{ ndim: 2 }]), n;
        }
        return (
          a(e, t),
          (e.prototype.computeOutputShape = function(t) {
            return [t[0], this.n, t[1]];
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              return Ot((t = Re(t)), n.n);
            });
          }),
          (e.prototype.getConfig = function() {
            var e = { n: this.n },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "RepeatVector"),
          e
        );
      })(He);
      r["gc"].registerClass(Wi);
      var $i = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          n.targetShape = e.targetShape;
          for (var r = 0; r < n.targetShape.length; ++r)
            n.isUnknown(n.targetShape[r]) && (n.targetShape[r] = null);
          return n;
        }
        return (
          a(e, t),
          (e.prototype.isUnknown = function(t) {
            return t < 0 || null == t;
          }),
          (e.prototype.fixUnknownDimension = function(t, e) {
            for (
              var n = "Total size of new array must be unchanged.",
                r = e.slice(),
                i = 1,
                a = null,
                o = 0;
              o < r.length;
              ++o
            ) {
              var s = r[o];
              if (this.isUnknown(s)) {
                if (null !== a)
                  throw new _("Can only specifiy one unknown dimension.");
                a = o;
              } else i *= s;
            }
            var u = bt(t);
            if (null !== a) {
              if (0 === i || u % i != 0) throw new _(n);
              r[a] = u / i;
            } else if (u !== i) throw new _(n);
            return r;
          }),
          (e.prototype.computeOutputShape = function(t) {
            for (var e = !1, n = 0; n < t.length; ++n)
              if (this.isUnknown(t[n])) {
                e = !0;
                break;
              }
            return e
              ? t.slice(0, 1).concat(this.targetShape)
              : t
                  .slice(0, 1)
                  .concat(
                    this.fixUnknownDimension(t.slice(1), this.targetShape)
                  );
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              n.invokeCallHook(t, e);
              var r = Re(t),
                i = r.shape,
                a = i
                  .slice(0, 1)
                  .concat(n.fixUnknownDimension(i.slice(1), n.targetShape));
              return r.reshape(a);
            });
          }),
          (e.prototype.getConfig = function() {
            var e = { targetShape: this.targetShape },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "Reshape"),
          e
        );
      })(He);
      r["gc"].registerClass($i);
      var qi = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          if (null == e.dims)
            throw new Error(
              "Required configuration field `dims` is missing during Permute constructor call."
            );
          if (!Array.isArray(e.dims))
            throw new Error(
              "Permute constructor requires `dims` to be an Array, but received " +
                e.dims +
                " instead."
            );
          var i = Et(1, e.dims.length + 1);
          if (!r["Qc"].arraysEqual(e.dims.slice().sort(), i))
            throw new Error(
              "Invalid permutation `dims`: " +
                JSON.stringify(e.dims) +
                " `dims` must contain consecutive integers starting from 1."
            );
          return (
            (n.dims = e.dims),
            (n.dimsIncludingBatch = [0].concat(n.dims)),
            (n.inputSpec = [new Ue({ ndim: n.dims.length + 1 })]),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.computeOutputShape = function(t) {
            var e = (t = De(t)).slice();
            return (
              this.dims.forEach(function(n, r) {
                e[r + 1] = t[n];
              }),
              e
            );
          }),
          (e.prototype.call = function(t, e) {
            return Object(r["Nc"])(Re(t), this.dimsIncludingBatch);
          }),
          (e.prototype.getConfig = function() {
            var e = { dims: this.dims },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "Permute"),
          e
        );
      })(He);
      r["gc"].registerClass(qi);
      var Hi = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          if (
            ((n.embeddings = null),
            (n.DEFAULT_EMBEDDINGS_INITIALIZER = "randomUniform"),
            null == e.batchInputShape && null == e.inputShape)
          ) {
            var r = null;
            null != e.batchSize && (r = e.batchSize),
              null == e.inputLength
                ? (n.batchInputShape = [r, null])
                : (n.batchInputShape = [r].concat(C(e.inputLength)));
          }
          return (
            (n.inputDim = e.inputDim),
            (n.outputDim = e.outputDim),
            (n.embeddingsInitializer = me(
              e.embeddingsInitializer || n.DEFAULT_EMBEDDINGS_INITIALIZER
            )),
            (n.embeddingsRegularizer = mi(e.embeddingsRegularizer)),
            (n.activityRegularizer = mi(e.activityRegularizer)),
            (n.embeddingsConstraint = Y(e.embeddingsConstraint)),
            (n.maskZero = e.maskZero),
            (n.supportsMasking = e.maskZero),
            (n.inputLength = e.inputLength),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.build = function(t) {
            (this.embeddings = this.addWeight(
              "embeddings",
              [this.inputDim, this.outputDim],
              this.dtype,
              this.embeddingsInitializer,
              this.embeddingsRegularizer,
              !0,
              this.embeddingsConstraint
            )),
              (this.built = !0);
          }),
          (e.prototype.warnOnIncompatibleInputShape = function(t) {}),
          (e.prototype.computeMask = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              return n.maskZero
                ? ((t = Re(t)), Object(r["Lb"])(t, Object(r["Wc"])(t)))
                : null;
            });
          }),
          (e.prototype.computeOutputShape = function(t) {
            if (((t = De(t)), null == this.inputLength))
              return t.concat([this.outputDim]);
            var e = C(this.inputLength);
            if (e.length !== t.length - 1)
              throw new _(
                '"inputLength" is ' +
                  this.inputLength +
                  ", but received input shape has shape " +
                  t
              );
            for (var n = 0, r = 0; r < e.length; ++r) {
              var i = e[r],
                a = t[r + 1];
              if (null != i && null != a && i !== a)
                throw new _(
                  '"inputLength" is ' +
                    this.inputLength +
                    ", but received input shape has shape " +
                    t
                );
              null == i && (e[n] = a), n++;
            }
            return [t[0]].concat(e, [this.outputDim]);
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              n.invokeCallHook(t, e);
              var r = Re(t);
              return (
                "int32" !== r.dtype && (r = St(r, "int32")),
                Lt(n.embeddings.read(), r.as1D()).reshape(
                  De(n.computeOutputShape(r.shape))
                )
              );
            });
          }),
          (e.prototype.getConfig = function() {
            var e = {
                inputDim: this.inputDim,
                outputDim: this.outputDim,
                embeddingsInitializer: de(this.embeddingsInitializer),
                embeddingsRegularizer: pi(this.embeddingsRegularizer),
                activityRegularizer: pi(this.activityRegularizer),
                embeddingsConstraint: X(this.embeddingsConstraint),
                maskZero: this.maskZero,
                inputLength: this.inputLength
              },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "Embedding"),
          e
        );
      })(He);
      r["gc"].registerClass(Hi);
      var Ki = (function(t) {
          function e(e) {
            var n = t.call(this, e || {}) || this;
            return (n.supportsMasking = !0), n;
          }
          return (
            a(e, t),
            (e.prototype.mergeFunction = function(t) {
              throw new x();
            }),
            (e.prototype.computeElementwiseOpOutputShape = function(t, e) {
              if (null == t || null == e) return null;
              if (t.length < e.length)
                return this.computeElementwiseOpOutputShape(e, t);
              if (0 === e.length) return t;
              for (
                var n = t.slice(0, t.length - e.length), r = 0;
                r < e.length;
                ++r
              ) {
                var i = t[t.length - e.length + r],
                  a = e[r];
                if (null == i || null == a || i < 0 || a < 0) n.push(null);
                else if (1 === i) n.push(a);
                else if (1 === a) n.push(i);
                else {
                  if (i !== a)
                    throw new _(
                      "Operands could not be broadcast together with shapes " +
                        JSON.stringify(t) +
                        " " +
                        JSON.stringify(e)
                    );
                  n.push(i);
                }
              }
              return n;
            }),
            (e.prototype.build = function(t) {
              if (
                (Array.isArray(t) && !Array.isArray(t[0]) && (t = [De(t)]),
                (t = t).length < 2)
              )
                throw new _(
                  "A merge layer should be called on an Array of at least 2 inputs. Got " +
                    t.length +
                    " input(s)."
                );
              for (var e = [], n = 0, r = t; n < r.length; n++)
                null != (o = r[n]) && null !== o[0] && e.push(o[0]);
              if ((e = B(e)).length > 1)
                throw new _(
                  "Can not merge tensors with different batch sizes. Got tensors with shapes: " +
                    JSON.stringify(t) +
                    "."
                );
              for (
                var i = null == t[0] ? null : t[0].slice(1), a = 1;
                a < t.length;
                ++a
              ) {
                var o = null == t[a] ? null : t[a].slice(1);
                i = this.computeElementwiseOpOutputShape(i, o);
              }
              var s = t.map(function(t) {
                return t.length;
              });
              -1 === t.indexOf(null) && 1 === B(s).length
                ? (this.reshapeRequired = !1)
                : (this.reshapeRequired = !0);
            }),
            (e.prototype.call = function(t, e) {
              var n = this;
              return Object(r["Jc"])(function() {
                if (((t = t), n.reshapeRequired)) {
                  var e = [],
                    i = t.map(function(t) {
                      return t.rank;
                    });
                  if (-1 === i.indexOf(null)) {
                    for (var a = xt(i), o = 0, s = t; o < s.length; o++) {
                      for (var u = (p = s[o]).rank, c = 0; c < a - u; ++c)
                        p = Nt(p, 1);
                      e.push(p);
                    }
                    return n.mergeFunction(e);
                  }
                  for (var l = !1, f = 0, h = t; f < h.length; f++) {
                    var p;
                    if (null == (u = (p = h[f]).rank)) {
                      var d = p.shape,
                        m = d[0],
                        v = d.slice(1).concat([m]),
                        y = p.reshape([m].concat(bt(d.slice(1))));
                      (y = (y = Object(r["Nc"])(y, [1, 0])).reshape(v)),
                        e.push(y),
                        (l = !0);
                    } else if (u > 1) {
                      var g = Et(1, u).concat([0]);
                      e.push(Object(r["Nc"])(p, g)), (l = !0);
                    } else e.push(p);
                  }
                  var b = n.mergeFunction(e),
                    w = b.rank;
                  if (l)
                    if (null == w) {
                      var _ = b.shape;
                      (v = [(m = _[_.length - 1])].concat(
                        _.slice(0, _.length - 1)
                      )),
                        (b = Object(r["Nc"])(b.reshape([-1, m]), [
                          1,
                          0
                        ]).reshape(v));
                    } else
                      w > 1 &&
                        ((g = [w - 1].concat(Et(0, w - 1))),
                        (b = Object(r["Nc"])(b, g)));
                  return b;
                }
                return n.mergeFunction(t);
              });
            }),
            (e.prototype.computeOutputShape = function(t) {
              var e;
              e = null == (t = t)[0] ? null : t[0].slice(1);
              for (var n = 1; n < t.length; ++n) {
                var r = null == t[n] ? null : t[n].slice(1);
                e = this.computeElementwiseOpOutputShape(e, r);
              }
              for (var i = [], a = 0, o = t; a < o.length; a++)
                null != (r = o[a]) && null !== r[0] && i.push(r[0]);
              return 1 === (i = B(i)).length ? i.concat(e) : [null].concat(e);
            }),
            (e.prototype.computeMask = function(t, e) {
              return Object(r["Jc"])(function() {
                if (null == e) return null;
                if (!Array.isArray(e)) throw new _("`mask` should be an Array");
                if (!Array.isArray(t))
                  throw new _("`inputs` should be an Array");
                if (e.length !== t.length)
                  throw new _(
                    "The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (" +
                      t.length +
                      " vs " +
                      e.length +
                      ")"
                  );
                if (
                  e.every(function(t) {
                    return null == t;
                  })
                )
                  return null;
                for (
                  var n = (e = e.map(function(t) {
                      return null == t ? t : Object(r["V"])(t, 0);
                    }))[0],
                    i = 1;
                  i < e.length - 1;
                  ++i
                )
                  n = Object(r["ub"])(n, e[i]);
                return n;
              });
            }),
            e
          );
        })(He),
        Gi = (function(t) {
          function e(e) {
            return t.call(this, e) || this;
          }
          return (
            a(e, t),
            (e.prototype.mergeFunction = function(t) {
              return Object(r["Jc"])(function() {
                for (var e = t[0].clone(), n = 1; n < t.length; ++n)
                  e = Object(r["g"])(e, t[n]);
                return e;
              });
            }),
            (e.className = "Add"),
            e
          );
        })(Ki);
      r["gc"].registerClass(Gi);
      var Xi = (function(t) {
        function e(e) {
          return t.call(this, e) || this;
        }
        return (
          a(e, t),
          (e.prototype.mergeFunction = function(t) {
            return Object(r["Jc"])(function() {
              for (var e = t[0].clone(), n = 1; n < t.length; ++n)
                e = Object(r["Hb"])(e, t[n]);
              return e;
            });
          }),
          (e.className = "Multiply"),
          e
        );
      })(Ki);
      r["gc"].registerClass(Xi);
      var Ji = (function(t) {
        function e(e) {
          return t.call(this, e) || this;
        }
        return (
          a(e, t),
          (e.prototype.mergeFunction = function(t) {
            return Object(r["Jc"])(function() {
              for (var e = t[0].clone(), n = 1; n < t.length; ++n)
                e = Object(r["g"])(e, t[n]);
              return Object(r["Hb"])(g(1 / t.length), e);
            });
          }),
          (e.className = "Average"),
          e
        );
      })(Ki);
      r["gc"].registerClass(Ji);
      var Yi = (function(t) {
        function e(e) {
          return t.call(this, e) || this;
        }
        return (
          a(e, t),
          (e.prototype.mergeFunction = function(t) {
            return Object(r["Jc"])(function() {
              for (var e = t[0], n = 1; n < t.length; ++n)
                e = Object(r["Ab"])(e, t[n]);
              return e;
            });
          }),
          (e.className = "Maximum"),
          e
        );
      })(Ki);
      r["gc"].registerClass(Yi);
      var Qi = (function(t) {
        function e(e) {
          return t.call(this, e) || this;
        }
        return (
          a(e, t),
          (e.prototype.mergeFunction = function(t) {
            return Object(r["Jc"])(function() {
              for (var e = t[0], n = 1; n < t.length; ++n)
                e = Object(r["Eb"])(e, t[n]);
              return e;
            });
          }),
          (e.className = "Minimum"),
          e
        );
      })(Ki);
      r["gc"].registerClass(Qi);
      var Zi = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (
            (n.DEFAULT_AXIS = -1),
            null == e && (e = {}),
            (n.axis = null == e.axis ? n.DEFAULT_AXIS : e.axis),
            (n.supportsMasking = !0),
            (n.reshapeRequired = !1),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.build = function(t) {
            if (!Array.isArray(t) || !Array.isArray(t[0]) || 1 === t.length)
              throw new _(
                "A `Concatenate` layer should be called on a list of at least 2 inputs"
              );
            for (var e = !0, n = 0, i = (t = t); n < i.length; n++)
              if (null != (f = i[n])) {
                e = !1;
                break;
              }
            if (!e) {
              for (var a = [], o = 0; o < t.length; ++o) {
                var s = t[o].slice();
                s.splice(this.axis, 1);
                for (var u = !1, c = 0, l = a; c < l.length; c++) {
                  var f = l[c];
                  if (r["Qc"].arraysEqual(f, s)) {
                    u = !0;
                    break;
                  }
                }
                u || a.push(s);
              }
              if (a.length > 1)
                throw new _(
                  "A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: " +
                    JSON.stringify(t)
                );
            }
          }),
          (e.prototype.mergeFunction = function(t) {
            var e = this;
            return Object(r["Jc"])(function() {
              return Tt(t, e.axis);
            });
          }),
          (e.prototype.computeOutputShape = function(t) {
            if (!Array.isArray(t) || !Array.isArray(t[0]))
              throw new _(
                "A `Concatenate` layer should be called on a list of inputs."
              );
            for (
              var e = t,
                n = e[0].slice(),
                r = this.axis < 0 ? n.length + this.axis : this.axis,
                i = 0,
                a = e.slice(1);
              i < a.length;
              i++
            ) {
              var o = a[i];
              if (null == n[r] || null == o[r]) {
                n[r] = null;
                break;
              }
              n[r] += o[r];
            }
            return n;
          }),
          (e.prototype.computeMask = function(t, e) {
            var n = this;
            if (null == e) return null;
            if (!Array.isArray(e))
              throw new _("`mask` should be an array for Concatenate");
            if (!Array.isArray(t))
              throw new _("`inputs` should be an array for Concatenate");
            if (e.length !== t.length)
              throw new _(
                "Mismatch in the length of mask (" +
                  e.length +
                  ") and the legnth of inputs (" +
                  t.length +
                  ")"
              );
            return Object(r["Jc"])(function() {
              var i = !0;
              if (
                (e.forEach(function(t) {
                  null == t || (i = !1);
                }),
                i)
              )
                return null;
              for (var a = [], o = 0; o < t.length; ++o)
                null == e[o]
                  ? a.push(Object(r["Ob"])(t[o]).asType("bool"))
                  : e[o].rank < t[o].rank
                  ? a.push(Object(r["V"])(e[o], -1))
                  : a.push(e[o]);
              var s = Object(r["C"])(a, n.axis);
              return Object(r["i"])(s, -1, !1);
            });
          }),
          (e.prototype.getConfig = function() {
            var e = { axis: this.axis },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "Concatenate"),
          e
        );
      })(Ki);
      function ta(t, e) {
        for (; t < 0; ) t += e;
        return t;
      }
      function ea(t, e, n) {
        if (t.shape.length > 3 || e.shape.length > 3)
          throw new x(
            "batchDot is not implemented for tensors of 4D or higher rank yet"
          );
        if (
          (r["Qc"].assert(
            t.shape.length >= 2,
            "batchDot requires the rank of x to be >= 2, but got " +
              t.shape.length
          ),
          r["Qc"].assert(
            t.shape.length >= 2,
            "batchDot requires the rank of y to be >= 2, but got " +
              e.shape.length
          ),
          "number" == typeof n && (n = [n, n]),
          "complex64" === t.dtype || "complex64" === e.dtype)
        )
          throw new x(
            "batchDot is not implemented for complex64-type Tensors yet."
          );
        var i = t.shape.length,
          a = e.shape.length;
        null == n && (n = [i - 1, a - 2]);
        var o = n;
        return Object(r["Jc"])(function() {
          var n, r;
          if (i > a) {
            n = i - a;
            for (var s = [], u = 0; u < n; ++u) s.push(1);
            e = e.reshape(e.shape.concat(s));
          } else if (a > i) {
            for (n = a - i, s = [], u = 0; u < n; ++u) s.push(1);
            t = t.reshape(t.shape.concat(s));
          } else n = 0;
          if (2 === t.shape.length && 2 === e.shape.length)
            r =
              o[0] === o[1]
                ? t.mulStrict(e).sum(o[0])
                : t
                    .transpose([1, 0])
                    .mulStrict(e)
                    .sum(o[1]);
          else {
            var c = o[0] !== t.shape.length - 1,
              l = o[1] === e.shape.length - 1;
            r = t.matMul(e, c, l);
          }
          if (n > 0) {
            var f = void 0,
              h = [];
            for (u = f = i > a ? i + a - 3 : i - 1; u < f + n; ++u) h.push(u);
            r = r.squeeze(h);
          }
          return 1 === r.shape.length && (r = r.expandDims(1)), r;
        });
      }
      r["gc"].registerClass(Zi);
      var na = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (
            (n.axes = e.axes),
            (n.normalize = null != e.normalize && e.normalize),
            (n.supportsMasking = !0),
            (n.reshapeRequired = !1),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.build = function(t) {
            r["Qc"].assert(
              Array.isArray(t) &&
                2 === t.length &&
                Array.isArray(t[0]) &&
                Array.isArray(t[1]),
              "A `Dot` layer should be called on a list of exactly 2 inputs."
            );
            var e = t[0],
              n = t[1];
            if (e.length > 3 || n.length > 3)
              throw new x(
                "Dot layer does not support tensors of 4D or higher rank yet."
              );
            var i = this.interpretAxes(e, n);
            if (e[i[0]] !== n[i[1]])
              throw new _(
                "Dimension incompatibility: " + e[i[0]] + " !== " + n[i[1]]
              );
          }),
          (e.prototype.mergeFunction = function(t) {
            if (2 !== t.length)
              throw new _(
                "A `Dot` layer must be called on exactly 2 inputs, but received " +
                  t.length +
                  " input(s)."
              );
            var e,
              n = t[0],
              r = t[1];
            return (
              (e = Array.isArray(this.axes)
                ? this.axes.map(function(e, n) {
                    return ta(e, t[n].shape.length);
                  })
                : [
                    ta(this.axes, n.shape.length),
                    ta(this.axes, r.shape.length)
                  ]),
              this.normalize && ((n = fn(n, e[0])), (r = fn(r, e[1]))),
              ea(n, r, e)
            );
          }),
          (e.prototype.interpretAxes = function(t, e) {
            return Array.isArray(this.axes)
              ? this.axes
              : [ta(this.axes, t.length), ta(this.axes, e.length)];
          }),
          (e.prototype.computeOutputShape = function(t) {
            r["Qc"].assert(
              Array.isArray(t) &&
                2 === t.length &&
                Array.isArray(t[0]) &&
                Array.isArray(t[1]),
              "A `Dot` layer should be called on a list of exactly 2 inputs."
            );
            var e = t[0].slice(),
              n = t[1].slice();
            if (e.length > 3 || n.length > 3)
              throw new x(
                "Dot layer does not support tensors of 4D or higher rank yet."
              );
            var i = this.interpretAxes(e, n);
            e.splice(i[0], 1), n.splice(i[1], 1), n.splice(0, 1);
            var a = e.concat(n);
            return 1 === a.length && a.push(1), a;
          }),
          (e.prototype.computeMask = function(t, e) {
            return null;
          }),
          (e.prototype.getConfig = function() {
            var e = { axes: this.axes, normalize: this.normalize },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "Dot"),
          e
        );
      })(Ki);
      function ra(t, e, n, i, a, o) {
        var s;
        if ((void 0 === o && (o = 0.001), 2 === t.rank))
          s = Object(r["t"])(t, e, n, i, a, o);
        else if (3 === t.rank) s = Object(r["u"])(t, e, n, i, a, o);
        else {
          if (4 !== t.rank)
            throw new x(
              "batchNormalization is not implemented for array of rank " +
                t.rank +
                " yet"
            );
          s = Object(r["v"])(t, e, n, i, a, o);
        }
        return s;
      }
      function ia(t, e, n, i, a) {
        return (
          void 0 === a && (a = 0.001),
          Object(r["Jc"])(function() {
            var o = Object(r["Gb"])(t, i),
              s = o.mean,
              u = o.variance;
            return [ra(t, s, u, n, e, a), s, u];
          })
        );
      }
      function aa(t, e, n, i, a) {
        return (
          void 0 === a && (a = 0.001),
          Object(r["Jc"])(function() {
            for (
              var o = Object(r["Gb"])(t, i),
                s = o.mean,
                u = o.variance,
                c = [],
                l = 0,
                f = Et(0, t.rank);
              l < f.length;
              l++
            ) {
              var h = f[l];
              -1 !== i.indexOf(h) ? c.push(1) : c.push(t.shape[h]);
            }
            var p = s.reshape(c),
              d = u.reshape(c),
              m = null == e ? null : e.reshape(c),
              v = null == n ? null : n.reshape(c);
            return [ra(t, p, d, v, m, a), s, u];
          })
        );
      }
      function oa(t, e, n, i, a) {
        return (
          void 0 === a && (a = 0.001),
          r["Qc"].arraysEqual(i.slice().sort(), Et(0, t.rank - 1))
            ? ia(t, e, n, i, a)
            : aa(t, e, n, i, a)
        );
      }
      r["gc"].registerClass(na);
      var sa = (function(t) {
        function e(e) {
          var n = this;
          return (
            null == e && (e = {}),
            ((n = t.call(this, e) || this).supportsMasking = !0),
            (n.axis = null == e.axis ? -1 : e.axis),
            (n.momentum = null == e.momentum ? 0.99 : e.momentum),
            (n.epsilon = null == e.epsilon ? 0.001 : e.epsilon),
            (n.center = null == e.center || e.center),
            (n.scale = null == e.scale || e.scale),
            (n.betaInitializer = me(e.betaInitializer || "zeros")),
            (n.gammaInitializer = me(e.gammaInitializer || "ones")),
            (n.movingMeanInitializer = me(e.movingMeanInitializer || "zeros")),
            (n.movingVarianceInitializer = me(
              e.movingVarianceInitializer || "ones"
            )),
            (n.betaConstraint = Y(e.betaConstraint)),
            (n.gammaConstraint = Y(e.gammaConstraint)),
            (n.betaRegularizer = mi(e.betaRegularizer)),
            (n.gammaRegularizer = mi(e.gammaRegularizer)),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.build = function(t) {
            t = De(t);
            var e = this.axis >= 0 ? this.axis : this.axis + t.length,
              n = t[e];
            if (null == n)
              throw new _(
                "Axis " +
                  e +
                  " of input tensor should have a defined dimension but the layer received an input with shape " +
                  JSON.stringify(t) +
                  "."
              );
            this.inputSpec = [
              new Ue({ ndim: t.length, axes: ((r = {}), (r[e] = n), r) })
            ];
            var r,
              i = [n];
            this.scale &&
              (this.gamma = this.addWeight(
                "gamma",
                i,
                null,
                this.gammaInitializer,
                this.gammaRegularizer,
                !0,
                this.gammaConstraint
              )),
              this.center &&
                (this.beta = this.addWeight(
                  "beta",
                  i,
                  null,
                  this.betaInitializer,
                  this.betaRegularizer,
                  !0,
                  this.betaConstraint
                )),
              (this.movingMean = this.addWeight(
                "moving_mean",
                i,
                null,
                this.movingMeanInitializer,
                null,
                !1
              )),
              (this.movingVariance = this.addWeight(
                "moving_variance",
                i,
                null,
                this.movingVarianceInitializer,
                null,
                !1
              )),
              (this.built = !0);
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              var i = null != e.training && e.training,
                a = Re(t),
                o = a.shape,
                s = o.length,
                u = Et(0, s),
                c = n.axis >= 0 ? n.axis : n.axis + s;
              u.splice(c, 1);
              var l = S(1, s);
              l[c] = o[c];
              var f = u.slice();
              f.sort();
              var h = !r["Qc"].arraysEqual(f, Et(0, s).slice(0, s - 1));
              if (!i)
                return (function() {
                  if (h) {
                    var t = n.movingMean.read().reshape(l),
                      e = n.movingVariance.read().reshape(l),
                      r = n.center ? n.beta.read().reshape(l) : null,
                      i = n.scale ? n.gamma.read().reshape(l) : null;
                    return ra(a, t, e, r, i, n.epsilon);
                  }
                  return ra(
                    a,
                    n.movingMean.read(),
                    n.movingVariance.read(),
                    null == n.beta ? null : n.beta.read(),
                    null == n.gamma ? null : n.gamma.read(),
                    n.epsilon
                  );
                })();
              var p = oa(a, n.gamma.read(), n.beta.read(), u, n.epsilon),
                d = p[0],
                m = p[1],
                v = p[2],
                y = function(t, e, n) {
                  Object(r["Jc"])(function() {
                    var r = g(1).sub(g(n)),
                      i = t.read(),
                      a = i.sub(e).mul(r);
                    t.write(i.sub(a));
                  });
                };
              return (
                y(n.movingMean, m, n.momentum),
                y(n.movingVariance, v, n.momentum),
                d
              );
            });
          }),
          (e.prototype.getConfig = function() {
            var e = {
                axis: this.axis,
                momentum: this.momentum,
                epsilon: this.epsilon,
                center: this.center,
                scale: this.scale,
                betaInitializer: de(this.betaInitializer),
                gammaInitializer: de(this.gammaInitializer),
                movingMeanInitializer: de(this.movingMeanInitializer),
                movingVarianceInitializer: de(this.movingVarianceInitializer),
                betaRegularizer: pi(this.betaRegularizer),
                gammaRegularizer: pi(this.gammaRegularizer),
                betaConstraint: X(this.betaConstraint),
                gammaConstraint: X(this.gammaConstraint)
              },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "BatchNormalization"),
          e
        );
      })(He);
      function ua(t, e, n) {
        return Object(r["Jc"])(function() {
          if (4 !== t.rank)
            throw new _(
              "temporalPadding expects input tensor to be 4-D, but received a " +
                t.rank +
                "-D tensor."
            );
          if (
            (null == e && (e = [[1, 1], [1, 1]]),
            2 !== e.length || 2 !== e[0].length || 2 !== e[1].length)
          )
            throw new _(
              "spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers."
            );
          if (
            (null == n && (n = f()),
            "channelsLast" !== n && "channelsFirst" !== n)
          )
            throw new _(
              "Unknown data format: " +
                n +
                ". Supported data formats are 'channelsLast' and 'channelsFirst."
            );
          var i;
          return (
            (i =
              "channelsFirst" === n
                ? [[0, 0], [0, 0], e[0], e[1]]
                : [[0, 0], e[0], e[1], [0, 0]]),
            Object(r["Pb"])(t, i)
          );
        });
      }
      r["gc"].registerClass(sa);
      var ca = (function(t) {
        function e(e) {
          var n = this;
          if (
            (null == e && (e = {}),
            ((n = t.call(this, e) || this).dataFormat =
              null == e.dataFormat ? f() : e.dataFormat),
            null == e.padding)
          )
            n.padding = [[1, 1], [1, 1]];
          else if ("number" == typeof e.padding)
            n.padding = [[e.padding, e.padding], [e.padding, e.padding]];
          else {
            if (((e.padding = e.padding), 2 !== e.padding.length))
              throw new _(
                "ZeroPadding2D expects padding to be a length-2 array, but received a length-" +
                  e.padding.length +
                  " array."
              );
            var r = void 0,
              i = void 0;
            if ("number" == typeof e.padding[0])
              (r = [e.padding[0], e.padding[0]]),
                (i = [e.padding[1], e.padding[1]]);
            else {
              if (((e.padding = e.padding), 2 !== e.padding[0].length))
                throw new _(
                  "ZeroPadding2D expects height padding to be a length-2 array, but received a length-" +
                    e.padding[0].length +
                    " array."
                );
              if (((r = e.padding[0]), 2 !== e.padding[1].length))
                throw new _(
                  "ZeroPadding2D expects width padding to be a length-2 array, but received a length-" +
                    e.padding[1].length +
                    " array."
                );
              i = e.padding[1];
            }
            n.padding = [r, i];
          }
          return (n.inputSpec = [new Ue({ ndim: 4 })]), n;
        }
        return (
          a(e, t),
          (e.prototype.computeOutputShape = function(t) {
            var e, n;
            return (
              (t = De(t)),
              "channelsFirst" === this.dataFormat
                ? ((e =
                    null != t[2] && t[2] >= 0
                      ? t[2] + this.padding[0][0] + this.padding[0][1]
                      : null),
                  (n =
                    null != t[3] && t[3] >= 0
                      ? t[3] + this.padding[1][0] + this.padding[1][1]
                      : null),
                  [t[0], t[1], e, n])
                : ((e =
                    null != t[1] && t[1] >= 0
                      ? t[1] + this.padding[0][0] + this.padding[0][1]
                      : null),
                  (n =
                    null != t[2] && t[2] >= 0
                      ? t[2] + this.padding[1][0] + this.padding[1][1]
                      : null),
                  [t[0], e, n, t[3]])
            );
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              return ua(Re(t), n.padding, n.dataFormat);
            });
          }),
          (e.prototype.getConfig = function() {
            var e = { padding: this.padding, dataFormat: this.dataFormat },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "ZeroPadding2D"),
          e
        );
      })(He);
      function la(t, e, n, i, a, o) {
        return Object(r["Jc"])(function() {
          var s;
          st(a),
            ct(o),
            ut(i),
            null == n && (n = [1, 1]),
            null == i && (i = "valid"),
            null == a && (a = f()),
            null == o && (o = "max"),
            (t = Ni(t, a));
          var u = "same" === i ? "same" : "valid";
          return (
            (s =
              "max" === o
                ? Object(r["zb"])(t, e, n, u)
                : Object(r["r"])(t, e, n, u)),
            "channelsFirst" === a && (s = Object(r["Nc"])(s, [0, 3, 1, 2])),
            s
          );
        });
      }
      r["gc"].registerClass(ca);
      var fa = (function(t) {
          function e(e) {
            var n = this;
            if (
              (null == e.poolSize && (e.poolSize = 2),
              (n = t.call(this, e) || this),
              "number" == typeof e.poolSize)
            )
              n.poolSize = [e.poolSize];
            else {
              if (
                !Array.isArray(e.poolSize) ||
                1 !== e.poolSize.length ||
                "number" != typeof e.poolSize[0]
              )
                throw new _(
                  "poolSize for 1D convolutional layer must be a number or an Array of a single number, but received " +
                    JSON.stringify(e.poolSize)
                );
              n.poolSize = e.poolSize;
            }
            if (null == e.strides) n.strides = n.poolSize;
            else if ("number" == typeof e.strides) n.strides = [e.strides];
            else {
              if (
                !Array.isArray(e.strides) ||
                1 !== e.strides.length ||
                "number" != typeof e.strides[0]
              )
                throw new _(
                  "strides for 1D convolutional layer must be a number or an Array of a single number, but received " +
                    JSON.stringify(e.strides)
                );
              n.strides = e.strides;
            }
            return (
              (n.padding = null == e.padding ? "valid" : e.padding),
              ut(n.padding),
              (n.inputSpec = [new Ue({ ndim: 3 })]),
              n
            );
          }
          return (
            a(e, t),
            (e.prototype.computeOutputShape = function(t) {
              var e = Ei(
                (t = De(t))[1],
                this.poolSize[0],
                this.padding,
                this.strides[0]
              );
              return [t[0], e, t[2]];
            }),
            (e.prototype.call = function(t, e) {
              var n = this;
              return Object(r["Jc"])(function() {
                n.invokeCallHook(t, e), (t = Nt(Re(t), 2));
                var i = n.poolingFunction(
                  Re(t),
                  [n.poolSize[0], 1],
                  [n.strides[0], 1],
                  n.padding,
                  "channelsLast"
                );
                return Object(r["zc"])(i, [2]);
              });
            }),
            (e.prototype.getConfig = function() {
              var e = {
                  poolSize: this.poolSize,
                  padding: this.padding,
                  strides: this.strides
                },
                n = t.prototype.getConfig.call(this);
              return Object.assign(e, n), e;
            }),
            e
          );
        })(He),
        ha = (function(t) {
          function e(e) {
            return t.call(this, e) || this;
          }
          return (
            a(e, t),
            (e.prototype.poolingFunction = function(t, e, n, r, i) {
              return st(i), ut(r), la(t, e, n, r, i, "max");
            }),
            (e.className = "MaxPooling1D"),
            e
          );
        })(fa);
      r["gc"].registerClass(ha);
      var pa = (function(t) {
        function e(e) {
          return t.call(this, e) || this;
        }
        return (
          a(e, t),
          (e.prototype.poolingFunction = function(t, e, n, r, i) {
            return st(i), ut(r), la(t, e, n, r, i, "avg");
          }),
          (e.className = "AveragePooling1D"),
          e
        );
      })(fa);
      r["gc"].registerClass(pa);
      var da = (function(t) {
          function e(e) {
            var n = this;
            if (
              (null == e.poolSize && (e.poolSize = [2, 2]),
              ((n = t.call(this, e) || this).poolSize = Array.isArray(
                e.poolSize
              )
                ? e.poolSize
                : [e.poolSize, e.poolSize]),
              null == e.strides)
            )
              n.strides = n.poolSize;
            else if (Array.isArray(e.strides)) {
              if (2 !== e.strides.length)
                throw new _(
                  "If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length " +
                    e.strides.length +
                    "."
                );
              n.strides = e.strides;
            } else n.strides = [e.strides, e.strides];
            return (
              (n.padding = null == e.padding ? "valid" : e.padding),
              (n.dataFormat =
                null == e.dataFormat ? "channelsLast" : e.dataFormat),
              st(n.dataFormat),
              ut(n.padding),
              (n.inputSpec = [new Ue({ ndim: 4 })]),
              n
            );
          }
          return (
            a(e, t),
            (e.prototype.computeOutputShape = function(t) {
              t = De(t);
              var e = "channelsFirst" === this.dataFormat ? t[2] : t[1],
                n = "channelsFirst" === this.dataFormat ? t[3] : t[2];
              return (
                (e = Ei(e, this.poolSize[0], this.padding, this.strides[0])),
                (n = Ei(n, this.poolSize[1], this.padding, this.strides[1])),
                "channelsFirst" === this.dataFormat
                  ? [t[0], t[1], e, n]
                  : [t[0], e, n, t[3]]
              );
            }),
            (e.prototype.call = function(t, e) {
              var n = this;
              return Object(r["Jc"])(function() {
                return (
                  n.invokeCallHook(t, e),
                  n.poolingFunction(
                    Re(t),
                    n.poolSize,
                    n.strides,
                    n.padding,
                    n.dataFormat
                  )
                );
              });
            }),
            (e.prototype.getConfig = function() {
              var e = {
                  poolSize: this.poolSize,
                  padding: this.padding,
                  strides: this.strides,
                  dataFormat: this.dataFormat
                },
                n = t.prototype.getConfig.call(this);
              return Object.assign(e, n), e;
            }),
            e
          );
        })(He),
        ma = (function(t) {
          function e(e) {
            return t.call(this, e) || this;
          }
          return (
            a(e, t),
            (e.prototype.poolingFunction = function(t, e, n, r, i) {
              return st(i), ut(r), la(t, e, n, r, i, "max");
            }),
            (e.className = "MaxPooling2D"),
            e
          );
        })(da);
      r["gc"].registerClass(ma);
      var va = (function(t) {
        function e(e) {
          return t.call(this, e) || this;
        }
        return (
          a(e, t),
          (e.prototype.poolingFunction = function(t, e, n, r, i) {
            return st(i), ut(r), la(t, e, n, r, i, "avg");
          }),
          (e.className = "AveragePooling2D"),
          e
        );
      })(da);
      r["gc"].registerClass(va);
      var ya = (function(t) {
          function e(e) {
            var n = t.call(this, e) || this;
            return (n.inputSpec = [new Ue({ ndim: 3 })]), n;
          }
          return (
            a(e, t),
            (e.prototype.computeOutputShape = function(t) {
              return [t[0], t[2]];
            }),
            (e.prototype.call = function(t, e) {
              throw new x();
            }),
            e
          );
        })(He),
        ga = (function(t) {
          function e(e) {
            return t.call(this, e || {}) || this;
          }
          return (
            a(e, t),
            (e.prototype.call = function(t, e) {
              return Object(r["Jc"])(function() {
                var e = Re(t);
                return Object(r["Bb"])(e, 1);
              });
            }),
            (e.className = "GlobalAveragePooling1D"),
            e
          );
        })(ya);
      r["gc"].registerClass(ga);
      var ba = (function(t) {
        function e(e) {
          return t.call(this, e || {}) || this;
        }
        return (
          a(e, t),
          (e.prototype.call = function(t, e) {
            return Object(r["Jc"])(function() {
              var e = Re(t);
              return Object(r["yb"])(e, 1);
            });
          }),
          (e.className = "GlobalMaxPooling1D"),
          e
        );
      })(ya);
      r["gc"].registerClass(ba);
      var wa = (function(t) {
          function e(e) {
            var n = t.call(this, e) || this;
            return (
              (n.dataFormat =
                null == e.dataFormat ? "channelsLast" : e.dataFormat),
              st(n.dataFormat),
              (n.inputSpec = [new Ue({ ndim: 4 })]),
              n
            );
          }
          return (
            a(e, t),
            (e.prototype.computeOutputShape = function(t) {
              return (
                (t = t),
                "channelsLast" === this.dataFormat ? [t[0], t[3]] : [t[0], t[1]]
              );
            }),
            (e.prototype.call = function(t, e) {
              throw new x();
            }),
            (e.prototype.getConfig = function() {
              var e = { dataFormat: this.dataFormat },
                n = t.prototype.getConfig.call(this);
              return Object.assign(e, n), e;
            }),
            e
          );
        })(He),
        _a = (function(t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return (
            a(e, t),
            (e.prototype.call = function(t, e) {
              var n = this;
              return Object(r["Jc"])(function() {
                var e = Re(t);
                return "channelsLast" === n.dataFormat
                  ? Object(r["Bb"])(e, [1, 2])
                  : Object(r["Bb"])(e, [2, 3]);
              });
            }),
            (e.className = "GlobalAveragePooling2D"),
            e
          );
        })(wa);
      r["gc"].registerClass(_a);
      var xa = (function(t) {
        function e() {
          return (null !== t && t.apply(this, arguments)) || this;
        }
        return (
          a(e, t),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              var e = Re(t);
              return "channelsLast" === n.dataFormat
                ? Object(r["yb"])(e, [1, 2])
                : Object(r["yb"])(e, [2, 3]);
            });
          }),
          (e.className = "GlobalMaxPooling2D"),
          e
        );
      })(wa);
      function Ea(t, e, n, r) {
        if (Array.isArray(t)) {
          if (null != e || null != n)
            throw new _(
              "When inputs is an array, neither initialState or constants should be provided"
            );
          null != r &&
            ((n = t.slice(t.length - r, t.length)),
            (t = t.slice(0, t.length - r))),
            t.length > 1 && (e = t.slice(1, t.length)),
            (t = t[0]);
        }
        function i(t) {
          return null == t || Array.isArray(t) ? t : [t];
        }
        return { inputs: t, initialState: (e = i(e)), constants: (n = i(n)) };
      }
      function Sa(t, e, n, i, a, o, s, u) {
        return (
          void 0 === i && (i = !1),
          void 0 === s && (s = !1),
          void 0 === u && (u = !1),
          Object(r["Jc"])(function() {
            var c = e.shape.length;
            if (c < 3)
              throw new _("Input should be at least 3D, but is " + c + "D.");
            var l = [1, 0].concat(Et(2, c));
            if (((e = Object(r["Nc"])(e, l)), null != o))
              throw new x(
                "The rnn() functoin of the deeplearn.js backend does not support constants yet."
              );
            s &&
              console.warn(
                "Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."
              ),
              null != a &&
                ((a = a.asType("bool").asType("float32")).rank === c - 1 &&
                  (a = Object(r["V"])(a, -1)),
                (a = Object(r["Nc"])(a, l))),
              i &&
                ((e = Object(r["Zb"])(e, 0)),
                null != a && (a = Object(r["Zb"])(a, 0)));
            var f,
              h,
              p = [],
              d = n,
              m = e.shape[0],
              v = Object(r["Pc"])(e);
            null != a && (h = Object(r["Pc"])(a));
            for (
              var y,
                g = function(e) {
                  var n = v[e],
                    i = Object(r["Jc"])(function() {
                      return t(n, d);
                    });
                  if (null == a) (f = i[0]), (d = i[1]);
                  else {
                    var o = Object(r["Jc"])(function() {
                      var t = h[e],
                        n = Object(r["Ob"])(t).sub(t);
                      return {
                        output: i[0].mul(t).addStrict(d[0].mul(n)),
                        newStates: d.map(function(e, r) {
                          return i[1][r].mul(t).addStrict(e.mul(n));
                        })
                      };
                    });
                    (f = o.output), (d = o.newStates);
                  }
                  u && p.push(f);
                },
                b = 0;
              b < m;
              ++b
            )
              g(b);
            return u && (y = Object(r["Ac"])(p, 1)), [f, y, d];
          })
        );
      }
      r["gc"].registerClass(xa);
      var Na = (function(t) {
        function e(e) {
          var n,
            r = t.call(this, e) || this;
          if (null == e.cell)
            throw new _("cell property is missing for the constructor of RNN.");
          if (
            null ==
            (n = Array.isArray(e.cell) ? new Ra({ cells: e.cell }) : e.cell)
              .stateSize
          )
            throw new _(
              "The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state)."
            );
          return (
            (r.cell = n),
            (r.returnSequences =
              null != e.returnSequences && e.returnSequences),
            (r.returnState = null != e.returnState && e.returnState),
            (r.goBackwards = null != e.goBackwards && e.goBackwards),
            (r._stateful = null != e.stateful && e.stateful),
            (r.unroll = null != e.unroll && e.unroll),
            (r.supportsMasking = !0),
            (r.inputSpec = [new Ue({ ndim: 3 })]),
            (r.stateSpec = null),
            (r.states_ = null),
            (r.numConstants = null),
            (r.keptStates = []),
            r
          );
        }
        return (
          a(e, t),
          (e.prototype.getStates = function() {
            return null == this.states_
              ? Et(
                  0,
                  Array.isArray(this.cell.stateSize)
                    ? this.cell.stateSize.length
                    : 1
                ).map(function(t) {
                  return null;
                })
              : this.states_;
          }),
          (e.prototype.setStates = function(t) {
            this.states_ = t;
          }),
          (e.prototype.computeOutputShape = function(t) {
            Pe(t) && (t = t[0]), (t = t);
            var e = this.cell.stateSize;
            Array.isArray(e) || (e = [e]);
            var n,
              r = e[0];
            if (
              ((n = this.returnSequences ? [t[0], t[1], r] : [t[0], r]),
              this.returnState)
            ) {
              for (var i = [], a = 0, o = e; a < o.length; a++) {
                var s = o[a];
                i.push([t[0], s]);
              }
              return [n].concat(i);
            }
            return n;
          }),
          (e.prototype.computeMask = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              Array.isArray(e) && (e = e[0]);
              var t = n.returnSequences ? e : null;
              if (n.returnState) {
                var r = n.states.map(function(t) {
                  return null;
                });
                return [t].concat(r);
              }
              return t;
            });
          }),
          Object.defineProperty(e.prototype, "states", {
            get: function() {
              if (null == this.states_) {
                for (
                  var t = Array.isArray(this.cell.stateSize)
                      ? this.cell.stateSize.length
                      : 1,
                    e = [],
                    n = 0;
                  n < t;
                  ++n
                )
                  e.push(null);
                return e;
              }
              return this.states_;
            },
            set: function(t) {
              this.states_ = t;
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.build = function(t) {
            if (null != this.numConstants)
              throw new x("Constants support is not implemented in RNN yet.");
            Pe(t) && (t = t[0]), (t = t);
            var e = this.stateful ? t[0] : null,
              n = t[t.length - 1];
            this.inputSpec[0] = new Ue({ shape: [e, null, n] });
            var i,
              a = [t[0]].concat(t.slice(2));
            if (
              (this.cell.build(a),
              (i = Array.isArray(this.cell.stateSize)
                ? this.cell.stateSize
                : [this.cell.stateSize]),
              null != this.stateSpec)
            ) {
              if (
                !r["Qc"].arraysEqual(
                  this.stateSpec.map(function(t) {
                    return t.shape[t.shape.length - 1];
                  }),
                  i
                )
              )
                throw new _(
                  "An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=" +
                    this.stateSpec +
                    "; However cell.stateSize is " +
                    this.cell.stateSize
                );
            } else
              this.stateSpec = i.map(function(t) {
                return new Ue({ shape: [null, t] });
              });
            this.stateful && this.resetStates();
          }),
          (e.prototype.resetStates = function(t, e) {
            var n = this;
            void 0 === e && (e = !1),
              Object(r["Jc"])(function() {
                if (!n.stateful)
                  throw new b(
                    "Cannot call resetStates() on an RNN Layer that is not stateful."
                  );
                var i = n.inputSpec[0].shape[0];
                if (null == i)
                  throw new _(
                    "If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer."
                  );
                if (null == n.states_)
                  Array.isArray(n.cell.stateSize)
                    ? (n.states_ = n.cell.stateSize.map(function(t) {
                        return Object(r["Vc"])([i, t]);
                      }))
                    : (n.states_ = [Object(r["Vc"])([i, n.cell.stateSize])]);
                else if (null == t)
                  Object(r["P"])(n.states_),
                    null != n.keptStates &&
                      (Object(r["P"])(n.keptStates), (n.keptStates = [])),
                    Array.isArray(n.cell.stateSize)
                      ? (n.states_ = n.cell.stateSize.map(function(t) {
                          return Object(r["Vc"])([i, t]);
                        }))
                      : (n.states_[0] = Object(r["Vc"])([i, n.cell.stateSize]));
                else {
                  if (
                    (Array.isArray(t) || (t = [t]),
                    t.length !== n.states_.length)
                  )
                    throw new _(
                      "Layer " +
                        n.name +
                        " expects " +
                        n.states_.length +
                        " state(s), but it received " +
                        t.length +
                        " state value(s). Input received: " +
                        t
                    );
                  !0 === e
                    ? n.keptStates.push(n.states_.slice())
                    : Object(r["P"])(n.states_);
                  for (var a = 0; a < n.states_.length; ++a) {
                    var o = t[a],
                      s = Array.isArray(n.cell.stateSize)
                        ? n.cell.stateSize[a]
                        : n.cell.stateSize,
                      u = [i, s];
                    if (!r["Qc"].arraysEqual(o.shape, u))
                      throw new _(
                        "State " +
                          a +
                          " is incompatible with layer " +
                          n.name +
                          ": expected shape=" +
                          u +
                          ", received shape=" +
                          o.shape
                      );
                    n.states_[a] = o;
                  }
                }
                n.states_.forEach(function(t) {
                  return Object(r["kb"])(t);
                });
              });
          }),
          (e.prototype.apply = function(e, n) {
            var r = null == n ? null : n.initialState,
              i = null == n ? null : n.constants;
            null == n && (n = {});
            var a = Ea(e, r, i, this.numConstants);
            (e = a.inputs), (r = a.initialState), (i = a.constants);
            var o = [],
              s = [];
            if (null != r) {
              (n.initialState = r), (o = o.concat(r)), (this.stateSpec = []);
              for (var u = 0, c = r; u < c.length; u++) {
                var l = c[u];
                this.stateSpec.push(new Ue({ shape: l.shape }));
              }
              s = s.concat(this.stateSpec);
            }
            if (
              (null != i &&
                ((n.constants = i),
                (o = o.concat(i)),
                (this.numConstants = i.length)),
              o[0] instanceof Ve)
            ) {
              var f = [e].concat(o),
                h = this.inputSpec.concat(s),
                p = this.inputSpec;
              this.inputSpec = h;
              var d = t.prototype.apply.call(this, f, n);
              return (this.inputSpec = p), d;
            }
            return t.prototype.apply.call(this, e, n);
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              var r = null == e ? null : e.mask,
                i = null == e ? null : e.training,
                a = null == e ? null : e.initialState;
              (t = Re(t)),
                null == a &&
                  (a = n.stateful ? n.states_ : n.getInitialState(t));
              var o = Array.isArray(n.cell.stateSize)
                ? n.cell.stateSize.length
                : 1;
              if (a.length !== o)
                throw new _(
                  "RNN Layer has " +
                    o +
                    " state(s) but was passed " +
                    a.length +
                    " initial state(s)."
                );
              n.unroll &&
                console.warn(
                  "Ignoring unroll = true for RNN layer, due to imperative backend."
                );
              var s = { training: i },
                u = Sa(
                  function(t, e) {
                    var r = n.cell.call([t].concat(e), s);
                    return [r[0], r.slice(1)];
                  },
                  t,
                  a,
                  n.goBackwards,
                  r,
                  null,
                  n.unroll,
                  n.returnSequences
                ),
                c = u[0],
                l = u[1],
                f = u[2];
              n.stateful && n.resetStates(f, i);
              var h = n.returnSequences ? l : c;
              return n.returnState ? [h].concat(f) : h;
            });
          }),
          (e.prototype.getInitialState = function(t) {
            var e = this;
            return Object(r["Jc"])(function() {
              var n = Object(r["Vc"])(t.shape);
              return (
                (n = Nt((n = Object(r["Ec"])(n, [1, 2])))),
                Array.isArray(e.cell.stateSize)
                  ? e.cell.stateSize.map(function(t) {
                      return t > 1 ? Dt(n, [1, t]) : n;
                    })
                  : e.cell.stateSize > 1
                  ? [Dt(n, [1, e.cell.stateSize])]
                  : [n]
              );
            });
          }),
          Object.defineProperty(e.prototype, "trainableWeights", {
            get: function() {
              return this.trainable ? this.cell.trainableWeights : [];
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "nonTrainableWeights", {
            get: function() {
              return this.trainable
                ? this.cell.nonTrainableWeights
                : this.cell.weights;
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.setFastWeightInitDuringBuild = function(e) {
            t.prototype.setFastWeightInitDuringBuild.call(this, e),
              null != this.cell && this.cell.setFastWeightInitDuringBuild(e);
          }),
          (e.prototype.getConfig = function() {
            var e = {
              returnSequences: this.returnSequences,
              returnState: this.returnState,
              goBackwards: this.goBackwards,
              stateful: this.stateful,
              unroll: this.unroll
            };
            null != this.numConstants && (e.numConstants = this.numConstants);
            var n = this.cell.getConfig();
            e.cell = { className: this.cell.getClassName(), config: n };
            var r = t.prototype.getConfig.call(this);
            return Object.assign(e, r), e;
          }),
          (e.className = "RNN"),
          e
        );
      })(He);
      r["gc"].registerClass(Na);
      var Oa = (function(t) {
          function e() {
            return (null !== t && t.apply(this, arguments)) || this;
          }
          return a(e, t), e;
        })(He),
        Ia = (function(t) {
          function e(e) {
            var n = t.call(this, e) || this;
            return (
              (n.DEFAULT_ACTIVATION = "tanh"),
              (n.DEFAULT_KERNEL_INITIALIZER = "glorotNormal"),
              (n.DEFAULT_RECURRENT_INITIALIZER = "orthogonal"),
              (n.DEFAULT_BIAS_INITIALIZER = "zeros"),
              (n.units = e.units),
              (n.activation = si(
                null == e.activation ? n.DEFAULT_ACTIVATION : e.activation
              )),
              (n.useBias = null == e.useBias || e.useBias),
              (n.kernelInitializer = me(
                e.kernelInitializer || n.DEFAULT_KERNEL_INITIALIZER
              )),
              (n.recurrentInitializer = me(
                e.recurrentInitializer || n.DEFAULT_RECURRENT_INITIALIZER
              )),
              (n.biasInitializer = me(
                e.biasInitializer || n.DEFAULT_BIAS_INITIALIZER
              )),
              (n.kernelRegularizer = mi(e.kernelRegularizer)),
              (n.recurrentRegularizer = mi(e.recurrentRegularizer)),
              (n.biasRegularizer = mi(e.biasRegularizer)),
              (n.kernelConstraint = Y(e.kernelConstraint)),
              (n.recurrentConstraint = Y(e.recurrentConstraint)),
              (n.biasConstraint = Y(e.biasConstraint)),
              (n.dropout = _t([1, xt([0, null == e.dropout ? 0 : e.dropout])])),
              (n.recurrentDropout = _t([
                1,
                xt([0, null == e.recurrentDropout ? 0 : e.recurrentDropout])
              ])),
              (n.stateSize = n.units),
              (n.dropoutMask = null),
              (n.recurrentDropoutMask = null),
              n
            );
          }
          return (
            a(e, t),
            (e.prototype.build = function(t) {
              (t = De(t)),
                (this.kernel = this.addWeight(
                  "kernel",
                  [t[t.length - 1], this.units],
                  null,
                  this.kernelInitializer,
                  this.kernelRegularizer,
                  !0,
                  this.kernelConstraint
                )),
                (this.recurrentKernel = this.addWeight(
                  "recurrent_kernel",
                  [this.units, this.units],
                  null,
                  this.recurrentInitializer,
                  this.recurrentRegularizer,
                  !0,
                  this.recurrentConstraint
                )),
                this.useBias
                  ? (this.bias = this.addWeight(
                      "bias",
                      [this.units],
                      null,
                      this.biasInitializer,
                      this.biasRegularizer,
                      !0,
                      this.biasConstraint
                    ))
                  : (this.bias = null),
                (this.built = !0);
            }),
            (e.prototype.call = function(t, e) {
              var n = this;
              return Object(r["Jc"])(function() {
                if (2 !== (t = t).length)
                  throw new _(
                    "SimpleRNNCell expects 2 input Tensors, got " +
                      t.length +
                      "."
                  );
                var i = t[1];
                t = t[0];
                var a,
                  o = null != e.training && e.training;
                0 < n.dropout &&
                  n.dropout < 1 &&
                  null == n.dropoutMask &&
                  (n.dropoutMask = Da(
                    function() {
                      return Object(r["Ob"])(t);
                    },
                    n.dropout,
                    o
                  )),
                  0 < n.recurrentDropout &&
                    n.recurrentDropout < 1 &&
                    null == n.recurrentDropoutMask &&
                    (n.recurrentDropoutMask = Da(
                      function() {
                        return Object(r["Ob"])(i);
                      },
                      n.recurrentDropout,
                      o
                    ));
                var s = n.dropoutMask,
                  u = n.recurrentDropoutMask;
                (a = jt(
                  null != s ? Object(r["Hb"])(t, s) : t,
                  n.kernel.read()
                )),
                  null != n.bias && (a = Ft(a, n.bias.read())),
                  null != u && (i = Object(r["Hb"])(i, u));
                var c = Object(r["g"])(a, jt(i, n.recurrentKernel.read()));
                return (
                  null != n.activation && (c = n.activation.apply(c)), [c, c]
                );
              });
            }),
            (e.prototype.getConfig = function() {
              var e = {
                  units: this.units,
                  activation: ai(this.activation),
                  useBias: this.useBias,
                  kernelInitializer: de(this.kernelInitializer),
                  recurrentInitializer: de(this.recurrentInitializer),
                  biasInitializer: de(this.biasInitializer),
                  kernelRegularizer: pi(this.kernelRegularizer),
                  recurrentRegularizer: pi(this.recurrentRegularizer),
                  biasRegularizer: pi(this.biasRegularizer),
                  activityRegularizer: pi(this.activityRegularizer),
                  kernelConstraint: X(this.kernelConstraint),
                  recurrentConstraint: X(this.recurrentConstraint),
                  biasConstraint: X(this.biasConstraint),
                  dropout: this.dropout,
                  recurrentDropout: this.recurrentDropout
                },
                n = t.prototype.getConfig.call(this);
              return Object.assign(e, n), e;
            }),
            (e.className = "SimpleRNNCell"),
            e
          );
        })(Oa);
      r["gc"].registerClass(Ia);
      var Ca = (function(t) {
        function e(e) {
          return (e.cell = new Ia(e)), t.call(this, e) || this;
        }
        return (
          a(e, t),
          (e.prototype.call = function(e, n) {
            var i = this;
            return Object(r["Jc"])(function() {
              null != i.cell.dropoutMask &&
                (Object(r["P"])(i.cell.dropoutMask),
                (i.cell.dropoutMask = null)),
                null != i.cell.recurrentDropoutMask &&
                  (Object(r["P"])(i.cell.recurrentDropoutMask),
                  (i.cell.recurrentDropoutMask = null));
              var a = null == n ? null : n.mask,
                o = null == n ? null : n.training,
                s = null == n ? null : n.initialState;
              return t.prototype.call.call(i, e, {
                mask: a,
                training: o,
                initialState: s
              });
            });
          }),
          Object.defineProperty(e.prototype, "units", {
            get: function() {
              return this.cell.units;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "activation", {
            get: function() {
              return this.cell.activation;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "useBias", {
            get: function() {
              return this.cell.useBias;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "kernelInitializer", {
            get: function() {
              return this.cell.kernelInitializer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "recurrentInitializer", {
            get: function() {
              return this.cell.recurrentInitializer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "biasInitializer", {
            get: function() {
              return this.cell.biasInitializer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "kernelRegularizer", {
            get: function() {
              return this.cell.kernelRegularizer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "recurrentRegularizer", {
            get: function() {
              return this.cell.recurrentRegularizer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "biasRegularizer", {
            get: function() {
              return this.cell.biasRegularizer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "kernelConstraint", {
            get: function() {
              return this.cell.kernelConstraint;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "recurrentConstraint", {
            get: function() {
              return this.cell.recurrentConstraint;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "biasConstraint", {
            get: function() {
              return this.cell.biasConstraint;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "dropout", {
            get: function() {
              return this.cell.dropout;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "recurrentDropout", {
            get: function() {
              return this.cell.recurrentDropout;
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.getConfig = function() {
            var e = {
                units: this.units,
                activation: ai(this.activation),
                useBias: this.useBias,
                kernelInitializer: de(this.kernelInitializer),
                recurrentInitializer: de(this.recurrentInitializer),
                biasInitializer: de(this.biasInitializer),
                kernelRegularizer: pi(this.kernelRegularizer),
                recurrentRegularizer: pi(this.recurrentRegularizer),
                biasRegularizer: pi(this.biasRegularizer),
                activityRegularizer: pi(this.activityRegularizer),
                kernelConstraint: X(this.kernelConstraint),
                recurrentConstraint: X(this.recurrentConstraint),
                biasConstraint: X(this.biasConstraint),
                dropout: this.dropout,
                recurrentDropout: this.recurrentDropout
              },
              n = t.prototype.getConfig.call(this);
            return delete n.cell, Object.assign(e, n), e;
          }),
          (e.className = "SimpleRNN"),
          e
        );
      })(Na);
      r["gc"].registerClass(Ca);
      var Aa = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (
            (n.DEFAULT_ACTIVATION = "tanh"),
            (n.DEFAULT_RECURRENT_ACTIVATION = "hardSigmoid"),
            (n.DEFAULT_KERNEL_INITIALIZER = "glorotNormal"),
            (n.DEFAULT_RECURRENT_INITIALIZER = "orthogonal"),
            (n.DEFAULT_BIAS_INITIALIZER = "zeros"),
            (n.units = e.units),
            (n.activation = si(
              void 0 === e.activation ? n.DEFAULT_ACTIVATION : e.activation
            )),
            (n.recurrentActivation = si(
              void 0 === e.recurrentActivation
                ? n.DEFAULT_RECURRENT_ACTIVATION
                : e.recurrentActivation
            )),
            (n.useBias = null == e.useBias || e.useBias),
            (n.kernelInitializer = me(
              e.kernelInitializer || n.DEFAULT_KERNEL_INITIALIZER
            )),
            (n.recurrentInitializer = me(
              e.recurrentInitializer || n.DEFAULT_RECURRENT_INITIALIZER
            )),
            (n.biasInitializer = me(
              e.biasInitializer || n.DEFAULT_BIAS_INITIALIZER
            )),
            (n.kernelRegularizer = mi(e.kernelRegularizer)),
            (n.recurrentRegularizer = mi(e.recurrentRegularizer)),
            (n.biasRegularizer = mi(e.biasRegularizer)),
            (n.kernelConstraint = Y(e.kernelConstraint)),
            (n.recurrentConstraint = Y(e.recurrentConstraint)),
            (n.biasConstraint = Y(e.biasConstraint)),
            (n.dropout = _t([1, xt([0, null == e.dropout ? 0 : e.dropout])])),
            (n.recurrentDropout = _t([
              1,
              xt([0, null == e.recurrentDropout ? 0 : e.recurrentDropout])
            ])),
            (n.implementation = e.implementation),
            (n.stateSize = n.units),
            (n.dropoutMask = null),
            (n.recurrentDropoutMask = null),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.build = function(t) {
            var e = (t = De(t))[t.length - 1];
            (this.kernel = this.addWeight(
              "kernel",
              [e, 3 * this.units],
              null,
              this.kernelInitializer,
              this.kernelRegularizer,
              !0,
              this.kernelConstraint
            )),
              (this.recurrentKernel = this.addWeight(
                "recurrent_kernel",
                [this.units, 3 * this.units],
                null,
                this.recurrentInitializer,
                this.recurrentRegularizer,
                !0,
                this.recurrentConstraint
              )),
              this.useBias
                ? (this.bias = this.addWeight(
                    "bias",
                    [3 * this.units],
                    null,
                    this.biasInitializer,
                    this.biasRegularizer,
                    !0,
                    this.biasConstraint
                  ))
                : (this.bias = null),
              (this.built = !0);
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              if (2 !== (t = t).length)
                throw new _(
                  "GRUCell expects 2 input Tensors (inputs, h, c), got " +
                    t.length +
                    "."
                );
              var i = null != e.training && e.training,
                a = t[1];
              (t = t[0]),
                0 < n.dropout &&
                  n.dropout < 1 &&
                  null == n.dropoutMask &&
                  (n.dropoutMask = Da(
                    function() {
                      return Object(r["Ob"])(t);
                    },
                    n.dropout,
                    i,
                    3
                  )),
                0 < n.recurrentDropout &&
                  n.recurrentDropout < 1 &&
                  null == n.recurrentDropoutMask &&
                  (n.recurrentDropoutMask = Da(
                    function() {
                      return Object(r["Ob"])(a);
                    },
                    n.recurrentDropout,
                    i,
                    3
                  ));
              var o,
                s,
                u,
                c = n.dropoutMask,
                l = n.recurrentDropoutMask;
              0 < n.dropout && n.dropout < 1 && (t = Object(r["Hb"])(t, c[0]));
              var f = jt(t, n.kernel.read());
              n.useBias && (f = Ft(f, n.bias.read())),
                0 < n.recurrentDropout &&
                  n.recurrentDropout < 1 &&
                  (a = Object(r["Hb"])(a, l[0]));
              var h = n.recurrentKernel.read(),
                p = Object(r["vc"])(h, [2 * n.units, n.units], h.rank - 1),
                d = p[0],
                m = p[1],
                v = jt(a, d),
                y = Object(r["vc"])(f, 3, f.rank - 1),
                b = y[0],
                w = y[1],
                x = y[2],
                E = Object(r["vc"])(v, 2, v.rank - 1),
                S = E[0],
                N = E[1];
              (o = n.recurrentActivation.apply(Object(r["g"])(b, S))),
                (s = n.recurrentActivation.apply(Object(r["g"])(w, N)));
              var O = jt(Object(r["Hb"])(s, a), m);
              u = n.activation.apply(Object(r["g"])(x, O));
              var I = Object(r["g"])(
                Object(r["Hb"])(o, a),
                Object(r["Hb"])(Object(r["g"])(g(1), Object(r["Jb"])(o)), u)
              );
              return [I, I];
            });
          }),
          (e.prototype.getConfig = function() {
            var e = {
                units: this.units,
                activation: ai(this.activation),
                recurrentActivation: ai(this.recurrentActivation),
                useBias: this.useBias,
                kernelInitializer: de(this.kernelInitializer),
                recurrentInitializer: de(this.recurrentInitializer),
                biasInitializer: de(this.biasInitializer),
                kernelRegularizer: pi(this.kernelRegularizer),
                recurrentRegularizer: pi(this.recurrentRegularizer),
                biasRegularizer: pi(this.biasRegularizer),
                activityRegularizer: pi(this.activityRegularizer),
                kernelConstraint: X(this.kernelConstraint),
                recurrentConstraint: X(this.recurrentConstraint),
                biasConstraint: X(this.biasConstraint),
                dropout: this.dropout,
                recurrentDropout: this.recurrentDropout,
                implementation: this.implementation
              },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "GRUCell"),
          e
        );
      })(Oa);
      r["gc"].registerClass(Aa);
      var ka = (function(t) {
        function e(e) {
          return (
            0 === e.implementation &&
              console.warn(
                "`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."
              ),
            (e.cell = new Aa(e)),
            t.call(this, e) || this
          );
        }
        return (
          a(e, t),
          (e.prototype.call = function(e, n) {
            var i = this;
            return Object(r["Jc"])(function() {
              null != i.cell.dropoutMask &&
                (Object(r["P"])(i.cell.dropoutMask),
                (i.cell.dropoutMask = null)),
                null != i.cell.recurrentDropoutMask &&
                  (Object(r["P"])(i.cell.recurrentDropoutMask),
                  (i.cell.recurrentDropoutMask = null));
              var a = null == n ? null : n.mask,
                o = null == n ? null : n.training,
                s = null == n ? null : n.initialState;
              return t.prototype.call.call(i, e, {
                mask: a,
                training: o,
                initialState: s
              });
            });
          }),
          Object.defineProperty(e.prototype, "units", {
            get: function() {
              return this.cell.units;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "activation", {
            get: function() {
              return this.cell.activation;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "recurrentActivation", {
            get: function() {
              return this.cell.recurrentActivation;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "useBias", {
            get: function() {
              return this.cell.useBias;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "kernelInitializer", {
            get: function() {
              return this.cell.kernelInitializer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "recurrentInitializer", {
            get: function() {
              return this.cell.recurrentInitializer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "biasInitializer", {
            get: function() {
              return this.cell.biasInitializer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "kernelRegularizer", {
            get: function() {
              return this.cell.kernelRegularizer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "recurrentRegularizer", {
            get: function() {
              return this.cell.recurrentRegularizer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "biasRegularizer", {
            get: function() {
              return this.cell.biasRegularizer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "kernelConstraint", {
            get: function() {
              return this.cell.kernelConstraint;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "recurrentConstraint", {
            get: function() {
              return this.cell.recurrentConstraint;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "biasConstraint", {
            get: function() {
              return this.cell.biasConstraint;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "dropout", {
            get: function() {
              return this.cell.dropout;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "recurrentDropout", {
            get: function() {
              return this.cell.recurrentDropout;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "implementation", {
            get: function() {
              return this.cell.implementation;
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.getConfig = function() {
            var e = {
                units: this.units,
                activation: ai(this.activation),
                recurrentActivation: ai(this.recurrentActivation),
                useBias: this.useBias,
                kernelInitializer: de(this.kernelInitializer),
                recurrentInitializer: de(this.recurrentInitializer),
                biasInitializer: de(this.biasInitializer),
                kernelRegularizer: pi(this.kernelRegularizer),
                recurrentRegularizer: pi(this.recurrentRegularizer),
                biasRegularizer: pi(this.biasRegularizer),
                activityRegularizer: pi(this.activityRegularizer),
                kernelConstraint: X(this.kernelConstraint),
                recurrentConstraint: X(this.recurrentConstraint),
                biasConstraint: X(this.biasConstraint),
                dropout: this.dropout,
                recurrentDropout: this.recurrentDropout,
                implementation: this.implementation
              },
              n = t.prototype.getConfig.call(this);
            return delete n.cell, Object.assign(e, n), e;
          }),
          (e.fromConfig = function(t, e) {
            return 0 === e.implmentation && (e.implementation = 1), new t(e);
          }),
          (e.className = "GRU"),
          e
        );
      })(Na);
      r["gc"].registerClass(ka);
      var Pa = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (
            (n.DEFAULT_ACTIVATION = "tanh"),
            (n.DEFAULT_RECURRENT_ACTIVATION = "hardSigmoid"),
            (n.DEFAULT_KERNEL_INITIALIZER = "glorotNormal"),
            (n.DEFAULT_RECURRENT_INITIALIZER = "orthogonal"),
            (n.DEFAULT_BIAS_INITIALIZER = "zeros"),
            (n.units = e.units),
            (n.activation = si(
              void 0 === e.activation ? n.DEFAULT_ACTIVATION : e.activation
            )),
            (n.recurrentActivation = si(
              void 0 === e.recurrentActivation
                ? n.DEFAULT_RECURRENT_ACTIVATION
                : e.recurrentActivation
            )),
            (n.useBias = null == e.useBias || e.useBias),
            (n.kernelInitializer = me(
              e.kernelInitializer || n.DEFAULT_KERNEL_INITIALIZER
            )),
            (n.recurrentInitializer = me(
              e.recurrentInitializer || n.DEFAULT_RECURRENT_INITIALIZER
            )),
            (n.biasInitializer = me(
              e.biasInitializer || n.DEFAULT_BIAS_INITIALIZER
            )),
            (n.unitForgetBias = e.unitForgetBias),
            (n.kernelRegularizer = mi(e.kernelRegularizer)),
            (n.recurrentRegularizer = mi(e.recurrentRegularizer)),
            (n.biasRegularizer = mi(e.biasRegularizer)),
            (n.kernelConstraint = Y(e.kernelConstraint)),
            (n.recurrentConstraint = Y(e.recurrentConstraint)),
            (n.biasConstraint = Y(e.biasConstraint)),
            (n.dropout = _t([1, xt([0, null == e.dropout ? 0 : e.dropout])])),
            (n.recurrentDropout = _t([
              1,
              xt([0, null == e.recurrentDropout ? 0 : e.recurrentDropout])
            ])),
            (n.implementation = e.implementation),
            (n.stateSize = [n.units, n.units]),
            (n.dropoutMask = null),
            (n.recurrentDropoutMask = null),
            n
          );
        }
        return (
          a(e, t),
          (e.prototype.build = function(t) {
            var e,
              n,
              r = (t = De(t))[t.length - 1];
            if (
              ((this.kernel = this.addWeight(
                "kernel",
                [r, 4 * this.units],
                null,
                this.kernelInitializer,
                this.kernelRegularizer,
                !0,
                this.kernelConstraint
              )),
              (this.recurrentKernel = this.addWeight(
                "recurrent_kernel",
                [this.units, 4 * this.units],
                null,
                this.recurrentInitializer,
                this.recurrentRegularizer,
                !0,
                this.recurrentConstraint
              )),
              this.useBias)
            ) {
              if (this.unitForgetBias) {
                var i = this.biasInitializer,
                  o = this.units;
                e = new (((n = (function(t) {
                  function e() {
                    return (null !== t && t.apply(this, arguments)) || this;
                  }
                  return (
                    a(e, t),
                    (e.prototype.apply = function(t, e) {
                      var n = i.apply([o]),
                        r = new Yt().apply([o]),
                        a = i.apply([2 * o]);
                      return Rt(Rt(n, r), a);
                    }),
                    e
                  );
                })(Xt)).className = "CustomInit"),
                n)();
              } else e = this.biasInitializer;
              this.bias = this.addWeight(
                "bias",
                [4 * this.units],
                null,
                e,
                this.biasRegularizer,
                !0,
                this.biasConstraint
              );
            } else this.bias = null;
            this.built = !0;
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              var i = null != e.training && e.training;
              if (3 !== (t = t).length)
                throw new _(
                  "LSTMCell expects 3 input Tensors (inputs, h, c), got " +
                    t.length +
                    "."
                );
              var a = t[1],
                o = t[2];
              (t = t[0]),
                0 < n.dropout &&
                  n.dropout < 1 &&
                  null == n.dropoutMask &&
                  (n.dropoutMask = Da(
                    function() {
                      return Object(r["Ob"])(t);
                    },
                    n.dropout,
                    i,
                    4
                  )),
                0 < n.recurrentDropout &&
                  n.recurrentDropout < 1 &&
                  null == n.recurrentDropoutMask &&
                  (n.recurrentDropoutMask = Da(
                    function() {
                      return Object(r["Ob"])(a);
                    },
                    n.recurrentDropout,
                    i,
                    4
                  ));
              var s,
                u,
                c,
                l,
                f = n.dropoutMask,
                h = n.recurrentDropoutMask;
              0 < n.dropout && n.dropout < 1 && (t = Object(r["Hb"])(t, f[0]));
              var p = jt(t, n.kernel.read());
              0 < n.recurrentDropout &&
                n.recurrentDropout < 1 &&
                (a = Object(r["Hb"])(a, h[0])),
                (p = Object(r["g"])(p, jt(a, n.recurrentKernel.read()))),
                n.useBias && (p = Ft(p, n.bias.read()));
              var d = Object(r["vc"])(p, 4, p.rank - 1),
                m = d[0],
                v = d[1],
                y = d[2],
                g = d[3];
              (s = n.recurrentActivation.apply(m)),
                (u = n.recurrentActivation.apply(v)),
                (c = Object(r["g"])(
                  Object(r["Hb"])(u, o),
                  Object(r["Hb"])(s, n.activation.apply(y))
                )),
                (l = n.recurrentActivation.apply(g));
              var b = Object(r["Hb"])(l, n.activation.apply(c));
              return [b, b, c];
            });
          }),
          (e.prototype.getConfig = function() {
            var e = {
                units: this.units,
                activation: ai(this.activation),
                recurrentActivation: ai(this.recurrentActivation),
                useBias: this.useBias,
                kernelInitializer: de(this.kernelInitializer),
                recurrentInitializer: de(this.recurrentInitializer),
                biasInitializer: de(this.biasInitializer),
                unitForgetBias: this.unitForgetBias,
                kernelRegularizer: pi(this.kernelRegularizer),
                recurrentRegularizer: pi(this.recurrentRegularizer),
                biasRegularizer: pi(this.biasRegularizer),
                activityRegularizer: pi(this.activityRegularizer),
                kernelConstraint: X(this.kernelConstraint),
                recurrentConstraint: X(this.recurrentConstraint),
                biasConstraint: X(this.biasConstraint),
                dropout: this.dropout,
                recurrentDropout: this.recurrentDropout,
                implementation: this.implementation
              },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.className = "LSTMCell"),
          e
        );
      })(Oa);
      r["gc"].registerClass(Pa);
      var Ta = (function(t) {
        function e(e) {
          return (
            0 === e.implementation &&
              console.warn(
                "`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."
              ),
            (e.cell = new Pa(e)),
            t.call(this, e) || this
          );
        }
        return (
          a(e, t),
          (e.prototype.call = function(e, n) {
            var i = this;
            return Object(r["Jc"])(function() {
              null != i.cell.dropoutMask &&
                (Object(r["P"])(i.cell.dropoutMask),
                (i.cell.dropoutMask = null)),
                null != i.cell.recurrentDropoutMask &&
                  (Object(r["P"])(i.cell.recurrentDropoutMask),
                  (i.cell.recurrentDropoutMask = null));
              var a = null == n ? null : n.mask,
                o = null == n ? null : n.training,
                s = null == n ? null : n.initialState;
              return t.prototype.call.call(i, e, {
                mask: a,
                training: o,
                initialState: s
              });
            });
          }),
          Object.defineProperty(e.prototype, "units", {
            get: function() {
              return this.cell.units;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "activation", {
            get: function() {
              return this.cell.activation;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "recurrentActivation", {
            get: function() {
              return this.cell.recurrentActivation;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "useBias", {
            get: function() {
              return this.cell.useBias;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "kernelInitializer", {
            get: function() {
              return this.cell.kernelInitializer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "recurrentInitializer", {
            get: function() {
              return this.cell.recurrentInitializer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "biasInitializer", {
            get: function() {
              return this.cell.biasInitializer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "unitForgetBias", {
            get: function() {
              return this.cell.unitForgetBias;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "kernelRegularizer", {
            get: function() {
              return this.cell.kernelRegularizer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "recurrentRegularizer", {
            get: function() {
              return this.cell.recurrentRegularizer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "biasRegularizer", {
            get: function() {
              return this.cell.biasRegularizer;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "kernelConstraint", {
            get: function() {
              return this.cell.kernelConstraint;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "recurrentConstraint", {
            get: function() {
              return this.cell.recurrentConstraint;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "biasConstraint", {
            get: function() {
              return this.cell.biasConstraint;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "dropout", {
            get: function() {
              return this.cell.dropout;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "recurrentDropout", {
            get: function() {
              return this.cell.recurrentDropout;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "implementation", {
            get: function() {
              return this.cell.implementation;
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.getConfig = function() {
            var e = {
                units: this.units,
                activation: ai(this.activation),
                recurrentActivation: ai(this.recurrentActivation),
                useBias: this.useBias,
                kernelInitializer: de(this.kernelInitializer),
                recurrentInitializer: de(this.recurrentInitializer),
                biasInitializer: de(this.biasInitializer),
                unitForgetBias: this.unitForgetBias,
                kernelRegularizer: pi(this.kernelRegularizer),
                recurrentRegularizer: pi(this.recurrentRegularizer),
                biasRegularizer: pi(this.biasRegularizer),
                activityRegularizer: pi(this.activityRegularizer),
                kernelConstraint: X(this.kernelConstraint),
                recurrentConstraint: X(this.recurrentConstraint),
                biasConstraint: X(this.biasConstraint),
                dropout: this.dropout,
                recurrentDropout: this.recurrentDropout,
                implementation: this.implementation
              },
              n = t.prototype.getConfig.call(this);
            return delete n.cell, Object.assign(e, n), e;
          }),
          (e.fromConfig = function(t, e) {
            return 0 === e.implmentation && (e.implementation = 1), new t(e);
          }),
          (e.className = "LSTM"),
          e
        );
      })(Na);
      r["gc"].registerClass(Ta);
      var Ra = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this;
          return (n.cells = e.cells), n;
        }
        return (
          a(e, t),
          Object.defineProperty(e.prototype, "stateSize", {
            get: function() {
              for (
                var t = [], e = 0, n = this.cells.slice().reverse();
                e < n.length;
                e++
              ) {
                var r = n[e];
                Array.isArray(r.stateSize)
                  ? t.push.apply(t, r.stateSize)
                  : t.push(r.stateSize);
              }
              return t;
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              for (
                var r = (t = t).slice(1),
                  i = [],
                  a = 0,
                  o = n.cells.slice().reverse();
                a < o.length;
                a++
              ) {
                var s = o[a];
                Array.isArray(s.stateSize)
                  ? i.push(r.splice(0, s.stateSize.length))
                  : i.push(r.splice(0, 1));
              }
              i.reverse();
              for (var u, c = [], l = 0; l < n.cells.length; ++l)
                (s = n.cells[l]),
                  (r = i[l]),
                  (u = 0 === l ? [t[0]].concat(r) : [u[0]].concat(r)),
                  (u = s.call(u, e)),
                  c.push(u.slice(1));
              r = [];
              for (var f = 0, h = c.slice().reverse(); f < h.length; f++) {
                var p = h[f];
                r.push.apply(r, p);
              }
              return [u[0]].concat(r);
            });
          }),
          (e.prototype.build = function(t) {
            var e;
            Pe(t) && (t = t[0]), (t = t);
            for (var n = 0, r = this.cells; n < r.length; n++) {
              var i = r[n];
              i.build(t),
                (e = Array.isArray(i.stateSize) ? i.stateSize[0] : i.stateSize),
                (t = [t[0], e]);
            }
            this.built = !0;
          }),
          (e.prototype.getConfig = function() {
            for (var e = [], n = 0, r = this.cells; n < r.length; n++) {
              var i = r[n];
              e.push({ className: this.getClassName(), config: i.getConfig() });
            }
            var a = { cells: e },
              o = t.prototype.getConfig.call(this);
            return Object.assign(a, o), a;
          }),
          (e.fromConfig = function(t, e, n) {
            void 0 === n && (n = {});
            for (var r = [], i = 0, a = e.cells; i < a.length; i++) {
              var o = a[i];
              r.push(tr(o, n));
            }
            return new t({ cells: r });
          }),
          Object.defineProperty(e.prototype, "trainableWeights", {
            get: function() {
              if (!this.trainable) return [];
              for (var t = [], e = 0, n = this.cells; e < n.length; e++) {
                var r = n[e];
                t.push.apply(t, r.trainableWeights);
              }
              return t;
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "nonTrainableWeights", {
            get: function() {
              for (var t = [], e = 0, n = this.cells; e < n.length; e++) {
                var r = n[e];
                t.push.apply(t, r.nonTrainableWeights);
              }
              if (!this.trainable) {
                for (var i = [], a = 0, o = this.cells; a < o.length; a++)
                  (r = o[a]), i.push.apply(i, r.trainableWeights);
                return i.concat(t);
              }
              return t;
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.getWeights = function() {
            for (var t = [], e = 0, n = this.cells; e < n.length; e++) {
              var r = n[e];
              t.push.apply(t, r.weights);
            }
            return Fe(t);
          }),
          (e.prototype.setWeights = function(t) {
            for (var e = [], n = 0, r = this.cells; n < r.length; n++)
              for (
                var i = r[n], a = i.weights.length, o = t.splice(a), s = 0;
                s < i.weights.length;
                ++s
              )
                e.push([i.weights[s], o[s]]);
            ze(e);
          }),
          (e.className = "StackedRNNCells"),
          e
        );
      })(Oa);
      function Da(t, e, n, i) {
        function a() {
          return Vt(t(), g(e));
        }
        if ((void 0 === n && (n = null), void 0 === i && (i = 1), i > 1)) {
          for (var o = [], s = 0; s < i; s++) o.push($t(a, t, n));
          return (
            o.forEach(function(t) {
              return Object(r["kb"])(t);
            }),
            o
          );
        }
        return Object(r["kb"])($t(a, t, n));
      }
      r["gc"].registerClass(Ra);
      var Ma = (function(t) {
          function e(e) {
            var n = t.call(this, e) || this;
            return (n.layer = e.layer), n;
          }
          return (
            a(e, t),
            (e.prototype.build = function(t) {
              this.built = !0;
            }),
            Object.defineProperty(e.prototype, "trainable", {
              get: function() {
                return null != this.layer && this.layer.trainable;
              },
              set: function(t) {
                null != this.layer && (this.layer.trainable = t);
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(e.prototype, "trainableWeights", {
              get: function() {
                return this.layer.trainableWeights;
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(e.prototype, "nonTrainableWeights", {
              get: function() {
                return this.layer.nonTrainableWeights;
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(e.prototype, "updates", {
              get: function() {
                return this.layer._updates;
              },
              enumerable: !0,
              configurable: !0
            }),
            Object.defineProperty(e.prototype, "losses", {
              get: function() {
                return this.layer.losses;
              },
              enumerable: !0,
              configurable: !0
            }),
            (e.prototype.getWeights = function() {
              return this.layer.getWeights();
            }),
            (e.prototype.setWeights = function(t) {
              this.layer.setWeights(t);
            }),
            (e.prototype.getConfig = function() {
              var e = {
                  layer: {
                    className: this.layer.getClassName(),
                    config: this.layer.getConfig()
                  }
                },
                n = t.prototype.getConfig.call(this);
              return Object.assign(e, n), e;
            }),
            (e.prototype.setFastWeightInitDuringBuild = function(e) {
              t.prototype.setFastWeightInitDuringBuild.call(this, e),
                null != this.layer &&
                  this.layer.setFastWeightInitDuringBuild(e);
            }),
            (e.fromConfig = function(t, e, n) {
              void 0 === n && (n = {});
              var r = tr(e.layer, n);
              delete e.layer;
              var i = { layer: r };
              return Object.assign(i, e), new t(i);
            }),
            e
          );
        })(He),
        ja = (function(t) {
          function e(e) {
            var n = t.call(this, e) || this;
            return (n.supportsMasking = !0), n;
          }
          return (
            a(e, t),
            (e.prototype.build = function(e) {
              if ((e = De(e)).length < 3)
                throw new _(
                  "TimeDistributed layer expects an input shape >= 3D, but received input shape " +
                    JSON.stringify(e)
                );
              this.inputSpec = [{ shape: e }];
              var n = [e[0]].concat(e.slice(2));
              this.layer.built ||
                (this.layer.build(n), (this.layer.built = !0)),
                t.prototype.build.call(this, e);
            }),
            (e.prototype.computeOutputShape = function(t) {
              var e = [(t = De(t))[0]].concat(t.slice(2)),
                n = this.layer.computeOutputShape(e),
                r = t[1];
              return [n[0], r].concat(n.slice(1));
            }),
            (e.prototype.call = function(t, e) {
              var n = this;
              return Object(r["Jc"])(function() {
                return Sa(
                  function(t, r) {
                    return [Re(n.layer.call(t, e)), []];
                  },
                  (t = Re(t)),
                  [],
                  !1,
                  null,
                  null,
                  !1,
                  !0
                )[1];
              });
            }),
            (e.className = "TimeDistributed"),
            e
          );
        })(Ma);
      function La(t) {
        z(at, "BidirectionalMergeMode", t);
      }
      r["gc"].registerClass(ja);
      var Ba = (function(t) {
        function e(e) {
          var n = t.call(this, e) || this,
            r = e.layer.getConfig();
          if (
            ((n.forwardLayer = tr({
              className: e.layer.getClassName(),
              config: r
            })),
            (r.goBackwards = !0 !== r.goBackwards),
            (n.backwardLayer = tr({
              className: e.layer.getClassName(),
              config: r
            })),
            (n.forwardLayer.name = "forward_" + n.forwardLayer.name),
            (n.backwardLayer.name = "backward_" + n.backwardLayer.name),
            La(e.mergeMode),
            (n.mergeMode = e.mergeMode),
            e.weights)
          )
            throw new x(
              "weights support is not implemented for Bidirectional layer yet."
            );
          return (
            (n._stateful = e.layer.stateful),
            (n.returnSequences = e.layer.returnSequences),
            (n.returnState = e.layer.returnState),
            (n.supportsMasking = !0),
            (n._trainable = !0),
            (n.inputSpec = e.layer.inputSpec),
            (n.numConstants = null),
            n
          );
        }
        return (
          a(e, t),
          Object.defineProperty(e.prototype, "trainable", {
            get: function() {
              return this._trainable;
            },
            set: function(t) {
              (this._trainable = t),
                null != this.forwardLayer && (this.forwardLayer.trainable = t),
                null != this.backwardLayer &&
                  (this.backwardLayer.trainable = t);
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.getWeights = function() {
            return this.forwardLayer
              .getWeights()
              .concat(this.backwardLayer.getWeights());
          }),
          (e.prototype.setWeights = function(t) {
            var e = t.length,
              n = Math.floor(e / 2);
            this.forwardLayer.setWeights(t.slice(0, n)),
              this.backwardLayer.setWeights(t.slice(n));
          }),
          (e.prototype.computeOutputShape = function(t) {
            var e,
              n,
              r,
              i = this.forwardLayer.computeOutputShape(t);
            return (
              (Array.isArray(i) && Array.isArray(i[0])) || (i = [i]),
              (i = i),
              this.returnState ? ((r = i.slice(1)), (e = i[0])) : (e = i[0]),
              (e = e),
              "concat" === this.mergeMode
                ? ((e[e.length - 1] *= 2), (n = [e]))
                : (n = null == this.mergeMode ? [e, e.slice()] : [e]),
              this.returnState
                ? null == this.mergeMode
                  ? n.concat(r).concat(r.slice())
                  : [e].concat(r).concat(r.slice())
                : I(n)
            );
          }),
          (e.prototype.apply = function(e, n) {
            var r = null == n ? null : n.initialState,
              i = null == n ? null : n.constants;
            null == n && (n = {});
            var a = Ea(e, r, i, this.numConstants);
            if (
              ((e = a.inputs),
              (r = a.initialState),
              (i = a.constants),
              Array.isArray(e) && ((r = e.slice(1)), (e = e[0])),
              (null == r || 0 === r.length) && null == i)
            )
              return t.prototype.apply.call(this, e, n);
            var o = [],
              s = [];
            if (null != r) {
              var u = r.length;
              if (u % 2 > 0)
                throw new _(
                  "When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs."
                );
              (n.initialState = r), o.push.apply(o, r);
              var c = r.map(function(t) {
                return new Ue({ shape: t.shape });
              });
              (this.forwardLayer.stateSpec = c.slice(0, u / 2)),
                (this.backwardLayer.stateSpec = c.slice(u / 2)),
                s.push.apply(s, c);
            }
            if (null != i)
              throw new x(
                "Support for constants in Bidirectional layers is not implemented yet."
              );
            for (var l = o[0] instanceof Ve, f = 0, h = o; f < h.length; f++)
              if (h[f] instanceof Ve !== l)
                throw new _(
                  "The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors"
                );
            if (l) {
              var p = [e].concat(o),
                d = this.inputSpec.concat(s),
                m = this.inputSpec;
              this.inputSpec = d;
              var v = t.prototype.apply.call(this, p, n);
              return (this.inputSpec = m), v;
            }
            return t.prototype.apply.call(this, e, n);
          }),
          (e.prototype.call = function(t, e) {
            var n = this;
            return Object(r["Jc"])(function() {
              if (null != e.mask)
                throw new x(
                  "The support for masking is not implemented for Bidirectional layers yet."
                );
              var i,
                a,
                o,
                s,
                u = e.initialState;
              if (null == u)
                (i = n.forwardLayer.call(t, e)),
                  (a = n.backwardLayer.call(t, e));
              else {
                var c = u.slice(0, u.length / 2),
                  l = u.slice(u.length / 2);
                (i = n.forwardLayer.call(
                  t,
                  Object.assign(e, { initialState: c })
                )),
                  (a = n.backwardLayer.call(
                    t,
                    Object.assign(e, { initialState: l })
                  ));
              }
              return (
                n.returnState &&
                  (Array.isArray(i) && (o = i.slice(1).concat(a.slice(1))),
                  (i = i[0]),
                  (a = a[0])),
                n.returnSequences && (a = Object(r["Zb"])(a, 1)),
                "concat" === n.mergeMode
                  ? (s = Tt([i, a]))
                  : "sum" === n.mergeMode
                  ? (s = Object(r["g"])(i, a))
                  : "ave" === n.mergeMode
                  ? (s = Object(r["Hb"])(g(0.5), Object(r["g"])(i, a)))
                  : "mul" === n.mergeMode
                  ? (s = Object(r["Hb"])(i, a))
                  : null == n.mergeMode && (s = [i, a]),
                n.returnState
                  ? null == n.mergeMode
                    ? s.concat(o)
                    : [s].concat(o)
                  : s
              );
            });
          }),
          (e.prototype.resetStates = function(t) {
            this.forwardLayer.resetStates(), this.backwardLayer.resetStates();
          }),
          (e.prototype.build = function(t) {
            var e = this;
            ht(this.forwardLayer.name, function() {
              e.forwardLayer.build(t);
            }),
              ht(this.backwardLayer.name, function() {
                e.backwardLayer.build(t);
              }),
              (this.built = !0);
          }),
          Object.defineProperty(e.prototype, "trainableWeights", {
            get: function() {
              return this.forwardLayer.trainableWeights.concat(
                this.backwardLayer.trainableWeights
              );
            },
            enumerable: !0,
            configurable: !0
          }),
          Object.defineProperty(e.prototype, "nonTrainableWeights", {
            get: function() {
              return this.forwardLayer.nonTrainableWeights.concat(
                this.backwardLayer.nonTrainableWeights
              );
            },
            enumerable: !0,
            configurable: !0
          }),
          (e.prototype.setFastWeightInitDuringBuild = function(e) {
            t.prototype.setFastWeightInitDuringBuild.call(this, e),
              null != this.forwardLayer &&
                this.forwardLayer.setFastWeightInitDuringBuild(e),
              null != this.backwardLayer &&
                this.backwardLayer.setFastWeightInitDuringBuild(e);
          }),
          (e.prototype.getConfig = function() {
            var e = { mergeMode: this.mergeMode },
              n = t.prototype.getConfig.call(this);
            return Object.assign(e, n), e;
          }),
          (e.fromConfig = function(t, e) {
            var n = tr(e.layer);
            if ((delete e.layer, null != e.numConstants))
              throw new x(
                "Deserialization of a Bidirectional layer with numConstants present is not supported yet."
              );
            var r = e;
            return (r.layer = n), new t(r);
          }),
          (e.className = "Bidirectional"),
          e
        );
      })(Ma);
      function Fa(t) {
        return new Ye(t);
      }
      function za(t) {
        return new bi(t);
      }
      function Ua(t) {
        return new vi(t);
      }
      function Va(t) {
        return new yi(t);
      }
      function Wa(t) {
        return new gi(t);
      }
      function $a(t) {
        return new _i(t);
      }
      function qa(t) {
        return new wi(t);
      }
      function Ha(t) {
        return new Di(t);
      }
      function Ka(t) {
        return new ki(t);
      }
      function Ga(t) {
        return new Pi(t);
      }
      function Xa(t) {
        return new Ri(t);
      }
      function Ja(t) {
        return new Mi(t);
      }
      function Ya(t) {
        return new ji(t);
      }
      function Qa(t) {
        return new Bi(t);
      }
      function Za(t) {
        return new Vi(t);
      }
      function to(t) {
        return new zi(t);
      }
      function eo(t) {
        return new Fi(t);
      }
      function no(t) {
        return new Ui(t);
      }
      function ro(t) {
        return new Wi(t);
      }
      function io(t) {
        return new $i(t);
      }
      function ao(t) {
        return new qi(t);
      }
      function oo(t) {
        return new Hi(t);
      }
      function so(t) {
        return new Gi(t);
      }
      function uo(t) {
        return new Ji(t);
      }
      function co(t) {
        return new Zi(t);
      }
      function lo(t) {
        return new Yi(t);
      }
      function fo(t) {
        return new Qi(t);
      }
      function ho(t) {
        return new Xi(t);
      }
      function po(t) {
        return new na(t);
      }
      function mo(t) {
        return new sa(t);
      }
      function vo(t) {
        return new ca(t);
      }
      function yo(t) {
        return new pa(t);
      }
      function go(t) {
        return yo(t);
      }
      function bo(t) {
        return yo(t);
      }
      function wo(t) {
        return new va(t);
      }
      function _o(t) {
        return wo(t);
      }
      function xo(t) {
        return wo(t);
      }
      function Eo(t) {
        return new ga(t);
      }
      function So(t) {
        return new _a(t);
      }
      function No(t) {
        return new ba(t);
      }
      function Oo(t) {
        return new xa(t);
      }
      function Io(t) {
        return new ha(t);
      }
      function Co(t) {
        return new ma(t);
      }
      function Ao(t) {
        return new ka(t);
      }
      function ko(t) {
        return new Aa(t);
      }
      function Po(t) {
        return new Ta(t);
      }
      function To(t) {
        return new Pa(t);
      }
      function Ro(t) {
        return new Ca(t);
      }
      function Do(t) {
        return new Ia(t);
      }
      function Mo(t) {
        return new Na(t);
      }
      function jo(t) {
        return new Ra(t);
      }
      function Lo(t) {
        return new Ba(t);
      }
      function Bo(t) {
        return new ja(t);
      }
      r["gc"].registerClass(Ba);
      var Fo = No,
        zo = Oo,
        Uo = Io,
        Vo = Co;
      Object.freeze({
        inputLayer: Fa,
        elu: za,
        reLU: Ua,
        leakyReLU: Va,
        prelu: Wa,
        softmax: $a,
        thresholdedReLU: qa,
        conv1d: Ha,
        conv2d: Ka,
        conv2dTranspose: Ga,
        separableConv2d: Xa,
        cropping2D: Ja,
        upSampling2d: Ya,
        depthwiseConv2d: Qa,
        activation: Za,
        dense: to,
        dropout: eo,
        flatten: no,
        repeatVector: ro,
        reshape: io,
        permute: ao,
        embedding: oo,
        add: so,
        average: uo,
        concatenate: co,
        maximum: lo,
        minimum: fo,
        multiply: ho,
        dot: po,
        batchNormalization: mo,
        zeroPadding2d: vo,
        averagePooling1d: yo,
        avgPool1d: go,
        avgPooling1d: bo,
        averagePooling2d: wo,
        avgPool2d: _o,
        avgPooling2d: xo,
        globalAveragePooling1d: Eo,
        globalAveragePooling2d: So,
        globalMaxPooling1d: No,
        globalMaxPooling2d: Oo,
        maxPooling1d: Io,
        maxPooling2d: Co,
        gru: Ao,
        gruCell: ko,
        lstm: Po,
        lstmCell: To,
        simpleRNN: Ro,
        simpleRNNCell: Do,
        rnn: Mo,
        stackedRNNCells: jo,
        bidirectional: Lo,
        timeDistributed: Bo,
        globalMaxPool1d: Fo,
        globalMaxPool2d: zo,
        maxPool1d: Uo,
        maxPool2d: Vo,
        Layer: He,
        RNN: Na,
        RNNCell: Oa,
        input: Hr
      });
      function Wo(t, e) {
        return Cn(t, e);
      }
      function $o(t, e) {
        return Mn(t, e);
      }
      function qo(t, e) {
        return jn(t, e);
      }
      function Ho(t, e) {
        return An(t, e);
      }
      function Ko(t, e) {
        return Wn(t, e);
      }
      function Go(t, e) {
        return Rn(t, e);
      }
      function Xo(t, e) {
        return Dn(t, e);
      }
      function Jo(t, e) {
        return On(t, e);
      }
      function Yo(t, e) {
        return pn(t, e);
      }
      function Qo(t, e) {
        return dn(t, e);
      }
      function Zo(t, e) {
        return dn(t, e);
      }
      function ts(t, e) {
        return dn(t, e);
      }
      function es(t, e) {
        return hn(t, e);
      }
      function ns(t, e) {
        return hn(t, e);
      }
      function rs(t, e) {
        return hn(t, e);
      }
      Object.freeze({
        binaryAccuracy: Wo,
        binaryCrossentropy: $o,
        sparseCategoricalAccuracy: qo,
        categoricalAccuracy: Ho,
        categoricalCrossentropy: Ko,
        precision: Go,
        recall: Xo,
        cosineProximity: Jo,
        meanAbsoluteError: Yo,
        meanAbsolutePercentageError: Qo,
        MAPE: Zo,
        mape: ts,
        meanSquaredError: es,
        MSE: ns,
        mse: rs
      }),
        Object.freeze({ modelFromJSON: $r });
      function is(t) {
        return new ci(t);
      }
      function as(t) {
        return li(t);
      }
      function os(t) {
        return fi(t);
      }
      Object.freeze({ l1l2: is, l1: as, l2: os }),
        (function(t) {
          function e() {
            var e = (null !== t && t.apply(this, arguments)) || this;
            return (e.model = null), e;
          }
          a(e, t),
            (e.prototype.setModel = function(t) {
              if (!(t instanceof Wr))
                throw new Error(
                  "model must be a Model, not some other Container"
                );
              this.model = t;
            });
        })(en);
      var ss = n("d06a"),
        us = n("bebe");
      n.d(e, "a", function() {
        return r["x"];
      }),
        n.d(e, "b", function() {
          return ss["a"];
        });
      var cs = "0.15.3";
      r["Sc"], us["a"], ss["b"];
    },
    "23c6": function(t, e, n) {
      var r = n("2d95"),
        i = n("2b4c")("toStringTag"),
        a =
          "Arguments" ==
          r(
            (function() {
              return arguments;
            })()
          ),
        o = function(t, e) {
          try {
            return t[e];
          } catch (n) {}
        };
      t.exports = function(t) {
        var e, n, s;
        return void 0 === t
          ? "Undefined"
          : null === t
          ? "Null"
          : "string" == typeof (n = o((e = Object(t)), i))
          ? n
          : a
          ? r(e)
          : "Object" == (s = r(e)) && "function" == typeof e.callee
          ? "Arguments"
          : s;
      };
    },
    "241e": function(t, e, n) {
      var r = n("25eb");
      t.exports = function(t) {
        return Object(r(t));
      };
    },
    "24c5": function(t, e, n) {
      "use strict";
      var r,
        i,
        a,
        o,
        s = n("b8e3"),
        u = n("e53d"),
        c = n("d864"),
        l = n("40c3"),
        f = n("63b6"),
        h = n("f772"),
        p = n("79aa"),
        d = n("1173"),
        m = n("a22a"),
        v = n("f201"),
        y = n("4178").set,
        g = n("aba2")(),
        b = n("656e"),
        w = n("4439"),
        _ = n("bc13"),
        x = n("cd78"),
        E = "Promise",
        S = u.TypeError,
        N = u.process,
        O = N && N.versions,
        I = (O && O.v8) || "",
        C = u[E],
        A = "process" == l(N),
        k = function() {},
        P = (i = b.f),
        T = !!(function() {
          try {
            var t = C.resolve(1),
              e = ((t.constructor = {})[n("5168")("species")] = function(t) {
                t(k, k);
              });
            return (
              (A || "function" == typeof PromiseRejectionEvent) &&
              t.then(k) instanceof e &&
              0 !== I.indexOf("6.6") &&
              -1 === _.indexOf("Chrome/66")
            );
          } catch (r) {}
        })(),
        R = function(t) {
          var e;
          return !(!h(t) || "function" != typeof (e = t.then)) && e;
        },
        D = function(t, e) {
          if (!t._n) {
            t._n = !0;
            var n = t._c;
            g(function() {
              var r = t._v,
                i = 1 == t._s,
                a = 0,
                o = function(e) {
                  var n,
                    a,
                    o,
                    s = i ? e.ok : e.fail,
                    u = e.resolve,
                    c = e.reject,
                    l = e.domain;
                  try {
                    s
                      ? (i || (2 == t._h && L(t), (t._h = 1)),
                        !0 === s
                          ? (n = r)
                          : (l && l.enter(),
                            (n = s(r)),
                            l && (l.exit(), (o = !0))),
                        n === e.promise
                          ? c(S("Promise-chain cycle"))
                          : (a = R(n))
                          ? a.call(n, u, c)
                          : u(n))
                      : c(r);
                  } catch (f) {
                    l && !o && l.exit(), c(f);
                  }
                };
              while (n.length > a) o(n[a++]);
              (t._c = []), (t._n = !1), e && !t._h && M(t);
            });
          }
        },
        M = function(t) {
          y.call(u, function() {
            var e,
              n,
              r,
              i = t._v,
              a = j(t);
            if (
              (a &&
                ((e = w(function() {
                  A
                    ? N.emit("unhandledRejection", i, t)
                    : (n = u.onunhandledrejection)
                    ? n({ promise: t, reason: i })
                    : (r = u.console) &&
                      r.error &&
                      r.error("Unhandled promise rejection", i);
                })),
                (t._h = A || j(t) ? 2 : 1)),
              (t._a = void 0),
              a && e.e)
            )
              throw e.v;
          });
        },
        j = function(t) {
          return 1 !== t._h && 0 === (t._a || t._c).length;
        },
        L = function(t) {
          y.call(u, function() {
            var e;
            A
              ? N.emit("rejectionHandled", t)
              : (e = u.onrejectionhandled) && e({ promise: t, reason: t._v });
          });
        },
        B = function(t) {
          var e = this;
          e._d ||
            ((e._d = !0),
            (e = e._w || e),
            (e._v = t),
            (e._s = 2),
            e._a || (e._a = e._c.slice()),
            D(e, !0));
        },
        F = function(t) {
          var e,
            n = this;
          if (!n._d) {
            (n._d = !0), (n = n._w || n);
            try {
              if (n === t) throw S("Promise can't be resolved itself");
              (e = R(t))
                ? g(function() {
                    var r = { _w: n, _d: !1 };
                    try {
                      e.call(t, c(F, r, 1), c(B, r, 1));
                    } catch (i) {
                      B.call(r, i);
                    }
                  })
                : ((n._v = t), (n._s = 1), D(n, !1));
            } catch (r) {
              B.call({ _w: n, _d: !1 }, r);
            }
          }
        };
      T ||
        ((C = function(t) {
          d(this, C, E, "_h"), p(t), r.call(this);
          try {
            t(c(F, this, 1), c(B, this, 1));
          } catch (e) {
            B.call(this, e);
          }
        }),
        (r = function(t) {
          (this._c = []),
            (this._a = void 0),
            (this._s = 0),
            (this._d = !1),
            (this._v = void 0),
            (this._h = 0),
            (this._n = !1);
        }),
        (r.prototype = n("5c95")(C.prototype, {
          then: function(t, e) {
            var n = P(v(this, C));
            return (
              (n.ok = "function" != typeof t || t),
              (n.fail = "function" == typeof e && e),
              (n.domain = A ? N.domain : void 0),
              this._c.push(n),
              this._a && this._a.push(n),
              this._s && D(this, !1),
              n.promise
            );
          },
          catch: function(t) {
            return this.then(void 0, t);
          }
        })),
        (a = function() {
          var t = new r();
          (this.promise = t),
            (this.resolve = c(F, t, 1)),
            (this.reject = c(B, t, 1));
        }),
        (b.f = P = function(t) {
          return t === C || t === o ? new a(t) : i(t);
        })),
        f(f.G + f.W + f.F * !T, { Promise: C }),
        n("45f2")(C, E),
        n("4c95")(E),
        (o = n("584a")[E]),
        f(f.S + f.F * !T, E, {
          reject: function(t) {
            var e = P(this),
              n = e.reject;
            return n(t), e.promise;
          }
        }),
        f(f.S + f.F * (s || !T), E, {
          resolve: function(t) {
            return x(s && this === o ? C : this, t);
          }
        }),
        f(
          f.S +
            f.F *
              !(
                T &&
                n("4ee1")(function(t) {
                  C.all(t)["catch"](k);
                })
              ),
          E,
          {
            all: function(t) {
              var e = this,
                n = P(e),
                r = n.resolve,
                i = n.reject,
                a = w(function() {
                  var n = [],
                    a = 0,
                    o = 1;
                  m(t, !1, function(t) {
                    var s = a++,
                      u = !1;
                    n.push(void 0),
                      o++,
                      e.resolve(t).then(function(t) {
                        u || ((u = !0), (n[s] = t), --o || r(n));
                      }, i);
                  }),
                    --o || r(n);
                });
              return a.e && i(a.v), n.promise;
            },
            race: function(t) {
              var e = this,
                n = P(e),
                r = n.reject,
                i = w(function() {
                  m(t, !1, function(t) {
                    e.resolve(t).then(n.resolve, r);
                  });
                });
              return i.e && r(i.v), n.promise;
            }
          }
        );
    },
    "25eb": function(t, e) {
      t.exports = function(t) {
        if (void 0 == t) throw TypeError("Can't call method on  " + t);
        return t;
      };
    },
    2621: function(t, e) {
      e.f = Object.getOwnPropertySymbols;
    },
    "27bf": function(t, e, n) {
      "use strict";
      t.exports = o;
      var r = n("b19a"),
        i = n("3a7c");
      function a(t, e) {
        var n = this._transformState;
        n.transforming = !1;
        var r = n.writecb;
        if (!r)
          return this.emit(
            "error",
            new Error("write callback called multiple times")
          );
        (n.writechunk = null),
          (n.writecb = null),
          null != e && this.push(e),
          r(t);
        var i = this._readableState;
        (i.reading = !1),
          (i.needReadable || i.length < i.highWaterMark) &&
            this._read(i.highWaterMark);
      }
      function o(t) {
        if (!(this instanceof o)) return new o(t);
        r.call(this, t),
          (this._transformState = {
            afterTransform: a.bind(this),
            needTransform: !1,
            transforming: !1,
            writecb: null,
            writechunk: null,
            writeencoding: null
          }),
          (this._readableState.needReadable = !0),
          (this._readableState.sync = !1),
          t &&
            ("function" === typeof t.transform &&
              (this._transform = t.transform),
            "function" === typeof t.flush && (this._flush = t.flush)),
          this.on("prefinish", s);
      }
      function s() {
        var t = this;
        "function" === typeof this._flush
          ? this._flush(function(e, n) {
              u(t, e, n);
            })
          : u(this, null, null);
      }
      function u(t, e, n) {
        if (e) return t.emit("error", e);
        if ((null != n && t.push(n), t._writableState.length))
          throw new Error("Calling transform done when ws.length != 0");
        if (t._transformState.transforming)
          throw new Error("Calling transform done when still transforming");
        return t.push(null);
      }
      (i.inherits = n("3fb5")),
        i.inherits(o, r),
        (o.prototype.push = function(t, e) {
          return (
            (this._transformState.needTransform = !1),
            r.prototype.push.call(this, t, e)
          );
        }),
        (o.prototype._transform = function(t, e, n) {
          throw new Error("_transform() is not implemented");
        }),
        (o.prototype._write = function(t, e, n) {
          var r = this._transformState;
          if (
            ((r.writecb = n),
            (r.writechunk = t),
            (r.writeencoding = e),
            !r.transforming)
          ) {
            var i = this._readableState;
            (r.needTransform || i.needReadable || i.length < i.highWaterMark) &&
              this._read(i.highWaterMark);
          }
        }),
        (o.prototype._read = function(t) {
          var e = this._transformState;
          null !== e.writechunk && e.writecb && !e.transforming
            ? ((e.transforming = !0),
              this._transform(e.writechunk, e.writeencoding, e.afterTransform))
            : (e.needTransform = !0);
        }),
        (o.prototype._destroy = function(t, e) {
          var n = this;
          r.prototype._destroy.call(this, t, function(t) {
            e(t), n.emit("close");
          });
        });
    },
    "27ee": function(t, e, n) {
      var r = n("23c6"),
        i = n("2b4c")("iterator"),
        a = n("84f2");
      t.exports = n("8378").getIteratorMethod = function(t) {
        if (void 0 != t) return t[i] || t["@@iterator"] || a[r(t)];
      };
    },
    2801: function(t) {
      t.exports = {
        _from: "elliptic@^6.0.0",
        _id: "elliptic@6.4.1",
        _inBundle: !1,
        _integrity: "sha1-wtC3d2kRuGcixjLDwGxg8vgZk5o=",
        _location: "/elliptic",
        _phantomChildren: {},
        _requested: {
          type: "range",
          registry: !0,
          raw: "elliptic@^6.0.0",
          name: "elliptic",
          escapedName: "elliptic",
          rawSpec: "^6.0.0",
          saveSpec: null,
          fetchSpec: "^6.0.0"
        },
        _requiredBy: ["/browserify-sign", "/create-ecdh"],
        _resolved:
          "http://registry.npm.taobao.org/elliptic/download/elliptic-6.4.1.tgz",
        _shasum: "c2d0b7776911b86722c632c3c06c60f2f819939a",
        _spec: "elliptic@^6.0.0",
        _where: "D:\\code\\vue\\fast_style_app\\node_modules\\browserify-sign",
        author: { name: "Fedor Indutny", email: "fedor@indutny.com" },
        bugs: { url: "https://github.com/indutny/elliptic/issues" },
        bundleDependencies: !1,
        dependencies: {
          "bn.js": "^4.4.0",
          brorand: "^1.0.1",
          "hash.js": "^1.0.0",
          "hmac-drbg": "^1.0.0",
          inherits: "^2.0.1",
          "minimalistic-assert": "^1.0.0",
          "minimalistic-crypto-utils": "^1.0.0"
        },
        deprecated: !1,
        description: "EC cryptography",
        devDependencies: {
          brfs: "^1.4.3",
          coveralls: "^2.11.3",
          grunt: "^0.4.5",
          "grunt-browserify": "^5.0.0",
          "grunt-cli": "^1.2.0",
          "grunt-contrib-connect": "^1.0.0",
          "grunt-contrib-copy": "^1.0.0",
          "grunt-contrib-uglify": "^1.0.1",
          "grunt-mocha-istanbul": "^3.0.1",
          "grunt-saucelabs": "^8.6.2",
          istanbul: "^0.4.2",
          jscs: "^2.9.0",
          jshint: "^2.6.0",
          mocha: "^2.1.0"
        },
        files: ["lib"],
        homepage: "https://github.com/indutny/elliptic",
        keywords: ["EC", "Elliptic", "curve", "Cryptography"],
        license: "MIT",
        main: "lib/elliptic.js",
        name: "elliptic",
        repository: {
          type: "git",
          url: "git+ssh://git@github.com/indutny/elliptic.git"
        },
        scripts: {
          jscs:
            "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
          jshint:
            "jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",
          lint: "npm run jscs && npm run jshint",
          test: "npm run lint && npm run unit",
          unit: "istanbul test _mocha --reporter=spec test/index.js",
          version: "grunt dist && git add dist/"
        },
        version: "6.4.1"
      };
    },
    2877: function(t, e, n) {
      "use strict";
      function r(t, e, n, r, i, a, o, s) {
        var u,
          c = "function" === typeof t ? t.options : t;
        if (
          (e && ((c.render = e), (c.staticRenderFns = n), (c._compiled = !0)),
          r && (c.functional = !0),
          a && (c._scopeId = "data-v-" + a),
          o
            ? ((u = function(t) {
                (t =
                  t ||
                  (this.$vnode && this.$vnode.ssrContext) ||
                  (this.parent &&
                    this.parent.$vnode &&
                    this.parent.$vnode.ssrContext)),
                  t ||
                    "undefined" === typeof __VUE_SSR_CONTEXT__ ||
                    (t = __VUE_SSR_CONTEXT__),
                  i && i.call(this, t),
                  t &&
                    t._registeredComponents &&
                    t._registeredComponents.add(o);
              }),
              (c._ssrRegister = u))
            : i &&
              (u = s
                ? function() {
                    i.call(this, this.$root.$options.shadowRoot);
                  }
                : i),
          u)
        )
          if (c.functional) {
            c._injectStyles = u;
            var l = c.render;
            c.render = function(t, e) {
              return u.call(e), l(t, e);
            };
          } else {
            var f = c.beforeCreate;
            c.beforeCreate = f ? [].concat(f, u) : [u];
          }
        return { exports: t, options: c };
      }
      n.d(e, "a", function() {
        return r;
      });
    },
    "28a5": function(t, e, n) {
      "use strict";
      var r = n("aae3"),
        i = n("cb7c"),
        a = n("ebd6"),
        o = n("0390"),
        s = n("9def"),
        u = n("5f1b"),
        c = n("520a"),
        l = n("79e5"),
        f = Math.min,
        h = [].push,
        p = "split",
        d = "length",
        m = "lastIndex",
        v = 4294967295,
        y = !l(function() {
          RegExp(v, "y");
        });
      n("214f")("split", 2, function(t, e, n, l) {
        var g;
        return (
          (g =
            "c" == "abbc"[p](/(b)*/)[1] ||
            4 != "test"[p](/(?:)/, -1)[d] ||
            2 != "ab"[p](/(?:ab)*/)[d] ||
            4 != "."[p](/(.?)(.?)/)[d] ||
            "."[p](/()()/)[d] > 1 ||
            ""[p](/.?/)[d]
              ? function(t, e) {
                  var i = String(this);
                  if (void 0 === t && 0 === e) return [];
                  if (!r(t)) return n.call(i, t, e);
                  var a,
                    o,
                    s,
                    u = [],
                    l =
                      (t.ignoreCase ? "i" : "") +
                      (t.multiline ? "m" : "") +
                      (t.unicode ? "u" : "") +
                      (t.sticky ? "y" : ""),
                    f = 0,
                    p = void 0 === e ? v : e >>> 0,
                    y = new RegExp(t.source, l + "g");
                  while ((a = c.call(y, i))) {
                    if (
                      ((o = y[m]),
                      o > f &&
                        (u.push(i.slice(f, a.index)),
                        a[d] > 1 && a.index < i[d] && h.apply(u, a.slice(1)),
                        (s = a[0][d]),
                        (f = o),
                        u[d] >= p))
                    )
                      break;
                    y[m] === a.index && y[m]++;
                  }
                  return (
                    f === i[d]
                      ? (!s && y.test("")) || u.push("")
                      : u.push(i.slice(f)),
                    u[d] > p ? u.slice(0, p) : u
                  );
                }
              : "0"[p](void 0, 0)[d]
              ? function(t, e) {
                  return void 0 === t && 0 === e ? [] : n.call(this, t, e);
                }
              : n),
          [
            function(n, r) {
              var i = t(this),
                a = void 0 == n ? void 0 : n[e];
              return void 0 !== a ? a.call(n, i, r) : g.call(String(i), n, r);
            },
            function(t, e) {
              var r = l(g, t, this, e, g !== n);
              if (r.done) return r.value;
              var c = i(t),
                h = String(this),
                p = a(c, RegExp),
                d = c.unicode,
                m =
                  (c.ignoreCase ? "i" : "") +
                  (c.multiline ? "m" : "") +
                  (c.unicode ? "u" : "") +
                  (y ? "y" : "g"),
                b = new p(y ? c : "^(?:" + c.source + ")", m),
                w = void 0 === e ? v : e >>> 0;
              if (0 === w) return [];
              if (0 === h.length) return null === u(b, h) ? [h] : [];
              var _ = 0,
                x = 0,
                E = [];
              while (x < h.length) {
                b.lastIndex = y ? x : 0;
                var S,
                  N = u(b, y ? h : h.slice(x));
                if (
                  null === N ||
                  (S = f(s(b.lastIndex + (y ? 0 : x)), h.length)) === _
                )
                  x = o(h, x, d);
                else {
                  if ((E.push(h.slice(_, x)), E.length === w)) return E;
                  for (var O = 1; O <= N.length - 1; O++)
                    if ((E.push(N[O]), E.length === w)) return E;
                  x = _ = S;
                }
              }
              return E.push(h.slice(_)), E;
            }
          ]
        );
      });
    },
    "294c": function(t, e) {
      t.exports = function(t) {
        try {
          return !!t();
        } catch (e) {
          return !0;
        }
      };
    },
    "2aba": function(t, e, n) {
      var r = n("7726"),
        i = n("32e9"),
        a = n("69a8"),
        o = n("ca5a")("src"),
        s = n("fa5b"),
        u = "toString",
        c = ("" + s).split(u);
      (n("8378").inspectSource = function(t) {
        return s.call(t);
      }),
        (t.exports = function(t, e, n, s) {
          var u = "function" == typeof n;
          u && (a(n, "name") || i(n, "name", e)),
            t[e] !== n &&
              (u && (a(n, o) || i(n, o, t[e] ? "" + t[e] : c.join(String(e)))),
              t === r
                ? (t[e] = n)
                : s
                ? t[e]
                  ? (t[e] = n)
                  : i(t, e, n)
                : (delete t[e], i(t, e, n)));
        })(Function.prototype, u, function() {
          return ("function" == typeof this && this[o]) || s.call(this);
        });
    },
    "2aeb": function(t, e, n) {
      var r = n("cb7c"),
        i = n("1495"),
        a = n("e11e"),
        o = n("613b")("IE_PROTO"),
        s = function() {},
        u = "prototype",
        c = function() {
          var t,
            e = n("230e")("iframe"),
            r = a.length,
            i = "<",
            o = ">";
          (e.style.display = "none"),
            n("fab2").appendChild(e),
            (e.src = "javascript:"),
            (t = e.contentWindow.document),
            t.open(),
            t.write(i + "script" + o + "document.F=Object" + i + "/script" + o),
            t.close(),
            (c = t.F);
          while (r--) delete c[u][a[r]];
          return c();
        };
      t.exports =
        Object.create ||
        function(t, e) {
          var n;
          return (
            null !== t
              ? ((s[u] = r(t)), (n = new s()), (s[u] = null), (n[o] = t))
              : (n = c()),
            void 0 === e ? n : i(n, e)
          );
        };
    },
    "2aee": function(t, e, n) {
      var r = n("4111"),
        i = n("d70e"),
        a = n("4dd0"),
        o = n("fda6"),
        s = n("a099"),
        u = n("8707").Buffer;
      function c(t) {
        var e;
        "object" !== typeof t ||
          u.isBuffer(t) ||
          ((e = t.passphrase), (t = t.key)),
          "string" === typeof t && (t = u.from(t));
        var n,
          i,
          o = a(t, e),
          s = o.tag,
          c = o.data;
        switch (s) {
          case "CERTIFICATE":
            i = r.certificate.decode(c, "der").tbsCertificate
              .subjectPublicKeyInfo;
          case "PUBLIC KEY":
            switch (
              (i || (i = r.PublicKey.decode(c, "der")),
              (n = i.algorithm.algorithm.join(".")),
              n)
            ) {
              case "1.2.840.113549.1.1.1":
                return r.RSAPublicKey.decode(i.subjectPublicKey.data, "der");
              case "1.2.840.10045.2.1":
                return (
                  (i.subjectPrivateKey = i.subjectPublicKey),
                  { type: "ec", data: i }
                );
              case "1.2.840.10040.4.1":
                return (
                  (i.algorithm.params.pub_key = r.DSAparam.decode(
                    i.subjectPublicKey.data,
                    "der"
                  )),
                  { type: "dsa", data: i.algorithm.params }
                );
              default:
                throw new Error("unknown key id " + n);
            }
            throw new Error("unknown key type " + s);
          case "ENCRYPTED PRIVATE KEY":
            (c = r.EncryptedPrivateKey.decode(c, "der")), (c = l(c, e));
          case "PRIVATE KEY":
            switch (
              ((i = r.PrivateKey.decode(c, "der")),
              (n = i.algorithm.algorithm.join(".")),
              n)
            ) {
              case "1.2.840.113549.1.1.1":
                return r.RSAPrivateKey.decode(i.subjectPrivateKey, "der");
              case "1.2.840.10045.2.1":
                return {
                  curve: i.algorithm.curve,
                  privateKey: r.ECPrivateKey.decode(i.subjectPrivateKey, "der")
                    .privateKey
                };
              case "1.2.840.10040.4.1":
                return (
                  (i.algorithm.params.priv_key = r.DSAparam.decode(
                    i.subjectPrivateKey,
                    "der"
                  )),
                  { type: "dsa", params: i.algorithm.params }
                );
              default:
                throw new Error("unknown key id " + n);
            }
            throw new Error("unknown key type " + s);
          case "RSA PUBLIC KEY":
            return r.RSAPublicKey.decode(c, "der");
          case "RSA PRIVATE KEY":
            return r.RSAPrivateKey.decode(c, "der");
          case "DSA PRIVATE KEY":
            return { type: "dsa", params: r.DSAPrivateKey.decode(c, "der") };
          case "EC PRIVATE KEY":
            return (
              (c = r.ECPrivateKey.decode(c, "der")),
              { curve: c.parameters.value, privateKey: c.privateKey }
            );
          default:
            throw new Error("unknown key type " + s);
        }
      }
      function l(t, e) {
        var n = t.algorithm.decrypt.kde.kdeparams.salt,
          r = parseInt(t.algorithm.decrypt.kde.kdeparams.iters.toString(), 10),
          a = i[t.algorithm.decrypt.cipher.algo.join(".")],
          c = t.algorithm.decrypt.cipher.iv,
          l = t.subjectPrivateKey,
          f = parseInt(a.split("-")[1], 10) / 8,
          h = s.pbkdf2Sync(e, n, r, f, "sha1"),
          p = o.createDecipheriv(a, h, c),
          d = [];
        return d.push(p.update(l)), d.push(p.final()), u.concat(d);
      }
      (t.exports = c), (c.signature = r.signature);
    },
    "2b0e": function(t, e, n) {
      "use strict";
      (function(t) {
        /*!
         * Vue.js v2.6.10
         * (c) 2014-2019 Evan You
         * Released under the MIT License.
         */
        var n = Object.freeze({});
        function r(t) {
          return void 0 === t || null === t;
        }
        function i(t) {
          return void 0 !== t && null !== t;
        }
        function a(t) {
          return !0 === t;
        }
        function o(t) {
          return !1 === t;
        }
        function s(t) {
          return (
            "string" === typeof t ||
            "number" === typeof t ||
            "symbol" === typeof t ||
            "boolean" === typeof t
          );
        }
        function u(t) {
          return null !== t && "object" === typeof t;
        }
        var c = Object.prototype.toString;
        function l(t) {
          return "[object Object]" === c.call(t);
        }
        function f(t) {
          return "[object RegExp]" === c.call(t);
        }
        function h(t) {
          var e = parseFloat(String(t));
          return e >= 0 && Math.floor(e) === e && isFinite(t);
        }
        function p(t) {
          return (
            i(t) &&
            "function" === typeof t.then &&
            "function" === typeof t.catch
          );
        }
        function d(t) {
          return null == t
            ? ""
            : Array.isArray(t) || (l(t) && t.toString === c)
            ? JSON.stringify(t, null, 2)
            : String(t);
        }
        function m(t) {
          var e = parseFloat(t);
          return isNaN(e) ? t : e;
        }
        function v(t, e) {
          for (
            var n = Object.create(null), r = t.split(","), i = 0;
            i < r.length;
            i++
          )
            n[r[i]] = !0;
          return e
            ? function(t) {
                return n[t.toLowerCase()];
              }
            : function(t) {
                return n[t];
              };
        }
        v("slot,component", !0);
        var y = v("key,ref,slot,slot-scope,is");
        function g(t, e) {
          if (t.length) {
            var n = t.indexOf(e);
            if (n > -1) return t.splice(n, 1);
          }
        }
        var b = Object.prototype.hasOwnProperty;
        function w(t, e) {
          return b.call(t, e);
        }
        function _(t) {
          var e = Object.create(null);
          return function(n) {
            var r = e[n];
            return r || (e[n] = t(n));
          };
        }
        var x = /-(\w)/g,
          E = _(function(t) {
            return t.replace(x, function(t, e) {
              return e ? e.toUpperCase() : "";
            });
          }),
          S = _(function(t) {
            return t.charAt(0).toUpperCase() + t.slice(1);
          }),
          N = /\B([A-Z])/g,
          O = _(function(t) {
            return t.replace(N, "-$1").toLowerCase();
          });
        function I(t, e) {
          function n(n) {
            var r = arguments.length;
            return r
              ? r > 1
                ? t.apply(e, arguments)
                : t.call(e, n)
              : t.call(e);
          }
          return (n._length = t.length), n;
        }
        function C(t, e) {
          return t.bind(e);
        }
        var A = Function.prototype.bind ? C : I;
        function k(t, e) {
          e = e || 0;
          var n = t.length - e,
            r = new Array(n);
          while (n--) r[n] = t[n + e];
          return r;
        }
        function P(t, e) {
          for (var n in e) t[n] = e[n];
          return t;
        }
        function T(t) {
          for (var e = {}, n = 0; n < t.length; n++) t[n] && P(e, t[n]);
          return e;
        }
        function R(t, e, n) {}
        var D = function(t, e, n) {
            return !1;
          },
          M = function(t) {
            return t;
          };
        function j(t, e) {
          if (t === e) return !0;
          var n = u(t),
            r = u(e);
          if (!n || !r) return !n && !r && String(t) === String(e);
          try {
            var i = Array.isArray(t),
              a = Array.isArray(e);
            if (i && a)
              return (
                t.length === e.length &&
                t.every(function(t, n) {
                  return j(t, e[n]);
                })
              );
            if (t instanceof Date && e instanceof Date)
              return t.getTime() === e.getTime();
            if (i || a) return !1;
            var o = Object.keys(t),
              s = Object.keys(e);
            return (
              o.length === s.length &&
              o.every(function(n) {
                return j(t[n], e[n]);
              })
            );
          } catch (c) {
            return !1;
          }
        }
        function L(t, e) {
          for (var n = 0; n < t.length; n++) if (j(t[n], e)) return n;
          return -1;
        }
        function B(t) {
          var e = !1;
          return function() {
            e || ((e = !0), t.apply(this, arguments));
          };
        }
        var F = "data-server-rendered",
          z = ["component", "directive", "filter"],
          U = [
            "beforeCreate",
            "created",
            "beforeMount",
            "mounted",
            "beforeUpdate",
            "updated",
            "beforeDestroy",
            "destroyed",
            "activated",
            "deactivated",
            "errorCaptured",
            "serverPrefetch"
          ],
          V = {
            optionMergeStrategies: Object.create(null),
            silent: !1,
            productionTip: !1,
            devtools: !1,
            performance: !1,
            errorHandler: null,
            warnHandler: null,
            ignoredElements: [],
            keyCodes: Object.create(null),
            isReservedTag: D,
            isReservedAttr: D,
            isUnknownElement: D,
            getTagNamespace: R,
            parsePlatformTagName: M,
            mustUseProp: D,
            async: !0,
            _lifecycleHooks: U
          },
          W = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;
        function $(t) {
          var e = (t + "").charCodeAt(0);
          return 36 === e || 95 === e;
        }
        function q(t, e, n, r) {
          Object.defineProperty(t, e, {
            value: n,
            enumerable: !!r,
            writable: !0,
            configurable: !0
          });
        }
        var H = new RegExp("[^" + W.source + ".$_\\d]");
        function K(t) {
          if (!H.test(t)) {
            var e = t.split(".");
            return function(t) {
              for (var n = 0; n < e.length; n++) {
                if (!t) return;
                t = t[e[n]];
              }
              return t;
            };
          }
        }
        var G,
          X = "__proto__" in {},
          J = "undefined" !== typeof window,
          Y = "undefined" !== typeof WXEnvironment && !!WXEnvironment.platform,
          Q = Y && WXEnvironment.platform.toLowerCase(),
          Z = J && window.navigator.userAgent.toLowerCase(),
          tt = Z && /msie|trident/.test(Z),
          et = Z && Z.indexOf("msie 9.0") > 0,
          nt = Z && Z.indexOf("edge/") > 0,
          rt = (Z && Z.indexOf("android"),
          (Z && /iphone|ipad|ipod|ios/.test(Z)) || "ios" === Q),
          it = (Z && /chrome\/\d+/.test(Z),
          Z && /phantomjs/.test(Z),
          Z && Z.match(/firefox\/(\d+)/)),
          at = {}.watch,
          ot = !1;
        if (J)
          try {
            var st = {};
            Object.defineProperty(st, "passive", {
              get: function() {
                ot = !0;
              }
            }),
              window.addEventListener("test-passive", null, st);
          } catch (Eo) {}
        var ut = function() {
            return (
              void 0 === G &&
                (G =
                  !J &&
                  !Y &&
                  "undefined" !== typeof t &&
                  (t["process"] && "server" === t["process"].env.VUE_ENV)),
              G
            );
          },
          ct = J && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;
        function lt(t) {
          return "function" === typeof t && /native code/.test(t.toString());
        }
        var ft,
          ht =
            "undefined" !== typeof Symbol &&
            lt(Symbol) &&
            "undefined" !== typeof Reflect &&
            lt(Reflect.ownKeys);
        ft =
          "undefined" !== typeof Set && lt(Set)
            ? Set
            : (function() {
                function t() {
                  this.set = Object.create(null);
                }
                return (
                  (t.prototype.has = function(t) {
                    return !0 === this.set[t];
                  }),
                  (t.prototype.add = function(t) {
                    this.set[t] = !0;
                  }),
                  (t.prototype.clear = function() {
                    this.set = Object.create(null);
                  }),
                  t
                );
              })();
        var pt = R,
          dt = 0,
          mt = function() {
            (this.id = dt++), (this.subs = []);
          };
        (mt.prototype.addSub = function(t) {
          this.subs.push(t);
        }),
          (mt.prototype.removeSub = function(t) {
            g(this.subs, t);
          }),
          (mt.prototype.depend = function() {
            mt.target && mt.target.addDep(this);
          }),
          (mt.prototype.notify = function() {
            var t = this.subs.slice();
            for (var e = 0, n = t.length; e < n; e++) t[e].update();
          }),
          (mt.target = null);
        var vt = [];
        function yt(t) {
          vt.push(t), (mt.target = t);
        }
        function gt() {
          vt.pop(), (mt.target = vt[vt.length - 1]);
        }
        var bt = function(t, e, n, r, i, a, o, s) {
            (this.tag = t),
              (this.data = e),
              (this.children = n),
              (this.text = r),
              (this.elm = i),
              (this.ns = void 0),
              (this.context = a),
              (this.fnContext = void 0),
              (this.fnOptions = void 0),
              (this.fnScopeId = void 0),
              (this.key = e && e.key),
              (this.componentOptions = o),
              (this.componentInstance = void 0),
              (this.parent = void 0),
              (this.raw = !1),
              (this.isStatic = !1),
              (this.isRootInsert = !0),
              (this.isComment = !1),
              (this.isCloned = !1),
              (this.isOnce = !1),
              (this.asyncFactory = s),
              (this.asyncMeta = void 0),
              (this.isAsyncPlaceholder = !1);
          },
          wt = { child: { configurable: !0 } };
        (wt.child.get = function() {
          return this.componentInstance;
        }),
          Object.defineProperties(bt.prototype, wt);
        var _t = function(t) {
          void 0 === t && (t = "");
          var e = new bt();
          return (e.text = t), (e.isComment = !0), e;
        };
        function xt(t) {
          return new bt(void 0, void 0, void 0, String(t));
        }
        function Et(t) {
          var e = new bt(
            t.tag,
            t.data,
            t.children && t.children.slice(),
            t.text,
            t.elm,
            t.context,
            t.componentOptions,
            t.asyncFactory
          );
          return (
            (e.ns = t.ns),
            (e.isStatic = t.isStatic),
            (e.key = t.key),
            (e.isComment = t.isComment),
            (e.fnContext = t.fnContext),
            (e.fnOptions = t.fnOptions),
            (e.fnScopeId = t.fnScopeId),
            (e.asyncMeta = t.asyncMeta),
            (e.isCloned = !0),
            e
          );
        }
        var St = Array.prototype,
          Nt = Object.create(St),
          Ot = ["push", "pop", "shift", "unshift", "splice", "sort", "reverse"];
        Ot.forEach(function(t) {
          var e = St[t];
          q(Nt, t, function() {
            var n = [],
              r = arguments.length;
            while (r--) n[r] = arguments[r];
            var i,
              a = e.apply(this, n),
              o = this.__ob__;
            switch (t) {
              case "push":
              case "unshift":
                i = n;
                break;
              case "splice":
                i = n.slice(2);
                break;
            }
            return i && o.observeArray(i), o.dep.notify(), a;
          });
        });
        var It = Object.getOwnPropertyNames(Nt),
          Ct = !0;
        function At(t) {
          Ct = t;
        }
        var kt = function(t) {
          (this.value = t),
            (this.dep = new mt()),
            (this.vmCount = 0),
            q(t, "__ob__", this),
            Array.isArray(t)
              ? (X ? Pt(t, Nt) : Tt(t, Nt, It), this.observeArray(t))
              : this.walk(t);
        };
        function Pt(t, e) {
          t.__proto__ = e;
        }
        function Tt(t, e, n) {
          for (var r = 0, i = n.length; r < i; r++) {
            var a = n[r];
            q(t, a, e[a]);
          }
        }
        function Rt(t, e) {
          var n;
          if (u(t) && !(t instanceof bt))
            return (
              w(t, "__ob__") && t.__ob__ instanceof kt
                ? (n = t.__ob__)
                : Ct &&
                  !ut() &&
                  (Array.isArray(t) || l(t)) &&
                  Object.isExtensible(t) &&
                  !t._isVue &&
                  (n = new kt(t)),
              e && n && n.vmCount++,
              n
            );
        }
        function Dt(t, e, n, r, i) {
          var a = new mt(),
            o = Object.getOwnPropertyDescriptor(t, e);
          if (!o || !1 !== o.configurable) {
            var s = o && o.get,
              u = o && o.set;
            (s && !u) || 2 !== arguments.length || (n = t[e]);
            var c = !i && Rt(n);
            Object.defineProperty(t, e, {
              enumerable: !0,
              configurable: !0,
              get: function() {
                var e = s ? s.call(t) : n;
                return (
                  mt.target &&
                    (a.depend(),
                    c && (c.dep.depend(), Array.isArray(e) && Lt(e))),
                  e
                );
              },
              set: function(e) {
                var r = s ? s.call(t) : n;
                e === r ||
                  (e !== e && r !== r) ||
                  (s && !u) ||
                  (u ? u.call(t, e) : (n = e), (c = !i && Rt(e)), a.notify());
              }
            });
          }
        }
        function Mt(t, e, n) {
          if (Array.isArray(t) && h(e))
            return (t.length = Math.max(t.length, e)), t.splice(e, 1, n), n;
          if (e in t && !(e in Object.prototype)) return (t[e] = n), n;
          var r = t.__ob__;
          return t._isVue || (r && r.vmCount)
            ? n
            : r
            ? (Dt(r.value, e, n), r.dep.notify(), n)
            : ((t[e] = n), n);
        }
        function jt(t, e) {
          if (Array.isArray(t) && h(e)) t.splice(e, 1);
          else {
            var n = t.__ob__;
            t._isVue ||
              (n && n.vmCount) ||
              (w(t, e) && (delete t[e], n && n.dep.notify()));
          }
        }
        function Lt(t) {
          for (var e = void 0, n = 0, r = t.length; n < r; n++)
            (e = t[n]),
              e && e.__ob__ && e.__ob__.dep.depend(),
              Array.isArray(e) && Lt(e);
        }
        (kt.prototype.walk = function(t) {
          for (var e = Object.keys(t), n = 0; n < e.length; n++) Dt(t, e[n]);
        }),
          (kt.prototype.observeArray = function(t) {
            for (var e = 0, n = t.length; e < n; e++) Rt(t[e]);
          });
        var Bt = V.optionMergeStrategies;
        function Ft(t, e) {
          if (!e) return t;
          for (
            var n, r, i, a = ht ? Reflect.ownKeys(e) : Object.keys(e), o = 0;
            o < a.length;
            o++
          )
            (n = a[o]),
              "__ob__" !== n &&
                ((r = t[n]),
                (i = e[n]),
                w(t, n) ? r !== i && l(r) && l(i) && Ft(r, i) : Mt(t, n, i));
          return t;
        }
        function zt(t, e, n) {
          return n
            ? function() {
                var r = "function" === typeof e ? e.call(n, n) : e,
                  i = "function" === typeof t ? t.call(n, n) : t;
                return r ? Ft(r, i) : i;
              }
            : e
            ? t
              ? function() {
                  return Ft(
                    "function" === typeof e ? e.call(this, this) : e,
                    "function" === typeof t ? t.call(this, this) : t
                  );
                }
              : e
            : t;
        }
        function Ut(t, e) {
          var n = e ? (t ? t.concat(e) : Array.isArray(e) ? e : [e]) : t;
          return n ? Vt(n) : n;
        }
        function Vt(t) {
          for (var e = [], n = 0; n < t.length; n++)
            -1 === e.indexOf(t[n]) && e.push(t[n]);
          return e;
        }
        function Wt(t, e, n, r) {
          var i = Object.create(t || null);
          return e ? P(i, e) : i;
        }
        (Bt.data = function(t, e, n) {
          return n ? zt(t, e, n) : e && "function" !== typeof e ? t : zt(t, e);
        }),
          U.forEach(function(t) {
            Bt[t] = Ut;
          }),
          z.forEach(function(t) {
            Bt[t + "s"] = Wt;
          }),
          (Bt.watch = function(t, e, n, r) {
            if ((t === at && (t = void 0), e === at && (e = void 0), !e))
              return Object.create(t || null);
            if (!t) return e;
            var i = {};
            for (var a in (P(i, t), e)) {
              var o = i[a],
                s = e[a];
              o && !Array.isArray(o) && (o = [o]),
                (i[a] = o ? o.concat(s) : Array.isArray(s) ? s : [s]);
            }
            return i;
          }),
          (Bt.props = Bt.methods = Bt.inject = Bt.computed = function(
            t,
            e,
            n,
            r
          ) {
            if (!t) return e;
            var i = Object.create(null);
            return P(i, t), e && P(i, e), i;
          }),
          (Bt.provide = zt);
        var $t = function(t, e) {
          return void 0 === e ? t : e;
        };
        function qt(t, e) {
          var n = t.props;
          if (n) {
            var r,
              i,
              a,
              o = {};
            if (Array.isArray(n)) {
              r = n.length;
              while (r--)
                (i = n[r]),
                  "string" === typeof i &&
                    ((a = E(i)), (o[a] = { type: null }));
            } else if (l(n))
              for (var s in n)
                (i = n[s]), (a = E(s)), (o[a] = l(i) ? i : { type: i });
            else 0;
            t.props = o;
          }
        }
        function Ht(t, e) {
          var n = t.inject;
          if (n) {
            var r = (t.inject = {});
            if (Array.isArray(n))
              for (var i = 0; i < n.length; i++) r[n[i]] = { from: n[i] };
            else if (l(n))
              for (var a in n) {
                var o = n[a];
                r[a] = l(o) ? P({ from: a }, o) : { from: o };
              }
            else 0;
          }
        }
        function Kt(t) {
          var e = t.directives;
          if (e)
            for (var n in e) {
              var r = e[n];
              "function" === typeof r && (e[n] = { bind: r, update: r });
            }
        }
        function Gt(t, e, n) {
          if (
            ("function" === typeof e && (e = e.options),
            qt(e, n),
            Ht(e, n),
            Kt(e),
            !e._base && (e.extends && (t = Gt(t, e.extends, n)), e.mixins))
          )
            for (var r = 0, i = e.mixins.length; r < i; r++)
              t = Gt(t, e.mixins[r], n);
          var a,
            o = {};
          for (a in t) s(a);
          for (a in e) w(t, a) || s(a);
          function s(r) {
            var i = Bt[r] || $t;
            o[r] = i(t[r], e[r], n, r);
          }
          return o;
        }
        function Xt(t, e, n, r) {
          if ("string" === typeof n) {
            var i = t[e];
            if (w(i, n)) return i[n];
            var a = E(n);
            if (w(i, a)) return i[a];
            var o = S(a);
            if (w(i, o)) return i[o];
            var s = i[n] || i[a] || i[o];
            return s;
          }
        }
        function Jt(t, e, n, r) {
          var i = e[t],
            a = !w(n, t),
            o = n[t],
            s = te(Boolean, i.type);
          if (s > -1)
            if (a && !w(i, "default")) o = !1;
            else if ("" === o || o === O(t)) {
              var u = te(String, i.type);
              (u < 0 || s < u) && (o = !0);
            }
          if (void 0 === o) {
            o = Yt(r, i, t);
            var c = Ct;
            At(!0), Rt(o), At(c);
          }
          return o;
        }
        function Yt(t, e, n) {
          if (w(e, "default")) {
            var r = e.default;
            return t &&
              t.$options.propsData &&
              void 0 === t.$options.propsData[n] &&
              void 0 !== t._props[n]
              ? t._props[n]
              : "function" === typeof r && "Function" !== Qt(e.type)
              ? r.call(t)
              : r;
          }
        }
        function Qt(t) {
          var e = t && t.toString().match(/^\s*function (\w+)/);
          return e ? e[1] : "";
        }
        function Zt(t, e) {
          return Qt(t) === Qt(e);
        }
        function te(t, e) {
          if (!Array.isArray(e)) return Zt(e, t) ? 0 : -1;
          for (var n = 0, r = e.length; n < r; n++) if (Zt(e[n], t)) return n;
          return -1;
        }
        function ee(t, e, n) {
          yt();
          try {
            if (e) {
              var r = e;
              while ((r = r.$parent)) {
                var i = r.$options.errorCaptured;
                if (i)
                  for (var a = 0; a < i.length; a++)
                    try {
                      var o = !1 === i[a].call(r, t, e, n);
                      if (o) return;
                    } catch (Eo) {
                      re(Eo, r, "errorCaptured hook");
                    }
              }
            }
            re(t, e, n);
          } finally {
            gt();
          }
        }
        function ne(t, e, n, r, i) {
          var a;
          try {
            (a = n ? t.apply(e, n) : t.call(e)),
              a &&
                !a._isVue &&
                p(a) &&
                !a._handled &&
                (a.catch(function(t) {
                  return ee(t, r, i + " (Promise/async)");
                }),
                (a._handled = !0));
          } catch (Eo) {
            ee(Eo, r, i);
          }
          return a;
        }
        function re(t, e, n) {
          if (V.errorHandler)
            try {
              return V.errorHandler.call(null, t, e, n);
            } catch (Eo) {
              Eo !== t && ie(Eo, null, "config.errorHandler");
            }
          ie(t, e, n);
        }
        function ie(t, e, n) {
          if ((!J && !Y) || "undefined" === typeof console) throw t;
          console.error(t);
        }
        var ae,
          oe = !1,
          se = [],
          ue = !1;
        function ce() {
          ue = !1;
          var t = se.slice(0);
          se.length = 0;
          for (var e = 0; e < t.length; e++) t[e]();
        }
        if ("undefined" !== typeof Promise && lt(Promise)) {
          var le = Promise.resolve();
          (ae = function() {
            le.then(ce), rt && setTimeout(R);
          }),
            (oe = !0);
        } else if (
          tt ||
          "undefined" === typeof MutationObserver ||
          (!lt(MutationObserver) &&
            "[object MutationObserverConstructor]" !==
              MutationObserver.toString())
        )
          ae =
            "undefined" !== typeof setImmediate && lt(setImmediate)
              ? function() {
                  setImmediate(ce);
                }
              : function() {
                  setTimeout(ce, 0);
                };
        else {
          var fe = 1,
            he = new MutationObserver(ce),
            pe = document.createTextNode(String(fe));
          he.observe(pe, { characterData: !0 }),
            (ae = function() {
              (fe = (fe + 1) % 2), (pe.data = String(fe));
            }),
            (oe = !0);
        }
        function de(t, e) {
          var n;
          if (
            (se.push(function() {
              if (t)
                try {
                  t.call(e);
                } catch (Eo) {
                  ee(Eo, e, "nextTick");
                }
              else n && n(e);
            }),
            ue || ((ue = !0), ae()),
            !t && "undefined" !== typeof Promise)
          )
            return new Promise(function(t) {
              n = t;
            });
        }
        var me = new ft();
        function ve(t) {
          ye(t, me), me.clear();
        }
        function ye(t, e) {
          var n,
            r,
            i = Array.isArray(t);
          if (!((!i && !u(t)) || Object.isFrozen(t) || t instanceof bt)) {
            if (t.__ob__) {
              var a = t.__ob__.dep.id;
              if (e.has(a)) return;
              e.add(a);
            }
            if (i) {
              n = t.length;
              while (n--) ye(t[n], e);
            } else {
              (r = Object.keys(t)), (n = r.length);
              while (n--) ye(t[r[n]], e);
            }
          }
        }
        var ge = _(function(t) {
          var e = "&" === t.charAt(0);
          t = e ? t.slice(1) : t;
          var n = "~" === t.charAt(0);
          t = n ? t.slice(1) : t;
          var r = "!" === t.charAt(0);
          return (
            (t = r ? t.slice(1) : t),
            { name: t, once: n, capture: r, passive: e }
          );
        });
        function be(t, e) {
          function n() {
            var t = arguments,
              r = n.fns;
            if (!Array.isArray(r))
              return ne(r, null, arguments, e, "v-on handler");
            for (var i = r.slice(), a = 0; a < i.length; a++)
              ne(i[a], null, t, e, "v-on handler");
          }
          return (n.fns = t), n;
        }
        function we(t, e, n, i, o, s) {
          var u, c, l, f;
          for (u in t)
            (c = t[u]),
              (l = e[u]),
              (f = ge(u)),
              r(c) ||
                (r(l)
                  ? (r(c.fns) && (c = t[u] = be(c, s)),
                    a(f.once) && (c = t[u] = o(f.name, c, f.capture)),
                    n(f.name, c, f.capture, f.passive, f.params))
                  : c !== l && ((l.fns = c), (t[u] = l)));
          for (u in e) r(t[u]) && ((f = ge(u)), i(f.name, e[u], f.capture));
        }
        function _e(t, e, n) {
          var o;
          t instanceof bt && (t = t.data.hook || (t.data.hook = {}));
          var s = t[e];
          function u() {
            n.apply(this, arguments), g(o.fns, u);
          }
          r(s)
            ? (o = be([u]))
            : i(s.fns) && a(s.merged)
            ? ((o = s), o.fns.push(u))
            : (o = be([s, u])),
            (o.merged = !0),
            (t[e] = o);
        }
        function xe(t, e, n) {
          var a = e.options.props;
          if (!r(a)) {
            var o = {},
              s = t.attrs,
              u = t.props;
            if (i(s) || i(u))
              for (var c in a) {
                var l = O(c);
                Ee(o, u, c, l, !0) || Ee(o, s, c, l, !1);
              }
            return o;
          }
        }
        function Ee(t, e, n, r, a) {
          if (i(e)) {
            if (w(e, n)) return (t[n] = e[n]), a || delete e[n], !0;
            if (w(e, r)) return (t[n] = e[r]), a || delete e[r], !0;
          }
          return !1;
        }
        function Se(t) {
          for (var e = 0; e < t.length; e++)
            if (Array.isArray(t[e])) return Array.prototype.concat.apply([], t);
          return t;
        }
        function Ne(t) {
          return s(t) ? [xt(t)] : Array.isArray(t) ? Ie(t) : void 0;
        }
        function Oe(t) {
          return i(t) && i(t.text) && o(t.isComment);
        }
        function Ie(t, e) {
          var n,
            o,
            u,
            c,
            l = [];
          for (n = 0; n < t.length; n++)
            (o = t[n]),
              r(o) ||
                "boolean" === typeof o ||
                ((u = l.length - 1),
                (c = l[u]),
                Array.isArray(o)
                  ? o.length > 0 &&
                    ((o = Ie(o, (e || "") + "_" + n)),
                    Oe(o[0]) &&
                      Oe(c) &&
                      ((l[u] = xt(c.text + o[0].text)), o.shift()),
                    l.push.apply(l, o))
                  : s(o)
                  ? Oe(c)
                    ? (l[u] = xt(c.text + o))
                    : "" !== o && l.push(xt(o))
                  : Oe(o) && Oe(c)
                  ? (l[u] = xt(c.text + o.text))
                  : (a(t._isVList) &&
                      i(o.tag) &&
                      r(o.key) &&
                      i(e) &&
                      (o.key = "__vlist" + e + "_" + n + "__"),
                    l.push(o)));
          return l;
        }
        function Ce(t) {
          var e = t.$options.provide;
          e && (t._provided = "function" === typeof e ? e.call(t) : e);
        }
        function Ae(t) {
          var e = ke(t.$options.inject, t);
          e &&
            (At(!1),
            Object.keys(e).forEach(function(n) {
              Dt(t, n, e[n]);
            }),
            At(!0));
        }
        function ke(t, e) {
          if (t) {
            for (
              var n = Object.create(null),
                r = ht ? Reflect.ownKeys(t) : Object.keys(t),
                i = 0;
              i < r.length;
              i++
            ) {
              var a = r[i];
              if ("__ob__" !== a) {
                var o = t[a].from,
                  s = e;
                while (s) {
                  if (s._provided && w(s._provided, o)) {
                    n[a] = s._provided[o];
                    break;
                  }
                  s = s.$parent;
                }
                if (!s)
                  if ("default" in t[a]) {
                    var u = t[a].default;
                    n[a] = "function" === typeof u ? u.call(e) : u;
                  } else 0;
              }
            }
            return n;
          }
        }
        function Pe(t, e) {
          if (!t || !t.length) return {};
          for (var n = {}, r = 0, i = t.length; r < i; r++) {
            var a = t[r],
              o = a.data;
            if (
              (o && o.attrs && o.attrs.slot && delete o.attrs.slot,
              (a.context !== e && a.fnContext !== e) || !o || null == o.slot)
            )
              (n.default || (n.default = [])).push(a);
            else {
              var s = o.slot,
                u = n[s] || (n[s] = []);
              "template" === a.tag
                ? u.push.apply(u, a.children || [])
                : u.push(a);
            }
          }
          for (var c in n) n[c].every(Te) && delete n[c];
          return n;
        }
        function Te(t) {
          return (t.isComment && !t.asyncFactory) || " " === t.text;
        }
        function Re(t, e, r) {
          var i,
            a = Object.keys(e).length > 0,
            o = t ? !!t.$stable : !a,
            s = t && t.$key;
          if (t) {
            if (t._normalized) return t._normalized;
            if (o && r && r !== n && s === r.$key && !a && !r.$hasNormal)
              return r;
            for (var u in ((i = {}), t))
              t[u] && "$" !== u[0] && (i[u] = De(e, u, t[u]));
          } else i = {};
          for (var c in e) c in i || (i[c] = Me(e, c));
          return (
            t && Object.isExtensible(t) && (t._normalized = i),
            q(i, "$stable", o),
            q(i, "$key", s),
            q(i, "$hasNormal", a),
            i
          );
        }
        function De(t, e, n) {
          var r = function() {
            var t = arguments.length ? n.apply(null, arguments) : n({});
            return (
              (t =
                t && "object" === typeof t && !Array.isArray(t) ? [t] : Ne(t)),
              t && (0 === t.length || (1 === t.length && t[0].isComment))
                ? void 0
                : t
            );
          };
          return (
            n.proxy &&
              Object.defineProperty(t, e, {
                get: r,
                enumerable: !0,
                configurable: !0
              }),
            r
          );
        }
        function Me(t, e) {
          return function() {
            return t[e];
          };
        }
        function je(t, e) {
          var n, r, a, o, s;
          if (Array.isArray(t) || "string" === typeof t)
            for (n = new Array(t.length), r = 0, a = t.length; r < a; r++)
              n[r] = e(t[r], r);
          else if ("number" === typeof t)
            for (n = new Array(t), r = 0; r < t; r++) n[r] = e(r + 1, r);
          else if (u(t))
            if (ht && t[Symbol.iterator]) {
              n = [];
              var c = t[Symbol.iterator](),
                l = c.next();
              while (!l.done) n.push(e(l.value, n.length)), (l = c.next());
            } else
              for (
                o = Object.keys(t),
                  n = new Array(o.length),
                  r = 0,
                  a = o.length;
                r < a;
                r++
              )
                (s = o[r]), (n[r] = e(t[s], s, r));
          return i(n) || (n = []), (n._isVList = !0), n;
        }
        function Le(t, e, n, r) {
          var i,
            a = this.$scopedSlots[t];
          a
            ? ((n = n || {}), r && (n = P(P({}, r), n)), (i = a(n) || e))
            : (i = this.$slots[t] || e);
          var o = n && n.slot;
          return o ? this.$createElement("template", { slot: o }, i) : i;
        }
        function Be(t) {
          return Xt(this.$options, "filters", t, !0) || M;
        }
        function Fe(t, e) {
          return Array.isArray(t) ? -1 === t.indexOf(e) : t !== e;
        }
        function ze(t, e, n, r, i) {
          var a = V.keyCodes[e] || n;
          return i && r && !V.keyCodes[e]
            ? Fe(i, r)
            : a
            ? Fe(a, t)
            : r
            ? O(r) !== e
            : void 0;
        }
        function Ue(t, e, n, r, i) {
          if (n)
            if (u(n)) {
              var a;
              Array.isArray(n) && (n = T(n));
              var o = function(o) {
                if ("class" === o || "style" === o || y(o)) a = t;
                else {
                  var s = t.attrs && t.attrs.type;
                  a =
                    r || V.mustUseProp(e, s, o)
                      ? t.domProps || (t.domProps = {})
                      : t.attrs || (t.attrs = {});
                }
                var u = E(o),
                  c = O(o);
                if (!(u in a) && !(c in a) && ((a[o] = n[o]), i)) {
                  var l = t.on || (t.on = {});
                  l["update:" + o] = function(t) {
                    n[o] = t;
                  };
                }
              };
              for (var s in n) o(s);
            } else;
          return t;
        }
        function Ve(t, e) {
          var n = this._staticTrees || (this._staticTrees = []),
            r = n[t];
          return r && !e
            ? r
            : ((r = n[t] = this.$options.staticRenderFns[t].call(
                this._renderProxy,
                null,
                this
              )),
              $e(r, "__static__" + t, !1),
              r);
        }
        function We(t, e, n) {
          return $e(t, "__once__" + e + (n ? "_" + n : ""), !0), t;
        }
        function $e(t, e, n) {
          if (Array.isArray(t))
            for (var r = 0; r < t.length; r++)
              t[r] && "string" !== typeof t[r] && qe(t[r], e + "_" + r, n);
          else qe(t, e, n);
        }
        function qe(t, e, n) {
          (t.isStatic = !0), (t.key = e), (t.isOnce = n);
        }
        function He(t, e) {
          if (e)
            if (l(e)) {
              var n = (t.on = t.on ? P({}, t.on) : {});
              for (var r in e) {
                var i = n[r],
                  a = e[r];
                n[r] = i ? [].concat(i, a) : a;
              }
            } else;
          return t;
        }
        function Ke(t, e, n, r) {
          e = e || { $stable: !n };
          for (var i = 0; i < t.length; i++) {
            var a = t[i];
            Array.isArray(a)
              ? Ke(a, e, n)
              : a && (a.proxy && (a.fn.proxy = !0), (e[a.key] = a.fn));
          }
          return r && (e.$key = r), e;
        }
        function Ge(t, e) {
          for (var n = 0; n < e.length; n += 2) {
            var r = e[n];
            "string" === typeof r && r && (t[e[n]] = e[n + 1]);
          }
          return t;
        }
        function Xe(t, e) {
          return "string" === typeof t ? e + t : t;
        }
        function Je(t) {
          (t._o = We),
            (t._n = m),
            (t._s = d),
            (t._l = je),
            (t._t = Le),
            (t._q = j),
            (t._i = L),
            (t._m = Ve),
            (t._f = Be),
            (t._k = ze),
            (t._b = Ue),
            (t._v = xt),
            (t._e = _t),
            (t._u = Ke),
            (t._g = He),
            (t._d = Ge),
            (t._p = Xe);
        }
        function Ye(t, e, r, i, o) {
          var s,
            u = this,
            c = o.options;
          w(i, "_uid")
            ? ((s = Object.create(i)), (s._original = i))
            : ((s = i), (i = i._original));
          var l = a(c._compiled),
            f = !l;
          (this.data = t),
            (this.props = e),
            (this.children = r),
            (this.parent = i),
            (this.listeners = t.on || n),
            (this.injections = ke(c.inject, i)),
            (this.slots = function() {
              return (
                u.$slots || Re(t.scopedSlots, (u.$slots = Pe(r, i))), u.$slots
              );
            }),
            Object.defineProperty(this, "scopedSlots", {
              enumerable: !0,
              get: function() {
                return Re(t.scopedSlots, this.slots());
              }
            }),
            l &&
              ((this.$options = c),
              (this.$slots = this.slots()),
              (this.$scopedSlots = Re(t.scopedSlots, this.$slots))),
            c._scopeId
              ? (this._c = function(t, e, n, r) {
                  var a = fn(s, t, e, n, r, f);
                  return (
                    a &&
                      !Array.isArray(a) &&
                      ((a.fnScopeId = c._scopeId), (a.fnContext = i)),
                    a
                  );
                })
              : (this._c = function(t, e, n, r) {
                  return fn(s, t, e, n, r, f);
                });
        }
        function Qe(t, e, r, a, o) {
          var s = t.options,
            u = {},
            c = s.props;
          if (i(c)) for (var l in c) u[l] = Jt(l, c, e || n);
          else i(r.attrs) && tn(u, r.attrs), i(r.props) && tn(u, r.props);
          var f = new Ye(r, u, o, a, t),
            h = s.render.call(null, f._c, f);
          if (h instanceof bt) return Ze(h, r, f.parent, s, f);
          if (Array.isArray(h)) {
            for (
              var p = Ne(h) || [], d = new Array(p.length), m = 0;
              m < p.length;
              m++
            )
              d[m] = Ze(p[m], r, f.parent, s, f);
            return d;
          }
        }
        function Ze(t, e, n, r, i) {
          var a = Et(t);
          return (
            (a.fnContext = n),
            (a.fnOptions = r),
            e.slot && ((a.data || (a.data = {})).slot = e.slot),
            a
          );
        }
        function tn(t, e) {
          for (var n in e) t[E(n)] = e[n];
        }
        Je(Ye.prototype);
        var en = {
            init: function(t, e) {
              if (
                t.componentInstance &&
                !t.componentInstance._isDestroyed &&
                t.data.keepAlive
              ) {
                var n = t;
                en.prepatch(n, n);
              } else {
                var r = (t.componentInstance = an(t, kn));
                r.$mount(e ? t.elm : void 0, e);
              }
            },
            prepatch: function(t, e) {
              var n = e.componentOptions,
                r = (e.componentInstance = t.componentInstance);
              Mn(r, n.propsData, n.listeners, e, n.children);
            },
            insert: function(t) {
              var e = t.context,
                n = t.componentInstance;
              n._isMounted || ((n._isMounted = !0), Fn(n, "mounted")),
                t.data.keepAlive && (e._isMounted ? Qn(n) : Ln(n, !0));
            },
            destroy: function(t) {
              var e = t.componentInstance;
              e._isDestroyed || (t.data.keepAlive ? Bn(e, !0) : e.$destroy());
            }
          },
          nn = Object.keys(en);
        function rn(t, e, n, o, s) {
          if (!r(t)) {
            var c = n.$options._base;
            if ((u(t) && (t = c.extend(t)), "function" === typeof t)) {
              var l;
              if (r(t.cid) && ((l = t), (t = _n(l, c)), void 0 === t))
                return wn(l, e, n, o, s);
              (e = e || {}), _r(t), i(e.model) && un(t.options, e);
              var f = xe(e, t, s);
              if (a(t.options.functional)) return Qe(t, f, e, n, o);
              var h = e.on;
              if (((e.on = e.nativeOn), a(t.options.abstract))) {
                var p = e.slot;
                (e = {}), p && (e.slot = p);
              }
              on(e);
              var d = t.options.name || s,
                m = new bt(
                  "vue-component-" + t.cid + (d ? "-" + d : ""),
                  e,
                  void 0,
                  void 0,
                  void 0,
                  n,
                  { Ctor: t, propsData: f, listeners: h, tag: s, children: o },
                  l
                );
              return m;
            }
          }
        }
        function an(t, e) {
          var n = { _isComponent: !0, _parentVnode: t, parent: e },
            r = t.data.inlineTemplate;
          return (
            i(r) &&
              ((n.render = r.render), (n.staticRenderFns = r.staticRenderFns)),
            new t.componentOptions.Ctor(n)
          );
        }
        function on(t) {
          for (var e = t.hook || (t.hook = {}), n = 0; n < nn.length; n++) {
            var r = nn[n],
              i = e[r],
              a = en[r];
            i === a || (i && i._merged) || (e[r] = i ? sn(a, i) : a);
          }
        }
        function sn(t, e) {
          var n = function(n, r) {
            t(n, r), e(n, r);
          };
          return (n._merged = !0), n;
        }
        function un(t, e) {
          var n = (t.model && t.model.prop) || "value",
            r = (t.model && t.model.event) || "input";
          (e.attrs || (e.attrs = {}))[n] = e.model.value;
          var a = e.on || (e.on = {}),
            o = a[r],
            s = e.model.callback;
          i(o)
            ? (Array.isArray(o) ? -1 === o.indexOf(s) : o !== s) &&
              (a[r] = [s].concat(o))
            : (a[r] = s);
        }
        var cn = 1,
          ln = 2;
        function fn(t, e, n, r, i, o) {
          return (
            (Array.isArray(n) || s(n)) && ((i = r), (r = n), (n = void 0)),
            a(o) && (i = ln),
            hn(t, e, n, r, i)
          );
        }
        function hn(t, e, n, r, a) {
          if (i(n) && i(n.__ob__)) return _t();
          if ((i(n) && i(n.is) && (e = n.is), !e)) return _t();
          var o, s, u;
          (Array.isArray(r) &&
            "function" === typeof r[0] &&
            ((n = n || {}),
            (n.scopedSlots = { default: r[0] }),
            (r.length = 0)),
          a === ln ? (r = Ne(r)) : a === cn && (r = Se(r)),
          "string" === typeof e)
            ? ((s = (t.$vnode && t.$vnode.ns) || V.getTagNamespace(e)),
              (o = V.isReservedTag(e)
                ? new bt(V.parsePlatformTagName(e), n, r, void 0, void 0, t)
                : (n && n.pre) || !i((u = Xt(t.$options, "components", e)))
                ? new bt(e, n, r, void 0, void 0, t)
                : rn(u, n, t, r, e)))
            : (o = rn(e, n, t, r));
          return Array.isArray(o)
            ? o
            : i(o)
            ? (i(s) && pn(o, s), i(n) && dn(n), o)
            : _t();
        }
        function pn(t, e, n) {
          if (
            ((t.ns = e),
            "foreignObject" === t.tag && ((e = void 0), (n = !0)),
            i(t.children))
          )
            for (var o = 0, s = t.children.length; o < s; o++) {
              var u = t.children[o];
              i(u.tag) && (r(u.ns) || (a(n) && "svg" !== u.tag)) && pn(u, e, n);
            }
        }
        function dn(t) {
          u(t.style) && ve(t.style), u(t.class) && ve(t.class);
        }
        function mn(t) {
          (t._vnode = null), (t._staticTrees = null);
          var e = t.$options,
            r = (t.$vnode = e._parentVnode),
            i = r && r.context;
          (t.$slots = Pe(e._renderChildren, i)),
            (t.$scopedSlots = n),
            (t._c = function(e, n, r, i) {
              return fn(t, e, n, r, i, !1);
            }),
            (t.$createElement = function(e, n, r, i) {
              return fn(t, e, n, r, i, !0);
            });
          var a = r && r.data;
          Dt(t, "$attrs", (a && a.attrs) || n, null, !0),
            Dt(t, "$listeners", e._parentListeners || n, null, !0);
        }
        var vn,
          yn = null;
        function gn(t) {
          Je(t.prototype),
            (t.prototype.$nextTick = function(t) {
              return de(t, this);
            }),
            (t.prototype._render = function() {
              var t,
                e = this,
                n = e.$options,
                r = n.render,
                i = n._parentVnode;
              i &&
                (e.$scopedSlots = Re(
                  i.data.scopedSlots,
                  e.$slots,
                  e.$scopedSlots
                )),
                (e.$vnode = i);
              try {
                (yn = e), (t = r.call(e._renderProxy, e.$createElement));
              } catch (Eo) {
                ee(Eo, e, "render"), (t = e._vnode);
              } finally {
                yn = null;
              }
              return (
                Array.isArray(t) && 1 === t.length && (t = t[0]),
                t instanceof bt || (t = _t()),
                (t.parent = i),
                t
              );
            });
        }
        function bn(t, e) {
          return (
            (t.__esModule || (ht && "Module" === t[Symbol.toStringTag])) &&
              (t = t.default),
            u(t) ? e.extend(t) : t
          );
        }
        function wn(t, e, n, r, i) {
          var a = _t();
          return (
            (a.asyncFactory = t),
            (a.asyncMeta = { data: e, context: n, children: r, tag: i }),
            a
          );
        }
        function _n(t, e) {
          if (a(t.error) && i(t.errorComp)) return t.errorComp;
          if (i(t.resolved)) return t.resolved;
          var n = yn;
          if (
            (n && i(t.owners) && -1 === t.owners.indexOf(n) && t.owners.push(n),
            a(t.loading) && i(t.loadingComp))
          )
            return t.loadingComp;
          if (n && !i(t.owners)) {
            var o = (t.owners = [n]),
              s = !0,
              c = null,
              l = null;
            n.$on("hook:destroyed", function() {
              return g(o, n);
            });
            var f = function(t) {
                for (var e = 0, n = o.length; e < n; e++) o[e].$forceUpdate();
                t &&
                  ((o.length = 0),
                  null !== c && (clearTimeout(c), (c = null)),
                  null !== l && (clearTimeout(l), (l = null)));
              },
              h = B(function(n) {
                (t.resolved = bn(n, e)), s ? (o.length = 0) : f(!0);
              }),
              d = B(function(e) {
                i(t.errorComp) && ((t.error = !0), f(!0));
              }),
              m = t(h, d);
            return (
              u(m) &&
                (p(m)
                  ? r(t.resolved) && m.then(h, d)
                  : p(m.component) &&
                    (m.component.then(h, d),
                    i(m.error) && (t.errorComp = bn(m.error, e)),
                    i(m.loading) &&
                      ((t.loadingComp = bn(m.loading, e)),
                      0 === m.delay
                        ? (t.loading = !0)
                        : (c = setTimeout(function() {
                            (c = null),
                              r(t.resolved) &&
                                r(t.error) &&
                                ((t.loading = !0), f(!1));
                          }, m.delay || 200))),
                    i(m.timeout) &&
                      (l = setTimeout(function() {
                        (l = null), r(t.resolved) && d(null);
                      }, m.timeout)))),
              (s = !1),
              t.loading ? t.loadingComp : t.resolved
            );
          }
        }
        function xn(t) {
          return t.isComment && t.asyncFactory;
        }
        function En(t) {
          if (Array.isArray(t))
            for (var e = 0; e < t.length; e++) {
              var n = t[e];
              if (i(n) && (i(n.componentOptions) || xn(n))) return n;
            }
        }
        function Sn(t) {
          (t._events = Object.create(null)), (t._hasHookEvent = !1);
          var e = t.$options._parentListeners;
          e && Cn(t, e);
        }
        function Nn(t, e) {
          vn.$on(t, e);
        }
        function On(t, e) {
          vn.$off(t, e);
        }
        function In(t, e) {
          var n = vn;
          return function r() {
            var i = e.apply(null, arguments);
            null !== i && n.$off(t, r);
          };
        }
        function Cn(t, e, n) {
          (vn = t), we(e, n || {}, Nn, On, In, t), (vn = void 0);
        }
        function An(t) {
          var e = /^hook:/;
          (t.prototype.$on = function(t, n) {
            var r = this;
            if (Array.isArray(t))
              for (var i = 0, a = t.length; i < a; i++) r.$on(t[i], n);
            else
              (r._events[t] || (r._events[t] = [])).push(n),
                e.test(t) && (r._hasHookEvent = !0);
            return r;
          }),
            (t.prototype.$once = function(t, e) {
              var n = this;
              function r() {
                n.$off(t, r), e.apply(n, arguments);
              }
              return (r.fn = e), n.$on(t, r), n;
            }),
            (t.prototype.$off = function(t, e) {
              var n = this;
              if (!arguments.length)
                return (n._events = Object.create(null)), n;
              if (Array.isArray(t)) {
                for (var r = 0, i = t.length; r < i; r++) n.$off(t[r], e);
                return n;
              }
              var a,
                o = n._events[t];
              if (!o) return n;
              if (!e) return (n._events[t] = null), n;
              var s = o.length;
              while (s--)
                if (((a = o[s]), a === e || a.fn === e)) {
                  o.splice(s, 1);
                  break;
                }
              return n;
            }),
            (t.prototype.$emit = function(t) {
              var e = this,
                n = e._events[t];
              if (n) {
                n = n.length > 1 ? k(n) : n;
                for (
                  var r = k(arguments, 1),
                    i = 'event handler for "' + t + '"',
                    a = 0,
                    o = n.length;
                  a < o;
                  a++
                )
                  ne(n[a], e, r, e, i);
              }
              return e;
            });
        }
        var kn = null;
        function Pn(t) {
          var e = kn;
          return (
            (kn = t),
            function() {
              kn = e;
            }
          );
        }
        function Tn(t) {
          var e = t.$options,
            n = e.parent;
          if (n && !e.abstract) {
            while (n.$options.abstract && n.$parent) n = n.$parent;
            n.$children.push(t);
          }
          (t.$parent = n),
            (t.$root = n ? n.$root : t),
            (t.$children = []),
            (t.$refs = {}),
            (t._watcher = null),
            (t._inactive = null),
            (t._directInactive = !1),
            (t._isMounted = !1),
            (t._isDestroyed = !1),
            (t._isBeingDestroyed = !1);
        }
        function Rn(t) {
          (t.prototype._update = function(t, e) {
            var n = this,
              r = n.$el,
              i = n._vnode,
              a = Pn(n);
            (n._vnode = t),
              (n.$el = i ? n.__patch__(i, t) : n.__patch__(n.$el, t, e, !1)),
              a(),
              r && (r.__vue__ = null),
              n.$el && (n.$el.__vue__ = n),
              n.$vnode &&
                n.$parent &&
                n.$vnode === n.$parent._vnode &&
                (n.$parent.$el = n.$el);
          }),
            (t.prototype.$forceUpdate = function() {
              var t = this;
              t._watcher && t._watcher.update();
            }),
            (t.prototype.$destroy = function() {
              var t = this;
              if (!t._isBeingDestroyed) {
                Fn(t, "beforeDestroy"), (t._isBeingDestroyed = !0);
                var e = t.$parent;
                !e ||
                  e._isBeingDestroyed ||
                  t.$options.abstract ||
                  g(e.$children, t),
                  t._watcher && t._watcher.teardown();
                var n = t._watchers.length;
                while (n--) t._watchers[n].teardown();
                t._data.__ob__ && t._data.__ob__.vmCount--,
                  (t._isDestroyed = !0),
                  t.__patch__(t._vnode, null),
                  Fn(t, "destroyed"),
                  t.$off(),
                  t.$el && (t.$el.__vue__ = null),
                  t.$vnode && (t.$vnode.parent = null);
              }
            });
        }
        function Dn(t, e, n) {
          var r;
          return (
            (t.$el = e),
            t.$options.render || (t.$options.render = _t),
            Fn(t, "beforeMount"),
            (r = function() {
              t._update(t._render(), n);
            }),
            new nr(
              t,
              r,
              R,
              {
                before: function() {
                  t._isMounted && !t._isDestroyed && Fn(t, "beforeUpdate");
                }
              },
              !0
            ),
            (n = !1),
            null == t.$vnode && ((t._isMounted = !0), Fn(t, "mounted")),
            t
          );
        }
        function Mn(t, e, r, i, a) {
          var o = i.data.scopedSlots,
            s = t.$scopedSlots,
            u = !!(
              (o && !o.$stable) ||
              (s !== n && !s.$stable) ||
              (o && t.$scopedSlots.$key !== o.$key)
            ),
            c = !!(a || t.$options._renderChildren || u);
          if (
            ((t.$options._parentVnode = i),
            (t.$vnode = i),
            t._vnode && (t._vnode.parent = i),
            (t.$options._renderChildren = a),
            (t.$attrs = i.data.attrs || n),
            (t.$listeners = r || n),
            e && t.$options.props)
          ) {
            At(!1);
            for (
              var l = t._props, f = t.$options._propKeys || [], h = 0;
              h < f.length;
              h++
            ) {
              var p = f[h],
                d = t.$options.props;
              l[p] = Jt(p, d, e, t);
            }
            At(!0), (t.$options.propsData = e);
          }
          r = r || n;
          var m = t.$options._parentListeners;
          (t.$options._parentListeners = r),
            Cn(t, r, m),
            c && ((t.$slots = Pe(a, i.context)), t.$forceUpdate());
        }
        function jn(t) {
          while (t && (t = t.$parent)) if (t._inactive) return !0;
          return !1;
        }
        function Ln(t, e) {
          if (e) {
            if (((t._directInactive = !1), jn(t))) return;
          } else if (t._directInactive) return;
          if (t._inactive || null === t._inactive) {
            t._inactive = !1;
            for (var n = 0; n < t.$children.length; n++) Ln(t.$children[n]);
            Fn(t, "activated");
          }
        }
        function Bn(t, e) {
          if ((!e || ((t._directInactive = !0), !jn(t))) && !t._inactive) {
            t._inactive = !0;
            for (var n = 0; n < t.$children.length; n++) Bn(t.$children[n]);
            Fn(t, "deactivated");
          }
        }
        function Fn(t, e) {
          yt();
          var n = t.$options[e],
            r = e + " hook";
          if (n)
            for (var i = 0, a = n.length; i < a; i++) ne(n[i], t, null, t, r);
          t._hasHookEvent && t.$emit("hook:" + e), gt();
        }
        var zn = [],
          Un = [],
          Vn = {},
          Wn = !1,
          $n = !1,
          qn = 0;
        function Hn() {
          (qn = zn.length = Un.length = 0), (Vn = {}), (Wn = $n = !1);
        }
        var Kn = 0,
          Gn = Date.now;
        if (J && !tt) {
          var Xn = window.performance;
          Xn &&
            "function" === typeof Xn.now &&
            Gn() > document.createEvent("Event").timeStamp &&
            (Gn = function() {
              return Xn.now();
            });
        }
        function Jn() {
          var t, e;
          for (
            Kn = Gn(),
              $n = !0,
              zn.sort(function(t, e) {
                return t.id - e.id;
              }),
              qn = 0;
            qn < zn.length;
            qn++
          )
            (t = zn[qn]),
              t.before && t.before(),
              (e = t.id),
              (Vn[e] = null),
              t.run();
          var n = Un.slice(),
            r = zn.slice();
          Hn(), Zn(n), Yn(r), ct && V.devtools && ct.emit("flush");
        }
        function Yn(t) {
          var e = t.length;
          while (e--) {
            var n = t[e],
              r = n.vm;
            r._watcher === n &&
              r._isMounted &&
              !r._isDestroyed &&
              Fn(r, "updated");
          }
        }
        function Qn(t) {
          (t._inactive = !1), Un.push(t);
        }
        function Zn(t) {
          for (var e = 0; e < t.length; e++)
            (t[e]._inactive = !0), Ln(t[e], !0);
        }
        function tr(t) {
          var e = t.id;
          if (null == Vn[e]) {
            if (((Vn[e] = !0), $n)) {
              var n = zn.length - 1;
              while (n > qn && zn[n].id > t.id) n--;
              zn.splice(n + 1, 0, t);
            } else zn.push(t);
            Wn || ((Wn = !0), de(Jn));
          }
        }
        var er = 0,
          nr = function(t, e, n, r, i) {
            (this.vm = t),
              i && (t._watcher = this),
              t._watchers.push(this),
              r
                ? ((this.deep = !!r.deep),
                  (this.user = !!r.user),
                  (this.lazy = !!r.lazy),
                  (this.sync = !!r.sync),
                  (this.before = r.before))
                : (this.deep = this.user = this.lazy = this.sync = !1),
              (this.cb = n),
              (this.id = ++er),
              (this.active = !0),
              (this.dirty = this.lazy),
              (this.deps = []),
              (this.newDeps = []),
              (this.depIds = new ft()),
              (this.newDepIds = new ft()),
              (this.expression = ""),
              "function" === typeof e
                ? (this.getter = e)
                : ((this.getter = K(e)), this.getter || (this.getter = R)),
              (this.value = this.lazy ? void 0 : this.get());
          };
        (nr.prototype.get = function() {
          var t;
          yt(this);
          var e = this.vm;
          try {
            t = this.getter.call(e, e);
          } catch (Eo) {
            if (!this.user) throw Eo;
            ee(Eo, e, 'getter for watcher "' + this.expression + '"');
          } finally {
            this.deep && ve(t), gt(), this.cleanupDeps();
          }
          return t;
        }),
          (nr.prototype.addDep = function(t) {
            var e = t.id;
            this.newDepIds.has(e) ||
              (this.newDepIds.add(e),
              this.newDeps.push(t),
              this.depIds.has(e) || t.addSub(this));
          }),
          (nr.prototype.cleanupDeps = function() {
            var t = this.deps.length;
            while (t--) {
              var e = this.deps[t];
              this.newDepIds.has(e.id) || e.removeSub(this);
            }
            var n = this.depIds;
            (this.depIds = this.newDepIds),
              (this.newDepIds = n),
              this.newDepIds.clear(),
              (n = this.deps),
              (this.deps = this.newDeps),
              (this.newDeps = n),
              (this.newDeps.length = 0);
          }),
          (nr.prototype.update = function() {
            this.lazy ? (this.dirty = !0) : this.sync ? this.run() : tr(this);
          }),
          (nr.prototype.run = function() {
            if (this.active) {
              var t = this.get();
              if (t !== this.value || u(t) || this.deep) {
                var e = this.value;
                if (((this.value = t), this.user))
                  try {
                    this.cb.call(this.vm, t, e);
                  } catch (Eo) {
                    ee(
                      Eo,
                      this.vm,
                      'callback for watcher "' + this.expression + '"'
                    );
                  }
                else this.cb.call(this.vm, t, e);
              }
            }
          }),
          (nr.prototype.evaluate = function() {
            (this.value = this.get()), (this.dirty = !1);
          }),
          (nr.prototype.depend = function() {
            var t = this.deps.length;
            while (t--) this.deps[t].depend();
          }),
          (nr.prototype.teardown = function() {
            if (this.active) {
              this.vm._isBeingDestroyed || g(this.vm._watchers, this);
              var t = this.deps.length;
              while (t--) this.deps[t].removeSub(this);
              this.active = !1;
            }
          });
        var rr = { enumerable: !0, configurable: !0, get: R, set: R };
        function ir(t, e, n) {
          (rr.get = function() {
            return this[e][n];
          }),
            (rr.set = function(t) {
              this[e][n] = t;
            }),
            Object.defineProperty(t, n, rr);
        }
        function ar(t) {
          t._watchers = [];
          var e = t.$options;
          e.props && or(t, e.props),
            e.methods && dr(t, e.methods),
            e.data ? sr(t) : Rt((t._data = {}), !0),
            e.computed && lr(t, e.computed),
            e.watch && e.watch !== at && mr(t, e.watch);
        }
        function or(t, e) {
          var n = t.$options.propsData || {},
            r = (t._props = {}),
            i = (t.$options._propKeys = []),
            a = !t.$parent;
          a || At(!1);
          var o = function(a) {
            i.push(a);
            var o = Jt(a, e, n, t);
            Dt(r, a, o), a in t || ir(t, "_props", a);
          };
          for (var s in e) o(s);
          At(!0);
        }
        function sr(t) {
          var e = t.$options.data;
          (e = t._data = "function" === typeof e ? ur(e, t) : e || {}),
            l(e) || (e = {});
          var n = Object.keys(e),
            r = t.$options.props,
            i = (t.$options.methods, n.length);
          while (i--) {
            var a = n[i];
            0, (r && w(r, a)) || $(a) || ir(t, "_data", a);
          }
          Rt(e, !0);
        }
        function ur(t, e) {
          yt();
          try {
            return t.call(e, e);
          } catch (Eo) {
            return ee(Eo, e, "data()"), {};
          } finally {
            gt();
          }
        }
        var cr = { lazy: !0 };
        function lr(t, e) {
          var n = (t._computedWatchers = Object.create(null)),
            r = ut();
          for (var i in e) {
            var a = e[i],
              o = "function" === typeof a ? a : a.get;
            0, r || (n[i] = new nr(t, o || R, R, cr)), i in t || fr(t, i, a);
          }
        }
        function fr(t, e, n) {
          var r = !ut();
          "function" === typeof n
            ? ((rr.get = r ? hr(e) : pr(n)), (rr.set = R))
            : ((rr.get = n.get ? (r && !1 !== n.cache ? hr(e) : pr(n.get)) : R),
              (rr.set = n.set || R)),
            Object.defineProperty(t, e, rr);
        }
        function hr(t) {
          return function() {
            var e = this._computedWatchers && this._computedWatchers[t];
            if (e)
              return e.dirty && e.evaluate(), mt.target && e.depend(), e.value;
          };
        }
        function pr(t) {
          return function() {
            return t.call(this, this);
          };
        }
        function dr(t, e) {
          t.$options.props;
          for (var n in e) t[n] = "function" !== typeof e[n] ? R : A(e[n], t);
        }
        function mr(t, e) {
          for (var n in e) {
            var r = e[n];
            if (Array.isArray(r))
              for (var i = 0; i < r.length; i++) vr(t, n, r[i]);
            else vr(t, n, r);
          }
        }
        function vr(t, e, n, r) {
          return (
            l(n) && ((r = n), (n = n.handler)),
            "string" === typeof n && (n = t[n]),
            t.$watch(e, n, r)
          );
        }
        function yr(t) {
          var e = {
              get: function() {
                return this._data;
              }
            },
            n = {
              get: function() {
                return this._props;
              }
            };
          Object.defineProperty(t.prototype, "$data", e),
            Object.defineProperty(t.prototype, "$props", n),
            (t.prototype.$set = Mt),
            (t.prototype.$delete = jt),
            (t.prototype.$watch = function(t, e, n) {
              var r = this;
              if (l(e)) return vr(r, t, e, n);
              (n = n || {}), (n.user = !0);
              var i = new nr(r, t, e, n);
              if (n.immediate)
                try {
                  e.call(r, i.value);
                } catch (a) {
                  ee(
                    a,
                    r,
                    'callback for immediate watcher "' + i.expression + '"'
                  );
                }
              return function() {
                i.teardown();
              };
            });
        }
        var gr = 0;
        function br(t) {
          t.prototype._init = function(t) {
            var e = this;
            (e._uid = gr++),
              (e._isVue = !0),
              t && t._isComponent
                ? wr(e, t)
                : (e.$options = Gt(_r(e.constructor), t || {}, e)),
              (e._renderProxy = e),
              (e._self = e),
              Tn(e),
              Sn(e),
              mn(e),
              Fn(e, "beforeCreate"),
              Ae(e),
              ar(e),
              Ce(e),
              Fn(e, "created"),
              e.$options.el && e.$mount(e.$options.el);
          };
        }
        function wr(t, e) {
          var n = (t.$options = Object.create(t.constructor.options)),
            r = e._parentVnode;
          (n.parent = e.parent), (n._parentVnode = r);
          var i = r.componentOptions;
          (n.propsData = i.propsData),
            (n._parentListeners = i.listeners),
            (n._renderChildren = i.children),
            (n._componentTag = i.tag),
            e.render &&
              ((n.render = e.render), (n.staticRenderFns = e.staticRenderFns));
        }
        function _r(t) {
          var e = t.options;
          if (t.super) {
            var n = _r(t.super),
              r = t.superOptions;
            if (n !== r) {
              t.superOptions = n;
              var i = xr(t);
              i && P(t.extendOptions, i),
                (e = t.options = Gt(n, t.extendOptions)),
                e.name && (e.components[e.name] = t);
            }
          }
          return e;
        }
        function xr(t) {
          var e,
            n = t.options,
            r = t.sealedOptions;
          for (var i in n) n[i] !== r[i] && (e || (e = {}), (e[i] = n[i]));
          return e;
        }
        function Er(t) {
          this._init(t);
        }
        function Sr(t) {
          t.use = function(t) {
            var e = this._installedPlugins || (this._installedPlugins = []);
            if (e.indexOf(t) > -1) return this;
            var n = k(arguments, 1);
            return (
              n.unshift(this),
              "function" === typeof t.install
                ? t.install.apply(t, n)
                : "function" === typeof t && t.apply(null, n),
              e.push(t),
              this
            );
          };
        }
        function Nr(t) {
          t.mixin = function(t) {
            return (this.options = Gt(this.options, t)), this;
          };
        }
        function Or(t) {
          t.cid = 0;
          var e = 1;
          t.extend = function(t) {
            t = t || {};
            var n = this,
              r = n.cid,
              i = t._Ctor || (t._Ctor = {});
            if (i[r]) return i[r];
            var a = t.name || n.options.name;
            var o = function(t) {
              this._init(t);
            };
            return (
              (o.prototype = Object.create(n.prototype)),
              (o.prototype.constructor = o),
              (o.cid = e++),
              (o.options = Gt(n.options, t)),
              (o["super"] = n),
              o.options.props && Ir(o),
              o.options.computed && Cr(o),
              (o.extend = n.extend),
              (o.mixin = n.mixin),
              (o.use = n.use),
              z.forEach(function(t) {
                o[t] = n[t];
              }),
              a && (o.options.components[a] = o),
              (o.superOptions = n.options),
              (o.extendOptions = t),
              (o.sealedOptions = P({}, o.options)),
              (i[r] = o),
              o
            );
          };
        }
        function Ir(t) {
          var e = t.options.props;
          for (var n in e) ir(t.prototype, "_props", n);
        }
        function Cr(t) {
          var e = t.options.computed;
          for (var n in e) fr(t.prototype, n, e[n]);
        }
        function Ar(t) {
          z.forEach(function(e) {
            t[e] = function(t, n) {
              return n
                ? ("component" === e &&
                    l(n) &&
                    ((n.name = n.name || t),
                    (n = this.options._base.extend(n))),
                  "directive" === e &&
                    "function" === typeof n &&
                    (n = { bind: n, update: n }),
                  (this.options[e + "s"][t] = n),
                  n)
                : this.options[e + "s"][t];
            };
          });
        }
        function kr(t) {
          return t && (t.Ctor.options.name || t.tag);
        }
        function Pr(t, e) {
          return Array.isArray(t)
            ? t.indexOf(e) > -1
            : "string" === typeof t
            ? t.split(",").indexOf(e) > -1
            : !!f(t) && t.test(e);
        }
        function Tr(t, e) {
          var n = t.cache,
            r = t.keys,
            i = t._vnode;
          for (var a in n) {
            var o = n[a];
            if (o) {
              var s = kr(o.componentOptions);
              s && !e(s) && Rr(n, a, r, i);
            }
          }
        }
        function Rr(t, e, n, r) {
          var i = t[e];
          !i || (r && i.tag === r.tag) || i.componentInstance.$destroy(),
            (t[e] = null),
            g(n, e);
        }
        br(Er), yr(Er), An(Er), Rn(Er), gn(Er);
        var Dr = [String, RegExp, Array],
          Mr = {
            name: "keep-alive",
            abstract: !0,
            props: { include: Dr, exclude: Dr, max: [String, Number] },
            created: function() {
              (this.cache = Object.create(null)), (this.keys = []);
            },
            destroyed: function() {
              for (var t in this.cache) Rr(this.cache, t, this.keys);
            },
            mounted: function() {
              var t = this;
              this.$watch("include", function(e) {
                Tr(t, function(t) {
                  return Pr(e, t);
                });
              }),
                this.$watch("exclude", function(e) {
                  Tr(t, function(t) {
                    return !Pr(e, t);
                  });
                });
            },
            render: function() {
              var t = this.$slots.default,
                e = En(t),
                n = e && e.componentOptions;
              if (n) {
                var r = kr(n),
                  i = this,
                  a = i.include,
                  o = i.exclude;
                if ((a && (!r || !Pr(a, r))) || (o && r && Pr(o, r))) return e;
                var s = this,
                  u = s.cache,
                  c = s.keys,
                  l =
                    null == e.key
                      ? n.Ctor.cid + (n.tag ? "::" + n.tag : "")
                      : e.key;
                u[l]
                  ? ((e.componentInstance = u[l].componentInstance),
                    g(c, l),
                    c.push(l))
                  : ((u[l] = e),
                    c.push(l),
                    this.max &&
                      c.length > parseInt(this.max) &&
                      Rr(u, c[0], c, this._vnode)),
                  (e.data.keepAlive = !0);
              }
              return e || (t && t[0]);
            }
          },
          jr = { KeepAlive: Mr };
        function Lr(t) {
          var e = {
            get: function() {
              return V;
            }
          };
          Object.defineProperty(t, "config", e),
            (t.util = {
              warn: pt,
              extend: P,
              mergeOptions: Gt,
              defineReactive: Dt
            }),
            (t.set = Mt),
            (t.delete = jt),
            (t.nextTick = de),
            (t.observable = function(t) {
              return Rt(t), t;
            }),
            (t.options = Object.create(null)),
            z.forEach(function(e) {
              t.options[e + "s"] = Object.create(null);
            }),
            (t.options._base = t),
            P(t.options.components, jr),
            Sr(t),
            Nr(t),
            Or(t),
            Ar(t);
        }
        Lr(Er),
          Object.defineProperty(Er.prototype, "$isServer", { get: ut }),
          Object.defineProperty(Er.prototype, "$ssrContext", {
            get: function() {
              return this.$vnode && this.$vnode.ssrContext;
            }
          }),
          Object.defineProperty(Er, "FunctionalRenderContext", { value: Ye }),
          (Er.version = "2.6.10");
        var Br = v("style,class"),
          Fr = v("input,textarea,option,select,progress"),
          zr = function(t, e, n) {
            return (
              ("value" === n && Fr(t) && "button" !== e) ||
              ("selected" === n && "option" === t) ||
              ("checked" === n && "input" === t) ||
              ("muted" === n && "video" === t)
            );
          },
          Ur = v("contenteditable,draggable,spellcheck"),
          Vr = v("events,caret,typing,plaintext-only"),
          Wr = function(t, e) {
            return Gr(e) || "false" === e
              ? "false"
              : "contenteditable" === t && Vr(e)
              ? e
              : "true";
          },
          $r = v(
            "allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,translate,truespeed,typemustmatch,visible"
          ),
          qr = "http://www.w3.org/1999/xlink",
          Hr = function(t) {
            return ":" === t.charAt(5) && "xlink" === t.slice(0, 5);
          },
          Kr = function(t) {
            return Hr(t) ? t.slice(6, t.length) : "";
          },
          Gr = function(t) {
            return null == t || !1 === t;
          };
        function Xr(t) {
          var e = t.data,
            n = t,
            r = t;
          while (i(r.componentInstance))
            (r = r.componentInstance._vnode),
              r && r.data && (e = Jr(r.data, e));
          while (i((n = n.parent))) n && n.data && (e = Jr(e, n.data));
          return Yr(e.staticClass, e.class);
        }
        function Jr(t, e) {
          return {
            staticClass: Qr(t.staticClass, e.staticClass),
            class: i(t.class) ? [t.class, e.class] : e.class
          };
        }
        function Yr(t, e) {
          return i(t) || i(e) ? Qr(t, Zr(e)) : "";
        }
        function Qr(t, e) {
          return t ? (e ? t + " " + e : t) : e || "";
        }
        function Zr(t) {
          return Array.isArray(t)
            ? ti(t)
            : u(t)
            ? ei(t)
            : "string" === typeof t
            ? t
            : "";
        }
        function ti(t) {
          for (var e, n = "", r = 0, a = t.length; r < a; r++)
            i((e = Zr(t[r]))) && "" !== e && (n && (n += " "), (n += e));
          return n;
        }
        function ei(t) {
          var e = "";
          for (var n in t) t[n] && (e && (e += " "), (e += n));
          return e;
        }
        var ni = {
            svg: "http://www.w3.org/2000/svg",
            math: "http://www.w3.org/1998/Math/MathML"
          },
          ri = v(
            "html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"
          ),
          ii = v(
            "svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view",
            !0
          ),
          ai = function(t) {
            return ri(t) || ii(t);
          };
        function oi(t) {
          return ii(t) ? "svg" : "math" === t ? "math" : void 0;
        }
        var si = Object.create(null);
        function ui(t) {
          if (!J) return !0;
          if (ai(t)) return !1;
          if (((t = t.toLowerCase()), null != si[t])) return si[t];
          var e = document.createElement(t);
          return t.indexOf("-") > -1
            ? (si[t] =
                e.constructor === window.HTMLUnknownElement ||
                e.constructor === window.HTMLElement)
            : (si[t] = /HTMLUnknownElement/.test(e.toString()));
        }
        var ci = v("text,number,password,search,email,tel,url");
        function li(t) {
          if ("string" === typeof t) {
            var e = document.querySelector(t);
            return e || document.createElement("div");
          }
          return t;
        }
        function fi(t, e) {
          var n = document.createElement(t);
          return "select" !== t
            ? n
            : (e.data &&
                e.data.attrs &&
                void 0 !== e.data.attrs.multiple &&
                n.setAttribute("multiple", "multiple"),
              n);
        }
        function hi(t, e) {
          return document.createElementNS(ni[t], e);
        }
        function pi(t) {
          return document.createTextNode(t);
        }
        function di(t) {
          return document.createComment(t);
        }
        function mi(t, e, n) {
          t.insertBefore(e, n);
        }
        function vi(t, e) {
          t.removeChild(e);
        }
        function yi(t, e) {
          t.appendChild(e);
        }
        function gi(t) {
          return t.parentNode;
        }
        function bi(t) {
          return t.nextSibling;
        }
        function wi(t) {
          return t.tagName;
        }
        function _i(t, e) {
          t.textContent = e;
        }
        function xi(t, e) {
          t.setAttribute(e, "");
        }
        var Ei = Object.freeze({
            createElement: fi,
            createElementNS: hi,
            createTextNode: pi,
            createComment: di,
            insertBefore: mi,
            removeChild: vi,
            appendChild: yi,
            parentNode: gi,
            nextSibling: bi,
            tagName: wi,
            setTextContent: _i,
            setStyleScope: xi
          }),
          Si = {
            create: function(t, e) {
              Ni(e);
            },
            update: function(t, e) {
              t.data.ref !== e.data.ref && (Ni(t, !0), Ni(e));
            },
            destroy: function(t) {
              Ni(t, !0);
            }
          };
        function Ni(t, e) {
          var n = t.data.ref;
          if (i(n)) {
            var r = t.context,
              a = t.componentInstance || t.elm,
              o = r.$refs;
            e
              ? Array.isArray(o[n])
                ? g(o[n], a)
                : o[n] === a && (o[n] = void 0)
              : t.data.refInFor
              ? Array.isArray(o[n])
                ? o[n].indexOf(a) < 0 && o[n].push(a)
                : (o[n] = [a])
              : (o[n] = a);
          }
        }
        var Oi = new bt("", {}, []),
          Ii = ["create", "activate", "update", "remove", "destroy"];
        function Ci(t, e) {
          return (
            t.key === e.key &&
            ((t.tag === e.tag &&
              t.isComment === e.isComment &&
              i(t.data) === i(e.data) &&
              Ai(t, e)) ||
              (a(t.isAsyncPlaceholder) &&
                t.asyncFactory === e.asyncFactory &&
                r(e.asyncFactory.error)))
          );
        }
        function Ai(t, e) {
          if ("input" !== t.tag) return !0;
          var n,
            r = i((n = t.data)) && i((n = n.attrs)) && n.type,
            a = i((n = e.data)) && i((n = n.attrs)) && n.type;
          return r === a || (ci(r) && ci(a));
        }
        function ki(t, e, n) {
          var r,
            a,
            o = {};
          for (r = e; r <= n; ++r) (a = t[r].key), i(a) && (o[a] = r);
          return o;
        }
        function Pi(t) {
          var e,
            n,
            o = {},
            u = t.modules,
            c = t.nodeOps;
          for (e = 0; e < Ii.length; ++e)
            for (o[Ii[e]] = [], n = 0; n < u.length; ++n)
              i(u[n][Ii[e]]) && o[Ii[e]].push(u[n][Ii[e]]);
          function l(t) {
            return new bt(c.tagName(t).toLowerCase(), {}, [], void 0, t);
          }
          function f(t, e) {
            function n() {
              0 === --n.listeners && h(t);
            }
            return (n.listeners = e), n;
          }
          function h(t) {
            var e = c.parentNode(t);
            i(e) && c.removeChild(e, t);
          }
          function p(t, e, n, r, o, s, u) {
            if (
              (i(t.elm) && i(s) && (t = s[u] = Et(t)),
              (t.isRootInsert = !o),
              !d(t, e, n, r))
            ) {
              var l = t.data,
                f = t.children,
                h = t.tag;
              i(h)
                ? ((t.elm = t.ns
                    ? c.createElementNS(t.ns, h)
                    : c.createElement(h, t)),
                  x(t),
                  b(t, f, e),
                  i(l) && _(t, e),
                  g(n, t.elm, r))
                : a(t.isComment)
                ? ((t.elm = c.createComment(t.text)), g(n, t.elm, r))
                : ((t.elm = c.createTextNode(t.text)), g(n, t.elm, r));
            }
          }
          function d(t, e, n, r) {
            var o = t.data;
            if (i(o)) {
              var s = i(t.componentInstance) && o.keepAlive;
              if (
                (i((o = o.hook)) && i((o = o.init)) && o(t, !1),
                i(t.componentInstance))
              )
                return m(t, e), g(n, t.elm, r), a(s) && y(t, e, n, r), !0;
            }
          }
          function m(t, e) {
            i(t.data.pendingInsert) &&
              (e.push.apply(e, t.data.pendingInsert),
              (t.data.pendingInsert = null)),
              (t.elm = t.componentInstance.$el),
              w(t) ? (_(t, e), x(t)) : (Ni(t), e.push(t));
          }
          function y(t, e, n, r) {
            var a,
              s = t;
            while (s.componentInstance)
              if (
                ((s = s.componentInstance._vnode),
                i((a = s.data)) && i((a = a.transition)))
              ) {
                for (a = 0; a < o.activate.length; ++a) o.activate[a](Oi, s);
                e.push(s);
                break;
              }
            g(n, t.elm, r);
          }
          function g(t, e, n) {
            i(t) &&
              (i(n)
                ? c.parentNode(n) === t && c.insertBefore(t, e, n)
                : c.appendChild(t, e));
          }
          function b(t, e, n) {
            if (Array.isArray(e)) {
              0;
              for (var r = 0; r < e.length; ++r)
                p(e[r], n, t.elm, null, !0, e, r);
            } else
              s(t.text) &&
                c.appendChild(t.elm, c.createTextNode(String(t.text)));
          }
          function w(t) {
            while (t.componentInstance) t = t.componentInstance._vnode;
            return i(t.tag);
          }
          function _(t, n) {
            for (var r = 0; r < o.create.length; ++r) o.create[r](Oi, t);
            (e = t.data.hook),
              i(e) &&
                (i(e.create) && e.create(Oi, t), i(e.insert) && n.push(t));
          }
          function x(t) {
            var e;
            if (i((e = t.fnScopeId))) c.setStyleScope(t.elm, e);
            else {
              var n = t;
              while (n)
                i((e = n.context)) &&
                  i((e = e.$options._scopeId)) &&
                  c.setStyleScope(t.elm, e),
                  (n = n.parent);
            }
            i((e = kn)) &&
              e !== t.context &&
              e !== t.fnContext &&
              i((e = e.$options._scopeId)) &&
              c.setStyleScope(t.elm, e);
          }
          function E(t, e, n, r, i, a) {
            for (; r <= i; ++r) p(n[r], a, t, e, !1, n, r);
          }
          function S(t) {
            var e,
              n,
              r = t.data;
            if (i(r))
              for (
                i((e = r.hook)) && i((e = e.destroy)) && e(t), e = 0;
                e < o.destroy.length;
                ++e
              )
                o.destroy[e](t);
            if (i((e = t.children)))
              for (n = 0; n < t.children.length; ++n) S(t.children[n]);
          }
          function N(t, e, n, r) {
            for (; n <= r; ++n) {
              var a = e[n];
              i(a) && (i(a.tag) ? (O(a), S(a)) : h(a.elm));
            }
          }
          function O(t, e) {
            if (i(e) || i(t.data)) {
              var n,
                r = o.remove.length + 1;
              for (
                i(e) ? (e.listeners += r) : (e = f(t.elm, r)),
                  i((n = t.componentInstance)) &&
                    i((n = n._vnode)) &&
                    i(n.data) &&
                    O(n, e),
                  n = 0;
                n < o.remove.length;
                ++n
              )
                o.remove[n](t, e);
              i((n = t.data.hook)) && i((n = n.remove)) ? n(t, e) : e();
            } else h(t.elm);
          }
          function I(t, e, n, a, o) {
            var s,
              u,
              l,
              f,
              h = 0,
              d = 0,
              m = e.length - 1,
              v = e[0],
              y = e[m],
              g = n.length - 1,
              b = n[0],
              w = n[g],
              _ = !o;
            while (h <= m && d <= g)
              r(v)
                ? (v = e[++h])
                : r(y)
                ? (y = e[--m])
                : Ci(v, b)
                ? (A(v, b, a, n, d), (v = e[++h]), (b = n[++d]))
                : Ci(y, w)
                ? (A(y, w, a, n, g), (y = e[--m]), (w = n[--g]))
                : Ci(v, w)
                ? (A(v, w, a, n, g),
                  _ && c.insertBefore(t, v.elm, c.nextSibling(y.elm)),
                  (v = e[++h]),
                  (w = n[--g]))
                : Ci(y, b)
                ? (A(y, b, a, n, d),
                  _ && c.insertBefore(t, y.elm, v.elm),
                  (y = e[--m]),
                  (b = n[++d]))
                : (r(s) && (s = ki(e, h, m)),
                  (u = i(b.key) ? s[b.key] : C(b, e, h, m)),
                  r(u)
                    ? p(b, a, t, v.elm, !1, n, d)
                    : ((l = e[u]),
                      Ci(l, b)
                        ? (A(l, b, a, n, d),
                          (e[u] = void 0),
                          _ && c.insertBefore(t, l.elm, v.elm))
                        : p(b, a, t, v.elm, !1, n, d)),
                  (b = n[++d]));
            h > m
              ? ((f = r(n[g + 1]) ? null : n[g + 1].elm), E(t, f, n, d, g, a))
              : d > g && N(t, e, h, m);
          }
          function C(t, e, n, r) {
            for (var a = n; a < r; a++) {
              var o = e[a];
              if (i(o) && Ci(t, o)) return a;
            }
          }
          function A(t, e, n, s, u, l) {
            if (t !== e) {
              i(e.elm) && i(s) && (e = s[u] = Et(e));
              var f = (e.elm = t.elm);
              if (a(t.isAsyncPlaceholder))
                i(e.asyncFactory.resolved)
                  ? T(t.elm, e, n)
                  : (e.isAsyncPlaceholder = !0);
              else if (
                a(e.isStatic) &&
                a(t.isStatic) &&
                e.key === t.key &&
                (a(e.isCloned) || a(e.isOnce))
              )
                e.componentInstance = t.componentInstance;
              else {
                var h,
                  p = e.data;
                i(p) && i((h = p.hook)) && i((h = h.prepatch)) && h(t, e);
                var d = t.children,
                  m = e.children;
                if (i(p) && w(e)) {
                  for (h = 0; h < o.update.length; ++h) o.update[h](t, e);
                  i((h = p.hook)) && i((h = h.update)) && h(t, e);
                }
                r(e.text)
                  ? i(d) && i(m)
                    ? d !== m && I(f, d, m, n, l)
                    : i(m)
                    ? (i(t.text) && c.setTextContent(f, ""),
                      E(f, null, m, 0, m.length - 1, n))
                    : i(d)
                    ? N(f, d, 0, d.length - 1)
                    : i(t.text) && c.setTextContent(f, "")
                  : t.text !== e.text && c.setTextContent(f, e.text),
                  i(p) && i((h = p.hook)) && i((h = h.postpatch)) && h(t, e);
              }
            }
          }
          function k(t, e, n) {
            if (a(n) && i(t.parent)) t.parent.data.pendingInsert = e;
            else for (var r = 0; r < e.length; ++r) e[r].data.hook.insert(e[r]);
          }
          var P = v("attrs,class,staticClass,staticStyle,key");
          function T(t, e, n, r) {
            var o,
              s = e.tag,
              u = e.data,
              c = e.children;
            if (
              ((r = r || (u && u.pre)),
              (e.elm = t),
              a(e.isComment) && i(e.asyncFactory))
            )
              return (e.isAsyncPlaceholder = !0), !0;
            if (
              i(u) &&
              (i((o = u.hook)) && i((o = o.init)) && o(e, !0),
              i((o = e.componentInstance)))
            )
              return m(e, n), !0;
            if (i(s)) {
              if (i(c))
                if (t.hasChildNodes())
                  if (
                    i((o = u)) &&
                    i((o = o.domProps)) &&
                    i((o = o.innerHTML))
                  ) {
                    if (o !== t.innerHTML) return !1;
                  } else {
                    for (
                      var l = !0, f = t.firstChild, h = 0;
                      h < c.length;
                      h++
                    ) {
                      if (!f || !T(f, c[h], n, r)) {
                        l = !1;
                        break;
                      }
                      f = f.nextSibling;
                    }
                    if (!l || f) return !1;
                  }
                else b(e, c, n);
              if (i(u)) {
                var p = !1;
                for (var d in u)
                  if (!P(d)) {
                    (p = !0), _(e, n);
                    break;
                  }
                !p && u["class"] && ve(u["class"]);
              }
            } else t.data !== e.text && (t.data = e.text);
            return !0;
          }
          return function(t, e, n, s) {
            if (!r(e)) {
              var u = !1,
                f = [];
              if (r(t)) (u = !0), p(e, f);
              else {
                var h = i(t.nodeType);
                if (!h && Ci(t, e)) A(t, e, f, null, null, s);
                else {
                  if (h) {
                    if (
                      (1 === t.nodeType &&
                        t.hasAttribute(F) &&
                        (t.removeAttribute(F), (n = !0)),
                      a(n) && T(t, e, f))
                    )
                      return k(e, f, !0), t;
                    t = l(t);
                  }
                  var d = t.elm,
                    m = c.parentNode(d);
                  if (
                    (p(e, f, d._leaveCb ? null : m, c.nextSibling(d)),
                    i(e.parent))
                  ) {
                    var v = e.parent,
                      y = w(e);
                    while (v) {
                      for (var g = 0; g < o.destroy.length; ++g)
                        o.destroy[g](v);
                      if (((v.elm = e.elm), y)) {
                        for (var b = 0; b < o.create.length; ++b)
                          o.create[b](Oi, v);
                        var _ = v.data.hook.insert;
                        if (_.merged)
                          for (var x = 1; x < _.fns.length; x++) _.fns[x]();
                      } else Ni(v);
                      v = v.parent;
                    }
                  }
                  i(m) ? N(m, [t], 0, 0) : i(t.tag) && S(t);
                }
              }
              return k(e, f, u), e.elm;
            }
            i(t) && S(t);
          };
        }
        var Ti = {
          create: Ri,
          update: Ri,
          destroy: function(t) {
            Ri(t, Oi);
          }
        };
        function Ri(t, e) {
          (t.data.directives || e.data.directives) && Di(t, e);
        }
        function Di(t, e) {
          var n,
            r,
            i,
            a = t === Oi,
            o = e === Oi,
            s = ji(t.data.directives, t.context),
            u = ji(e.data.directives, e.context),
            c = [],
            l = [];
          for (n in u)
            (r = s[n]),
              (i = u[n]),
              r
                ? ((i.oldValue = r.value),
                  (i.oldArg = r.arg),
                  Bi(i, "update", e, t),
                  i.def && i.def.componentUpdated && l.push(i))
                : (Bi(i, "bind", e, t), i.def && i.def.inserted && c.push(i));
          if (c.length) {
            var f = function() {
              for (var n = 0; n < c.length; n++) Bi(c[n], "inserted", e, t);
            };
            a ? _e(e, "insert", f) : f();
          }
          if (
            (l.length &&
              _e(e, "postpatch", function() {
                for (var n = 0; n < l.length; n++)
                  Bi(l[n], "componentUpdated", e, t);
              }),
            !a)
          )
            for (n in s) u[n] || Bi(s[n], "unbind", t, t, o);
        }
        var Mi = Object.create(null);
        function ji(t, e) {
          var n,
            r,
            i = Object.create(null);
          if (!t) return i;
          for (n = 0; n < t.length; n++)
            (r = t[n]),
              r.modifiers || (r.modifiers = Mi),
              (i[Li(r)] = r),
              (r.def = Xt(e.$options, "directives", r.name, !0));
          return i;
        }
        function Li(t) {
          return (
            t.rawName || t.name + "." + Object.keys(t.modifiers || {}).join(".")
          );
        }
        function Bi(t, e, n, r, i) {
          var a = t.def && t.def[e];
          if (a)
            try {
              a(n.elm, t, n, r, i);
            } catch (Eo) {
              ee(Eo, n.context, "directive " + t.name + " " + e + " hook");
            }
        }
        var Fi = [Si, Ti];
        function zi(t, e) {
          var n = e.componentOptions;
          if (
            (!i(n) || !1 !== n.Ctor.options.inheritAttrs) &&
            (!r(t.data.attrs) || !r(e.data.attrs))
          ) {
            var a,
              o,
              s,
              u = e.elm,
              c = t.data.attrs || {},
              l = e.data.attrs || {};
            for (a in (i(l.__ob__) && (l = e.data.attrs = P({}, l)), l))
              (o = l[a]), (s = c[a]), s !== o && Ui(u, a, o);
            for (a in ((tt || nt) &&
              l.value !== c.value &&
              Ui(u, "value", l.value),
            c))
              r(l[a]) &&
                (Hr(a)
                  ? u.removeAttributeNS(qr, Kr(a))
                  : Ur(a) || u.removeAttribute(a));
          }
        }
        function Ui(t, e, n) {
          t.tagName.indexOf("-") > -1
            ? Vi(t, e, n)
            : $r(e)
            ? Gr(n)
              ? t.removeAttribute(e)
              : ((n =
                  "allowfullscreen" === e && "EMBED" === t.tagName
                    ? "true"
                    : e),
                t.setAttribute(e, n))
            : Ur(e)
            ? t.setAttribute(e, Wr(e, n))
            : Hr(e)
            ? Gr(n)
              ? t.removeAttributeNS(qr, Kr(e))
              : t.setAttributeNS(qr, e, n)
            : Vi(t, e, n);
        }
        function Vi(t, e, n) {
          if (Gr(n)) t.removeAttribute(e);
          else {
            if (
              tt &&
              !et &&
              "TEXTAREA" === t.tagName &&
              "placeholder" === e &&
              "" !== n &&
              !t.__ieph
            ) {
              var r = function(e) {
                e.stopImmediatePropagation(), t.removeEventListener("input", r);
              };
              t.addEventListener("input", r), (t.__ieph = !0);
            }
            t.setAttribute(e, n);
          }
        }
        var Wi = { create: zi, update: zi };
        function $i(t, e) {
          var n = e.elm,
            a = e.data,
            o = t.data;
          if (
            !(
              r(a.staticClass) &&
              r(a.class) &&
              (r(o) || (r(o.staticClass) && r(o.class)))
            )
          ) {
            var s = Xr(e),
              u = n._transitionClasses;
            i(u) && (s = Qr(s, Zr(u))),
              s !== n._prevClass &&
                (n.setAttribute("class", s), (n._prevClass = s));
          }
        }
        var qi,
          Hi = { create: $i, update: $i },
          Ki = "__r",
          Gi = "__c";
        function Xi(t) {
          if (i(t[Ki])) {
            var e = tt ? "change" : "input";
            (t[e] = [].concat(t[Ki], t[e] || [])), delete t[Ki];
          }
          i(t[Gi]) &&
            ((t.change = [].concat(t[Gi], t.change || [])), delete t[Gi]);
        }
        function Ji(t, e, n) {
          var r = qi;
          return function i() {
            var a = e.apply(null, arguments);
            null !== a && Zi(t, i, n, r);
          };
        }
        var Yi = oe && !(it && Number(it[1]) <= 53);
        function Qi(t, e, n, r) {
          if (Yi) {
            var i = Kn,
              a = e;
            e = a._wrapper = function(t) {
              if (
                t.target === t.currentTarget ||
                t.timeStamp >= i ||
                t.timeStamp <= 0 ||
                t.target.ownerDocument !== document
              )
                return a.apply(this, arguments);
            };
          }
          qi.addEventListener(t, e, ot ? { capture: n, passive: r } : n);
        }
        function Zi(t, e, n, r) {
          (r || qi).removeEventListener(t, e._wrapper || e, n);
        }
        function ta(t, e) {
          if (!r(t.data.on) || !r(e.data.on)) {
            var n = e.data.on || {},
              i = t.data.on || {};
            (qi = e.elm), Xi(n), we(n, i, Qi, Zi, Ji, e.context), (qi = void 0);
          }
        }
        var ea,
          na = { create: ta, update: ta };
        function ra(t, e) {
          if (!r(t.data.domProps) || !r(e.data.domProps)) {
            var n,
              a,
              o = e.elm,
              s = t.data.domProps || {},
              u = e.data.domProps || {};
            for (n in (i(u.__ob__) && (u = e.data.domProps = P({}, u)), s))
              n in u || (o[n] = "");
            for (n in u) {
              if (((a = u[n]), "textContent" === n || "innerHTML" === n)) {
                if ((e.children && (e.children.length = 0), a === s[n]))
                  continue;
                1 === o.childNodes.length && o.removeChild(o.childNodes[0]);
              }
              if ("value" === n && "PROGRESS" !== o.tagName) {
                o._value = a;
                var c = r(a) ? "" : String(a);
                ia(o, c) && (o.value = c);
              } else if ("innerHTML" === n && ii(o.tagName) && r(o.innerHTML)) {
                (ea = ea || document.createElement("div")),
                  (ea.innerHTML = "<svg>" + a + "</svg>");
                var l = ea.firstChild;
                while (o.firstChild) o.removeChild(o.firstChild);
                while (l.firstChild) o.appendChild(l.firstChild);
              } else if (a !== s[n])
                try {
                  o[n] = a;
                } catch (Eo) {}
            }
          }
        }
        function ia(t, e) {
          return (
            !t.composing && ("OPTION" === t.tagName || aa(t, e) || oa(t, e))
          );
        }
        function aa(t, e) {
          var n = !0;
          try {
            n = document.activeElement !== t;
          } catch (Eo) {}
          return n && t.value !== e;
        }
        function oa(t, e) {
          var n = t.value,
            r = t._vModifiers;
          if (i(r)) {
            if (r.number) return m(n) !== m(e);
            if (r.trim) return n.trim() !== e.trim();
          }
          return n !== e;
        }
        var sa = { create: ra, update: ra },
          ua = _(function(t) {
            var e = {},
              n = /;(?![^(]*\))/g,
              r = /:(.+)/;
            return (
              t.split(n).forEach(function(t) {
                if (t) {
                  var n = t.split(r);
                  n.length > 1 && (e[n[0].trim()] = n[1].trim());
                }
              }),
              e
            );
          });
        function ca(t) {
          var e = la(t.style);
          return t.staticStyle ? P(t.staticStyle, e) : e;
        }
        function la(t) {
          return Array.isArray(t) ? T(t) : "string" === typeof t ? ua(t) : t;
        }
        function fa(t, e) {
          var n,
            r = {};
          if (e) {
            var i = t;
            while (i.componentInstance)
              (i = i.componentInstance._vnode),
                i && i.data && (n = ca(i.data)) && P(r, n);
          }
          (n = ca(t.data)) && P(r, n);
          var a = t;
          while ((a = a.parent)) a.data && (n = ca(a.data)) && P(r, n);
          return r;
        }
        var ha,
          pa = /^--/,
          da = /\s*!important$/,
          ma = function(t, e, n) {
            if (pa.test(e)) t.style.setProperty(e, n);
            else if (da.test(n))
              t.style.setProperty(O(e), n.replace(da, ""), "important");
            else {
              var r = ya(e);
              if (Array.isArray(n))
                for (var i = 0, a = n.length; i < a; i++) t.style[r] = n[i];
              else t.style[r] = n;
            }
          },
          va = ["Webkit", "Moz", "ms"],
          ya = _(function(t) {
            if (
              ((ha = ha || document.createElement("div").style),
              (t = E(t)),
              "filter" !== t && t in ha)
            )
              return t;
            for (
              var e = t.charAt(0).toUpperCase() + t.slice(1), n = 0;
              n < va.length;
              n++
            ) {
              var r = va[n] + e;
              if (r in ha) return r;
            }
          });
        function ga(t, e) {
          var n = e.data,
            a = t.data;
          if (
            !(r(n.staticStyle) && r(n.style) && r(a.staticStyle) && r(a.style))
          ) {
            var o,
              s,
              u = e.elm,
              c = a.staticStyle,
              l = a.normalizedStyle || a.style || {},
              f = c || l,
              h = la(e.data.style) || {};
            e.data.normalizedStyle = i(h.__ob__) ? P({}, h) : h;
            var p = fa(e, !0);
            for (s in f) r(p[s]) && ma(u, s, "");
            for (s in p) (o = p[s]), o !== f[s] && ma(u, s, null == o ? "" : o);
          }
        }
        var ba = { create: ga, update: ga },
          wa = /\s+/;
        function _a(t, e) {
          if (e && (e = e.trim()))
            if (t.classList)
              e.indexOf(" ") > -1
                ? e.split(wa).forEach(function(e) {
                    return t.classList.add(e);
                  })
                : t.classList.add(e);
            else {
              var n = " " + (t.getAttribute("class") || "") + " ";
              n.indexOf(" " + e + " ") < 0 &&
                t.setAttribute("class", (n + e).trim());
            }
        }
        function xa(t, e) {
          if (e && (e = e.trim()))
            if (t.classList)
              e.indexOf(" ") > -1
                ? e.split(wa).forEach(function(e) {
                    return t.classList.remove(e);
                  })
                : t.classList.remove(e),
                t.classList.length || t.removeAttribute("class");
            else {
              var n = " " + (t.getAttribute("class") || "") + " ",
                r = " " + e + " ";
              while (n.indexOf(r) >= 0) n = n.replace(r, " ");
              (n = n.trim()),
                n ? t.setAttribute("class", n) : t.removeAttribute("class");
            }
        }
        function Ea(t) {
          if (t) {
            if ("object" === typeof t) {
              var e = {};
              return !1 !== t.css && P(e, Sa(t.name || "v")), P(e, t), e;
            }
            return "string" === typeof t ? Sa(t) : void 0;
          }
        }
        var Sa = _(function(t) {
            return {
              enterClass: t + "-enter",
              enterToClass: t + "-enter-to",
              enterActiveClass: t + "-enter-active",
              leaveClass: t + "-leave",
              leaveToClass: t + "-leave-to",
              leaveActiveClass: t + "-leave-active"
            };
          }),
          Na = J && !et,
          Oa = "transition",
          Ia = "animation",
          Ca = "transition",
          Aa = "transitionend",
          ka = "animation",
          Pa = "animationend";
        Na &&
          (void 0 === window.ontransitionend &&
            void 0 !== window.onwebkittransitionend &&
            ((Ca = "WebkitTransition"), (Aa = "webkitTransitionEnd")),
          void 0 === window.onanimationend &&
            void 0 !== window.onwebkitanimationend &&
            ((ka = "WebkitAnimation"), (Pa = "webkitAnimationEnd")));
        var Ta = J
          ? window.requestAnimationFrame
            ? window.requestAnimationFrame.bind(window)
            : setTimeout
          : function(t) {
              return t();
            };
        function Ra(t) {
          Ta(function() {
            Ta(t);
          });
        }
        function Da(t, e) {
          var n = t._transitionClasses || (t._transitionClasses = []);
          n.indexOf(e) < 0 && (n.push(e), _a(t, e));
        }
        function Ma(t, e) {
          t._transitionClasses && g(t._transitionClasses, e), xa(t, e);
        }
        function ja(t, e, n) {
          var r = Ba(t, e),
            i = r.type,
            a = r.timeout,
            o = r.propCount;
          if (!i) return n();
          var s = i === Oa ? Aa : Pa,
            u = 0,
            c = function() {
              t.removeEventListener(s, l), n();
            },
            l = function(e) {
              e.target === t && ++u >= o && c();
            };
          setTimeout(function() {
            u < o && c();
          }, a + 1),
            t.addEventListener(s, l);
        }
        var La = /\b(transform|all)(,|$)/;
        function Ba(t, e) {
          var n,
            r = window.getComputedStyle(t),
            i = (r[Ca + "Delay"] || "").split(", "),
            a = (r[Ca + "Duration"] || "").split(", "),
            o = Fa(i, a),
            s = (r[ka + "Delay"] || "").split(", "),
            u = (r[ka + "Duration"] || "").split(", "),
            c = Fa(s, u),
            l = 0,
            f = 0;
          e === Oa
            ? o > 0 && ((n = Oa), (l = o), (f = a.length))
            : e === Ia
            ? c > 0 && ((n = Ia), (l = c), (f = u.length))
            : ((l = Math.max(o, c)),
              (n = l > 0 ? (o > c ? Oa : Ia) : null),
              (f = n ? (n === Oa ? a.length : u.length) : 0));
          var h = n === Oa && La.test(r[Ca + "Property"]);
          return { type: n, timeout: l, propCount: f, hasTransform: h };
        }
        function Fa(t, e) {
          while (t.length < e.length) t = t.concat(t);
          return Math.max.apply(
            null,
            e.map(function(e, n) {
              return za(e) + za(t[n]);
            })
          );
        }
        function za(t) {
          return 1e3 * Number(t.slice(0, -1).replace(",", "."));
        }
        function Ua(t, e) {
          var n = t.elm;
          i(n._leaveCb) && ((n._leaveCb.cancelled = !0), n._leaveCb());
          var a = Ea(t.data.transition);
          if (!r(a) && !i(n._enterCb) && 1 === n.nodeType) {
            var o = a.css,
              s = a.type,
              c = a.enterClass,
              l = a.enterToClass,
              f = a.enterActiveClass,
              h = a.appearClass,
              p = a.appearToClass,
              d = a.appearActiveClass,
              v = a.beforeEnter,
              y = a.enter,
              g = a.afterEnter,
              b = a.enterCancelled,
              w = a.beforeAppear,
              _ = a.appear,
              x = a.afterAppear,
              E = a.appearCancelled,
              S = a.duration,
              N = kn,
              O = kn.$vnode;
            while (O && O.parent) (N = O.context), (O = O.parent);
            var I = !N._isMounted || !t.isRootInsert;
            if (!I || _ || "" === _) {
              var C = I && h ? h : c,
                A = I && d ? d : f,
                k = I && p ? p : l,
                P = (I && w) || v,
                T = I && "function" === typeof _ ? _ : y,
                R = (I && x) || g,
                D = (I && E) || b,
                M = m(u(S) ? S.enter : S);
              0;
              var j = !1 !== o && !et,
                L = $a(T),
                F = (n._enterCb = B(function() {
                  j && (Ma(n, k), Ma(n, A)),
                    F.cancelled ? (j && Ma(n, C), D && D(n)) : R && R(n),
                    (n._enterCb = null);
                }));
              t.data.show ||
                _e(t, "insert", function() {
                  var e = n.parentNode,
                    r = e && e._pending && e._pending[t.key];
                  r && r.tag === t.tag && r.elm._leaveCb && r.elm._leaveCb(),
                    T && T(n, F);
                }),
                P && P(n),
                j &&
                  (Da(n, C),
                  Da(n, A),
                  Ra(function() {
                    Ma(n, C),
                      F.cancelled ||
                        (Da(n, k),
                        L || (Wa(M) ? setTimeout(F, M) : ja(n, s, F)));
                  })),
                t.data.show && (e && e(), T && T(n, F)),
                j || L || F();
            }
          }
        }
        function Va(t, e) {
          var n = t.elm;
          i(n._enterCb) && ((n._enterCb.cancelled = !0), n._enterCb());
          var a = Ea(t.data.transition);
          if (r(a) || 1 !== n.nodeType) return e();
          if (!i(n._leaveCb)) {
            var o = a.css,
              s = a.type,
              c = a.leaveClass,
              l = a.leaveToClass,
              f = a.leaveActiveClass,
              h = a.beforeLeave,
              p = a.leave,
              d = a.afterLeave,
              v = a.leaveCancelled,
              y = a.delayLeave,
              g = a.duration,
              b = !1 !== o && !et,
              w = $a(p),
              _ = m(u(g) ? g.leave : g);
            0;
            var x = (n._leaveCb = B(function() {
              n.parentNode &&
                n.parentNode._pending &&
                (n.parentNode._pending[t.key] = null),
                b && (Ma(n, l), Ma(n, f)),
                x.cancelled ? (b && Ma(n, c), v && v(n)) : (e(), d && d(n)),
                (n._leaveCb = null);
            }));
            y ? y(E) : E();
          }
          function E() {
            x.cancelled ||
              (!t.data.show &&
                n.parentNode &&
                ((n.parentNode._pending || (n.parentNode._pending = {}))[
                  t.key
                ] = t),
              h && h(n),
              b &&
                (Da(n, c),
                Da(n, f),
                Ra(function() {
                  Ma(n, c),
                    x.cancelled ||
                      (Da(n, l), w || (Wa(_) ? setTimeout(x, _) : ja(n, s, x)));
                })),
              p && p(n, x),
              b || w || x());
          }
        }
        function Wa(t) {
          return "number" === typeof t && !isNaN(t);
        }
        function $a(t) {
          if (r(t)) return !1;
          var e = t.fns;
          return i(e)
            ? $a(Array.isArray(e) ? e[0] : e)
            : (t._length || t.length) > 1;
        }
        function qa(t, e) {
          !0 !== e.data.show && Ua(e);
        }
        var Ha = J
            ? {
                create: qa,
                activate: qa,
                remove: function(t, e) {
                  !0 !== t.data.show ? Va(t, e) : e();
                }
              }
            : {},
          Ka = [Wi, Hi, na, sa, ba, Ha],
          Ga = Ka.concat(Fi),
          Xa = Pi({ nodeOps: Ei, modules: Ga });
        et &&
          document.addEventListener("selectionchange", function() {
            var t = document.activeElement;
            t && t.vmodel && ro(t, "input");
          });
        var Ja = {
          inserted: function(t, e, n, r) {
            "select" === n.tag
              ? (r.elm && !r.elm._vOptions
                  ? _e(n, "postpatch", function() {
                      Ja.componentUpdated(t, e, n);
                    })
                  : Ya(t, e, n.context),
                (t._vOptions = [].map.call(t.options, to)))
              : ("textarea" === n.tag || ci(t.type)) &&
                ((t._vModifiers = e.modifiers),
                e.modifiers.lazy ||
                  (t.addEventListener("compositionstart", eo),
                  t.addEventListener("compositionend", no),
                  t.addEventListener("change", no),
                  et && (t.vmodel = !0)));
          },
          componentUpdated: function(t, e, n) {
            if ("select" === n.tag) {
              Ya(t, e, n.context);
              var r = t._vOptions,
                i = (t._vOptions = [].map.call(t.options, to));
              if (
                i.some(function(t, e) {
                  return !j(t, r[e]);
                })
              ) {
                var a = t.multiple
                  ? e.value.some(function(t) {
                      return Za(t, i);
                    })
                  : e.value !== e.oldValue && Za(e.value, i);
                a && ro(t, "change");
              }
            }
          }
        };
        function Ya(t, e, n) {
          Qa(t, e, n),
            (tt || nt) &&
              setTimeout(function() {
                Qa(t, e, n);
              }, 0);
        }
        function Qa(t, e, n) {
          var r = e.value,
            i = t.multiple;
          if (!i || Array.isArray(r)) {
            for (var a, o, s = 0, u = t.options.length; s < u; s++)
              if (((o = t.options[s]), i))
                (a = L(r, to(o)) > -1), o.selected !== a && (o.selected = a);
              else if (j(to(o), r))
                return void (t.selectedIndex !== s && (t.selectedIndex = s));
            i || (t.selectedIndex = -1);
          }
        }
        function Za(t, e) {
          return e.every(function(e) {
            return !j(e, t);
          });
        }
        function to(t) {
          return "_value" in t ? t._value : t.value;
        }
        function eo(t) {
          t.target.composing = !0;
        }
        function no(t) {
          t.target.composing &&
            ((t.target.composing = !1), ro(t.target, "input"));
        }
        function ro(t, e) {
          var n = document.createEvent("HTMLEvents");
          n.initEvent(e, !0, !0), t.dispatchEvent(n);
        }
        function io(t) {
          return !t.componentInstance || (t.data && t.data.transition)
            ? t
            : io(t.componentInstance._vnode);
        }
        var ao = {
            bind: function(t, e, n) {
              var r = e.value;
              n = io(n);
              var i = n.data && n.data.transition,
                a = (t.__vOriginalDisplay =
                  "none" === t.style.display ? "" : t.style.display);
              r && i
                ? ((n.data.show = !0),
                  Ua(n, function() {
                    t.style.display = a;
                  }))
                : (t.style.display = r ? a : "none");
            },
            update: function(t, e, n) {
              var r = e.value,
                i = e.oldValue;
              if (!r !== !i) {
                n = io(n);
                var a = n.data && n.data.transition;
                a
                  ? ((n.data.show = !0),
                    r
                      ? Ua(n, function() {
                          t.style.display = t.__vOriginalDisplay;
                        })
                      : Va(n, function() {
                          t.style.display = "none";
                        }))
                  : (t.style.display = r ? t.__vOriginalDisplay : "none");
              }
            },
            unbind: function(t, e, n, r, i) {
              i || (t.style.display = t.__vOriginalDisplay);
            }
          },
          oo = { model: Ja, show: ao },
          so = {
            name: String,
            appear: Boolean,
            css: Boolean,
            mode: String,
            type: String,
            enterClass: String,
            leaveClass: String,
            enterToClass: String,
            leaveToClass: String,
            enterActiveClass: String,
            leaveActiveClass: String,
            appearClass: String,
            appearActiveClass: String,
            appearToClass: String,
            duration: [Number, String, Object]
          };
        function uo(t) {
          var e = t && t.componentOptions;
          return e && e.Ctor.options.abstract ? uo(En(e.children)) : t;
        }
        function co(t) {
          var e = {},
            n = t.$options;
          for (var r in n.propsData) e[r] = t[r];
          var i = n._parentListeners;
          for (var a in i) e[E(a)] = i[a];
          return e;
        }
        function lo(t, e) {
          if (/\d-keep-alive$/.test(e.tag))
            return t("keep-alive", { props: e.componentOptions.propsData });
        }
        function fo(t) {
          while ((t = t.parent)) if (t.data.transition) return !0;
        }
        function ho(t, e) {
          return e.key === t.key && e.tag === t.tag;
        }
        var po = function(t) {
            return t.tag || xn(t);
          },
          mo = function(t) {
            return "show" === t.name;
          },
          vo = {
            name: "transition",
            props: so,
            abstract: !0,
            render: function(t) {
              var e = this,
                n = this.$slots.default;
              if (n && ((n = n.filter(po)), n.length)) {
                0;
                var r = this.mode;
                0;
                var i = n[0];
                if (fo(this.$vnode)) return i;
                var a = uo(i);
                if (!a) return i;
                if (this._leaving) return lo(t, i);
                var o = "__transition-" + this._uid + "-";
                a.key =
                  null == a.key
                    ? a.isComment
                      ? o + "comment"
                      : o + a.tag
                    : s(a.key)
                    ? 0 === String(a.key).indexOf(o)
                      ? a.key
                      : o + a.key
                    : a.key;
                var u = ((a.data || (a.data = {})).transition = co(this)),
                  c = this._vnode,
                  l = uo(c);
                if (
                  (a.data.directives &&
                    a.data.directives.some(mo) &&
                    (a.data.show = !0),
                  l &&
                    l.data &&
                    !ho(a, l) &&
                    !xn(l) &&
                    (!l.componentInstance ||
                      !l.componentInstance._vnode.isComment))
                ) {
                  var f = (l.data.transition = P({}, u));
                  if ("out-in" === r)
                    return (
                      (this._leaving = !0),
                      _e(f, "afterLeave", function() {
                        (e._leaving = !1), e.$forceUpdate();
                      }),
                      lo(t, i)
                    );
                  if ("in-out" === r) {
                    if (xn(a)) return c;
                    var h,
                      p = function() {
                        h();
                      };
                    _e(u, "afterEnter", p),
                      _e(u, "enterCancelled", p),
                      _e(f, "delayLeave", function(t) {
                        h = t;
                      });
                  }
                }
                return i;
              }
            }
          },
          yo = P({ tag: String, moveClass: String }, so);
        delete yo.mode;
        var go = {
          props: yo,
          beforeMount: function() {
            var t = this,
              e = this._update;
            this._update = function(n, r) {
              var i = Pn(t);
              t.__patch__(t._vnode, t.kept, !1, !0),
                (t._vnode = t.kept),
                i(),
                e.call(t, n, r);
            };
          },
          render: function(t) {
            for (
              var e = this.tag || this.$vnode.data.tag || "span",
                n = Object.create(null),
                r = (this.prevChildren = this.children),
                i = this.$slots.default || [],
                a = (this.children = []),
                o = co(this),
                s = 0;
              s < i.length;
              s++
            ) {
              var u = i[s];
              if (u.tag)
                if (null != u.key && 0 !== String(u.key).indexOf("__vlist"))
                  a.push(u),
                    (n[u.key] = u),
                    ((u.data || (u.data = {})).transition = o);
                else;
            }
            if (r) {
              for (var c = [], l = [], f = 0; f < r.length; f++) {
                var h = r[f];
                (h.data.transition = o),
                  (h.data.pos = h.elm.getBoundingClientRect()),
                  n[h.key] ? c.push(h) : l.push(h);
              }
              (this.kept = t(e, null, c)), (this.removed = l);
            }
            return t(e, null, a);
          },
          updated: function() {
            var t = this.prevChildren,
              e = this.moveClass || (this.name || "v") + "-move";
            t.length &&
              this.hasMove(t[0].elm, e) &&
              (t.forEach(bo),
              t.forEach(wo),
              t.forEach(_o),
              (this._reflow = document.body.offsetHeight),
              t.forEach(function(t) {
                if (t.data.moved) {
                  var n = t.elm,
                    r = n.style;
                  Da(n, e),
                    (r.transform = r.WebkitTransform = r.transitionDuration =
                      ""),
                    n.addEventListener(
                      Aa,
                      (n._moveCb = function t(r) {
                        (r && r.target !== n) ||
                          (r && !/transform$/.test(r.propertyName)) ||
                          (n.removeEventListener(Aa, t),
                          (n._moveCb = null),
                          Ma(n, e));
                      })
                    );
                }
              }));
          },
          methods: {
            hasMove: function(t, e) {
              if (!Na) return !1;
              if (this._hasMove) return this._hasMove;
              var n = t.cloneNode();
              t._transitionClasses &&
                t._transitionClasses.forEach(function(t) {
                  xa(n, t);
                }),
                _a(n, e),
                (n.style.display = "none"),
                this.$el.appendChild(n);
              var r = Ba(n);
              return this.$el.removeChild(n), (this._hasMove = r.hasTransform);
            }
          }
        };
        function bo(t) {
          t.elm._moveCb && t.elm._moveCb(), t.elm._enterCb && t.elm._enterCb();
        }
        function wo(t) {
          t.data.newPos = t.elm.getBoundingClientRect();
        }
        function _o(t) {
          var e = t.data.pos,
            n = t.data.newPos,
            r = e.left - n.left,
            i = e.top - n.top;
          if (r || i) {
            t.data.moved = !0;
            var a = t.elm.style;
            (a.transform = a.WebkitTransform =
              "translate(" + r + "px," + i + "px)"),
              (a.transitionDuration = "0s");
          }
        }
        var xo = { Transition: vo, TransitionGroup: go };
        (Er.config.mustUseProp = zr),
          (Er.config.isReservedTag = ai),
          (Er.config.isReservedAttr = Br),
          (Er.config.getTagNamespace = oi),
          (Er.config.isUnknownElement = ui),
          P(Er.options.directives, oo),
          P(Er.options.components, xo),
          (Er.prototype.__patch__ = J ? Xa : R),
          (Er.prototype.$mount = function(t, e) {
            return (t = t && J ? li(t) : void 0), Dn(this, t, e);
          }),
          J &&
            setTimeout(function() {
              V.devtools && ct && ct.emit("init", Er);
            }, 0),
          (e["a"] = Er);
      }.call(this, n("c8ba")));
    },
    "2b4c": function(t, e, n) {
      var r = n("5537")("wks"),
        i = n("ca5a"),
        a = n("7726").Symbol,
        o = "function" == typeof a,
        s = (t.exports = function(t) {
          return r[t] || (r[t] = (o && a[t]) || (o ? a : i)("Symbol." + t));
        });
      s.store = r;
    },
    "2c63": function(t, e, n) {
      t.exports = n("dc14");
    },
    "2d00": function(t, e) {
      t.exports = !1;
    },
    "2d95": function(t, e) {
      var n = {}.toString;
      t.exports = function(t) {
        return n.call(t).slice(8, -1);
      };
    },
    3024: function(t, e) {
      t.exports = function(t, e, n) {
        var r = void 0 === n;
        switch (e.length) {
          case 0:
            return r ? t() : t.call(n);
          case 1:
            return r ? t(e[0]) : t.call(n, e[0]);
          case 2:
            return r ? t(e[0], e[1]) : t.call(n, e[0], e[1]);
          case 3:
            return r ? t(e[0], e[1], e[2]) : t.call(n, e[0], e[1], e[2]);
          case 4:
            return r
              ? t(e[0], e[1], e[2], e[3])
              : t.call(n, e[0], e[1], e[2], e[3]);
        }
        return t.apply(n, e);
      };
    },
    "30f1": function(t, e, n) {
      "use strict";
      var r = n("b8e3"),
        i = n("63b6"),
        a = n("9138"),
        o = n("35e8"),
        s = n("481b"),
        u = n("8f60"),
        c = n("45f2"),
        l = n("53e2"),
        f = n("5168")("iterator"),
        h = !([].keys && "next" in [].keys()),
        p = "@@iterator",
        d = "keys",
        m = "values",
        v = function() {
          return this;
        };
      t.exports = function(t, e, n, y, g, b, w) {
        u(n, e, y);
        var _,
          x,
          E,
          S = function(t) {
            if (!h && t in C) return C[t];
            switch (t) {
              case d:
                return function() {
                  return new n(this, t);
                };
              case m:
                return function() {
                  return new n(this, t);
                };
            }
            return function() {
              return new n(this, t);
            };
          },
          N = e + " Iterator",
          O = g == m,
          I = !1,
          C = t.prototype,
          A = C[f] || C[p] || (g && C[g]),
          k = A || S(g),
          P = g ? (O ? S("entries") : k) : void 0,
          T = ("Array" == e && C.entries) || A;
        if (
          (T &&
            ((E = l(T.call(new t()))),
            E !== Object.prototype &&
              E.next &&
              (c(E, N, !0), r || "function" == typeof E[f] || o(E, f, v))),
          O &&
            A &&
            A.name !== m &&
            ((I = !0),
            (k = function() {
              return A.call(this);
            })),
          (r && !w) || (!h && !I && C[f]) || o(C, f, k),
          (s[e] = k),
          (s[N] = v),
          g)
        )
          if (
            ((_ = { values: O ? k : S(m), keys: b ? k : S(d), entries: P }), w)
          )
            for (x in _) x in C || a(C, x, _[x]);
          else i(i.P + i.F * (h || I), e, _);
        return _;
      };
    },
    "31f4": function(t, e) {
      t.exports = function(t, e, n) {
        var r = void 0 === n;
        switch (e.length) {
          case 0:
            return r ? t() : t.call(n);
          case 1:
            return r ? t(e[0]) : t.call(n, e[0]);
          case 2:
            return r ? t(e[0], e[1]) : t.call(n, e[0], e[1]);
          case 3:
            return r ? t(e[0], e[1], e[2]) : t.call(n, e[0], e[1], e[2]);
          case 4:
            return r
              ? t(e[0], e[1], e[2], e[3])
              : t.call(n, e[0], e[1], e[2], e[3]);
        }
        return t.apply(n, e);
      };
    },
    "32e9": function(t, e, n) {
      var r = n("86cc"),
        i = n("4630");
      t.exports = n("9e1e")
        ? function(t, e, n) {
            return r.f(t, e, i(1, n));
          }
        : function(t, e, n) {
            return (t[e] = n), t;
          };
    },
    "32fc": function(t, e, n) {
      var r = n("e53d").document;
      t.exports = r && r.documentElement;
    },
    3300: function(t, e, n) {
      "use strict";
      var r = n("4136"),
        i = n("3337"),
        a = n("399f"),
        o = n("3fb5"),
        s = r.base,
        u = i.utils.assert;
      function c(t) {
        s.call(this, "short", t),
          (this.a = new a(t.a, 16).toRed(this.red)),
          (this.b = new a(t.b, 16).toRed(this.red)),
          (this.tinv = this.two.redInvm()),
          (this.zeroA = 0 === this.a.fromRed().cmpn(0)),
          (this.threeA =
            0 ===
            this.a
              .fromRed()
              .sub(this.p)
              .cmpn(-3)),
          (this.endo = this._getEndomorphism(t)),
          (this._endoWnafT1 = new Array(4)),
          (this._endoWnafT2 = new Array(4));
      }
      function l(t, e, n, r) {
        s.BasePoint.call(this, t, "affine"),
          null === e && null === n
            ? ((this.x = null), (this.y = null), (this.inf = !0))
            : ((this.x = new a(e, 16)),
              (this.y = new a(n, 16)),
              r &&
                (this.x.forceRed(this.curve.red),
                this.y.forceRed(this.curve.red)),
              this.x.red || (this.x = this.x.toRed(this.curve.red)),
              this.y.red || (this.y = this.y.toRed(this.curve.red)),
              (this.inf = !1));
      }
      function f(t, e, n, r) {
        s.BasePoint.call(this, t, "jacobian"),
          null === e && null === n && null === r
            ? ((this.x = this.curve.one),
              (this.y = this.curve.one),
              (this.z = new a(0)))
            : ((this.x = new a(e, 16)),
              (this.y = new a(n, 16)),
              (this.z = new a(r, 16))),
          this.x.red || (this.x = this.x.toRed(this.curve.red)),
          this.y.red || (this.y = this.y.toRed(this.curve.red)),
          this.z.red || (this.z = this.z.toRed(this.curve.red)),
          (this.zOne = this.z === this.curve.one);
      }
      o(c, s),
        (t.exports = c),
        (c.prototype._getEndomorphism = function(t) {
          if (this.zeroA && this.g && this.n && 1 === this.p.modn(3)) {
            var e, n, r;
            if (t.beta) e = new a(t.beta, 16).toRed(this.red);
            else {
              var i = this._getEndoRoots(this.p);
              (e = i[0].cmp(i[1]) < 0 ? i[0] : i[1]), (e = e.toRed(this.red));
            }
            if (t.lambda) n = new a(t.lambda, 16);
            else {
              var o = this._getEndoRoots(this.n);
              0 === this.g.mul(o[0]).x.cmp(this.g.x.redMul(e))
                ? (n = o[0])
                : ((n = o[1]),
                  u(0 === this.g.mul(n).x.cmp(this.g.x.redMul(e))));
            }
            return (
              (r = t.basis
                ? t.basis.map(function(t) {
                    return { a: new a(t.a, 16), b: new a(t.b, 16) };
                  })
                : this._getEndoBasis(n)),
              { beta: e, lambda: n, basis: r }
            );
          }
        }),
        (c.prototype._getEndoRoots = function(t) {
          var e = t === this.p ? this.red : a.mont(t),
            n = new a(2).toRed(e).redInvm(),
            r = n.redNeg(),
            i = new a(3)
              .toRed(e)
              .redNeg()
              .redSqrt()
              .redMul(n),
            o = r.redAdd(i).fromRed(),
            s = r.redSub(i).fromRed();
          return [o, s];
        }),
        (c.prototype._getEndoBasis = function(t) {
          var e,
            n,
            r,
            i,
            o,
            s,
            u,
            c,
            l,
            f = this.n.ushrn(Math.floor(this.n.bitLength() / 2)),
            h = t,
            p = this.n.clone(),
            d = new a(1),
            m = new a(0),
            v = new a(0),
            y = new a(1),
            g = 0;
          while (0 !== h.cmpn(0)) {
            var b = p.div(h);
            (c = p.sub(b.mul(h))), (l = v.sub(b.mul(d)));
            var w = y.sub(b.mul(m));
            if (!r && c.cmp(f) < 0)
              (e = u.neg()), (n = d), (r = c.neg()), (i = l);
            else if (r && 2 === ++g) break;
            (u = c), (p = h), (h = c), (v = d), (d = l), (y = m), (m = w);
          }
          (o = c.neg()), (s = l);
          var _ = r.sqr().add(i.sqr()),
            x = o.sqr().add(s.sqr());
          return (
            x.cmp(_) >= 0 && ((o = e), (s = n)),
            r.negative && ((r = r.neg()), (i = i.neg())),
            o.negative && ((o = o.neg()), (s = s.neg())),
            [{ a: r, b: i }, { a: o, b: s }]
          );
        }),
        (c.prototype._endoSplit = function(t) {
          var e = this.endo.basis,
            n = e[0],
            r = e[1],
            i = r.b.mul(t).divRound(this.n),
            a = n.b
              .neg()
              .mul(t)
              .divRound(this.n),
            o = i.mul(n.a),
            s = a.mul(r.a),
            u = i.mul(n.b),
            c = a.mul(r.b),
            l = t.sub(o).sub(s),
            f = u.add(c).neg();
          return { k1: l, k2: f };
        }),
        (c.prototype.pointFromX = function(t, e) {
          (t = new a(t, 16)), t.red || (t = t.toRed(this.red));
          var n = t
              .redSqr()
              .redMul(t)
              .redIAdd(t.redMul(this.a))
              .redIAdd(this.b),
            r = n.redSqrt();
          if (
            0 !==
            r
              .redSqr()
              .redSub(n)
              .cmp(this.zero)
          )
            throw new Error("invalid point");
          var i = r.fromRed().isOdd();
          return ((e && !i) || (!e && i)) && (r = r.redNeg()), this.point(t, r);
        }),
        (c.prototype.validate = function(t) {
          if (t.inf) return !0;
          var e = t.x,
            n = t.y,
            r = this.a.redMul(e),
            i = e
              .redSqr()
              .redMul(e)
              .redIAdd(r)
              .redIAdd(this.b);
          return (
            0 ===
            n
              .redSqr()
              .redISub(i)
              .cmpn(0)
          );
        }),
        (c.prototype._endoWnafMulAdd = function(t, e, n) {
          for (
            var r = this._endoWnafT1, i = this._endoWnafT2, a = 0;
            a < t.length;
            a++
          ) {
            var o = this._endoSplit(e[a]),
              s = t[a],
              u = s._getBeta();
            o.k1.negative && (o.k1.ineg(), (s = s.neg(!0))),
              o.k2.negative && (o.k2.ineg(), (u = u.neg(!0))),
              (r[2 * a] = s),
              (r[2 * a + 1] = u),
              (i[2 * a] = o.k1),
              (i[2 * a + 1] = o.k2);
          }
          for (
            var c = this._wnafMulAdd(1, r, i, 2 * a, n), l = 0;
            l < 2 * a;
            l++
          )
            (r[l] = null), (i[l] = null);
          return c;
        }),
        o(l, s.BasePoint),
        (c.prototype.point = function(t, e, n) {
          return new l(this, t, e, n);
        }),
        (c.prototype.pointFromJSON = function(t, e) {
          return l.fromJSON(this, t, e);
        }),
        (l.prototype._getBeta = function() {
          if (this.curve.endo) {
            var t = this.precomputed;
            if (t && t.beta) return t.beta;
            var e = this.curve.point(
              this.x.redMul(this.curve.endo.beta),
              this.y
            );
            if (t) {
              var n = this.curve,
                r = function(t) {
                  return n.point(t.x.redMul(n.endo.beta), t.y);
                };
              (t.beta = e),
                (e.precomputed = {
                  beta: null,
                  naf: t.naf && { wnd: t.naf.wnd, points: t.naf.points.map(r) },
                  doubles: t.doubles && {
                    step: t.doubles.step,
                    points: t.doubles.points.map(r)
                  }
                });
            }
            return e;
          }
        }),
        (l.prototype.toJSON = function() {
          return this.precomputed
            ? [
                this.x,
                this.y,
                this.precomputed && {
                  doubles: this.precomputed.doubles && {
                    step: this.precomputed.doubles.step,
                    points: this.precomputed.doubles.points.slice(1)
                  },
                  naf: this.precomputed.naf && {
                    wnd: this.precomputed.naf.wnd,
                    points: this.precomputed.naf.points.slice(1)
                  }
                }
              ]
            : [this.x, this.y];
        }),
        (l.fromJSON = function(t, e, n) {
          "string" === typeof e && (e = JSON.parse(e));
          var r = t.point(e[0], e[1], n);
          if (!e[2]) return r;
          function i(e) {
            return t.point(e[0], e[1], n);
          }
          var a = e[2];
          return (
            (r.precomputed = {
              beta: null,
              doubles: a.doubles && {
                step: a.doubles.step,
                points: [r].concat(a.doubles.points.map(i))
              },
              naf: a.naf && {
                wnd: a.naf.wnd,
                points: [r].concat(a.naf.points.map(i))
              }
            }),
            r
          );
        }),
        (l.prototype.inspect = function() {
          return this.isInfinity()
            ? "<EC Point Infinity>"
            : "<EC Point x: " +
                this.x.fromRed().toString(16, 2) +
                " y: " +
                this.y.fromRed().toString(16, 2) +
                ">";
        }),
        (l.prototype.isInfinity = function() {
          return this.inf;
        }),
        (l.prototype.add = function(t) {
          if (this.inf) return t;
          if (t.inf) return this;
          if (this.eq(t)) return this.dbl();
          if (this.neg().eq(t)) return this.curve.point(null, null);
          if (0 === this.x.cmp(t.x)) return this.curve.point(null, null);
          var e = this.y.redSub(t.y);
          0 !== e.cmpn(0) && (e = e.redMul(this.x.redSub(t.x).redInvm()));
          var n = e
              .redSqr()
              .redISub(this.x)
              .redISub(t.x),
            r = e.redMul(this.x.redSub(n)).redISub(this.y);
          return this.curve.point(n, r);
        }),
        (l.prototype.dbl = function() {
          if (this.inf) return this;
          var t = this.y.redAdd(this.y);
          if (0 === t.cmpn(0)) return this.curve.point(null, null);
          var e = this.curve.a,
            n = this.x.redSqr(),
            r = t.redInvm(),
            i = n
              .redAdd(n)
              .redIAdd(n)
              .redIAdd(e)
              .redMul(r),
            a = i.redSqr().redISub(this.x.redAdd(this.x)),
            o = i.redMul(this.x.redSub(a)).redISub(this.y);
          return this.curve.point(a, o);
        }),
        (l.prototype.getX = function() {
          return this.x.fromRed();
        }),
        (l.prototype.getY = function() {
          return this.y.fromRed();
        }),
        (l.prototype.mul = function(t) {
          return (
            (t = new a(t, 16)),
            this._hasDoubles(t)
              ? this.curve._fixedNafMul(this, t)
              : this.curve.endo
              ? this.curve._endoWnafMulAdd([this], [t])
              : this.curve._wnafMul(this, t)
          );
        }),
        (l.prototype.mulAdd = function(t, e, n) {
          var r = [this, e],
            i = [t, n];
          return this.curve.endo
            ? this.curve._endoWnafMulAdd(r, i)
            : this.curve._wnafMulAdd(1, r, i, 2);
        }),
        (l.prototype.jmulAdd = function(t, e, n) {
          var r = [this, e],
            i = [t, n];
          return this.curve.endo
            ? this.curve._endoWnafMulAdd(r, i, !0)
            : this.curve._wnafMulAdd(1, r, i, 2, !0);
        }),
        (l.prototype.eq = function(t) {
          return (
            this === t ||
            (this.inf === t.inf &&
              (this.inf || (0 === this.x.cmp(t.x) && 0 === this.y.cmp(t.y))))
          );
        }),
        (l.prototype.neg = function(t) {
          if (this.inf) return this;
          var e = this.curve.point(this.x, this.y.redNeg());
          if (t && this.precomputed) {
            var n = this.precomputed,
              r = function(t) {
                return t.neg();
              };
            e.precomputed = {
              naf: n.naf && { wnd: n.naf.wnd, points: n.naf.points.map(r) },
              doubles: n.doubles && {
                step: n.doubles.step,
                points: n.doubles.points.map(r)
              }
            };
          }
          return e;
        }),
        (l.prototype.toJ = function() {
          if (this.inf) return this.curve.jpoint(null, null, null);
          var t = this.curve.jpoint(this.x, this.y, this.curve.one);
          return t;
        }),
        o(f, s.BasePoint),
        (c.prototype.jpoint = function(t, e, n) {
          return new f(this, t, e, n);
        }),
        (f.prototype.toP = function() {
          if (this.isInfinity()) return this.curve.point(null, null);
          var t = this.z.redInvm(),
            e = t.redSqr(),
            n = this.x.redMul(e),
            r = this.y.redMul(e).redMul(t);
          return this.curve.point(n, r);
        }),
        (f.prototype.neg = function() {
          return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
        }),
        (f.prototype.add = function(t) {
          if (this.isInfinity()) return t;
          if (t.isInfinity()) return this;
          var e = t.z.redSqr(),
            n = this.z.redSqr(),
            r = this.x.redMul(e),
            i = t.x.redMul(n),
            a = this.y.redMul(e.redMul(t.z)),
            o = t.y.redMul(n.redMul(this.z)),
            s = r.redSub(i),
            u = a.redSub(o);
          if (0 === s.cmpn(0))
            return 0 !== u.cmpn(0)
              ? this.curve.jpoint(null, null, null)
              : this.dbl();
          var c = s.redSqr(),
            l = c.redMul(s),
            f = r.redMul(c),
            h = u
              .redSqr()
              .redIAdd(l)
              .redISub(f)
              .redISub(f),
            p = u.redMul(f.redISub(h)).redISub(a.redMul(l)),
            d = this.z.redMul(t.z).redMul(s);
          return this.curve.jpoint(h, p, d);
        }),
        (f.prototype.mixedAdd = function(t) {
          if (this.isInfinity()) return t.toJ();
          if (t.isInfinity()) return this;
          var e = this.z.redSqr(),
            n = this.x,
            r = t.x.redMul(e),
            i = this.y,
            a = t.y.redMul(e).redMul(this.z),
            o = n.redSub(r),
            s = i.redSub(a);
          if (0 === o.cmpn(0))
            return 0 !== s.cmpn(0)
              ? this.curve.jpoint(null, null, null)
              : this.dbl();
          var u = o.redSqr(),
            c = u.redMul(o),
            l = n.redMul(u),
            f = s
              .redSqr()
              .redIAdd(c)
              .redISub(l)
              .redISub(l),
            h = s.redMul(l.redISub(f)).redISub(i.redMul(c)),
            p = this.z.redMul(o);
          return this.curve.jpoint(f, h, p);
        }),
        (f.prototype.dblp = function(t) {
          if (0 === t) return this;
          if (this.isInfinity()) return this;
          if (!t) return this.dbl();
          if (this.curve.zeroA || this.curve.threeA) {
            for (var e = this, n = 0; n < t; n++) e = e.dbl();
            return e;
          }
          var r = this.curve.a,
            i = this.curve.tinv,
            a = this.x,
            o = this.y,
            s = this.z,
            u = s.redSqr().redSqr(),
            c = o.redAdd(o);
          for (n = 0; n < t; n++) {
            var l = a.redSqr(),
              f = c.redSqr(),
              h = f.redSqr(),
              p = l
                .redAdd(l)
                .redIAdd(l)
                .redIAdd(r.redMul(u)),
              d = a.redMul(f),
              m = p.redSqr().redISub(d.redAdd(d)),
              v = d.redISub(m),
              y = p.redMul(v);
            y = y.redIAdd(y).redISub(h);
            var g = c.redMul(s);
            n + 1 < t && (u = u.redMul(h)), (a = m), (s = g), (c = y);
          }
          return this.curve.jpoint(a, c.redMul(i), s);
        }),
        (f.prototype.dbl = function() {
          return this.isInfinity()
            ? this
            : this.curve.zeroA
            ? this._zeroDbl()
            : this.curve.threeA
            ? this._threeDbl()
            : this._dbl();
        }),
        (f.prototype._zeroDbl = function() {
          var t, e, n;
          if (this.zOne) {
            var r = this.x.redSqr(),
              i = this.y.redSqr(),
              a = i.redSqr(),
              o = this.x
                .redAdd(i)
                .redSqr()
                .redISub(r)
                .redISub(a);
            o = o.redIAdd(o);
            var s = r.redAdd(r).redIAdd(r),
              u = s
                .redSqr()
                .redISub(o)
                .redISub(o),
              c = a.redIAdd(a);
            (c = c.redIAdd(c)),
              (c = c.redIAdd(c)),
              (t = u),
              (e = s.redMul(o.redISub(u)).redISub(c)),
              (n = this.y.redAdd(this.y));
          } else {
            var l = this.x.redSqr(),
              f = this.y.redSqr(),
              h = f.redSqr(),
              p = this.x
                .redAdd(f)
                .redSqr()
                .redISub(l)
                .redISub(h);
            p = p.redIAdd(p);
            var d = l.redAdd(l).redIAdd(l),
              m = d.redSqr(),
              v = h.redIAdd(h);
            (v = v.redIAdd(v)),
              (v = v.redIAdd(v)),
              (t = m.redISub(p).redISub(p)),
              (e = d.redMul(p.redISub(t)).redISub(v)),
              (n = this.y.redMul(this.z)),
              (n = n.redIAdd(n));
          }
          return this.curve.jpoint(t, e, n);
        }),
        (f.prototype._threeDbl = function() {
          var t, e, n;
          if (this.zOne) {
            var r = this.x.redSqr(),
              i = this.y.redSqr(),
              a = i.redSqr(),
              o = this.x
                .redAdd(i)
                .redSqr()
                .redISub(r)
                .redISub(a);
            o = o.redIAdd(o);
            var s = r
                .redAdd(r)
                .redIAdd(r)
                .redIAdd(this.curve.a),
              u = s
                .redSqr()
                .redISub(o)
                .redISub(o);
            t = u;
            var c = a.redIAdd(a);
            (c = c.redIAdd(c)),
              (c = c.redIAdd(c)),
              (e = s.redMul(o.redISub(u)).redISub(c)),
              (n = this.y.redAdd(this.y));
          } else {
            var l = this.z.redSqr(),
              f = this.y.redSqr(),
              h = this.x.redMul(f),
              p = this.x.redSub(l).redMul(this.x.redAdd(l));
            p = p.redAdd(p).redIAdd(p);
            var d = h.redIAdd(h);
            d = d.redIAdd(d);
            var m = d.redAdd(d);
            (t = p.redSqr().redISub(m)),
              (n = this.y
                .redAdd(this.z)
                .redSqr()
                .redISub(f)
                .redISub(l));
            var v = f.redSqr();
            (v = v.redIAdd(v)),
              (v = v.redIAdd(v)),
              (v = v.redIAdd(v)),
              (e = p.redMul(d.redISub(t)).redISub(v));
          }
          return this.curve.jpoint(t, e, n);
        }),
        (f.prototype._dbl = function() {
          var t = this.curve.a,
            e = this.x,
            n = this.y,
            r = this.z,
            i = r.redSqr().redSqr(),
            a = e.redSqr(),
            o = n.redSqr(),
            s = a
              .redAdd(a)
              .redIAdd(a)
              .redIAdd(t.redMul(i)),
            u = e.redAdd(e);
          u = u.redIAdd(u);
          var c = u.redMul(o),
            l = s.redSqr().redISub(c.redAdd(c)),
            f = c.redISub(l),
            h = o.redSqr();
          (h = h.redIAdd(h)), (h = h.redIAdd(h)), (h = h.redIAdd(h));
          var p = s.redMul(f).redISub(h),
            d = n.redAdd(n).redMul(r);
          return this.curve.jpoint(l, p, d);
        }),
        (f.prototype.trpl = function() {
          if (!this.curve.zeroA) return this.dbl().add(this);
          var t = this.x.redSqr(),
            e = this.y.redSqr(),
            n = this.z.redSqr(),
            r = e.redSqr(),
            i = t.redAdd(t).redIAdd(t),
            a = i.redSqr(),
            o = this.x
              .redAdd(e)
              .redSqr()
              .redISub(t)
              .redISub(r);
          (o = o.redIAdd(o)), (o = o.redAdd(o).redIAdd(o)), (o = o.redISub(a));
          var s = o.redSqr(),
            u = r.redIAdd(r);
          (u = u.redIAdd(u)), (u = u.redIAdd(u)), (u = u.redIAdd(u));
          var c = i
              .redIAdd(o)
              .redSqr()
              .redISub(a)
              .redISub(s)
              .redISub(u),
            l = e.redMul(c);
          (l = l.redIAdd(l)), (l = l.redIAdd(l));
          var f = this.x.redMul(s).redISub(l);
          (f = f.redIAdd(f)), (f = f.redIAdd(f));
          var h = this.y.redMul(c.redMul(u.redISub(c)).redISub(o.redMul(s)));
          (h = h.redIAdd(h)), (h = h.redIAdd(h)), (h = h.redIAdd(h));
          var p = this.z
            .redAdd(o)
            .redSqr()
            .redISub(n)
            .redISub(s);
          return this.curve.jpoint(f, h, p);
        }),
        (f.prototype.mul = function(t, e) {
          return (t = new a(t, e)), this.curve._wnafMul(this, t);
        }),
        (f.prototype.eq = function(t) {
          if ("affine" === t.type) return this.eq(t.toJ());
          if (this === t) return !0;
          var e = this.z.redSqr(),
            n = t.z.redSqr();
          if (
            0 !==
            this.x
              .redMul(n)
              .redISub(t.x.redMul(e))
              .cmpn(0)
          )
            return !1;
          var r = e.redMul(this.z),
            i = n.redMul(t.z);
          return (
            0 ===
            this.y
              .redMul(i)
              .redISub(t.y.redMul(r))
              .cmpn(0)
          );
        }),
        (f.prototype.eqXToP = function(t) {
          var e = this.z.redSqr(),
            n = t.toRed(this.curve.red).redMul(e);
          if (0 === this.x.cmp(n)) return !0;
          for (var r = t.clone(), i = this.curve.redN.redMul(e); ; ) {
            if ((r.iadd(this.curve.n), r.cmp(this.curve.p) >= 0)) return !1;
            if ((n.redIAdd(i), 0 === this.x.cmp(n))) return !0;
          }
        }),
        (f.prototype.inspect = function() {
          return this.isInfinity()
            ? "<EC JPoint Infinity>"
            : "<EC JPoint x: " +
                this.x.toString(16, 2) +
                " y: " +
                this.y.toString(16, 2) +
                " z: " +
                this.z.toString(16, 2) +
                ">";
        }),
        (f.prototype.isInfinity = function() {
          return 0 === this.z.cmpn(0);
        });
    },
    3337: function(t, e, n) {
      "use strict";
      var r = e;
      (r.version = n("2801").version),
        (r.utils = n("f3a3")),
        (r.rand = n("fdac")),
        (r.curve = n("4136")),
        (r.curves = n("0cbb")),
        (r.ec = n("b9a8")),
        (r.eddsa = n("945d"));
    },
    "335c": function(t, e, n) {
      var r = n("6b4c");
      t.exports = Object("z").propertyIsEnumerable(0)
        ? Object
        : function(t) {
            return "String" == r(t) ? t.split("") : Object(t);
          };
    },
    "33a4": function(t, e, n) {
      var r = n("84f2"),
        i = n("2b4c")("iterator"),
        a = Array.prototype;
      t.exports = function(t) {
        return void 0 !== t && (r.Array === t || a[i] === t);
      };
    },
    "343e": function(t, e, n) {
      var r = e;
      (r.der = n("3768")), (r.pem = n("85b3"));
    },
    3505: function(t, e, n) {
      var r = n("8707").Buffer,
        i = n("8c8a");
      function a(t, e, n) {
        var a = e.length,
          o = i(e, t._cache);
        return (
          (t._cache = t._cache.slice(a)),
          (t._prev = r.concat([t._prev, n ? e : o])),
          o
        );
      }
      e.encrypt = function(t, e, n) {
        var i,
          o = r.allocUnsafe(0);
        while (e.length) {
          if (
            (0 === t._cache.length &&
              ((t._cache = t._cipher.encryptBlock(t._prev)),
              (t._prev = r.allocUnsafe(0))),
            !(t._cache.length <= e.length))
          ) {
            o = r.concat([o, a(t, e, n)]);
            break;
          }
          (i = t._cache.length),
            (o = r.concat([o, a(t, e.slice(0, i), n)])),
            (e = e.slice(i));
        }
        return o;
      };
    },
    "35e8": function(t, e, n) {
      var r = n("d9f6"),
        i = n("aebd");
      t.exports = n("8e60")
        ? function(t, e, n) {
            return r.f(t, e, i(1, n));
          }
        : function(t, e, n) {
            return (t[e] = n), t;
          };
    },
    "36c3": function(t, e, n) {
      var r = n("335c"),
        i = n("25eb");
      t.exports = function(t) {
        return r(i(t));
      };
    },
    3702: function(t, e, n) {
      var r = n("481b"),
        i = n("5168")("iterator"),
        a = Array.prototype;
      t.exports = function(t) {
        return void 0 !== t && (r.Array === t || a[i] === t);
      };
    },
    3768: function(t, e, n) {
      var r = n("3fb5"),
        i = n("b639").Buffer,
        a = n("7f7a"),
        o = a.base,
        s = a.constants.der;
      function u(t) {
        (this.enc = "der"),
          (this.name = t.name),
          (this.entity = t),
          (this.tree = new c()),
          this.tree._init(t.body);
      }
      function c(t) {
        o.Node.call(this, "der", t);
      }
      function l(t) {
        return t < 10 ? "0" + t : t;
      }
      function f(t, e, n, r) {
        var i;
        if (
          ("seqof" === t ? (t = "seq") : "setof" === t && (t = "set"),
          s.tagByName.hasOwnProperty(t))
        )
          i = s.tagByName[t];
        else {
          if ("number" !== typeof t || (0 | t) !== t)
            return r.error("Unknown tag: " + t);
          i = t;
        }
        return i >= 31
          ? r.error("Multi-octet tag encoding unsupported")
          : (e || (i |= 32), (i |= s.tagClassByName[n || "universal"] << 6), i);
      }
      (t.exports = u),
        (u.prototype.encode = function(t, e) {
          return this.tree._encode(t, e).join();
        }),
        r(c, o.Node),
        (c.prototype._encodeComposite = function(t, e, n, r) {
          var a = f(t, e, n, this.reporter);
          if (r.length < 128) {
            var o = new i(2);
            return (
              (o[0] = a), (o[1] = r.length), this._createEncoderBuffer([o, r])
            );
          }
          for (var s = 1, u = r.length; u >= 256; u >>= 8) s++;
          o = new i(2 + s);
          (o[0] = a), (o[1] = 128 | s);
          u = 1 + s;
          for (var c = r.length; c > 0; u--, c >>= 8) o[u] = 255 & c;
          return this._createEncoderBuffer([o, r]);
        }),
        (c.prototype._encodeStr = function(t, e) {
          if ("bitstr" === e)
            return this._createEncoderBuffer([0 | t.unused, t.data]);
          if ("bmpstr" === e) {
            for (var n = new i(2 * t.length), r = 0; r < t.length; r++)
              n.writeUInt16BE(t.charCodeAt(r), 2 * r);
            return this._createEncoderBuffer(n);
          }
          return "numstr" === e
            ? this._isNumstr(t)
              ? this._createEncoderBuffer(t)
              : this.reporter.error(
                  "Encoding of string type: numstr supports only digits and space"
                )
            : "printstr" === e
            ? this._isPrintstr(t)
              ? this._createEncoderBuffer(t)
              : this.reporter.error(
                  "Encoding of string type: printstr supports only latin upper and lower case letters, digits, space, apostrophe, left and rigth parenthesis, plus sign, comma, hyphen, dot, slash, colon, equal sign, question mark"
                )
            : /str$/.test(e)
            ? this._createEncoderBuffer(t)
            : "objDesc" === e
            ? this._createEncoderBuffer(t)
            : this.reporter.error(
                "Encoding of string type: " + e + " unsupported"
              );
        }),
        (c.prototype._encodeObjid = function(t, e, n) {
          if ("string" === typeof t) {
            if (!e)
              return this.reporter.error(
                "string objid given, but no values map found"
              );
            if (!e.hasOwnProperty(t))
              return this.reporter.error("objid not found in values map");
            t = e[t].split(/[\s\.]+/g);
            for (var r = 0; r < t.length; r++) t[r] |= 0;
          } else if (Array.isArray(t)) {
            t = t.slice();
            for (r = 0; r < t.length; r++) t[r] |= 0;
          }
          if (!Array.isArray(t))
            return this.reporter.error(
              "objid() should be either array or string, got: " +
                JSON.stringify(t)
            );
          if (!n) {
            if (t[1] >= 40)
              return this.reporter.error("Second objid identifier OOB");
            t.splice(0, 2, 40 * t[0] + t[1]);
          }
          var a = 0;
          for (r = 0; r < t.length; r++) {
            var o = t[r];
            for (a++; o >= 128; o >>= 7) a++;
          }
          var s = new i(a),
            u = s.length - 1;
          for (r = t.length - 1; r >= 0; r--) {
            o = t[r];
            s[u--] = 127 & o;
            while ((o >>= 7) > 0) s[u--] = 128 | (127 & o);
          }
          return this._createEncoderBuffer(s);
        }),
        (c.prototype._encodeTime = function(t, e) {
          var n,
            r = new Date(t);
          return (
            "gentime" === e
              ? (n = [
                  l(r.getFullYear()),
                  l(r.getUTCMonth() + 1),
                  l(r.getUTCDate()),
                  l(r.getUTCHours()),
                  l(r.getUTCMinutes()),
                  l(r.getUTCSeconds()),
                  "Z"
                ].join(""))
              : "utctime" === e
              ? (n = [
                  l(r.getFullYear() % 100),
                  l(r.getUTCMonth() + 1),
                  l(r.getUTCDate()),
                  l(r.getUTCHours()),
                  l(r.getUTCMinutes()),
                  l(r.getUTCSeconds()),
                  "Z"
                ].join(""))
              : this.reporter.error(
                  "Encoding " + e + " time is not supported yet"
                ),
            this._encodeStr(n, "octstr")
          );
        }),
        (c.prototype._encodeNull = function() {
          return this._createEncoderBuffer("");
        }),
        (c.prototype._encodeInt = function(t, e) {
          if ("string" === typeof t) {
            if (!e)
              return this.reporter.error(
                "String int or enum given, but no values map"
              );
            if (!e.hasOwnProperty(t))
              return this.reporter.error(
                "Values map doesn't contain: " + JSON.stringify(t)
              );
            t = e[t];
          }
          if ("number" !== typeof t && !i.isBuffer(t)) {
            var n = t.toArray();
            !t.sign && 128 & n[0] && n.unshift(0), (t = new i(n));
          }
          if (i.isBuffer(t)) {
            var r = t.length;
            0 === t.length && r++;
            var a = new i(r);
            return (
              t.copy(a),
              0 === t.length && (a[0] = 0),
              this._createEncoderBuffer(a)
            );
          }
          if (t < 128) return this._createEncoderBuffer(t);
          if (t < 256) return this._createEncoderBuffer([0, t]);
          r = 1;
          for (var o = t; o >= 256; o >>= 8) r++;
          for (a = new Array(r), o = a.length - 1; o >= 0; o--)
            (a[o] = 255 & t), (t >>= 8);
          return (
            128 & a[0] && a.unshift(0), this._createEncoderBuffer(new i(a))
          );
        }),
        (c.prototype._encodeBool = function(t) {
          return this._createEncoderBuffer(t ? 255 : 0);
        }),
        (c.prototype._use = function(t, e) {
          return (
            "function" === typeof t && (t = t(e)), t._getEncoder("der").tree
          );
        }),
        (c.prototype._skipDefault = function(t, e, n) {
          var r,
            i = this._baseState;
          if (null === i["default"]) return !1;
          var a = t.join();
          if (
            (void 0 === i.defaultBuffer &&
              (i.defaultBuffer = this._encodeValue(i["default"], e, n).join()),
            a.length !== i.defaultBuffer.length)
          )
            return !1;
          for (r = 0; r < a.length; r++)
            if (a[r] !== i.defaultBuffer[r]) return !1;
          return !0;
        });
    },
    "37c8": function(t, e, n) {
      e.f = n("2b4c");
    },
    "380f": function(t, e, n) {
      "use strict";
      var r = n("3337"),
        i = r.utils,
        a = i.assert,
        o = i.parseBytes,
        s = i.cachedProperty;
      function u(t, e) {
        (this.eddsa = t),
          (this._secret = o(e.secret)),
          t.isPoint(e.pub) ? (this._pub = e.pub) : (this._pubBytes = o(e.pub));
      }
      (u.fromPublic = function(t, e) {
        return e instanceof u ? e : new u(t, { pub: e });
      }),
        (u.fromSecret = function(t, e) {
          return e instanceof u ? e : new u(t, { secret: e });
        }),
        (u.prototype.secret = function() {
          return this._secret;
        }),
        s(u, "pubBytes", function() {
          return this.eddsa.encodePoint(this.pub());
        }),
        s(u, "pub", function() {
          return this._pubBytes
            ? this.eddsa.decodePoint(this._pubBytes)
            : this.eddsa.g.mul(this.priv());
        }),
        s(u, "privBytes", function() {
          var t = this.eddsa,
            e = this.hash(),
            n = t.encodingLength - 1,
            r = e.slice(0, t.encodingLength);
          return (r[0] &= 248), (r[n] &= 127), (r[n] |= 64), r;
        }),
        s(u, "priv", function() {
          return this.eddsa.decodeInt(this.privBytes());
        }),
        s(u, "hash", function() {
          return this.eddsa
            .hash()
            .update(this.secret())
            .digest();
        }),
        s(u, "messagePrefix", function() {
          return this.hash().slice(this.eddsa.encodingLength);
        }),
        (u.prototype.sign = function(t) {
          return (
            a(this._secret, "KeyPair can only verify"), this.eddsa.sign(t, this)
          );
        }),
        (u.prototype.verify = function(t, e) {
          return this.eddsa.verify(t, e, this);
        }),
        (u.prototype.getSecret = function(t) {
          return (
            a(this._secret, "KeyPair is public only"),
            i.encode(this.secret(), t)
          );
        }),
        (u.prototype.getPublic = function(t) {
          return i.encode(this.pubBytes(), t);
        }),
        (t.exports = u);
    },
    "38fd": function(t, e, n) {
      var r = n("69a8"),
        i = n("4bf8"),
        a = n("613b")("IE_PROTO"),
        o = Object.prototype;
      t.exports =
        Object.getPrototypeOf ||
        function(t) {
          return (
            (t = i(t)),
            r(t, a)
              ? t[a]
              : "function" == typeof t.constructor && t instanceof t.constructor
              ? t.constructor.prototype
              : t instanceof Object
              ? o
              : null
          );
        };
    },
    "399f": function(t, e, n) {
      (function(t) {
        (function(t, e) {
          "use strict";
          function r(t, e) {
            if (!t) throw new Error(e || "Assertion failed");
          }
          function i(t, e) {
            t.super_ = e;
            var n = function() {};
            (n.prototype = e.prototype),
              (t.prototype = new n()),
              (t.prototype.constructor = t);
          }
          function a(t, e, n) {
            if (a.isBN(t)) return t;
            (this.negative = 0),
              (this.words = null),
              (this.length = 0),
              (this.red = null),
              null !== t &&
                (("le" !== e && "be" !== e) || ((n = e), (e = 10)),
                this._init(t || 0, e || 10, n || "be"));
          }
          var o;
          "object" === typeof t ? (t.exports = a) : (e.BN = a),
            (a.BN = a),
            (a.wordSize = 26);
          try {
            o = n(3).Buffer;
          } catch (O) {}
          function s(t, e, n) {
            for (var r = 0, i = Math.min(t.length, n), a = e; a < i; a++) {
              var o = t.charCodeAt(a) - 48;
              (r <<= 4),
                (r |=
                  o >= 49 && o <= 54
                    ? o - 49 + 10
                    : o >= 17 && o <= 22
                    ? o - 17 + 10
                    : 15 & o);
            }
            return r;
          }
          function u(t, e, n, r) {
            for (var i = 0, a = Math.min(t.length, n), o = e; o < a; o++) {
              var s = t.charCodeAt(o) - 48;
              (i *= r),
                (i += s >= 49 ? s - 49 + 10 : s >= 17 ? s - 17 + 10 : s);
            }
            return i;
          }
          (a.isBN = function(t) {
            return (
              t instanceof a ||
              (null !== t &&
                "object" === typeof t &&
                t.constructor.wordSize === a.wordSize &&
                Array.isArray(t.words))
            );
          }),
            (a.max = function(t, e) {
              return t.cmp(e) > 0 ? t : e;
            }),
            (a.min = function(t, e) {
              return t.cmp(e) < 0 ? t : e;
            }),
            (a.prototype._init = function(t, e, n) {
              if ("number" === typeof t) return this._initNumber(t, e, n);
              if ("object" === typeof t) return this._initArray(t, e, n);
              "hex" === e && (e = 16),
                r(e === (0 | e) && e >= 2 && e <= 36),
                (t = t.toString().replace(/\s+/g, ""));
              var i = 0;
              "-" === t[0] && i++,
                16 === e ? this._parseHex(t, i) : this._parseBase(t, e, i),
                "-" === t[0] && (this.negative = 1),
                this.strip(),
                "le" === n && this._initArray(this.toArray(), e, n);
            }),
            (a.prototype._initNumber = function(t, e, n) {
              t < 0 && ((this.negative = 1), (t = -t)),
                t < 67108864
                  ? ((this.words = [67108863 & t]), (this.length = 1))
                  : t < 4503599627370496
                  ? ((this.words = [67108863 & t, (t / 67108864) & 67108863]),
                    (this.length = 2))
                  : (r(t < 9007199254740992),
                    (this.words = [67108863 & t, (t / 67108864) & 67108863, 1]),
                    (this.length = 3)),
                "le" === n && this._initArray(this.toArray(), e, n);
            }),
            (a.prototype._initArray = function(t, e, n) {
              if ((r("number" === typeof t.length), t.length <= 0))
                return (this.words = [0]), (this.length = 1), this;
              (this.length = Math.ceil(t.length / 3)),
                (this.words = new Array(this.length));
              for (var i = 0; i < this.length; i++) this.words[i] = 0;
              var a,
                o,
                s = 0;
              if ("be" === n)
                for (i = t.length - 1, a = 0; i >= 0; i -= 3)
                  (o = t[i] | (t[i - 1] << 8) | (t[i - 2] << 16)),
                    (this.words[a] |= (o << s) & 67108863),
                    (this.words[a + 1] = (o >>> (26 - s)) & 67108863),
                    (s += 24),
                    s >= 26 && ((s -= 26), a++);
              else if ("le" === n)
                for (i = 0, a = 0; i < t.length; i += 3)
                  (o = t[i] | (t[i + 1] << 8) | (t[i + 2] << 16)),
                    (this.words[a] |= (o << s) & 67108863),
                    (this.words[a + 1] = (o >>> (26 - s)) & 67108863),
                    (s += 24),
                    s >= 26 && ((s -= 26), a++);
              return this.strip();
            }),
            (a.prototype._parseHex = function(t, e) {
              (this.length = Math.ceil((t.length - e) / 6)),
                (this.words = new Array(this.length));
              for (var n = 0; n < this.length; n++) this.words[n] = 0;
              var r,
                i,
                a = 0;
              for (n = t.length - 6, r = 0; n >= e; n -= 6)
                (i = s(t, n, n + 6)),
                  (this.words[r] |= (i << a) & 67108863),
                  (this.words[r + 1] |= (i >>> (26 - a)) & 4194303),
                  (a += 24),
                  a >= 26 && ((a -= 26), r++);
              n + 6 !== e &&
                ((i = s(t, e, n + 6)),
                (this.words[r] |= (i << a) & 67108863),
                (this.words[r + 1] |= (i >>> (26 - a)) & 4194303)),
                this.strip();
            }),
            (a.prototype._parseBase = function(t, e, n) {
              (this.words = [0]), (this.length = 1);
              for (var r = 0, i = 1; i <= 67108863; i *= e) r++;
              r--, (i = (i / e) | 0);
              for (
                var a = t.length - n,
                  o = a % r,
                  s = Math.min(a, a - o) + n,
                  c = 0,
                  l = n;
                l < s;
                l += r
              )
                (c = u(t, l, l + r, e)),
                  this.imuln(i),
                  this.words[0] + c < 67108864
                    ? (this.words[0] += c)
                    : this._iaddn(c);
              if (0 !== o) {
                var f = 1;
                for (c = u(t, l, t.length, e), l = 0; l < o; l++) f *= e;
                this.imuln(f),
                  this.words[0] + c < 67108864
                    ? (this.words[0] += c)
                    : this._iaddn(c);
              }
            }),
            (a.prototype.copy = function(t) {
              t.words = new Array(this.length);
              for (var e = 0; e < this.length; e++) t.words[e] = this.words[e];
              (t.length = this.length),
                (t.negative = this.negative),
                (t.red = this.red);
            }),
            (a.prototype.clone = function() {
              var t = new a(null);
              return this.copy(t), t;
            }),
            (a.prototype._expand = function(t) {
              while (this.length < t) this.words[this.length++] = 0;
              return this;
            }),
            (a.prototype.strip = function() {
              while (this.length > 1 && 0 === this.words[this.length - 1])
                this.length--;
              return this._normSign();
            }),
            (a.prototype._normSign = function() {
              return (
                1 === this.length && 0 === this.words[0] && (this.negative = 0),
                this
              );
            }),
            (a.prototype.inspect = function() {
              return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">";
            });
          var c = [
              "",
              "0",
              "00",
              "000",
              "0000",
              "00000",
              "000000",
              "0000000",
              "00000000",
              "000000000",
              "0000000000",
              "00000000000",
              "000000000000",
              "0000000000000",
              "00000000000000",
              "000000000000000",
              "0000000000000000",
              "00000000000000000",
              "000000000000000000",
              "0000000000000000000",
              "00000000000000000000",
              "000000000000000000000",
              "0000000000000000000000",
              "00000000000000000000000",
              "000000000000000000000000",
              "0000000000000000000000000"
            ],
            l = [
              0,
              0,
              25,
              16,
              12,
              11,
              10,
              9,
              8,
              8,
              7,
              7,
              7,
              7,
              6,
              6,
              6,
              6,
              6,
              6,
              6,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5,
              5
            ],
            f = [
              0,
              0,
              33554432,
              43046721,
              16777216,
              48828125,
              60466176,
              40353607,
              16777216,
              43046721,
              1e7,
              19487171,
              35831808,
              62748517,
              7529536,
              11390625,
              16777216,
              24137569,
              34012224,
              47045881,
              64e6,
              4084101,
              5153632,
              6436343,
              7962624,
              9765625,
              11881376,
              14348907,
              17210368,
              20511149,
              243e5,
              28629151,
              33554432,
              39135393,
              45435424,
              52521875,
              60466176
            ];
          function h(t) {
            for (var e = new Array(t.bitLength()), n = 0; n < e.length; n++) {
              var r = (n / 26) | 0,
                i = n % 26;
              e[n] = (t.words[r] & (1 << i)) >>> i;
            }
            return e;
          }
          function p(t, e, n) {
            n.negative = e.negative ^ t.negative;
            var r = (t.length + e.length) | 0;
            (n.length = r), (r = (r - 1) | 0);
            var i = 0 | t.words[0],
              a = 0 | e.words[0],
              o = i * a,
              s = 67108863 & o,
              u = (o / 67108864) | 0;
            n.words[0] = s;
            for (var c = 1; c < r; c++) {
              for (
                var l = u >>> 26,
                  f = 67108863 & u,
                  h = Math.min(c, e.length - 1),
                  p = Math.max(0, c - t.length + 1);
                p <= h;
                p++
              ) {
                var d = (c - p) | 0;
                (i = 0 | t.words[d]),
                  (a = 0 | e.words[p]),
                  (o = i * a + f),
                  (l += (o / 67108864) | 0),
                  (f = 67108863 & o);
              }
              (n.words[c] = 0 | f), (u = 0 | l);
            }
            return 0 !== u ? (n.words[c] = 0 | u) : n.length--, n.strip();
          }
          (a.prototype.toString = function(t, e) {
            var n;
            if (((t = t || 10), (e = 0 | e || 1), 16 === t || "hex" === t)) {
              n = "";
              for (var i = 0, a = 0, o = 0; o < this.length; o++) {
                var s = this.words[o],
                  u = (16777215 & ((s << i) | a)).toString(16);
                (a = (s >>> (24 - i)) & 16777215),
                  (n =
                    0 !== a || o !== this.length - 1
                      ? c[6 - u.length] + u + n
                      : u + n),
                  (i += 2),
                  i >= 26 && ((i -= 26), o--);
              }
              0 !== a && (n = a.toString(16) + n);
              while (n.length % e !== 0) n = "0" + n;
              return 0 !== this.negative && (n = "-" + n), n;
            }
            if (t === (0 | t) && t >= 2 && t <= 36) {
              var h = l[t],
                p = f[t];
              n = "";
              var d = this.clone();
              d.negative = 0;
              while (!d.isZero()) {
                var m = d.modn(p).toString(t);
                (d = d.idivn(p)),
                  (n = d.isZero() ? m + n : c[h - m.length] + m + n);
              }
              this.isZero() && (n = "0" + n);
              while (n.length % e !== 0) n = "0" + n;
              return 0 !== this.negative && (n = "-" + n), n;
            }
            r(!1, "Base should be between 2 and 36");
          }),
            (a.prototype.toNumber = function() {
              var t = this.words[0];
              return (
                2 === this.length
                  ? (t += 67108864 * this.words[1])
                  : 3 === this.length && 1 === this.words[2]
                  ? (t += 4503599627370496 + 67108864 * this.words[1])
                  : this.length > 2 &&
                    r(!1, "Number can only safely store up to 53 bits"),
                0 !== this.negative ? -t : t
              );
            }),
            (a.prototype.toJSON = function() {
              return this.toString(16);
            }),
            (a.prototype.toBuffer = function(t, e) {
              return r("undefined" !== typeof o), this.toArrayLike(o, t, e);
            }),
            (a.prototype.toArray = function(t, e) {
              return this.toArrayLike(Array, t, e);
            }),
            (a.prototype.toArrayLike = function(t, e, n) {
              var i = this.byteLength(),
                a = n || Math.max(1, i);
              r(i <= a, "byte array longer than desired length"),
                r(a > 0, "Requested array length <= 0"),
                this.strip();
              var o,
                s,
                u = "le" === e,
                c = new t(a),
                l = this.clone();
              if (u) {
                for (s = 0; !l.isZero(); s++)
                  (o = l.andln(255)), l.iushrn(8), (c[s] = o);
                for (; s < a; s++) c[s] = 0;
              } else {
                for (s = 0; s < a - i; s++) c[s] = 0;
                for (s = 0; !l.isZero(); s++)
                  (o = l.andln(255)), l.iushrn(8), (c[a - s - 1] = o);
              }
              return c;
            }),
            Math.clz32
              ? (a.prototype._countBits = function(t) {
                  return 32 - Math.clz32(t);
                })
              : (a.prototype._countBits = function(t) {
                  var e = t,
                    n = 0;
                  return (
                    e >= 4096 && ((n += 13), (e >>>= 13)),
                    e >= 64 && ((n += 7), (e >>>= 7)),
                    e >= 8 && ((n += 4), (e >>>= 4)),
                    e >= 2 && ((n += 2), (e >>>= 2)),
                    n + e
                  );
                }),
            (a.prototype._zeroBits = function(t) {
              if (0 === t) return 26;
              var e = t,
                n = 0;
              return (
                0 === (8191 & e) && ((n += 13), (e >>>= 13)),
                0 === (127 & e) && ((n += 7), (e >>>= 7)),
                0 === (15 & e) && ((n += 4), (e >>>= 4)),
                0 === (3 & e) && ((n += 2), (e >>>= 2)),
                0 === (1 & e) && n++,
                n
              );
            }),
            (a.prototype.bitLength = function() {
              var t = this.words[this.length - 1],
                e = this._countBits(t);
              return 26 * (this.length - 1) + e;
            }),
            (a.prototype.zeroBits = function() {
              if (this.isZero()) return 0;
              for (var t = 0, e = 0; e < this.length; e++) {
                var n = this._zeroBits(this.words[e]);
                if (((t += n), 26 !== n)) break;
              }
              return t;
            }),
            (a.prototype.byteLength = function() {
              return Math.ceil(this.bitLength() / 8);
            }),
            (a.prototype.toTwos = function(t) {
              return 0 !== this.negative
                ? this.abs()
                    .inotn(t)
                    .iaddn(1)
                : this.clone();
            }),
            (a.prototype.fromTwos = function(t) {
              return this.testn(t - 1)
                ? this.notn(t)
                    .iaddn(1)
                    .ineg()
                : this.clone();
            }),
            (a.prototype.isNeg = function() {
              return 0 !== this.negative;
            }),
            (a.prototype.neg = function() {
              return this.clone().ineg();
            }),
            (a.prototype.ineg = function() {
              return this.isZero() || (this.negative ^= 1), this;
            }),
            (a.prototype.iuor = function(t) {
              while (this.length < t.length) this.words[this.length++] = 0;
              for (var e = 0; e < t.length; e++)
                this.words[e] = this.words[e] | t.words[e];
              return this.strip();
            }),
            (a.prototype.ior = function(t) {
              return r(0 === (this.negative | t.negative)), this.iuor(t);
            }),
            (a.prototype.or = function(t) {
              return this.length > t.length
                ? this.clone().ior(t)
                : t.clone().ior(this);
            }),
            (a.prototype.uor = function(t) {
              return this.length > t.length
                ? this.clone().iuor(t)
                : t.clone().iuor(this);
            }),
            (a.prototype.iuand = function(t) {
              var e;
              e = this.length > t.length ? t : this;
              for (var n = 0; n < e.length; n++)
                this.words[n] = this.words[n] & t.words[n];
              return (this.length = e.length), this.strip();
            }),
            (a.prototype.iand = function(t) {
              return r(0 === (this.negative | t.negative)), this.iuand(t);
            }),
            (a.prototype.and = function(t) {
              return this.length > t.length
                ? this.clone().iand(t)
                : t.clone().iand(this);
            }),
            (a.prototype.uand = function(t) {
              return this.length > t.length
                ? this.clone().iuand(t)
                : t.clone().iuand(this);
            }),
            (a.prototype.iuxor = function(t) {
              var e, n;
              this.length > t.length
                ? ((e = this), (n = t))
                : ((e = t), (n = this));
              for (var r = 0; r < n.length; r++)
                this.words[r] = e.words[r] ^ n.words[r];
              if (this !== e)
                for (; r < e.length; r++) this.words[r] = e.words[r];
              return (this.length = e.length), this.strip();
            }),
            (a.prototype.ixor = function(t) {
              return r(0 === (this.negative | t.negative)), this.iuxor(t);
            }),
            (a.prototype.xor = function(t) {
              return this.length > t.length
                ? this.clone().ixor(t)
                : t.clone().ixor(this);
            }),
            (a.prototype.uxor = function(t) {
              return this.length > t.length
                ? this.clone().iuxor(t)
                : t.clone().iuxor(this);
            }),
            (a.prototype.inotn = function(t) {
              r("number" === typeof t && t >= 0);
              var e = 0 | Math.ceil(t / 26),
                n = t % 26;
              this._expand(e), n > 0 && e--;
              for (var i = 0; i < e; i++)
                this.words[i] = 67108863 & ~this.words[i];
              return (
                n > 0 &&
                  (this.words[i] = ~this.words[i] & (67108863 >> (26 - n))),
                this.strip()
              );
            }),
            (a.prototype.notn = function(t) {
              return this.clone().inotn(t);
            }),
            (a.prototype.setn = function(t, e) {
              r("number" === typeof t && t >= 0);
              var n = (t / 26) | 0,
                i = t % 26;
              return (
                this._expand(n + 1),
                (this.words[n] = e
                  ? this.words[n] | (1 << i)
                  : this.words[n] & ~(1 << i)),
                this.strip()
              );
            }),
            (a.prototype.iadd = function(t) {
              var e, n, r;
              if (0 !== this.negative && 0 === t.negative)
                return (
                  (this.negative = 0),
                  (e = this.isub(t)),
                  (this.negative ^= 1),
                  this._normSign()
                );
              if (0 === this.negative && 0 !== t.negative)
                return (
                  (t.negative = 0),
                  (e = this.isub(t)),
                  (t.negative = 1),
                  e._normSign()
                );
              this.length > t.length
                ? ((n = this), (r = t))
                : ((n = t), (r = this));
              for (var i = 0, a = 0; a < r.length; a++)
                (e = (0 | n.words[a]) + (0 | r.words[a]) + i),
                  (this.words[a] = 67108863 & e),
                  (i = e >>> 26);
              for (; 0 !== i && a < n.length; a++)
                (e = (0 | n.words[a]) + i),
                  (this.words[a] = 67108863 & e),
                  (i = e >>> 26);
              if (((this.length = n.length), 0 !== i))
                (this.words[this.length] = i), this.length++;
              else if (n !== this)
                for (; a < n.length; a++) this.words[a] = n.words[a];
              return this;
            }),
            (a.prototype.add = function(t) {
              var e;
              return 0 !== t.negative && 0 === this.negative
                ? ((t.negative = 0), (e = this.sub(t)), (t.negative ^= 1), e)
                : 0 === t.negative && 0 !== this.negative
                ? ((this.negative = 0),
                  (e = t.sub(this)),
                  (this.negative = 1),
                  e)
                : this.length > t.length
                ? this.clone().iadd(t)
                : t.clone().iadd(this);
            }),
            (a.prototype.isub = function(t) {
              if (0 !== t.negative) {
                t.negative = 0;
                var e = this.iadd(t);
                return (t.negative = 1), e._normSign();
              }
              if (0 !== this.negative)
                return (
                  (this.negative = 0),
                  this.iadd(t),
                  (this.negative = 1),
                  this._normSign()
                );
              var n,
                r,
                i = this.cmp(t);
              if (0 === i)
                return (
                  (this.negative = 0),
                  (this.length = 1),
                  (this.words[0] = 0),
                  this
                );
              i > 0 ? ((n = this), (r = t)) : ((n = t), (r = this));
              for (var a = 0, o = 0; o < r.length; o++)
                (e = (0 | n.words[o]) - (0 | r.words[o]) + a),
                  (a = e >> 26),
                  (this.words[o] = 67108863 & e);
              for (; 0 !== a && o < n.length; o++)
                (e = (0 | n.words[o]) + a),
                  (a = e >> 26),
                  (this.words[o] = 67108863 & e);
              if (0 === a && o < n.length && n !== this)
                for (; o < n.length; o++) this.words[o] = n.words[o];
              return (
                (this.length = Math.max(this.length, o)),
                n !== this && (this.negative = 1),
                this.strip()
              );
            }),
            (a.prototype.sub = function(t) {
              return this.clone().isub(t);
            });
          var d = function(t, e, n) {
            var r,
              i,
              a,
              o = t.words,
              s = e.words,
              u = n.words,
              c = 0,
              l = 0 | o[0],
              f = 8191 & l,
              h = l >>> 13,
              p = 0 | o[1],
              d = 8191 & p,
              m = p >>> 13,
              v = 0 | o[2],
              y = 8191 & v,
              g = v >>> 13,
              b = 0 | o[3],
              w = 8191 & b,
              _ = b >>> 13,
              x = 0 | o[4],
              E = 8191 & x,
              S = x >>> 13,
              N = 0 | o[5],
              O = 8191 & N,
              I = N >>> 13,
              C = 0 | o[6],
              A = 8191 & C,
              k = C >>> 13,
              P = 0 | o[7],
              T = 8191 & P,
              R = P >>> 13,
              D = 0 | o[8],
              M = 8191 & D,
              j = D >>> 13,
              L = 0 | o[9],
              B = 8191 & L,
              F = L >>> 13,
              z = 0 | s[0],
              U = 8191 & z,
              V = z >>> 13,
              W = 0 | s[1],
              $ = 8191 & W,
              q = W >>> 13,
              H = 0 | s[2],
              K = 8191 & H,
              G = H >>> 13,
              X = 0 | s[3],
              J = 8191 & X,
              Y = X >>> 13,
              Q = 0 | s[4],
              Z = 8191 & Q,
              tt = Q >>> 13,
              et = 0 | s[5],
              nt = 8191 & et,
              rt = et >>> 13,
              it = 0 | s[6],
              at = 8191 & it,
              ot = it >>> 13,
              st = 0 | s[7],
              ut = 8191 & st,
              ct = st >>> 13,
              lt = 0 | s[8],
              ft = 8191 & lt,
              ht = lt >>> 13,
              pt = 0 | s[9],
              dt = 8191 & pt,
              mt = pt >>> 13;
            (n.negative = t.negative ^ e.negative),
              (n.length = 19),
              (r = Math.imul(f, U)),
              (i = Math.imul(f, V)),
              (i = (i + Math.imul(h, U)) | 0),
              (a = Math.imul(h, V));
            var vt = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (vt >>> 26)) | 0),
              (vt &= 67108863),
              (r = Math.imul(d, U)),
              (i = Math.imul(d, V)),
              (i = (i + Math.imul(m, U)) | 0),
              (a = Math.imul(m, V)),
              (r = (r + Math.imul(f, $)) | 0),
              (i = (i + Math.imul(f, q)) | 0),
              (i = (i + Math.imul(h, $)) | 0),
              (a = (a + Math.imul(h, q)) | 0);
            var yt = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (yt >>> 26)) | 0),
              (yt &= 67108863),
              (r = Math.imul(y, U)),
              (i = Math.imul(y, V)),
              (i = (i + Math.imul(g, U)) | 0),
              (a = Math.imul(g, V)),
              (r = (r + Math.imul(d, $)) | 0),
              (i = (i + Math.imul(d, q)) | 0),
              (i = (i + Math.imul(m, $)) | 0),
              (a = (a + Math.imul(m, q)) | 0),
              (r = (r + Math.imul(f, K)) | 0),
              (i = (i + Math.imul(f, G)) | 0),
              (i = (i + Math.imul(h, K)) | 0),
              (a = (a + Math.imul(h, G)) | 0);
            var gt = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (gt >>> 26)) | 0),
              (gt &= 67108863),
              (r = Math.imul(w, U)),
              (i = Math.imul(w, V)),
              (i = (i + Math.imul(_, U)) | 0),
              (a = Math.imul(_, V)),
              (r = (r + Math.imul(y, $)) | 0),
              (i = (i + Math.imul(y, q)) | 0),
              (i = (i + Math.imul(g, $)) | 0),
              (a = (a + Math.imul(g, q)) | 0),
              (r = (r + Math.imul(d, K)) | 0),
              (i = (i + Math.imul(d, G)) | 0),
              (i = (i + Math.imul(m, K)) | 0),
              (a = (a + Math.imul(m, G)) | 0),
              (r = (r + Math.imul(f, J)) | 0),
              (i = (i + Math.imul(f, Y)) | 0),
              (i = (i + Math.imul(h, J)) | 0),
              (a = (a + Math.imul(h, Y)) | 0);
            var bt = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (bt >>> 26)) | 0),
              (bt &= 67108863),
              (r = Math.imul(E, U)),
              (i = Math.imul(E, V)),
              (i = (i + Math.imul(S, U)) | 0),
              (a = Math.imul(S, V)),
              (r = (r + Math.imul(w, $)) | 0),
              (i = (i + Math.imul(w, q)) | 0),
              (i = (i + Math.imul(_, $)) | 0),
              (a = (a + Math.imul(_, q)) | 0),
              (r = (r + Math.imul(y, K)) | 0),
              (i = (i + Math.imul(y, G)) | 0),
              (i = (i + Math.imul(g, K)) | 0),
              (a = (a + Math.imul(g, G)) | 0),
              (r = (r + Math.imul(d, J)) | 0),
              (i = (i + Math.imul(d, Y)) | 0),
              (i = (i + Math.imul(m, J)) | 0),
              (a = (a + Math.imul(m, Y)) | 0),
              (r = (r + Math.imul(f, Z)) | 0),
              (i = (i + Math.imul(f, tt)) | 0),
              (i = (i + Math.imul(h, Z)) | 0),
              (a = (a + Math.imul(h, tt)) | 0);
            var wt = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (wt >>> 26)) | 0),
              (wt &= 67108863),
              (r = Math.imul(O, U)),
              (i = Math.imul(O, V)),
              (i = (i + Math.imul(I, U)) | 0),
              (a = Math.imul(I, V)),
              (r = (r + Math.imul(E, $)) | 0),
              (i = (i + Math.imul(E, q)) | 0),
              (i = (i + Math.imul(S, $)) | 0),
              (a = (a + Math.imul(S, q)) | 0),
              (r = (r + Math.imul(w, K)) | 0),
              (i = (i + Math.imul(w, G)) | 0),
              (i = (i + Math.imul(_, K)) | 0),
              (a = (a + Math.imul(_, G)) | 0),
              (r = (r + Math.imul(y, J)) | 0),
              (i = (i + Math.imul(y, Y)) | 0),
              (i = (i + Math.imul(g, J)) | 0),
              (a = (a + Math.imul(g, Y)) | 0),
              (r = (r + Math.imul(d, Z)) | 0),
              (i = (i + Math.imul(d, tt)) | 0),
              (i = (i + Math.imul(m, Z)) | 0),
              (a = (a + Math.imul(m, tt)) | 0),
              (r = (r + Math.imul(f, nt)) | 0),
              (i = (i + Math.imul(f, rt)) | 0),
              (i = (i + Math.imul(h, nt)) | 0),
              (a = (a + Math.imul(h, rt)) | 0);
            var _t = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (_t >>> 26)) | 0),
              (_t &= 67108863),
              (r = Math.imul(A, U)),
              (i = Math.imul(A, V)),
              (i = (i + Math.imul(k, U)) | 0),
              (a = Math.imul(k, V)),
              (r = (r + Math.imul(O, $)) | 0),
              (i = (i + Math.imul(O, q)) | 0),
              (i = (i + Math.imul(I, $)) | 0),
              (a = (a + Math.imul(I, q)) | 0),
              (r = (r + Math.imul(E, K)) | 0),
              (i = (i + Math.imul(E, G)) | 0),
              (i = (i + Math.imul(S, K)) | 0),
              (a = (a + Math.imul(S, G)) | 0),
              (r = (r + Math.imul(w, J)) | 0),
              (i = (i + Math.imul(w, Y)) | 0),
              (i = (i + Math.imul(_, J)) | 0),
              (a = (a + Math.imul(_, Y)) | 0),
              (r = (r + Math.imul(y, Z)) | 0),
              (i = (i + Math.imul(y, tt)) | 0),
              (i = (i + Math.imul(g, Z)) | 0),
              (a = (a + Math.imul(g, tt)) | 0),
              (r = (r + Math.imul(d, nt)) | 0),
              (i = (i + Math.imul(d, rt)) | 0),
              (i = (i + Math.imul(m, nt)) | 0),
              (a = (a + Math.imul(m, rt)) | 0),
              (r = (r + Math.imul(f, at)) | 0),
              (i = (i + Math.imul(f, ot)) | 0),
              (i = (i + Math.imul(h, at)) | 0),
              (a = (a + Math.imul(h, ot)) | 0);
            var xt = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (xt >>> 26)) | 0),
              (xt &= 67108863),
              (r = Math.imul(T, U)),
              (i = Math.imul(T, V)),
              (i = (i + Math.imul(R, U)) | 0),
              (a = Math.imul(R, V)),
              (r = (r + Math.imul(A, $)) | 0),
              (i = (i + Math.imul(A, q)) | 0),
              (i = (i + Math.imul(k, $)) | 0),
              (a = (a + Math.imul(k, q)) | 0),
              (r = (r + Math.imul(O, K)) | 0),
              (i = (i + Math.imul(O, G)) | 0),
              (i = (i + Math.imul(I, K)) | 0),
              (a = (a + Math.imul(I, G)) | 0),
              (r = (r + Math.imul(E, J)) | 0),
              (i = (i + Math.imul(E, Y)) | 0),
              (i = (i + Math.imul(S, J)) | 0),
              (a = (a + Math.imul(S, Y)) | 0),
              (r = (r + Math.imul(w, Z)) | 0),
              (i = (i + Math.imul(w, tt)) | 0),
              (i = (i + Math.imul(_, Z)) | 0),
              (a = (a + Math.imul(_, tt)) | 0),
              (r = (r + Math.imul(y, nt)) | 0),
              (i = (i + Math.imul(y, rt)) | 0),
              (i = (i + Math.imul(g, nt)) | 0),
              (a = (a + Math.imul(g, rt)) | 0),
              (r = (r + Math.imul(d, at)) | 0),
              (i = (i + Math.imul(d, ot)) | 0),
              (i = (i + Math.imul(m, at)) | 0),
              (a = (a + Math.imul(m, ot)) | 0),
              (r = (r + Math.imul(f, ut)) | 0),
              (i = (i + Math.imul(f, ct)) | 0),
              (i = (i + Math.imul(h, ut)) | 0),
              (a = (a + Math.imul(h, ct)) | 0);
            var Et = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (Et >>> 26)) | 0),
              (Et &= 67108863),
              (r = Math.imul(M, U)),
              (i = Math.imul(M, V)),
              (i = (i + Math.imul(j, U)) | 0),
              (a = Math.imul(j, V)),
              (r = (r + Math.imul(T, $)) | 0),
              (i = (i + Math.imul(T, q)) | 0),
              (i = (i + Math.imul(R, $)) | 0),
              (a = (a + Math.imul(R, q)) | 0),
              (r = (r + Math.imul(A, K)) | 0),
              (i = (i + Math.imul(A, G)) | 0),
              (i = (i + Math.imul(k, K)) | 0),
              (a = (a + Math.imul(k, G)) | 0),
              (r = (r + Math.imul(O, J)) | 0),
              (i = (i + Math.imul(O, Y)) | 0),
              (i = (i + Math.imul(I, J)) | 0),
              (a = (a + Math.imul(I, Y)) | 0),
              (r = (r + Math.imul(E, Z)) | 0),
              (i = (i + Math.imul(E, tt)) | 0),
              (i = (i + Math.imul(S, Z)) | 0),
              (a = (a + Math.imul(S, tt)) | 0),
              (r = (r + Math.imul(w, nt)) | 0),
              (i = (i + Math.imul(w, rt)) | 0),
              (i = (i + Math.imul(_, nt)) | 0),
              (a = (a + Math.imul(_, rt)) | 0),
              (r = (r + Math.imul(y, at)) | 0),
              (i = (i + Math.imul(y, ot)) | 0),
              (i = (i + Math.imul(g, at)) | 0),
              (a = (a + Math.imul(g, ot)) | 0),
              (r = (r + Math.imul(d, ut)) | 0),
              (i = (i + Math.imul(d, ct)) | 0),
              (i = (i + Math.imul(m, ut)) | 0),
              (a = (a + Math.imul(m, ct)) | 0),
              (r = (r + Math.imul(f, ft)) | 0),
              (i = (i + Math.imul(f, ht)) | 0),
              (i = (i + Math.imul(h, ft)) | 0),
              (a = (a + Math.imul(h, ht)) | 0);
            var St = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (St >>> 26)) | 0),
              (St &= 67108863),
              (r = Math.imul(B, U)),
              (i = Math.imul(B, V)),
              (i = (i + Math.imul(F, U)) | 0),
              (a = Math.imul(F, V)),
              (r = (r + Math.imul(M, $)) | 0),
              (i = (i + Math.imul(M, q)) | 0),
              (i = (i + Math.imul(j, $)) | 0),
              (a = (a + Math.imul(j, q)) | 0),
              (r = (r + Math.imul(T, K)) | 0),
              (i = (i + Math.imul(T, G)) | 0),
              (i = (i + Math.imul(R, K)) | 0),
              (a = (a + Math.imul(R, G)) | 0),
              (r = (r + Math.imul(A, J)) | 0),
              (i = (i + Math.imul(A, Y)) | 0),
              (i = (i + Math.imul(k, J)) | 0),
              (a = (a + Math.imul(k, Y)) | 0),
              (r = (r + Math.imul(O, Z)) | 0),
              (i = (i + Math.imul(O, tt)) | 0),
              (i = (i + Math.imul(I, Z)) | 0),
              (a = (a + Math.imul(I, tt)) | 0),
              (r = (r + Math.imul(E, nt)) | 0),
              (i = (i + Math.imul(E, rt)) | 0),
              (i = (i + Math.imul(S, nt)) | 0),
              (a = (a + Math.imul(S, rt)) | 0),
              (r = (r + Math.imul(w, at)) | 0),
              (i = (i + Math.imul(w, ot)) | 0),
              (i = (i + Math.imul(_, at)) | 0),
              (a = (a + Math.imul(_, ot)) | 0),
              (r = (r + Math.imul(y, ut)) | 0),
              (i = (i + Math.imul(y, ct)) | 0),
              (i = (i + Math.imul(g, ut)) | 0),
              (a = (a + Math.imul(g, ct)) | 0),
              (r = (r + Math.imul(d, ft)) | 0),
              (i = (i + Math.imul(d, ht)) | 0),
              (i = (i + Math.imul(m, ft)) | 0),
              (a = (a + Math.imul(m, ht)) | 0),
              (r = (r + Math.imul(f, dt)) | 0),
              (i = (i + Math.imul(f, mt)) | 0),
              (i = (i + Math.imul(h, dt)) | 0),
              (a = (a + Math.imul(h, mt)) | 0);
            var Nt = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (Nt >>> 26)) | 0),
              (Nt &= 67108863),
              (r = Math.imul(B, $)),
              (i = Math.imul(B, q)),
              (i = (i + Math.imul(F, $)) | 0),
              (a = Math.imul(F, q)),
              (r = (r + Math.imul(M, K)) | 0),
              (i = (i + Math.imul(M, G)) | 0),
              (i = (i + Math.imul(j, K)) | 0),
              (a = (a + Math.imul(j, G)) | 0),
              (r = (r + Math.imul(T, J)) | 0),
              (i = (i + Math.imul(T, Y)) | 0),
              (i = (i + Math.imul(R, J)) | 0),
              (a = (a + Math.imul(R, Y)) | 0),
              (r = (r + Math.imul(A, Z)) | 0),
              (i = (i + Math.imul(A, tt)) | 0),
              (i = (i + Math.imul(k, Z)) | 0),
              (a = (a + Math.imul(k, tt)) | 0),
              (r = (r + Math.imul(O, nt)) | 0),
              (i = (i + Math.imul(O, rt)) | 0),
              (i = (i + Math.imul(I, nt)) | 0),
              (a = (a + Math.imul(I, rt)) | 0),
              (r = (r + Math.imul(E, at)) | 0),
              (i = (i + Math.imul(E, ot)) | 0),
              (i = (i + Math.imul(S, at)) | 0),
              (a = (a + Math.imul(S, ot)) | 0),
              (r = (r + Math.imul(w, ut)) | 0),
              (i = (i + Math.imul(w, ct)) | 0),
              (i = (i + Math.imul(_, ut)) | 0),
              (a = (a + Math.imul(_, ct)) | 0),
              (r = (r + Math.imul(y, ft)) | 0),
              (i = (i + Math.imul(y, ht)) | 0),
              (i = (i + Math.imul(g, ft)) | 0),
              (a = (a + Math.imul(g, ht)) | 0),
              (r = (r + Math.imul(d, dt)) | 0),
              (i = (i + Math.imul(d, mt)) | 0),
              (i = (i + Math.imul(m, dt)) | 0),
              (a = (a + Math.imul(m, mt)) | 0);
            var Ot = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (Ot >>> 26)) | 0),
              (Ot &= 67108863),
              (r = Math.imul(B, K)),
              (i = Math.imul(B, G)),
              (i = (i + Math.imul(F, K)) | 0),
              (a = Math.imul(F, G)),
              (r = (r + Math.imul(M, J)) | 0),
              (i = (i + Math.imul(M, Y)) | 0),
              (i = (i + Math.imul(j, J)) | 0),
              (a = (a + Math.imul(j, Y)) | 0),
              (r = (r + Math.imul(T, Z)) | 0),
              (i = (i + Math.imul(T, tt)) | 0),
              (i = (i + Math.imul(R, Z)) | 0),
              (a = (a + Math.imul(R, tt)) | 0),
              (r = (r + Math.imul(A, nt)) | 0),
              (i = (i + Math.imul(A, rt)) | 0),
              (i = (i + Math.imul(k, nt)) | 0),
              (a = (a + Math.imul(k, rt)) | 0),
              (r = (r + Math.imul(O, at)) | 0),
              (i = (i + Math.imul(O, ot)) | 0),
              (i = (i + Math.imul(I, at)) | 0),
              (a = (a + Math.imul(I, ot)) | 0),
              (r = (r + Math.imul(E, ut)) | 0),
              (i = (i + Math.imul(E, ct)) | 0),
              (i = (i + Math.imul(S, ut)) | 0),
              (a = (a + Math.imul(S, ct)) | 0),
              (r = (r + Math.imul(w, ft)) | 0),
              (i = (i + Math.imul(w, ht)) | 0),
              (i = (i + Math.imul(_, ft)) | 0),
              (a = (a + Math.imul(_, ht)) | 0),
              (r = (r + Math.imul(y, dt)) | 0),
              (i = (i + Math.imul(y, mt)) | 0),
              (i = (i + Math.imul(g, dt)) | 0),
              (a = (a + Math.imul(g, mt)) | 0);
            var It = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (It >>> 26)) | 0),
              (It &= 67108863),
              (r = Math.imul(B, J)),
              (i = Math.imul(B, Y)),
              (i = (i + Math.imul(F, J)) | 0),
              (a = Math.imul(F, Y)),
              (r = (r + Math.imul(M, Z)) | 0),
              (i = (i + Math.imul(M, tt)) | 0),
              (i = (i + Math.imul(j, Z)) | 0),
              (a = (a + Math.imul(j, tt)) | 0),
              (r = (r + Math.imul(T, nt)) | 0),
              (i = (i + Math.imul(T, rt)) | 0),
              (i = (i + Math.imul(R, nt)) | 0),
              (a = (a + Math.imul(R, rt)) | 0),
              (r = (r + Math.imul(A, at)) | 0),
              (i = (i + Math.imul(A, ot)) | 0),
              (i = (i + Math.imul(k, at)) | 0),
              (a = (a + Math.imul(k, ot)) | 0),
              (r = (r + Math.imul(O, ut)) | 0),
              (i = (i + Math.imul(O, ct)) | 0),
              (i = (i + Math.imul(I, ut)) | 0),
              (a = (a + Math.imul(I, ct)) | 0),
              (r = (r + Math.imul(E, ft)) | 0),
              (i = (i + Math.imul(E, ht)) | 0),
              (i = (i + Math.imul(S, ft)) | 0),
              (a = (a + Math.imul(S, ht)) | 0),
              (r = (r + Math.imul(w, dt)) | 0),
              (i = (i + Math.imul(w, mt)) | 0),
              (i = (i + Math.imul(_, dt)) | 0),
              (a = (a + Math.imul(_, mt)) | 0);
            var Ct = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (Ct >>> 26)) | 0),
              (Ct &= 67108863),
              (r = Math.imul(B, Z)),
              (i = Math.imul(B, tt)),
              (i = (i + Math.imul(F, Z)) | 0),
              (a = Math.imul(F, tt)),
              (r = (r + Math.imul(M, nt)) | 0),
              (i = (i + Math.imul(M, rt)) | 0),
              (i = (i + Math.imul(j, nt)) | 0),
              (a = (a + Math.imul(j, rt)) | 0),
              (r = (r + Math.imul(T, at)) | 0),
              (i = (i + Math.imul(T, ot)) | 0),
              (i = (i + Math.imul(R, at)) | 0),
              (a = (a + Math.imul(R, ot)) | 0),
              (r = (r + Math.imul(A, ut)) | 0),
              (i = (i + Math.imul(A, ct)) | 0),
              (i = (i + Math.imul(k, ut)) | 0),
              (a = (a + Math.imul(k, ct)) | 0),
              (r = (r + Math.imul(O, ft)) | 0),
              (i = (i + Math.imul(O, ht)) | 0),
              (i = (i + Math.imul(I, ft)) | 0),
              (a = (a + Math.imul(I, ht)) | 0),
              (r = (r + Math.imul(E, dt)) | 0),
              (i = (i + Math.imul(E, mt)) | 0),
              (i = (i + Math.imul(S, dt)) | 0),
              (a = (a + Math.imul(S, mt)) | 0);
            var At = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (At >>> 26)) | 0),
              (At &= 67108863),
              (r = Math.imul(B, nt)),
              (i = Math.imul(B, rt)),
              (i = (i + Math.imul(F, nt)) | 0),
              (a = Math.imul(F, rt)),
              (r = (r + Math.imul(M, at)) | 0),
              (i = (i + Math.imul(M, ot)) | 0),
              (i = (i + Math.imul(j, at)) | 0),
              (a = (a + Math.imul(j, ot)) | 0),
              (r = (r + Math.imul(T, ut)) | 0),
              (i = (i + Math.imul(T, ct)) | 0),
              (i = (i + Math.imul(R, ut)) | 0),
              (a = (a + Math.imul(R, ct)) | 0),
              (r = (r + Math.imul(A, ft)) | 0),
              (i = (i + Math.imul(A, ht)) | 0),
              (i = (i + Math.imul(k, ft)) | 0),
              (a = (a + Math.imul(k, ht)) | 0),
              (r = (r + Math.imul(O, dt)) | 0),
              (i = (i + Math.imul(O, mt)) | 0),
              (i = (i + Math.imul(I, dt)) | 0),
              (a = (a + Math.imul(I, mt)) | 0);
            var kt = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (kt >>> 26)) | 0),
              (kt &= 67108863),
              (r = Math.imul(B, at)),
              (i = Math.imul(B, ot)),
              (i = (i + Math.imul(F, at)) | 0),
              (a = Math.imul(F, ot)),
              (r = (r + Math.imul(M, ut)) | 0),
              (i = (i + Math.imul(M, ct)) | 0),
              (i = (i + Math.imul(j, ut)) | 0),
              (a = (a + Math.imul(j, ct)) | 0),
              (r = (r + Math.imul(T, ft)) | 0),
              (i = (i + Math.imul(T, ht)) | 0),
              (i = (i + Math.imul(R, ft)) | 0),
              (a = (a + Math.imul(R, ht)) | 0),
              (r = (r + Math.imul(A, dt)) | 0),
              (i = (i + Math.imul(A, mt)) | 0),
              (i = (i + Math.imul(k, dt)) | 0),
              (a = (a + Math.imul(k, mt)) | 0);
            var Pt = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (Pt >>> 26)) | 0),
              (Pt &= 67108863),
              (r = Math.imul(B, ut)),
              (i = Math.imul(B, ct)),
              (i = (i + Math.imul(F, ut)) | 0),
              (a = Math.imul(F, ct)),
              (r = (r + Math.imul(M, ft)) | 0),
              (i = (i + Math.imul(M, ht)) | 0),
              (i = (i + Math.imul(j, ft)) | 0),
              (a = (a + Math.imul(j, ht)) | 0),
              (r = (r + Math.imul(T, dt)) | 0),
              (i = (i + Math.imul(T, mt)) | 0),
              (i = (i + Math.imul(R, dt)) | 0),
              (a = (a + Math.imul(R, mt)) | 0);
            var Tt = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (Tt >>> 26)) | 0),
              (Tt &= 67108863),
              (r = Math.imul(B, ft)),
              (i = Math.imul(B, ht)),
              (i = (i + Math.imul(F, ft)) | 0),
              (a = Math.imul(F, ht)),
              (r = (r + Math.imul(M, dt)) | 0),
              (i = (i + Math.imul(M, mt)) | 0),
              (i = (i + Math.imul(j, dt)) | 0),
              (a = (a + Math.imul(j, mt)) | 0);
            var Rt = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            (c = (((a + (i >>> 13)) | 0) + (Rt >>> 26)) | 0),
              (Rt &= 67108863),
              (r = Math.imul(B, dt)),
              (i = Math.imul(B, mt)),
              (i = (i + Math.imul(F, dt)) | 0),
              (a = Math.imul(F, mt));
            var Dt = (((c + r) | 0) + ((8191 & i) << 13)) | 0;
            return (
              (c = (((a + (i >>> 13)) | 0) + (Dt >>> 26)) | 0),
              (Dt &= 67108863),
              (u[0] = vt),
              (u[1] = yt),
              (u[2] = gt),
              (u[3] = bt),
              (u[4] = wt),
              (u[5] = _t),
              (u[6] = xt),
              (u[7] = Et),
              (u[8] = St),
              (u[9] = Nt),
              (u[10] = Ot),
              (u[11] = It),
              (u[12] = Ct),
              (u[13] = At),
              (u[14] = kt),
              (u[15] = Pt),
              (u[16] = Tt),
              (u[17] = Rt),
              (u[18] = Dt),
              0 !== c && ((u[19] = c), n.length++),
              n
            );
          };
          function m(t, e, n) {
            (n.negative = e.negative ^ t.negative),
              (n.length = t.length + e.length);
            for (var r = 0, i = 0, a = 0; a < n.length - 1; a++) {
              var o = i;
              i = 0;
              for (
                var s = 67108863 & r,
                  u = Math.min(a, e.length - 1),
                  c = Math.max(0, a - t.length + 1);
                c <= u;
                c++
              ) {
                var l = a - c,
                  f = 0 | t.words[l],
                  h = 0 | e.words[c],
                  p = f * h,
                  d = 67108863 & p;
                (o = (o + ((p / 67108864) | 0)) | 0),
                  (d = (d + s) | 0),
                  (s = 67108863 & d),
                  (o = (o + (d >>> 26)) | 0),
                  (i += o >>> 26),
                  (o &= 67108863);
              }
              (n.words[a] = s), (r = o), (o = i);
            }
            return 0 !== r ? (n.words[a] = r) : n.length--, n.strip();
          }
          function v(t, e, n) {
            var r = new y();
            return r.mulp(t, e, n);
          }
          function y(t, e) {
            (this.x = t), (this.y = e);
          }
          Math.imul || (d = p),
            (a.prototype.mulTo = function(t, e) {
              var n,
                r = this.length + t.length;
              return (
                (n =
                  10 === this.length && 10 === t.length
                    ? d(this, t, e)
                    : r < 63
                    ? p(this, t, e)
                    : r < 1024
                    ? m(this, t, e)
                    : v(this, t, e)),
                n
              );
            }),
            (y.prototype.makeRBT = function(t) {
              for (
                var e = new Array(t), n = a.prototype._countBits(t) - 1, r = 0;
                r < t;
                r++
              )
                e[r] = this.revBin(r, n, t);
              return e;
            }),
            (y.prototype.revBin = function(t, e, n) {
              if (0 === t || t === n - 1) return t;
              for (var r = 0, i = 0; i < e; i++)
                (r |= (1 & t) << (e - i - 1)), (t >>= 1);
              return r;
            }),
            (y.prototype.permute = function(t, e, n, r, i, a) {
              for (var o = 0; o < a; o++) (r[o] = e[t[o]]), (i[o] = n[t[o]]);
            }),
            (y.prototype.transform = function(t, e, n, r, i, a) {
              this.permute(a, t, e, n, r, i);
              for (var o = 1; o < i; o <<= 1)
                for (
                  var s = o << 1,
                    u = Math.cos((2 * Math.PI) / s),
                    c = Math.sin((2 * Math.PI) / s),
                    l = 0;
                  l < i;
                  l += s
                )
                  for (var f = u, h = c, p = 0; p < o; p++) {
                    var d = n[l + p],
                      m = r[l + p],
                      v = n[l + p + o],
                      y = r[l + p + o],
                      g = f * v - h * y;
                    (y = f * y + h * v),
                      (v = g),
                      (n[l + p] = d + v),
                      (r[l + p] = m + y),
                      (n[l + p + o] = d - v),
                      (r[l + p + o] = m - y),
                      p !== s &&
                        ((g = u * f - c * h), (h = u * h + c * f), (f = g));
                  }
            }),
            (y.prototype.guessLen13b = function(t, e) {
              var n = 1 | Math.max(e, t),
                r = 1 & n,
                i = 0;
              for (n = (n / 2) | 0; n; n >>>= 1) i++;
              return 1 << (i + 1 + r);
            }),
            (y.prototype.conjugate = function(t, e, n) {
              if (!(n <= 1))
                for (var r = 0; r < n / 2; r++) {
                  var i = t[r];
                  (t[r] = t[n - r - 1]),
                    (t[n - r - 1] = i),
                    (i = e[r]),
                    (e[r] = -e[n - r - 1]),
                    (e[n - r - 1] = -i);
                }
            }),
            (y.prototype.normalize13b = function(t, e) {
              for (var n = 0, r = 0; r < e / 2; r++) {
                var i =
                  8192 * Math.round(t[2 * r + 1] / e) +
                  Math.round(t[2 * r] / e) +
                  n;
                (t[r] = 67108863 & i),
                  (n = i < 67108864 ? 0 : (i / 67108864) | 0);
              }
              return t;
            }),
            (y.prototype.convert13b = function(t, e, n, i) {
              for (var a = 0, o = 0; o < e; o++)
                (a += 0 | t[o]),
                  (n[2 * o] = 8191 & a),
                  (a >>>= 13),
                  (n[2 * o + 1] = 8191 & a),
                  (a >>>= 13);
              for (o = 2 * e; o < i; ++o) n[o] = 0;
              r(0 === a), r(0 === (-8192 & a));
            }),
            (y.prototype.stub = function(t) {
              for (var e = new Array(t), n = 0; n < t; n++) e[n] = 0;
              return e;
            }),
            (y.prototype.mulp = function(t, e, n) {
              var r = 2 * this.guessLen13b(t.length, e.length),
                i = this.makeRBT(r),
                a = this.stub(r),
                o = new Array(r),
                s = new Array(r),
                u = new Array(r),
                c = new Array(r),
                l = new Array(r),
                f = new Array(r),
                h = n.words;
              (h.length = r),
                this.convert13b(t.words, t.length, o, r),
                this.convert13b(e.words, e.length, c, r),
                this.transform(o, a, s, u, r, i),
                this.transform(c, a, l, f, r, i);
              for (var p = 0; p < r; p++) {
                var d = s[p] * l[p] - u[p] * f[p];
                (u[p] = s[p] * f[p] + u[p] * l[p]), (s[p] = d);
              }
              return (
                this.conjugate(s, u, r),
                this.transform(s, u, h, a, r, i),
                this.conjugate(h, a, r),
                this.normalize13b(h, r),
                (n.negative = t.negative ^ e.negative),
                (n.length = t.length + e.length),
                n.strip()
              );
            }),
            (a.prototype.mul = function(t) {
              var e = new a(null);
              return (
                (e.words = new Array(this.length + t.length)), this.mulTo(t, e)
              );
            }),
            (a.prototype.mulf = function(t) {
              var e = new a(null);
              return (
                (e.words = new Array(this.length + t.length)), v(this, t, e)
              );
            }),
            (a.prototype.imul = function(t) {
              return this.clone().mulTo(t, this);
            }),
            (a.prototype.imuln = function(t) {
              r("number" === typeof t), r(t < 67108864);
              for (var e = 0, n = 0; n < this.length; n++) {
                var i = (0 | this.words[n]) * t,
                  a = (67108863 & i) + (67108863 & e);
                (e >>= 26),
                  (e += (i / 67108864) | 0),
                  (e += a >>> 26),
                  (this.words[n] = 67108863 & a);
              }
              return 0 !== e && ((this.words[n] = e), this.length++), this;
            }),
            (a.prototype.muln = function(t) {
              return this.clone().imuln(t);
            }),
            (a.prototype.sqr = function() {
              return this.mul(this);
            }),
            (a.prototype.isqr = function() {
              return this.imul(this.clone());
            }),
            (a.prototype.pow = function(t) {
              var e = h(t);
              if (0 === e.length) return new a(1);
              for (var n = this, r = 0; r < e.length; r++, n = n.sqr())
                if (0 !== e[r]) break;
              if (++r < e.length)
                for (var i = n.sqr(); r < e.length; r++, i = i.sqr())
                  0 !== e[r] && (n = n.mul(i));
              return n;
            }),
            (a.prototype.iushln = function(t) {
              r("number" === typeof t && t >= 0);
              var e,
                n = t % 26,
                i = (t - n) / 26,
                a = (67108863 >>> (26 - n)) << (26 - n);
              if (0 !== n) {
                var o = 0;
                for (e = 0; e < this.length; e++) {
                  var s = this.words[e] & a,
                    u = ((0 | this.words[e]) - s) << n;
                  (this.words[e] = u | o), (o = s >>> (26 - n));
                }
                o && ((this.words[e] = o), this.length++);
              }
              if (0 !== i) {
                for (e = this.length - 1; e >= 0; e--)
                  this.words[e + i] = this.words[e];
                for (e = 0; e < i; e++) this.words[e] = 0;
                this.length += i;
              }
              return this.strip();
            }),
            (a.prototype.ishln = function(t) {
              return r(0 === this.negative), this.iushln(t);
            }),
            (a.prototype.iushrn = function(t, e, n) {
              var i;
              r("number" === typeof t && t >= 0),
                (i = e ? (e - (e % 26)) / 26 : 0);
              var a = t % 26,
                o = Math.min((t - a) / 26, this.length),
                s = 67108863 ^ ((67108863 >>> a) << a),
                u = n;
              if (((i -= o), (i = Math.max(0, i)), u)) {
                for (var c = 0; c < o; c++) u.words[c] = this.words[c];
                u.length = o;
              }
              if (0 === o);
              else if (this.length > o)
                for (this.length -= o, c = 0; c < this.length; c++)
                  this.words[c] = this.words[c + o];
              else (this.words[0] = 0), (this.length = 1);
              var l = 0;
              for (c = this.length - 1; c >= 0 && (0 !== l || c >= i); c--) {
                var f = 0 | this.words[c];
                (this.words[c] = (l << (26 - a)) | (f >>> a)), (l = f & s);
              }
              return (
                u && 0 !== l && (u.words[u.length++] = l),
                0 === this.length && ((this.words[0] = 0), (this.length = 1)),
                this.strip()
              );
            }),
            (a.prototype.ishrn = function(t, e, n) {
              return r(0 === this.negative), this.iushrn(t, e, n);
            }),
            (a.prototype.shln = function(t) {
              return this.clone().ishln(t);
            }),
            (a.prototype.ushln = function(t) {
              return this.clone().iushln(t);
            }),
            (a.prototype.shrn = function(t) {
              return this.clone().ishrn(t);
            }),
            (a.prototype.ushrn = function(t) {
              return this.clone().iushrn(t);
            }),
            (a.prototype.testn = function(t) {
              r("number" === typeof t && t >= 0);
              var e = t % 26,
                n = (t - e) / 26,
                i = 1 << e;
              if (this.length <= n) return !1;
              var a = this.words[n];
              return !!(a & i);
            }),
            (a.prototype.imaskn = function(t) {
              r("number" === typeof t && t >= 0);
              var e = t % 26,
                n = (t - e) / 26;
              if (
                (r(
                  0 === this.negative,
                  "imaskn works only with positive numbers"
                ),
                this.length <= n)
              )
                return this;
              if (
                (0 !== e && n++,
                (this.length = Math.min(n, this.length)),
                0 !== e)
              ) {
                var i = 67108863 ^ ((67108863 >>> e) << e);
                this.words[this.length - 1] &= i;
              }
              return this.strip();
            }),
            (a.prototype.maskn = function(t) {
              return this.clone().imaskn(t);
            }),
            (a.prototype.iaddn = function(t) {
              return (
                r("number" === typeof t),
                r(t < 67108864),
                t < 0
                  ? this.isubn(-t)
                  : 0 !== this.negative
                  ? 1 === this.length && (0 | this.words[0]) < t
                    ? ((this.words[0] = t - (0 | this.words[0])),
                      (this.negative = 0),
                      this)
                    : ((this.negative = 0),
                      this.isubn(t),
                      (this.negative = 1),
                      this)
                  : this._iaddn(t)
              );
            }),
            (a.prototype._iaddn = function(t) {
              this.words[0] += t;
              for (var e = 0; e < this.length && this.words[e] >= 67108864; e++)
                (this.words[e] -= 67108864),
                  e === this.length - 1
                    ? (this.words[e + 1] = 1)
                    : this.words[e + 1]++;
              return (this.length = Math.max(this.length, e + 1)), this;
            }),
            (a.prototype.isubn = function(t) {
              if ((r("number" === typeof t), r(t < 67108864), t < 0))
                return this.iaddn(-t);
              if (0 !== this.negative)
                return (
                  (this.negative = 0), this.iaddn(t), (this.negative = 1), this
                );
              if (
                ((this.words[0] -= t), 1 === this.length && this.words[0] < 0)
              )
                (this.words[0] = -this.words[0]), (this.negative = 1);
              else
                for (var e = 0; e < this.length && this.words[e] < 0; e++)
                  (this.words[e] += 67108864), (this.words[e + 1] -= 1);
              return this.strip();
            }),
            (a.prototype.addn = function(t) {
              return this.clone().iaddn(t);
            }),
            (a.prototype.subn = function(t) {
              return this.clone().isubn(t);
            }),
            (a.prototype.iabs = function() {
              return (this.negative = 0), this;
            }),
            (a.prototype.abs = function() {
              return this.clone().iabs();
            }),
            (a.prototype._ishlnsubmul = function(t, e, n) {
              var i,
                a,
                o = t.length + n;
              this._expand(o);
              var s = 0;
              for (i = 0; i < t.length; i++) {
                a = (0 | this.words[i + n]) + s;
                var u = (0 | t.words[i]) * e;
                (a -= 67108863 & u),
                  (s = (a >> 26) - ((u / 67108864) | 0)),
                  (this.words[i + n] = 67108863 & a);
              }
              for (; i < this.length - n; i++)
                (a = (0 | this.words[i + n]) + s),
                  (s = a >> 26),
                  (this.words[i + n] = 67108863 & a);
              if (0 === s) return this.strip();
              for (r(-1 === s), s = 0, i = 0; i < this.length; i++)
                (a = -(0 | this.words[i]) + s),
                  (s = a >> 26),
                  (this.words[i] = 67108863 & a);
              return (this.negative = 1), this.strip();
            }),
            (a.prototype._wordDiv = function(t, e) {
              var n = this.length - t.length,
                r = this.clone(),
                i = t,
                o = 0 | i.words[i.length - 1],
                s = this._countBits(o);
              (n = 26 - s),
                0 !== n &&
                  ((i = i.ushln(n)),
                  r.iushln(n),
                  (o = 0 | i.words[i.length - 1]));
              var u,
                c = r.length - i.length;
              if ("mod" !== e) {
                (u = new a(null)),
                  (u.length = c + 1),
                  (u.words = new Array(u.length));
                for (var l = 0; l < u.length; l++) u.words[l] = 0;
              }
              var f = r.clone()._ishlnsubmul(i, 1, c);
              0 === f.negative && ((r = f), u && (u.words[c] = 1));
              for (var h = c - 1; h >= 0; h--) {
                var p =
                  67108864 * (0 | r.words[i.length + h]) +
                  (0 | r.words[i.length + h - 1]);
                (p = Math.min((p / o) | 0, 67108863)), r._ishlnsubmul(i, p, h);
                while (0 !== r.negative)
                  p--,
                    (r.negative = 0),
                    r._ishlnsubmul(i, 1, h),
                    r.isZero() || (r.negative ^= 1);
                u && (u.words[h] = p);
              }
              return (
                u && u.strip(),
                r.strip(),
                "div" !== e && 0 !== n && r.iushrn(n),
                { div: u || null, mod: r }
              );
            }),
            (a.prototype.divmod = function(t, e, n) {
              return (
                r(!t.isZero()),
                this.isZero()
                  ? { div: new a(0), mod: new a(0) }
                  : 0 !== this.negative && 0 === t.negative
                  ? ((s = this.neg().divmod(t, e)),
                    "mod" !== e && (i = s.div.neg()),
                    "div" !== e &&
                      ((o = s.mod.neg()), n && 0 !== o.negative && o.iadd(t)),
                    { div: i, mod: o })
                  : 0 === this.negative && 0 !== t.negative
                  ? ((s = this.divmod(t.neg(), e)),
                    "mod" !== e && (i = s.div.neg()),
                    { div: i, mod: s.mod })
                  : 0 !== (this.negative & t.negative)
                  ? ((s = this.neg().divmod(t.neg(), e)),
                    "div" !== e &&
                      ((o = s.mod.neg()), n && 0 !== o.negative && o.isub(t)),
                    { div: s.div, mod: o })
                  : t.length > this.length || this.cmp(t) < 0
                  ? { div: new a(0), mod: this }
                  : 1 === t.length
                  ? "div" === e
                    ? { div: this.divn(t.words[0]), mod: null }
                    : "mod" === e
                    ? { div: null, mod: new a(this.modn(t.words[0])) }
                    : {
                        div: this.divn(t.words[0]),
                        mod: new a(this.modn(t.words[0]))
                      }
                  : this._wordDiv(t, e)
              );
              var i, o, s;
            }),
            (a.prototype.div = function(t) {
              return this.divmod(t, "div", !1).div;
            }),
            (a.prototype.mod = function(t) {
              return this.divmod(t, "mod", !1).mod;
            }),
            (a.prototype.umod = function(t) {
              return this.divmod(t, "mod", !0).mod;
            }),
            (a.prototype.divRound = function(t) {
              var e = this.divmod(t);
              if (e.mod.isZero()) return e.div;
              var n = 0 !== e.div.negative ? e.mod.isub(t) : e.mod,
                r = t.ushrn(1),
                i = t.andln(1),
                a = n.cmp(r);
              return a < 0 || (1 === i && 0 === a)
                ? e.div
                : 0 !== e.div.negative
                ? e.div.isubn(1)
                : e.div.iaddn(1);
            }),
            (a.prototype.modn = function(t) {
              r(t <= 67108863);
              for (
                var e = (1 << 26) % t, n = 0, i = this.length - 1;
                i >= 0;
                i--
              )
                n = (e * n + (0 | this.words[i])) % t;
              return n;
            }),
            (a.prototype.idivn = function(t) {
              r(t <= 67108863);
              for (var e = 0, n = this.length - 1; n >= 0; n--) {
                var i = (0 | this.words[n]) + 67108864 * e;
                (this.words[n] = (i / t) | 0), (e = i % t);
              }
              return this.strip();
            }),
            (a.prototype.divn = function(t) {
              return this.clone().idivn(t);
            }),
            (a.prototype.egcd = function(t) {
              r(0 === t.negative), r(!t.isZero());
              var e = this,
                n = t.clone();
              e = 0 !== e.negative ? e.umod(t) : e.clone();
              var i = new a(1),
                o = new a(0),
                s = new a(0),
                u = new a(1),
                c = 0;
              while (e.isEven() && n.isEven()) e.iushrn(1), n.iushrn(1), ++c;
              var l = n.clone(),
                f = e.clone();
              while (!e.isZero()) {
                for (
                  var h = 0, p = 1;
                  0 === (e.words[0] & p) && h < 26;
                  ++h, p <<= 1
                );
                if (h > 0) {
                  e.iushrn(h);
                  while (h-- > 0)
                    (i.isOdd() || o.isOdd()) && (i.iadd(l), o.isub(f)),
                      i.iushrn(1),
                      o.iushrn(1);
                }
                for (
                  var d = 0, m = 1;
                  0 === (n.words[0] & m) && d < 26;
                  ++d, m <<= 1
                );
                if (d > 0) {
                  n.iushrn(d);
                  while (d-- > 0)
                    (s.isOdd() || u.isOdd()) && (s.iadd(l), u.isub(f)),
                      s.iushrn(1),
                      u.iushrn(1);
                }
                e.cmp(n) >= 0
                  ? (e.isub(n), i.isub(s), o.isub(u))
                  : (n.isub(e), s.isub(i), u.isub(o));
              }
              return { a: s, b: u, gcd: n.iushln(c) };
            }),
            (a.prototype._invmp = function(t) {
              r(0 === t.negative), r(!t.isZero());
              var e = this,
                n = t.clone();
              e = 0 !== e.negative ? e.umod(t) : e.clone();
              var i,
                o = new a(1),
                s = new a(0),
                u = n.clone();
              while (e.cmpn(1) > 0 && n.cmpn(1) > 0) {
                for (
                  var c = 0, l = 1;
                  0 === (e.words[0] & l) && c < 26;
                  ++c, l <<= 1
                );
                if (c > 0) {
                  e.iushrn(c);
                  while (c-- > 0) o.isOdd() && o.iadd(u), o.iushrn(1);
                }
                for (
                  var f = 0, h = 1;
                  0 === (n.words[0] & h) && f < 26;
                  ++f, h <<= 1
                );
                if (f > 0) {
                  n.iushrn(f);
                  while (f-- > 0) s.isOdd() && s.iadd(u), s.iushrn(1);
                }
                e.cmp(n) >= 0 ? (e.isub(n), o.isub(s)) : (n.isub(e), s.isub(o));
              }
              return (
                (i = 0 === e.cmpn(1) ? o : s), i.cmpn(0) < 0 && i.iadd(t), i
              );
            }),
            (a.prototype.gcd = function(t) {
              if (this.isZero()) return t.abs();
              if (t.isZero()) return this.abs();
              var e = this.clone(),
                n = t.clone();
              (e.negative = 0), (n.negative = 0);
              for (var r = 0; e.isEven() && n.isEven(); r++)
                e.iushrn(1), n.iushrn(1);
              do {
                while (e.isEven()) e.iushrn(1);
                while (n.isEven()) n.iushrn(1);
                var i = e.cmp(n);
                if (i < 0) {
                  var a = e;
                  (e = n), (n = a);
                } else if (0 === i || 0 === n.cmpn(1)) break;
                e.isub(n);
              } while (1);
              return n.iushln(r);
            }),
            (a.prototype.invm = function(t) {
              return this.egcd(t).a.umod(t);
            }),
            (a.prototype.isEven = function() {
              return 0 === (1 & this.words[0]);
            }),
            (a.prototype.isOdd = function() {
              return 1 === (1 & this.words[0]);
            }),
            (a.prototype.andln = function(t) {
              return this.words[0] & t;
            }),
            (a.prototype.bincn = function(t) {
              r("number" === typeof t);
              var e = t % 26,
                n = (t - e) / 26,
                i = 1 << e;
              if (this.length <= n)
                return this._expand(n + 1), (this.words[n] |= i), this;
              for (var a = i, o = n; 0 !== a && o < this.length; o++) {
                var s = 0 | this.words[o];
                (s += a), (a = s >>> 26), (s &= 67108863), (this.words[o] = s);
              }
              return 0 !== a && ((this.words[o] = a), this.length++), this;
            }),
            (a.prototype.isZero = function() {
              return 1 === this.length && 0 === this.words[0];
            }),
            (a.prototype.cmpn = function(t) {
              var e,
                n = t < 0;
              if (0 !== this.negative && !n) return -1;
              if (0 === this.negative && n) return 1;
              if ((this.strip(), this.length > 1)) e = 1;
              else {
                n && (t = -t), r(t <= 67108863, "Number is too big");
                var i = 0 | this.words[0];
                e = i === t ? 0 : i < t ? -1 : 1;
              }
              return 0 !== this.negative ? 0 | -e : e;
            }),
            (a.prototype.cmp = function(t) {
              if (0 !== this.negative && 0 === t.negative) return -1;
              if (0 === this.negative && 0 !== t.negative) return 1;
              var e = this.ucmp(t);
              return 0 !== this.negative ? 0 | -e : e;
            }),
            (a.prototype.ucmp = function(t) {
              if (this.length > t.length) return 1;
              if (this.length < t.length) return -1;
              for (var e = 0, n = this.length - 1; n >= 0; n--) {
                var r = 0 | this.words[n],
                  i = 0 | t.words[n];
                if (r !== i) {
                  r < i ? (e = -1) : r > i && (e = 1);
                  break;
                }
              }
              return e;
            }),
            (a.prototype.gtn = function(t) {
              return 1 === this.cmpn(t);
            }),
            (a.prototype.gt = function(t) {
              return 1 === this.cmp(t);
            }),
            (a.prototype.gten = function(t) {
              return this.cmpn(t) >= 0;
            }),
            (a.prototype.gte = function(t) {
              return this.cmp(t) >= 0;
            }),
            (a.prototype.ltn = function(t) {
              return -1 === this.cmpn(t);
            }),
            (a.prototype.lt = function(t) {
              return -1 === this.cmp(t);
            }),
            (a.prototype.lten = function(t) {
              return this.cmpn(t) <= 0;
            }),
            (a.prototype.lte = function(t) {
              return this.cmp(t) <= 0;
            }),
            (a.prototype.eqn = function(t) {
              return 0 === this.cmpn(t);
            }),
            (a.prototype.eq = function(t) {
              return 0 === this.cmp(t);
            }),
            (a.red = function(t) {
              return new S(t);
            }),
            (a.prototype.toRed = function(t) {
              return (
                r(!this.red, "Already a number in reduction context"),
                r(0 === this.negative, "red works only with positives"),
                t.convertTo(this)._forceRed(t)
              );
            }),
            (a.prototype.fromRed = function() {
              return (
                r(
                  this.red,
                  "fromRed works only with numbers in reduction context"
                ),
                this.red.convertFrom(this)
              );
            }),
            (a.prototype._forceRed = function(t) {
              return (this.red = t), this;
            }),
            (a.prototype.forceRed = function(t) {
              return (
                r(!this.red, "Already a number in reduction context"),
                this._forceRed(t)
              );
            }),
            (a.prototype.redAdd = function(t) {
              return (
                r(this.red, "redAdd works only with red numbers"),
                this.red.add(this, t)
              );
            }),
            (a.prototype.redIAdd = function(t) {
              return (
                r(this.red, "redIAdd works only with red numbers"),
                this.red.iadd(this, t)
              );
            }),
            (a.prototype.redSub = function(t) {
              return (
                r(this.red, "redSub works only with red numbers"),
                this.red.sub(this, t)
              );
            }),
            (a.prototype.redISub = function(t) {
              return (
                r(this.red, "redISub works only with red numbers"),
                this.red.isub(this, t)
              );
            }),
            (a.prototype.redShl = function(t) {
              return (
                r(this.red, "redShl works only with red numbers"),
                this.red.shl(this, t)
              );
            }),
            (a.prototype.redMul = function(t) {
              return (
                r(this.red, "redMul works only with red numbers"),
                this.red._verify2(this, t),
                this.red.mul(this, t)
              );
            }),
            (a.prototype.redIMul = function(t) {
              return (
                r(this.red, "redMul works only with red numbers"),
                this.red._verify2(this, t),
                this.red.imul(this, t)
              );
            }),
            (a.prototype.redSqr = function() {
              return (
                r(this.red, "redSqr works only with red numbers"),
                this.red._verify1(this),
                this.red.sqr(this)
              );
            }),
            (a.prototype.redISqr = function() {
              return (
                r(this.red, "redISqr works only with red numbers"),
                this.red._verify1(this),
                this.red.isqr(this)
              );
            }),
            (a.prototype.redSqrt = function() {
              return (
                r(this.red, "redSqrt works only with red numbers"),
                this.red._verify1(this),
                this.red.sqrt(this)
              );
            }),
            (a.prototype.redInvm = function() {
              return (
                r(this.red, "redInvm works only with red numbers"),
                this.red._verify1(this),
                this.red.invm(this)
              );
            }),
            (a.prototype.redNeg = function() {
              return (
                r(this.red, "redNeg works only with red numbers"),
                this.red._verify1(this),
                this.red.neg(this)
              );
            }),
            (a.prototype.redPow = function(t) {
              return (
                r(this.red && !t.red, "redPow(normalNum)"),
                this.red._verify1(this),
                this.red.pow(this, t)
              );
            });
          var g = { k256: null, p224: null, p192: null, p25519: null };
          function b(t, e) {
            (this.name = t),
              (this.p = new a(e, 16)),
              (this.n = this.p.bitLength()),
              (this.k = new a(1).iushln(this.n).isub(this.p)),
              (this.tmp = this._tmp());
          }
          function w() {
            b.call(
              this,
              "k256",
              "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f"
            );
          }
          function _() {
            b.call(
              this,
              "p224",
              "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001"
            );
          }
          function x() {
            b.call(
              this,
              "p192",
              "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff"
            );
          }
          function E() {
            b.call(
              this,
              "25519",
              "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed"
            );
          }
          function S(t) {
            if ("string" === typeof t) {
              var e = a._prime(t);
              (this.m = e.p), (this.prime = e);
            } else
              r(t.gtn(1), "modulus must be greater than 1"),
                (this.m = t),
                (this.prime = null);
          }
          function N(t) {
            S.call(this, t),
              (this.shift = this.m.bitLength()),
              this.shift % 26 !== 0 && (this.shift += 26 - (this.shift % 26)),
              (this.r = new a(1).iushln(this.shift)),
              (this.r2 = this.imod(this.r.sqr())),
              (this.rinv = this.r._invmp(this.m)),
              (this.minv = this.rinv
                .mul(this.r)
                .isubn(1)
                .div(this.m)),
              (this.minv = this.minv.umod(this.r)),
              (this.minv = this.r.sub(this.minv));
          }
          (b.prototype._tmp = function() {
            var t = new a(null);
            return (t.words = new Array(Math.ceil(this.n / 13))), t;
          }),
            (b.prototype.ireduce = function(t) {
              var e,
                n = t;
              do {
                this.split(n, this.tmp),
                  (n = this.imulK(n)),
                  (n = n.iadd(this.tmp)),
                  (e = n.bitLength());
              } while (e > this.n);
              var r = e < this.n ? -1 : n.ucmp(this.p);
              return (
                0 === r
                  ? ((n.words[0] = 0), (n.length = 1))
                  : r > 0
                  ? n.isub(this.p)
                  : n.strip(),
                n
              );
            }),
            (b.prototype.split = function(t, e) {
              t.iushrn(this.n, 0, e);
            }),
            (b.prototype.imulK = function(t) {
              return t.imul(this.k);
            }),
            i(w, b),
            (w.prototype.split = function(t, e) {
              for (
                var n = 4194303, r = Math.min(t.length, 9), i = 0;
                i < r;
                i++
              )
                e.words[i] = t.words[i];
              if (((e.length = r), t.length <= 9))
                return (t.words[0] = 0), void (t.length = 1);
              var a = t.words[9];
              for (e.words[e.length++] = a & n, i = 10; i < t.length; i++) {
                var o = 0 | t.words[i];
                (t.words[i - 10] = ((o & n) << 4) | (a >>> 22)), (a = o);
              }
              (a >>>= 22),
                (t.words[i - 10] = a),
                0 === a && t.length > 10 ? (t.length -= 10) : (t.length -= 9);
            }),
            (w.prototype.imulK = function(t) {
              (t.words[t.length] = 0),
                (t.words[t.length + 1] = 0),
                (t.length += 2);
              for (var e = 0, n = 0; n < t.length; n++) {
                var r = 0 | t.words[n];
                (e += 977 * r),
                  (t.words[n] = 67108863 & e),
                  (e = 64 * r + ((e / 67108864) | 0));
              }
              return (
                0 === t.words[t.length - 1] &&
                  (t.length--, 0 === t.words[t.length - 1] && t.length--),
                t
              );
            }),
            i(_, b),
            i(x, b),
            i(E, b),
            (E.prototype.imulK = function(t) {
              for (var e = 0, n = 0; n < t.length; n++) {
                var r = 19 * (0 | t.words[n]) + e,
                  i = 67108863 & r;
                (r >>>= 26), (t.words[n] = i), (e = r);
              }
              return 0 !== e && (t.words[t.length++] = e), t;
            }),
            (a._prime = function(t) {
              if (g[t]) return g[t];
              var e;
              if ("k256" === t) e = new w();
              else if ("p224" === t) e = new _();
              else if ("p192" === t) e = new x();
              else {
                if ("p25519" !== t) throw new Error("Unknown prime " + t);
                e = new E();
              }
              return (g[t] = e), e;
            }),
            (S.prototype._verify1 = function(t) {
              r(0 === t.negative, "red works only with positives"),
                r(t.red, "red works only with red numbers");
            }),
            (S.prototype._verify2 = function(t, e) {
              r(
                0 === (t.negative | e.negative),
                "red works only with positives"
              ),
                r(t.red && t.red === e.red, "red works only with red numbers");
            }),
            (S.prototype.imod = function(t) {
              return this.prime
                ? this.prime.ireduce(t)._forceRed(this)
                : t.umod(this.m)._forceRed(this);
            }),
            (S.prototype.neg = function(t) {
              return t.isZero() ? t.clone() : this.m.sub(t)._forceRed(this);
            }),
            (S.prototype.add = function(t, e) {
              this._verify2(t, e);
              var n = t.add(e);
              return n.cmp(this.m) >= 0 && n.isub(this.m), n._forceRed(this);
            }),
            (S.prototype.iadd = function(t, e) {
              this._verify2(t, e);
              var n = t.iadd(e);
              return n.cmp(this.m) >= 0 && n.isub(this.m), n;
            }),
            (S.prototype.sub = function(t, e) {
              this._verify2(t, e);
              var n = t.sub(e);
              return n.cmpn(0) < 0 && n.iadd(this.m), n._forceRed(this);
            }),
            (S.prototype.isub = function(t, e) {
              this._verify2(t, e);
              var n = t.isub(e);
              return n.cmpn(0) < 0 && n.iadd(this.m), n;
            }),
            (S.prototype.shl = function(t, e) {
              return this._verify1(t), this.imod(t.ushln(e));
            }),
            (S.prototype.imul = function(t, e) {
              return this._verify2(t, e), this.imod(t.imul(e));
            }),
            (S.prototype.mul = function(t, e) {
              return this._verify2(t, e), this.imod(t.mul(e));
            }),
            (S.prototype.isqr = function(t) {
              return this.imul(t, t.clone());
            }),
            (S.prototype.sqr = function(t) {
              return this.mul(t, t);
            }),
            (S.prototype.sqrt = function(t) {
              if (t.isZero()) return t.clone();
              var e = this.m.andln(3);
              if ((r(e % 2 === 1), 3 === e)) {
                var n = this.m.add(new a(1)).iushrn(2);
                return this.pow(t, n);
              }
              var i = this.m.subn(1),
                o = 0;
              while (!i.isZero() && 0 === i.andln(1)) o++, i.iushrn(1);
              r(!i.isZero());
              var s = new a(1).toRed(this),
                u = s.redNeg(),
                c = this.m.subn(1).iushrn(1),
                l = this.m.bitLength();
              l = new a(2 * l * l).toRed(this);
              while (0 !== this.pow(l, c).cmp(u)) l.redIAdd(u);
              var f = this.pow(l, i),
                h = this.pow(t, i.addn(1).iushrn(1)),
                p = this.pow(t, i),
                d = o;
              while (0 !== p.cmp(s)) {
                for (var m = p, v = 0; 0 !== m.cmp(s); v++) m = m.redSqr();
                r(v < d);
                var y = this.pow(f, new a(1).iushln(d - v - 1));
                (h = h.redMul(y)), (f = y.redSqr()), (p = p.redMul(f)), (d = v);
              }
              return h;
            }),
            (S.prototype.invm = function(t) {
              var e = t._invmp(this.m);
              return 0 !== e.negative
                ? ((e.negative = 0), this.imod(e).redNeg())
                : this.imod(e);
            }),
            (S.prototype.pow = function(t, e) {
              if (e.isZero()) return new a(1).toRed(this);
              if (0 === e.cmpn(1)) return t.clone();
              var n = 4,
                r = new Array(1 << n);
              (r[0] = new a(1).toRed(this)), (r[1] = t);
              for (var i = 2; i < r.length; i++) r[i] = this.mul(r[i - 1], t);
              var o = r[0],
                s = 0,
                u = 0,
                c = e.bitLength() % 26;
              for (0 === c && (c = 26), i = e.length - 1; i >= 0; i--) {
                for (var l = e.words[i], f = c - 1; f >= 0; f--) {
                  var h = (l >> f) & 1;
                  o !== r[0] && (o = this.sqr(o)),
                    0 !== h || 0 !== s
                      ? ((s <<= 1),
                        (s |= h),
                        u++,
                        (u === n || (0 === i && 0 === f)) &&
                          ((o = this.mul(o, r[s])), (u = 0), (s = 0)))
                      : (u = 0);
                }
                c = 26;
              }
              return o;
            }),
            (S.prototype.convertTo = function(t) {
              var e = t.umod(this.m);
              return e === t ? e.clone() : e;
            }),
            (S.prototype.convertFrom = function(t) {
              var e = t.clone();
              return (e.red = null), e;
            }),
            (a.mont = function(t) {
              return new N(t);
            }),
            i(N, S),
            (N.prototype.convertTo = function(t) {
              return this.imod(t.ushln(this.shift));
            }),
            (N.prototype.convertFrom = function(t) {
              var e = this.imod(t.mul(this.rinv));
              return (e.red = null), e;
            }),
            (N.prototype.imul = function(t, e) {
              if (t.isZero() || e.isZero())
                return (t.words[0] = 0), (t.length = 1), t;
              var n = t.imul(e),
                r = n
                  .maskn(this.shift)
                  .mul(this.minv)
                  .imaskn(this.shift)
                  .mul(this.m),
                i = n.isub(r).iushrn(this.shift),
                a = i;
              return (
                i.cmp(this.m) >= 0
                  ? (a = i.isub(this.m))
                  : i.cmpn(0) < 0 && (a = i.iadd(this.m)),
                a._forceRed(this)
              );
            }),
            (N.prototype.mul = function(t, e) {
              if (t.isZero() || e.isZero()) return new a(0)._forceRed(this);
              var n = t.mul(e),
                r = n
                  .maskn(this.shift)
                  .mul(this.minv)
                  .imaskn(this.shift)
                  .mul(this.m),
                i = n.isub(r).iushrn(this.shift),
                o = i;
              return (
                i.cmp(this.m) >= 0
                  ? (o = i.isub(this.m))
                  : i.cmpn(0) < 0 && (o = i.iadd(this.m)),
                o._forceRed(this)
              );
            }),
            (N.prototype.invm = function(t) {
              var e = this.imod(t._invmp(this.m).mul(this.r2));
              return e._forceRed(this);
            });
        })(t, this);
      }.call(this, n("62e4")(t)));
    },
    "39f5": function(t, e, n) {
      var r = n("8707").Buffer;
      function i(t) {
        r.isBuffer(t) || (t = r.from(t));
        for (var e = (t.length / 4) | 0, n = new Array(e), i = 0; i < e; i++)
          n[i] = t.readUInt32BE(4 * i);
        return n;
      }
      function a(t) {
        for (var e = 0; e < t.length; t++) t[e] = 0;
      }
      function o(t, e, n, r, i) {
        for (
          var a,
            o,
            s,
            u,
            c = n[0],
            l = n[1],
            f = n[2],
            h = n[3],
            p = t[0] ^ e[0],
            d = t[1] ^ e[1],
            m = t[2] ^ e[2],
            v = t[3] ^ e[3],
            y = 4,
            g = 1;
          g < i;
          g++
        )
          (a =
            c[p >>> 24] ^
            l[(d >>> 16) & 255] ^
            f[(m >>> 8) & 255] ^
            h[255 & v] ^
            e[y++]),
            (o =
              c[d >>> 24] ^
              l[(m >>> 16) & 255] ^
              f[(v >>> 8) & 255] ^
              h[255 & p] ^
              e[y++]),
            (s =
              c[m >>> 24] ^
              l[(v >>> 16) & 255] ^
              f[(p >>> 8) & 255] ^
              h[255 & d] ^
              e[y++]),
            (u =
              c[v >>> 24] ^
              l[(p >>> 16) & 255] ^
              f[(d >>> 8) & 255] ^
              h[255 & m] ^
              e[y++]),
            (p = a),
            (d = o),
            (m = s),
            (v = u);
        return (
          (a =
            ((r[p >>> 24] << 24) |
              (r[(d >>> 16) & 255] << 16) |
              (r[(m >>> 8) & 255] << 8) |
              r[255 & v]) ^
            e[y++]),
          (o =
            ((r[d >>> 24] << 24) |
              (r[(m >>> 16) & 255] << 16) |
              (r[(v >>> 8) & 255] << 8) |
              r[255 & p]) ^
            e[y++]),
          (s =
            ((r[m >>> 24] << 24) |
              (r[(v >>> 16) & 255] << 16) |
              (r[(p >>> 8) & 255] << 8) |
              r[255 & d]) ^
            e[y++]),
          (u =
            ((r[v >>> 24] << 24) |
              (r[(p >>> 16) & 255] << 16) |
              (r[(d >>> 8) & 255] << 8) |
              r[255 & m]) ^
            e[y++]),
          (a >>>= 0),
          (o >>>= 0),
          (s >>>= 0),
          (u >>>= 0),
          [a, o, s, u]
        );
      }
      var s = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
        u = (function() {
          for (var t = new Array(256), e = 0; e < 256; e++)
            t[e] = e < 128 ? e << 1 : (e << 1) ^ 283;
          for (
            var n = [],
              r = [],
              i = [[], [], [], []],
              a = [[], [], [], []],
              o = 0,
              s = 0,
              u = 0;
            u < 256;
            ++u
          ) {
            var c = s ^ (s << 1) ^ (s << 2) ^ (s << 3) ^ (s << 4);
            (c = (c >>> 8) ^ (255 & c) ^ 99), (n[o] = c), (r[c] = o);
            var l = t[o],
              f = t[l],
              h = t[f],
              p = (257 * t[c]) ^ (16843008 * c);
            (i[0][o] = (p << 24) | (p >>> 8)),
              (i[1][o] = (p << 16) | (p >>> 16)),
              (i[2][o] = (p << 8) | (p >>> 24)),
              (i[3][o] = p),
              (p = (16843009 * h) ^ (65537 * f) ^ (257 * l) ^ (16843008 * o)),
              (a[0][c] = (p << 24) | (p >>> 8)),
              (a[1][c] = (p << 16) | (p >>> 16)),
              (a[2][c] = (p << 8) | (p >>> 24)),
              (a[3][c] = p),
              0 === o
                ? (o = s = 1)
                : ((o = l ^ t[t[t[h ^ l]]]), (s ^= t[t[s]]));
          }
          return { SBOX: n, INV_SBOX: r, SUB_MIX: i, INV_SUB_MIX: a };
        })();
      function c(t) {
        (this._key = i(t)), this._reset();
      }
      (c.blockSize = 16),
        (c.keySize = 32),
        (c.prototype.blockSize = c.blockSize),
        (c.prototype.keySize = c.keySize),
        (c.prototype._reset = function() {
          for (
            var t = this._key,
              e = t.length,
              n = e + 6,
              r = 4 * (n + 1),
              i = [],
              a = 0;
            a < e;
            a++
          )
            i[a] = t[a];
          for (a = e; a < r; a++) {
            var o = i[a - 1];
            a % e === 0
              ? ((o = (o << 8) | (o >>> 24)),
                (o =
                  (u.SBOX[o >>> 24] << 24) |
                  (u.SBOX[(o >>> 16) & 255] << 16) |
                  (u.SBOX[(o >>> 8) & 255] << 8) |
                  u.SBOX[255 & o]),
                (o ^= s[(a / e) | 0] << 24))
              : e > 6 &&
                a % e === 4 &&
                (o =
                  (u.SBOX[o >>> 24] << 24) |
                  (u.SBOX[(o >>> 16) & 255] << 16) |
                  (u.SBOX[(o >>> 8) & 255] << 8) |
                  u.SBOX[255 & o]),
              (i[a] = i[a - e] ^ o);
          }
          for (var c = [], l = 0; l < r; l++) {
            var f = r - l,
              h = i[f - (l % 4 ? 0 : 4)];
            c[l] =
              l < 4 || f <= 4
                ? h
                : u.INV_SUB_MIX[0][u.SBOX[h >>> 24]] ^
                  u.INV_SUB_MIX[1][u.SBOX[(h >>> 16) & 255]] ^
                  u.INV_SUB_MIX[2][u.SBOX[(h >>> 8) & 255]] ^
                  u.INV_SUB_MIX[3][u.SBOX[255 & h]];
          }
          (this._nRounds = n),
            (this._keySchedule = i),
            (this._invKeySchedule = c);
        }),
        (c.prototype.encryptBlockRaw = function(t) {
          return (
            (t = i(t)),
            o(t, this._keySchedule, u.SUB_MIX, u.SBOX, this._nRounds)
          );
        }),
        (c.prototype.encryptBlock = function(t) {
          var e = this.encryptBlockRaw(t),
            n = r.allocUnsafe(16);
          return (
            n.writeUInt32BE(e[0], 0),
            n.writeUInt32BE(e[1], 4),
            n.writeUInt32BE(e[2], 8),
            n.writeUInt32BE(e[3], 12),
            n
          );
        }),
        (c.prototype.decryptBlock = function(t) {
          t = i(t);
          var e = t[1];
          (t[1] = t[3]), (t[3] = e);
          var n = o(
              t,
              this._invKeySchedule,
              u.INV_SUB_MIX,
              u.INV_SBOX,
              this._nRounds
            ),
            a = r.allocUnsafe(16);
          return (
            a.writeUInt32BE(n[0], 0),
            a.writeUInt32BE(n[3], 4),
            a.writeUInt32BE(n[2], 8),
            a.writeUInt32BE(n[1], 12),
            a
          );
        }),
        (c.prototype.scrub = function() {
          a(this._keySchedule), a(this._invKeySchedule), a(this._key);
        }),
        (t.exports.AES = c);
    },
    "3a38": function(t, e) {
      var n = Math.ceil,
        r = Math.floor;
      t.exports = function(t) {
        return isNaN((t = +t)) ? 0 : (t > 0 ? r : n)(t);
      };
    },
    "3a72": function(t, e, n) {
      var r = n("7726"),
        i = n("8378"),
        a = n("2d00"),
        o = n("37c8"),
        s = n("86cc").f;
      t.exports = function(t) {
        var e = i.Symbol || (i.Symbol = a ? {} : r.Symbol || {});
        "_" == t.charAt(0) || t in e || s(e, t, { value: o.f(t) });
      };
    },
    "3a7c": function(t, e, n) {
      (function(t) {
        function n(t) {
          return Array.isArray ? Array.isArray(t) : "[object Array]" === v(t);
        }
        function r(t) {
          return "boolean" === typeof t;
        }
        function i(t) {
          return null === t;
        }
        function a(t) {
          return null == t;
        }
        function o(t) {
          return "number" === typeof t;
        }
        function s(t) {
          return "string" === typeof t;
        }
        function u(t) {
          return "symbol" === typeof t;
        }
        function c(t) {
          return void 0 === t;
        }
        function l(t) {
          return "[object RegExp]" === v(t);
        }
        function f(t) {
          return "object" === typeof t && null !== t;
        }
        function h(t) {
          return "[object Date]" === v(t);
        }
        function p(t) {
          return "[object Error]" === v(t) || t instanceof Error;
        }
        function d(t) {
          return "function" === typeof t;
        }
        function m(t) {
          return (
            null === t ||
            "boolean" === typeof t ||
            "number" === typeof t ||
            "string" === typeof t ||
            "symbol" === typeof t ||
            "undefined" === typeof t
          );
        }
        function v(t) {
          return Object.prototype.toString.call(t);
        }
        (e.isArray = n),
          (e.isBoolean = r),
          (e.isNull = i),
          (e.isNullOrUndefined = a),
          (e.isNumber = o),
          (e.isString = s),
          (e.isSymbol = u),
          (e.isUndefined = c),
          (e.isRegExp = l),
          (e.isObject = f),
          (e.isDate = h),
          (e.isError = p),
          (e.isFunction = d),
          (e.isPrimitive = m),
          (e.isBuffer = t.isBuffer);
      }.call(this, n("b639").Buffer));
    },
    "3b8d": function(t, e, n) {
      "use strict";
      n.d(e, "a", function() {
        return o;
      });
      var r = n("795b"),
        i = n.n(r);
      function a(t, e, n, r, a, o, s) {
        try {
          var u = t[o](s),
            c = u.value;
        } catch (l) {
          return void n(l);
        }
        u.done ? e(c) : i.a.resolve(c).then(r, a);
      }
      function o(t) {
        return function() {
          var e = this,
            n = arguments;
          return new i.a(function(r, i) {
            var o = t.apply(e, n);
            function s(t) {
              a(o, r, i, s, u, "next", t);
            }
            function u(t) {
              a(o, r, i, s, u, "throw", t);
            }
            s(void 0);
          });
        };
      }
    },
    "3c11": function(t, e, n) {
      "use strict";
      var r = n("63b6"),
        i = n("584a"),
        a = n("e53d"),
        o = n("f201"),
        s = n("cd78");
      r(r.P + r.R, "Promise", {
        finally: function(t) {
          var e = o(this, i.Promise || a.Promise),
            n = "function" == typeof t;
          return this.then(
            n
              ? function(n) {
                  return s(e, t()).then(function() {
                    return n;
                  });
                }
              : t,
            n
              ? function(n) {
                  return s(e, t()).then(function() {
                    throw n;
                  });
                }
              : t
          );
        }
      });
    },
    "3daf": function(t, e, n) {
      "use strict";
      var r = n("4136"),
        i = n("3337"),
        a = n("399f"),
        o = n("3fb5"),
        s = r.base,
        u = i.utils.assert;
      function c(t) {
        (this.twisted = 1 !== (0 | t.a)),
          (this.mOneA = this.twisted && -1 === (0 | t.a)),
          (this.extended = this.mOneA),
          s.call(this, "edwards", t),
          (this.a = new a(t.a, 16).umod(this.red.m)),
          (this.a = this.a.toRed(this.red)),
          (this.c = new a(t.c, 16).toRed(this.red)),
          (this.c2 = this.c.redSqr()),
          (this.d = new a(t.d, 16).toRed(this.red)),
          (this.dd = this.d.redAdd(this.d)),
          u(!this.twisted || 0 === this.c.fromRed().cmpn(1)),
          (this.oneC = 1 === (0 | t.c));
      }
      function l(t, e, n, r, i) {
        s.BasePoint.call(this, t, "projective"),
          null === e && null === n && null === r
            ? ((this.x = this.curve.zero),
              (this.y = this.curve.one),
              (this.z = this.curve.one),
              (this.t = this.curve.zero),
              (this.zOne = !0))
            : ((this.x = new a(e, 16)),
              (this.y = new a(n, 16)),
              (this.z = r ? new a(r, 16) : this.curve.one),
              (this.t = i && new a(i, 16)),
              this.x.red || (this.x = this.x.toRed(this.curve.red)),
              this.y.red || (this.y = this.y.toRed(this.curve.red)),
              this.z.red || (this.z = this.z.toRed(this.curve.red)),
              this.t && !this.t.red && (this.t = this.t.toRed(this.curve.red)),
              (this.zOne = this.z === this.curve.one),
              this.curve.extended &&
                !this.t &&
                ((this.t = this.x.redMul(this.y)),
                this.zOne || (this.t = this.t.redMul(this.z.redInvm()))));
      }
      o(c, s),
        (t.exports = c),
        (c.prototype._mulA = function(t) {
          return this.mOneA ? t.redNeg() : this.a.redMul(t);
        }),
        (c.prototype._mulC = function(t) {
          return this.oneC ? t : this.c.redMul(t);
        }),
        (c.prototype.jpoint = function(t, e, n, r) {
          return this.point(t, e, n, r);
        }),
        (c.prototype.pointFromX = function(t, e) {
          (t = new a(t, 16)), t.red || (t = t.toRed(this.red));
          var n = t.redSqr(),
            r = this.c2.redSub(this.a.redMul(n)),
            i = this.one.redSub(this.c2.redMul(this.d).redMul(n)),
            o = r.redMul(i.redInvm()),
            s = o.redSqrt();
          if (
            0 !==
            s
              .redSqr()
              .redSub(o)
              .cmp(this.zero)
          )
            throw new Error("invalid point");
          var u = s.fromRed().isOdd();
          return ((e && !u) || (!e && u)) && (s = s.redNeg()), this.point(t, s);
        }),
        (c.prototype.pointFromY = function(t, e) {
          (t = new a(t, 16)), t.red || (t = t.toRed(this.red));
          var n = t.redSqr(),
            r = n.redSub(this.c2),
            i = n
              .redMul(this.d)
              .redMul(this.c2)
              .redSub(this.a),
            o = r.redMul(i.redInvm());
          if (0 === o.cmp(this.zero)) {
            if (e) throw new Error("invalid point");
            return this.point(this.zero, t);
          }
          var s = o.redSqrt();
          if (
            0 !==
            s
              .redSqr()
              .redSub(o)
              .cmp(this.zero)
          )
            throw new Error("invalid point");
          return (
            s.fromRed().isOdd() !== e && (s = s.redNeg()), this.point(s, t)
          );
        }),
        (c.prototype.validate = function(t) {
          if (t.isInfinity()) return !0;
          t.normalize();
          var e = t.x.redSqr(),
            n = t.y.redSqr(),
            r = e.redMul(this.a).redAdd(n),
            i = this.c2.redMul(this.one.redAdd(this.d.redMul(e).redMul(n)));
          return 0 === r.cmp(i);
        }),
        o(l, s.BasePoint),
        (c.prototype.pointFromJSON = function(t) {
          return l.fromJSON(this, t);
        }),
        (c.prototype.point = function(t, e, n, r) {
          return new l(this, t, e, n, r);
        }),
        (l.fromJSON = function(t, e) {
          return new l(t, e[0], e[1], e[2]);
        }),
        (l.prototype.inspect = function() {
          return this.isInfinity()
            ? "<EC Point Infinity>"
            : "<EC Point x: " +
                this.x.fromRed().toString(16, 2) +
                " y: " +
                this.y.fromRed().toString(16, 2) +
                " z: " +
                this.z.fromRed().toString(16, 2) +
                ">";
        }),
        (l.prototype.isInfinity = function() {
          return (
            0 === this.x.cmpn(0) &&
            (0 === this.y.cmp(this.z) ||
              (this.zOne && 0 === this.y.cmp(this.curve.c)))
          );
        }),
        (l.prototype._extDbl = function() {
          var t = this.x.redSqr(),
            e = this.y.redSqr(),
            n = this.z.redSqr();
          n = n.redIAdd(n);
          var r = this.curve._mulA(t),
            i = this.x
              .redAdd(this.y)
              .redSqr()
              .redISub(t)
              .redISub(e),
            a = r.redAdd(e),
            o = a.redSub(n),
            s = r.redSub(e),
            u = i.redMul(o),
            c = a.redMul(s),
            l = i.redMul(s),
            f = o.redMul(a);
          return this.curve.point(u, c, f, l);
        }),
        (l.prototype._projDbl = function() {
          var t,
            e,
            n,
            r = this.x.redAdd(this.y).redSqr(),
            i = this.x.redSqr(),
            a = this.y.redSqr();
          if (this.curve.twisted) {
            var o = this.curve._mulA(i),
              s = o.redAdd(a);
            if (this.zOne)
              (t = r
                .redSub(i)
                .redSub(a)
                .redMul(s.redSub(this.curve.two))),
                (e = s.redMul(o.redSub(a))),
                (n = s
                  .redSqr()
                  .redSub(s)
                  .redSub(s));
            else {
              var u = this.z.redSqr(),
                c = s.redSub(u).redISub(u);
              (t = r
                .redSub(i)
                .redISub(a)
                .redMul(c)),
                (e = s.redMul(o.redSub(a))),
                (n = s.redMul(c));
            }
          } else {
            (o = i.redAdd(a)),
              (u = this.curve._mulC(this.z).redSqr()),
              (c = o.redSub(u).redSub(u));
            (t = this.curve._mulC(r.redISub(o)).redMul(c)),
              (e = this.curve._mulC(o).redMul(i.redISub(a))),
              (n = o.redMul(c));
          }
          return this.curve.point(t, e, n);
        }),
        (l.prototype.dbl = function() {
          return this.isInfinity()
            ? this
            : this.curve.extended
            ? this._extDbl()
            : this._projDbl();
        }),
        (l.prototype._extAdd = function(t) {
          var e = this.y.redSub(this.x).redMul(t.y.redSub(t.x)),
            n = this.y.redAdd(this.x).redMul(t.y.redAdd(t.x)),
            r = this.t.redMul(this.curve.dd).redMul(t.t),
            i = this.z.redMul(t.z.redAdd(t.z)),
            a = n.redSub(e),
            o = i.redSub(r),
            s = i.redAdd(r),
            u = n.redAdd(e),
            c = a.redMul(o),
            l = s.redMul(u),
            f = a.redMul(u),
            h = o.redMul(s);
          return this.curve.point(c, l, h, f);
        }),
        (l.prototype._projAdd = function(t) {
          var e,
            n,
            r = this.z.redMul(t.z),
            i = r.redSqr(),
            a = this.x.redMul(t.x),
            o = this.y.redMul(t.y),
            s = this.curve.d.redMul(a).redMul(o),
            u = i.redSub(s),
            c = i.redAdd(s),
            l = this.x
              .redAdd(this.y)
              .redMul(t.x.redAdd(t.y))
              .redISub(a)
              .redISub(o),
            f = r.redMul(u).redMul(l);
          return (
            this.curve.twisted
              ? ((e = r.redMul(c).redMul(o.redSub(this.curve._mulA(a)))),
                (n = u.redMul(c)))
              : ((e = r.redMul(c).redMul(o.redSub(a))),
                (n = this.curve._mulC(u).redMul(c))),
            this.curve.point(f, e, n)
          );
        }),
        (l.prototype.add = function(t) {
          return this.isInfinity()
            ? t
            : t.isInfinity()
            ? this
            : this.curve.extended
            ? this._extAdd(t)
            : this._projAdd(t);
        }),
        (l.prototype.mul = function(t) {
          return this._hasDoubles(t)
            ? this.curve._fixedNafMul(this, t)
            : this.curve._wnafMul(this, t);
        }),
        (l.prototype.mulAdd = function(t, e, n) {
          return this.curve._wnafMulAdd(1, [this, e], [t, n], 2, !1);
        }),
        (l.prototype.jmulAdd = function(t, e, n) {
          return this.curve._wnafMulAdd(1, [this, e], [t, n], 2, !0);
        }),
        (l.prototype.normalize = function() {
          if (this.zOne) return this;
          var t = this.z.redInvm();
          return (
            (this.x = this.x.redMul(t)),
            (this.y = this.y.redMul(t)),
            this.t && (this.t = this.t.redMul(t)),
            (this.z = this.curve.one),
            (this.zOne = !0),
            this
          );
        }),
        (l.prototype.neg = function() {
          return this.curve.point(
            this.x.redNeg(),
            this.y,
            this.z,
            this.t && this.t.redNeg()
          );
        }),
        (l.prototype.getX = function() {
          return this.normalize(), this.x.fromRed();
        }),
        (l.prototype.getY = function() {
          return this.normalize(), this.y.fromRed();
        }),
        (l.prototype.eq = function(t) {
          return (
            this === t ||
            (0 === this.getX().cmp(t.getX()) && 0 === this.getY().cmp(t.getY()))
          );
        }),
        (l.prototype.eqXToP = function(t) {
          var e = t.toRed(this.curve.red).redMul(this.z);
          if (0 === this.x.cmp(e)) return !0;
          for (var n = t.clone(), r = this.curve.redN.redMul(this.z); ; ) {
            if ((n.iadd(this.curve.n), n.cmp(this.curve.p) >= 0)) return !1;
            if ((e.redIAdd(r), 0 === this.x.cmp(e))) return !0;
          }
        }),
        (l.prototype.toP = l.prototype.normalize),
        (l.prototype.mixedAdd = l.prototype.add);
    },
    "3e8f": function(t, e) {},
    "3f62": function(t, e, n) {
      var r = n("8707").Buffer,
        i = r.alloc(16, 0);
      function a(t) {
        return [
          t.readUInt32BE(0),
          t.readUInt32BE(4),
          t.readUInt32BE(8),
          t.readUInt32BE(12)
        ];
      }
      function o(t) {
        var e = r.allocUnsafe(16);
        return (
          e.writeUInt32BE(t[0] >>> 0, 0),
          e.writeUInt32BE(t[1] >>> 0, 4),
          e.writeUInt32BE(t[2] >>> 0, 8),
          e.writeUInt32BE(t[3] >>> 0, 12),
          e
        );
      }
      function s(t) {
        (this.h = t),
          (this.state = r.alloc(16, 0)),
          (this.cache = r.allocUnsafe(0));
      }
      (s.prototype.ghash = function(t) {
        var e = -1;
        while (++e < t.length) this.state[e] ^= t[e];
        this._multiply();
      }),
        (s.prototype._multiply = function() {
          var t,
            e,
            n,
            r = a(this.h),
            i = [0, 0, 0, 0],
            s = -1;
          while (++s < 128) {
            for (
              e = 0 !== (this.state[~~(s / 8)] & (1 << (7 - (s % 8)))),
                e &&
                  ((i[0] ^= r[0]),
                  (i[1] ^= r[1]),
                  (i[2] ^= r[2]),
                  (i[3] ^= r[3])),
                n = 0 !== (1 & r[3]),
                t = 3;
              t > 0;
              t--
            )
              r[t] = (r[t] >>> 1) | ((1 & r[t - 1]) << 31);
            (r[0] = r[0] >>> 1), n && (r[0] = r[0] ^ (225 << 24));
          }
          this.state = o(i);
        }),
        (s.prototype.update = function(t) {
          var e;
          this.cache = r.concat([this.cache, t]);
          while (this.cache.length >= 16)
            (e = this.cache.slice(0, 16)),
              (this.cache = this.cache.slice(16)),
              this.ghash(e);
        }),
        (s.prototype.final = function(t, e) {
          return (
            this.cache.length && this.ghash(r.concat([this.cache, i], 16)),
            this.ghash(o([0, t, 0, e])),
            this.state
          );
        }),
        (t.exports = s);
    },
    "3fb5": function(t, e) {
      "function" === typeof Object.create
        ? (t.exports = function(t, e) {
            (t.super_ = e),
              (t.prototype = Object.create(e.prototype, {
                constructor: {
                  value: t,
                  enumerable: !1,
                  writable: !0,
                  configurable: !0
                }
              }));
          })
        : (t.exports = function(t, e) {
            t.super_ = e;
            var n = function() {};
            (n.prototype = e.prototype),
              (t.prototype = new n()),
              (t.prototype.constructor = t);
          });
    },
    "409b": function(t, e) {
      t.exports = {
        doubles: {
          step: 4,
          points: [
            [
              "e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a",
              "f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"
            ],
            [
              "8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508",
              "11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"
            ],
            [
              "175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739",
              "d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"
            ],
            [
              "363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640",
              "4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"
            ],
            [
              "8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c",
              "4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"
            ],
            [
              "723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda",
              "96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"
            ],
            [
              "eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa",
              "5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"
            ],
            [
              "100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0",
              "cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"
            ],
            [
              "e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d",
              "9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"
            ],
            [
              "feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d",
              "e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"
            ],
            [
              "da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1",
              "9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"
            ],
            [
              "53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0",
              "5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"
            ],
            [
              "8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047",
              "10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"
            ],
            [
              "385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862",
              "283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"
            ],
            [
              "6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7",
              "7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"
            ],
            [
              "3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd",
              "56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"
            ],
            [
              "85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83",
              "7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"
            ],
            [
              "948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a",
              "53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"
            ],
            [
              "6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8",
              "bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"
            ],
            [
              "e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d",
              "4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"
            ],
            [
              "e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725",
              "7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"
            ],
            [
              "213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754",
              "4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"
            ],
            [
              "4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c",
              "17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"
            ],
            [
              "fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6",
              "6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"
            ],
            [
              "76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39",
              "c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"
            ],
            [
              "c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891",
              "893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"
            ],
            [
              "d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b",
              "febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"
            ],
            [
              "b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03",
              "2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"
            ],
            [
              "e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d",
              "eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"
            ],
            [
              "a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070",
              "7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"
            ],
            [
              "90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4",
              "e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"
            ],
            [
              "8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da",
              "662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"
            ],
            [
              "e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11",
              "1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"
            ],
            [
              "8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e",
              "efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"
            ],
            [
              "e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41",
              "2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"
            ],
            [
              "b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef",
              "67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"
            ],
            [
              "d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8",
              "db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"
            ],
            [
              "324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d",
              "648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"
            ],
            [
              "4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96",
              "35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"
            ],
            [
              "9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd",
              "ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"
            ],
            [
              "6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5",
              "9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"
            ],
            [
              "a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266",
              "40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"
            ],
            [
              "7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71",
              "34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"
            ],
            [
              "928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac",
              "c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"
            ],
            [
              "85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751",
              "1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"
            ],
            [
              "ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e",
              "493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"
            ],
            [
              "827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241",
              "c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"
            ],
            [
              "eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3",
              "be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"
            ],
            [
              "e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f",
              "4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"
            ],
            [
              "1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19",
              "aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"
            ],
            [
              "146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be",
              "b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"
            ],
            [
              "fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9",
              "6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"
            ],
            [
              "da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2",
              "8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"
            ],
            [
              "a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13",
              "7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"
            ],
            [
              "174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c",
              "ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"
            ],
            [
              "959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba",
              "2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"
            ],
            [
              "d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151",
              "e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"
            ],
            [
              "64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073",
              "d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"
            ],
            [
              "8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458",
              "38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"
            ],
            [
              "13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b",
              "69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"
            ],
            [
              "bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366",
              "d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"
            ],
            [
              "8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa",
              "40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"
            ],
            [
              "8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0",
              "620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"
            ],
            [
              "dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787",
              "7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"
            ],
            [
              "f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e",
              "ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"
            ]
          ]
        },
        naf: {
          wnd: 7,
          points: [
            [
              "f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9",
              "388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"
            ],
            [
              "2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4",
              "d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"
            ],
            [
              "5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc",
              "6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"
            ],
            [
              "acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe",
              "cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"
            ],
            [
              "774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb",
              "d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"
            ],
            [
              "f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8",
              "ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"
            ],
            [
              "d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e",
              "581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"
            ],
            [
              "defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34",
              "4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"
            ],
            [
              "2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c",
              "85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"
            ],
            [
              "352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5",
              "321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"
            ],
            [
              "2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f",
              "2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"
            ],
            [
              "9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714",
              "73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"
            ],
            [
              "daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729",
              "a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"
            ],
            [
              "c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db",
              "2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"
            ],
            [
              "6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4",
              "e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"
            ],
            [
              "1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5",
              "b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"
            ],
            [
              "605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479",
              "2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"
            ],
            [
              "62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d",
              "80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"
            ],
            [
              "80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f",
              "1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"
            ],
            [
              "7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb",
              "d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"
            ],
            [
              "d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9",
              "eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"
            ],
            [
              "49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963",
              "758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"
            ],
            [
              "77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74",
              "958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"
            ],
            [
              "f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530",
              "e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"
            ],
            [
              "463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b",
              "5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"
            ],
            [
              "f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247",
              "cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"
            ],
            [
              "caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1",
              "cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"
            ],
            [
              "2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120",
              "4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"
            ],
            [
              "7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435",
              "91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"
            ],
            [
              "754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18",
              "673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"
            ],
            [
              "e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8",
              "59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"
            ],
            [
              "186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb",
              "3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"
            ],
            [
              "df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f",
              "55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"
            ],
            [
              "5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143",
              "efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"
            ],
            [
              "290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba",
              "e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"
            ],
            [
              "af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45",
              "f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"
            ],
            [
              "766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a",
              "744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"
            ],
            [
              "59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e",
              "c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"
            ],
            [
              "f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8",
              "e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"
            ],
            [
              "7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c",
              "30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"
            ],
            [
              "948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519",
              "e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"
            ],
            [
              "7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab",
              "100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"
            ],
            [
              "3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca",
              "ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"
            ],
            [
              "d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf",
              "8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"
            ],
            [
              "1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610",
              "68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"
            ],
            [
              "733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4",
              "f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"
            ],
            [
              "15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c",
              "d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"
            ],
            [
              "a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940",
              "edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"
            ],
            [
              "e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980",
              "a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"
            ],
            [
              "311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3",
              "66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"
            ],
            [
              "34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf",
              "9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"
            ],
            [
              "f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63",
              "4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"
            ],
            [
              "d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448",
              "fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"
            ],
            [
              "32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf",
              "5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"
            ],
            [
              "7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5",
              "8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"
            ],
            [
              "ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6",
              "8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"
            ],
            [
              "16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5",
              "5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"
            ],
            [
              "eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99",
              "f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"
            ],
            [
              "78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51",
              "f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"
            ],
            [
              "494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5",
              "42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"
            ],
            [
              "a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5",
              "204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"
            ],
            [
              "c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997",
              "4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"
            ],
            [
              "841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881",
              "73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"
            ],
            [
              "5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5",
              "39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"
            ],
            [
              "36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66",
              "d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"
            ],
            [
              "336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726",
              "ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"
            ],
            [
              "8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede",
              "6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"
            ],
            [
              "1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94",
              "60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"
            ],
            [
              "85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31",
              "3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"
            ],
            [
              "29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51",
              "b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"
            ],
            [
              "a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252",
              "ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"
            ],
            [
              "4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5",
              "cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"
            ],
            [
              "d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b",
              "6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"
            ],
            [
              "ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4",
              "322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"
            ],
            [
              "af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f",
              "6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"
            ],
            [
              "e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889",
              "2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"
            ],
            [
              "591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246",
              "b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"
            ],
            [
              "11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984",
              "998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"
            ],
            [
              "3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a",
              "b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"
            ],
            [
              "cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030",
              "bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"
            ],
            [
              "c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197",
              "6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"
            ],
            [
              "c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593",
              "c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"
            ],
            [
              "a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef",
              "21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"
            ],
            [
              "347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38",
              "60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"
            ],
            [
              "da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a",
              "49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"
            ],
            [
              "c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111",
              "5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"
            ],
            [
              "4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502",
              "7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"
            ],
            [
              "3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea",
              "be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"
            ],
            [
              "cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26",
              "8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"
            ],
            [
              "b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986",
              "39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"
            ],
            [
              "d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e",
              "62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"
            ],
            [
              "48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4",
              "25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"
            ],
            [
              "dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda",
              "ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"
            ],
            [
              "6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859",
              "cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"
            ],
            [
              "e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f",
              "f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"
            ],
            [
              "eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c",
              "6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"
            ],
            [
              "13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942",
              "fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"
            ],
            [
              "ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a",
              "1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"
            ],
            [
              "b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80",
              "5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"
            ],
            [
              "ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d",
              "438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"
            ],
            [
              "8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1",
              "cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"
            ],
            [
              "52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63",
              "c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"
            ],
            [
              "e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352",
              "6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"
            ],
            [
              "7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193",
              "ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"
            ],
            [
              "5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00",
              "9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"
            ],
            [
              "32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58",
              "ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"
            ],
            [
              "e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7",
              "d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"
            ],
            [
              "8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8",
              "c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"
            ],
            [
              "4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e",
              "67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"
            ],
            [
              "3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d",
              "cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"
            ],
            [
              "674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b",
              "299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"
            ],
            [
              "d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f",
              "f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"
            ],
            [
              "30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6",
              "462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"
            ],
            [
              "be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297",
              "62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"
            ],
            [
              "93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a",
              "7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"
            ],
            [
              "b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c",
              "ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"
            ],
            [
              "d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52",
              "4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"
            ],
            [
              "d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb",
              "bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"
            ],
            [
              "463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065",
              "bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"
            ],
            [
              "7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917",
              "603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"
            ],
            [
              "74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9",
              "cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"
            ],
            [
              "30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3",
              "553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"
            ],
            [
              "9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57",
              "712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"
            ],
            [
              "176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66",
              "ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"
            ],
            [
              "75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8",
              "9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"
            ],
            [
              "809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721",
              "9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"
            ],
            [
              "1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180",
              "4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"
            ]
          ]
        }
      };
    },
    "40c3": function(t, e, n) {
      var r = n("6b4c"),
        i = n("5168")("toStringTag"),
        a =
          "Arguments" ==
          r(
            (function() {
              return arguments;
            })()
          ),
        o = function(t, e) {
          try {
            return t[e];
          } catch (n) {}
        };
      t.exports = function(t) {
        var e, n, s;
        return void 0 === t
          ? "Undefined"
          : null === t
          ? "Null"
          : "string" == typeof (n = o((e = Object(t)), i))
          ? n
          : a
          ? r(e)
          : "Object" == (s = r(e)) && "function" == typeof e.callee
          ? "Arguments"
          : s;
      };
    },
    4111: function(t, e, n) {
      "use strict";
      var r = n("7f7a");
      e.certificate = n("56b5");
      var i = r.define("RSAPrivateKey", function() {
        this.seq().obj(
          this.key("version").int(),
          this.key("modulus").int(),
          this.key("publicExponent").int(),
          this.key("privateExponent").int(),
          this.key("prime1").int(),
          this.key("prime2").int(),
          this.key("exponent1").int(),
          this.key("exponent2").int(),
          this.key("coefficient").int()
        );
      });
      e.RSAPrivateKey = i;
      var a = r.define("RSAPublicKey", function() {
        this.seq().obj(
          this.key("modulus").int(),
          this.key("publicExponent").int()
        );
      });
      e.RSAPublicKey = a;
      var o = r.define("SubjectPublicKeyInfo", function() {
        this.seq().obj(
          this.key("algorithm").use(s),
          this.key("subjectPublicKey").bitstr()
        );
      });
      e.PublicKey = o;
      var s = r.define("AlgorithmIdentifier", function() {
          this.seq().obj(
            this.key("algorithm").objid(),
            this.key("none")
              .null_()
              .optional(),
            this.key("curve")
              .objid()
              .optional(),
            this.key("params")
              .seq()
              .obj(
                this.key("p").int(),
                this.key("q").int(),
                this.key("g").int()
              )
              .optional()
          );
        }),
        u = r.define("PrivateKeyInfo", function() {
          this.seq().obj(
            this.key("version").int(),
            this.key("algorithm").use(s),
            this.key("subjectPrivateKey").octstr()
          );
        });
      e.PrivateKey = u;
      var c = r.define("EncryptedPrivateKeyInfo", function() {
        this.seq().obj(
          this.key("algorithm")
            .seq()
            .obj(
              this.key("id").objid(),
              this.key("decrypt")
                .seq()
                .obj(
                  this.key("kde")
                    .seq()
                    .obj(
                      this.key("id").objid(),
                      this.key("kdeparams")
                        .seq()
                        .obj(this.key("salt").octstr(), this.key("iters").int())
                    ),
                  this.key("cipher")
                    .seq()
                    .obj(this.key("algo").objid(), this.key("iv").octstr())
                )
            ),
          this.key("subjectPrivateKey").octstr()
        );
      });
      e.EncryptedPrivateKey = c;
      var l = r.define("DSAPrivateKey", function() {
        this.seq().obj(
          this.key("version").int(),
          this.key("p").int(),
          this.key("q").int(),
          this.key("g").int(),
          this.key("pub_key").int(),
          this.key("priv_key").int()
        );
      });
      (e.DSAPrivateKey = l),
        (e.DSAparam = r.define("DSAparam", function() {
          this.int();
        }));
      var f = r.define("ECPrivateKey", function() {
        this.seq().obj(
          this.key("version").int(),
          this.key("privateKey").octstr(),
          this.key("parameters")
            .optional()
            .explicit(0)
            .use(h),
          this.key("publicKey")
            .optional()
            .explicit(1)
            .bitstr()
        );
      });
      e.ECPrivateKey = f;
      var h = r.define("ECParameters", function() {
        this.choice({ namedCurve: this.objid() });
      });
      e.signature = r.define("signature", function() {
        this.seq().obj(this.key("r").int(), this.key("s").int());
      });
    },
    4136: function(t, e, n) {
      "use strict";
      var r = e;
      (r.base = n("ea53")),
        (r.short = n("3300")),
        (r.mont = n("676f")),
        (r.edwards = n("3daf"));
    },
    4178: function(t, e, n) {
      var r,
        i,
        a,
        o = n("d864"),
        s = n("3024"),
        u = n("32fc"),
        c = n("1ec9"),
        l = n("e53d"),
        f = l.process,
        h = l.setImmediate,
        p = l.clearImmediate,
        d = l.MessageChannel,
        m = l.Dispatch,
        v = 0,
        y = {},
        g = "onreadystatechange",
        b = function() {
          var t = +this;
          if (y.hasOwnProperty(t)) {
            var e = y[t];
            delete y[t], e();
          }
        },
        w = function(t) {
          b.call(t.data);
        };
      (h && p) ||
        ((h = function(t) {
          var e = [],
            n = 1;
          while (arguments.length > n) e.push(arguments[n++]);
          return (
            (y[++v] = function() {
              s("function" == typeof t ? t : Function(t), e);
            }),
            r(v),
            v
          );
        }),
        (p = function(t) {
          delete y[t];
        }),
        "process" == n("6b4c")(f)
          ? (r = function(t) {
              f.nextTick(o(b, t, 1));
            })
          : m && m.now
          ? (r = function(t) {
              m.now(o(b, t, 1));
            })
          : d
          ? ((i = new d()),
            (a = i.port2),
            (i.port1.onmessage = w),
            (r = o(a.postMessage, a, 1)))
          : l.addEventListener &&
            "function" == typeof postMessage &&
            !l.importScripts
          ? ((r = function(t) {
              l.postMessage(t + "", "*");
            }),
            l.addEventListener("message", w, !1))
          : (r =
              g in c("script")
                ? function(t) {
                    u.appendChild(c("script"))[g] = function() {
                      u.removeChild(this), b.call(t);
                    };
                  }
                : function(t) {
                    setTimeout(o(b, t, 1), 0);
                  })),
        (t.exports = { set: h, clear: p });
    },
    "41a0": function(t, e, n) {
      "use strict";
      var r = n("2aeb"),
        i = n("4630"),
        a = n("7f20"),
        o = {};
      n("32e9")(o, n("2b4c")("iterator"), function() {
        return this;
      }),
        (t.exports = function(t, e, n) {
          (t.prototype = r(o, { next: i(1, n) })), a(t, e + " Iterator");
        });
    },
    "41df": function(t, e, n) {
      var r = e;
      (r.Reporter = n("d1c8").Reporter),
        (r.DecoderBuffer = n("6283").DecoderBuffer),
        (r.EncoderBuffer = n("6283").EncoderBuffer),
        (r.Node = n("8360"));
    },
    4228: function(t, e, n) {
      var r = n("82f0"),
        i = n("8707").Buffer,
        a = n("bac2"),
        o = n("09f5"),
        s = n("6430"),
        u = n("39f5"),
        c = n("ae84"),
        l = n("3fb5");
      function f(t, e, n) {
        s.call(this),
          (this._cache = new h()),
          (this._last = void 0),
          (this._cipher = new u.AES(e)),
          (this._prev = i.from(n)),
          (this._mode = t),
          (this._autopadding = !0);
      }
      function h() {
        this.cache = i.allocUnsafe(0);
      }
      function p(t) {
        var e = t[15];
        if (e < 1 || e > 16) throw new Error("unable to decrypt data");
        var n = -1;
        while (++n < e)
          if (t[n + (16 - e)] !== e) throw new Error("unable to decrypt data");
        if (16 !== e) return t.slice(0, 16 - e);
      }
      function d(t, e, n) {
        var s = a[t.toLowerCase()];
        if (!s) throw new TypeError("invalid suite type");
        if (
          ("string" === typeof n && (n = i.from(n)),
          "GCM" !== s.mode && n.length !== s.iv)
        )
          throw new TypeError("invalid iv length " + n.length);
        if (("string" === typeof e && (e = i.from(e)), e.length !== s.key / 8))
          throw new TypeError("invalid key length " + e.length);
        return "stream" === s.type
          ? new o(s.module, e, n, !0)
          : "auth" === s.type
          ? new r(s.module, e, n, !0)
          : new f(s.module, e, n);
      }
      function m(t, e) {
        var n = a[t.toLowerCase()];
        if (!n) throw new TypeError("invalid suite type");
        var r = c(e, !1, n.key, n.iv);
        return d(t, r.key, r.iv);
      }
      l(f, s),
        (f.prototype._update = function(t) {
          var e, n;
          this._cache.add(t);
          var r = [];
          while ((e = this._cache.get(this._autopadding)))
            (n = this._mode.decrypt(this, e)), r.push(n);
          return i.concat(r);
        }),
        (f.prototype._final = function() {
          var t = this._cache.flush();
          if (this._autopadding) return p(this._mode.decrypt(this, t));
          if (t) throw new Error("data not multiple of block length");
        }),
        (f.prototype.setAutoPadding = function(t) {
          return (this._autopadding = !!t), this;
        }),
        (h.prototype.add = function(t) {
          this.cache = i.concat([this.cache, t]);
        }),
        (h.prototype.get = function(t) {
          var e;
          if (t) {
            if (this.cache.length > 16)
              return (
                (e = this.cache.slice(0, 16)),
                (this.cache = this.cache.slice(16)),
                e
              );
          } else if (this.cache.length >= 16)
            return (
              (e = this.cache.slice(0, 16)),
              (this.cache = this.cache.slice(16)),
              e
            );
          return null;
        }),
        (h.prototype.flush = function() {
          if (this.cache.length) return this.cache;
        }),
        (e.createDecipher = m),
        (e.createDecipheriv = d);
    },
    "429b": function(t, e, n) {
      t.exports = n("faa1").EventEmitter;
    },
    "43fc": function(t, e, n) {
      "use strict";
      var r = n("63b6"),
        i = n("656e"),
        a = n("4439");
      r(r.S, "Promise", {
        try: function(t) {
          var e = i.f(this),
            n = a(t);
          return (n.e ? e.reject : e.resolve)(n.v), e.promise;
        }
      });
    },
    4439: function(t, e) {
      t.exports = function(t) {
        try {
          return { e: !1, v: t() };
        } catch (e) {
          return { e: !0, v: e };
        }
      };
    },
    "44a3": function(t, e, n) {
      "use strict";
      var r = n("399f"),
        i = n("3337"),
        a = i.utils,
        o = a.assert,
        s = a.cachedProperty,
        u = a.parseBytes;
      function c(t, e) {
        (this.eddsa = t),
          "object" !== typeof e && (e = u(e)),
          Array.isArray(e) &&
            (e = {
              R: e.slice(0, t.encodingLength),
              S: e.slice(t.encodingLength)
            }),
          o(e.R && e.S, "Signature without R or S"),
          t.isPoint(e.R) && (this._R = e.R),
          e.S instanceof r && (this._S = e.S),
          (this._Rencoded = Array.isArray(e.R) ? e.R : e.Rencoded),
          (this._Sencoded = Array.isArray(e.S) ? e.S : e.Sencoded);
      }
      s(c, "S", function() {
        return this.eddsa.decodeInt(this.Sencoded());
      }),
        s(c, "R", function() {
          return this.eddsa.decodePoint(this.Rencoded());
        }),
        s(c, "Rencoded", function() {
          return this.eddsa.encodePoint(this.R());
        }),
        s(c, "Sencoded", function() {
          return this.eddsa.encodeInt(this.S());
        }),
        (c.prototype.toBytes = function() {
          return this.Rencoded().concat(this.Sencoded());
        }),
        (c.prototype.toHex = function() {
          return a.encode(this.toBytes(), "hex").toUpperCase();
        }),
        (t.exports = c);
    },
    4588: function(t, e) {
      var n = Math.ceil,
        r = Math.floor;
      t.exports = function(t) {
        return isNaN((t = +t)) ? 0 : (t > 0 ? r : n)(t);
      };
    },
    "45f2": function(t, e, n) {
      var r = n("d9f6").f,
        i = n("07e3"),
        a = n("5168")("toStringTag");
      t.exports = function(t, e, n) {
        t &&
          !i((t = n ? t : t.prototype), a) &&
          r(t, a, { configurable: !0, value: e });
      };
    },
    4630: function(t, e) {
      t.exports = function(t, e) {
        return {
          enumerable: !(1 & t),
          configurable: !(2 & t),
          writable: !(4 & t),
          value: e
        };
      };
    },
    4681: function(t, e, n) {
      "use strict";
      var r = n("966d");
      function i(t, e) {
        var n = this,
          i = this._readableState && this._readableState.destroyed,
          a = this._writableState && this._writableState.destroyed;
        return i || a
          ? (e
              ? e(t)
              : !t ||
                (this._writableState && this._writableState.errorEmitted) ||
                r.nextTick(o, this, t),
            this)
          : (this._readableState && (this._readableState.destroyed = !0),
            this._writableState && (this._writableState.destroyed = !0),
            this._destroy(t || null, function(t) {
              !e && t
                ? (r.nextTick(o, n, t),
                  n._writableState && (n._writableState.errorEmitted = !0))
                : e && e(t);
            }),
            this);
      }
      function a() {
        this._readableState &&
          ((this._readableState.destroyed = !1),
          (this._readableState.reading = !1),
          (this._readableState.ended = !1),
          (this._readableState.endEmitted = !1)),
          this._writableState &&
            ((this._writableState.destroyed = !1),
            (this._writableState.ended = !1),
            (this._writableState.ending = !1),
            (this._writableState.finished = !1),
            (this._writableState.errorEmitted = !1));
      }
      function o(t, e) {
        t.emit("error", e);
      }
      t.exports = { destroy: i, undestroy: a };
    },
    "481b": function(t, e) {
      t.exports = {};
    },
    "4a59": function(t, e, n) {
      var r = n("9b43"),
        i = n("1fa8"),
        a = n("33a4"),
        o = n("cb7c"),
        s = n("9def"),
        u = n("27ee"),
        c = {},
        l = {};
      e = t.exports = function(t, e, n, f, h) {
        var p,
          d,
          m,
          v,
          y = h
            ? function() {
                return t;
              }
            : u(t),
          g = r(n, f, e ? 2 : 1),
          b = 0;
        if ("function" != typeof y) throw TypeError(t + " is not iterable!");
        if (a(y)) {
          for (p = s(t.length); p > b; b++)
            if (
              ((v = e ? g(o((d = t[b]))[0], d[1]) : g(t[b])),
              v === c || v === l)
            )
              return v;
        } else
          for (m = y.call(t); !(d = m.next()).done; )
            if (((v = i(m, g, d.value, e)), v === c || v === l)) return v;
      };
      (e.BREAK = c), (e.RETURN = l);
    },
    "4bf8": function(t, e, n) {
      var r = n("be13");
      t.exports = function(t) {
        return Object(r(t));
      };
    },
    "4c95": function(t, e, n) {
      "use strict";
      var r = n("e53d"),
        i = n("584a"),
        a = n("d9f6"),
        o = n("8e60"),
        s = n("5168")("species");
      t.exports = function(t) {
        var e = "function" == typeof i[t] ? i[t] : r[t];
        o &&
          e &&
          !e[s] &&
          a.f(e, s, {
            configurable: !0,
            get: function() {
              return this;
            }
          });
      };
    },
    "4dd0": function(t, e, n) {
      var r = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m,
        i = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m,
        a = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m,
        o = n("ae84"),
        s = n("fda6"),
        u = n("8707").Buffer;
      t.exports = function(t, e) {
        var n,
          c = t.toString(),
          l = c.match(r);
        if (l) {
          var f = "aes" + l[1],
            h = u.from(l[2], "hex"),
            p = u.from(l[3].replace(/[\r\n]/g, ""), "base64"),
            d = o(e, h.slice(0, 8), parseInt(l[1], 10)).key,
            m = [],
            v = s.createDecipheriv(f, d, h);
          m.push(v.update(p)), m.push(v.final()), (n = u.concat(m));
        } else {
          var y = c.match(a);
          n = new u(y[2].replace(/[\r\n]/g, ""), "base64");
        }
        var g = c.match(i)[1];
        return { tag: g, data: n };
      };
    },
    "4e2b": function(t, e, n) {
      "use strict";
      var r = n("da3e"),
        i = n("3fb5"),
        a = n("1545"),
        o = a.utils,
        s = a.Cipher;
      function u() {
        (this.tmp = new Array(2)), (this.keys = null);
      }
      function c(t) {
        s.call(this, t);
        var e = new u();
        (this._desState = e), this.deriveKeys(e, t.key);
      }
      i(c, s),
        (t.exports = c),
        (c.create = function(t) {
          return new c(t);
        });
      var l = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];
      (c.prototype.deriveKeys = function(t, e) {
        (t.keys = new Array(32)),
          r.equal(e.length, this.blockSize, "Invalid key length");
        var n = o.readUInt32BE(e, 0),
          i = o.readUInt32BE(e, 4);
        o.pc1(n, i, t.tmp, 0), (n = t.tmp[0]), (i = t.tmp[1]);
        for (var a = 0; a < t.keys.length; a += 2) {
          var s = l[a >>> 1];
          (n = o.r28shl(n, s)), (i = o.r28shl(i, s)), o.pc2(n, i, t.keys, a);
        }
      }),
        (c.prototype._update = function(t, e, n, r) {
          var i = this._desState,
            a = o.readUInt32BE(t, e),
            s = o.readUInt32BE(t, e + 4);
          o.ip(a, s, i.tmp, 0),
            (a = i.tmp[0]),
            (s = i.tmp[1]),
            "encrypt" === this.type
              ? this._encrypt(i, a, s, i.tmp, 0)
              : this._decrypt(i, a, s, i.tmp, 0),
            (a = i.tmp[0]),
            (s = i.tmp[1]),
            o.writeUInt32BE(n, a, r),
            o.writeUInt32BE(n, s, r + 4);
        }),
        (c.prototype._pad = function(t, e) {
          for (var n = t.length - e, r = e; r < t.length; r++) t[r] = n;
          return !0;
        }),
        (c.prototype._unpad = function(t) {
          for (var e = t[t.length - 1], n = t.length - e; n < t.length; n++)
            r.equal(t[n], e);
          return t.slice(0, t.length - e);
        }),
        (c.prototype._encrypt = function(t, e, n, r, i) {
          for (var a = e, s = n, u = 0; u < t.keys.length; u += 2) {
            var c = t.keys[u],
              l = t.keys[u + 1];
            o.expand(s, t.tmp, 0), (c ^= t.tmp[0]), (l ^= t.tmp[1]);
            var f = o.substitute(c, l),
              h = o.permute(f),
              p = s;
            (s = (a ^ h) >>> 0), (a = p);
          }
          o.rip(s, a, r, i);
        }),
        (c.prototype._decrypt = function(t, e, n, r, i) {
          for (var a = n, s = e, u = t.keys.length - 2; u >= 0; u -= 2) {
            var c = t.keys[u],
              l = t.keys[u + 1];
            o.expand(a, t.tmp, 0), (c ^= t.tmp[0]), (l ^= t.tmp[1]);
            var f = o.substitute(c, l),
              h = o.permute(f),
              p = a;
            (a = (s ^ h) >>> 0), (s = p);
          }
          o.rip(a, s, r, i);
        });
    },
    "4ee1": function(t, e, n) {
      var r = n("5168")("iterator"),
        i = !1;
      try {
        var a = [7][r]();
        (a["return"] = function() {
          i = !0;
        }),
          Array.from(a, function() {
            throw 2;
          });
      } catch (o) {}
      t.exports = function(t, e) {
        if (!e && !i) return !1;
        var n = !1;
        try {
          var a = [7],
            s = a[r]();
          (s.next = function() {
            return { done: (n = !0) };
          }),
            (a[r] = function() {
              return s;
            }),
            t(a);
        } catch (o) {}
        return n;
      };
    },
    "4f66": function(t, e, n) {
      "use strict";
      (function(t, r, i) {
        n.d(e, "Cb", function() {
          return Eg;
        }),
          n.d(e, "Sc", function() {
            return hg;
          }),
          n.d(e, "Kb", function() {
            return Iv;
          }),
          n.d(e, "M", function() {
            return we;
          }),
          n.d(e, "x", function() {
            return bu;
          }),
          n.d(e, "ib", function() {
            return $y;
          }),
          n.d(e, "gc", function() {
            return Jy;
          }),
          n.d(e, "Qc", function() {
            return ot;
          }),
          n.d(e, "b", function() {
            return pg;
          }),
          n.d(e, "c", function() {
            return St;
          }),
          n.d(e, "Rc", function() {
            return Pt;
          }),
          n.d(e, "a", function() {
            return _e;
          }),
          n.d(e, "hb", function() {
            return bv;
          }),
          n.d(e, "ob", function() {
            return sv;
          }),
          n.d(e, "s", function() {
            return xf;
          }),
          n.d(e, "t", function() {
            return Ef;
          }),
          n.d(e, "u", function() {
            return Sf;
          }),
          n.d(e, "v", function() {
            return Nf;
          }),
          n.d(e, "C", function() {
            return Ou;
          }),
          n.d(e, "D", function() {
            return Iu;
          }),
          n.d(e, "E", function() {
            return Cu;
          }),
          n.d(e, "F", function() {
            return Au;
          }),
          n.d(e, "G", function() {
            return ku;
          }),
          n.d(e, "vc", function() {
            return Pu;
          }),
          n.d(e, "H", function() {
            return oh;
          }),
          n.d(e, "I", function() {
            return sh;
          }),
          n.d(e, "O", function() {
            return lh;
          }),
          n.d(e, "fc", function() {
            return fh;
          }),
          n.d(e, "J", function() {
            return hh;
          }),
          n.d(e, "xb", function() {
            return Vf;
          }),
          n.d(e, "Zb", function() {
            return gh;
          }),
          n.d(e, "zb", function() {
            return Th;
          }),
          n.d(e, "r", function() {
            return Rh;
          }),
          n.d(e, "mc", function() {
            return zh;
          }),
          n.d(e, "nc", function() {
            return Uh;
          }),
          n.d(e, "oc", function() {
            return Vh;
          }),
          n.d(e, "pc", function() {
            return Wh;
          }),
          n.d(e, "qc", function() {
            return $h;
          }),
          n.d(e, "d", function() {
            return Al;
          }),
          n.d(e, "e", function() {
            return kl;
          }),
          n.d(e, "f", function() {
            return Pl;
          }),
          n.d(e, "m", function() {
            return Tl;
          }),
          n.d(e, "n", function() {
            return Rl;
          }),
          n.d(e, "o", function() {
            return Dl;
          }),
          n.d(e, "q", function() {
            return Ml;
          }),
          n.d(e, "z", function() {
            return jl;
          }),
          n.d(e, "A", function() {
            return Ll;
          }),
          n.d(e, "K", function() {
            return Bl;
          }),
          n.d(e, "L", function() {
            return Fl;
          }),
          n.d(e, "T", function() {
            return zl;
          }),
          n.d(e, "U", function() {
            return Ul;
          }),
          n.d(e, "W", function() {
            return Vl;
          }),
          n.d(e, "ab", function() {
            return Wl;
          }),
          n.d(e, "rb", function() {
            return $l;
          }),
          n.d(e, "sb", function() {
            return ql;
          }),
          n.d(e, "Jb", function() {
            return Kl;
          }),
          n.d(e, "Wb", function() {
            return Gl;
          }),
          n.d(e, "bc", function() {
            return Xl;
          }),
          n.d(e, "ic", function() {
            return Yl;
          }),
          n.d(e, "jc", function() {
            return Ql;
          }),
          n.d(e, "kc", function() {
            return Zl;
          }),
          n.d(e, "lc", function() {
            return tf;
          }),
          n.d(e, "sc", function() {
            return ef;
          }),
          n.d(e, "wc", function() {
            return nf;
          }),
          n.d(e, "xc", function() {
            return rf;
          }),
          n.d(e, "Bc", function() {
            return af;
          }),
          n.d(e, "Fc", function() {
            return of;
          }),
          n.d(e, "Gc", function() {
            return sf;
          }),
          n.d(e, "i", function() {
            return rp;
          }),
          n.d(e, "j", function() {
            return ip;
          }),
          n.d(e, "k", function() {
            return ap;
          }),
          n.d(e, "l", function() {
            return op;
          }),
          n.d(e, "yb", function() {
            return up;
          }),
          n.d(e, "Bb", function() {
            return cp;
          }),
          n.d(e, "Db", function() {
            return lp;
          }),
          n.d(e, "Gb", function() {
            return fp;
          }),
          n.d(e, "Ec", function() {
            return hp;
          }),
          n.d(e, "Sb", function() {
            return pp;
          }),
          n.d(e, "S", function() {
            return Op;
          }),
          n.d(e, "eb", function() {
            return Cp;
          }),
          n.d(e, "fb", function() {
            return Ap;
          }),
          n.d(e, "mb", function() {
            return Tp;
          }),
          n.d(e, "nb", function() {
            return Rp;
          }),
          n.d(e, "Lb", function() {
            return jp;
          }),
          n.d(e, "g", function() {
            return ad;
          }),
          n.d(e, "h", function() {
            return od;
          }),
          n.d(e, "p", function() {
            return ud;
          }),
          n.d(e, "Q", function() {
            return cd;
          }),
          n.d(e, "bb", function() {
            return fd;
          }),
          n.d(e, "Ab", function() {
            return hd;
          }),
          n.d(e, "Eb", function() {
            return dd;
          }),
          n.d(e, "Fb", function() {
            return vd;
          }),
          n.d(e, "Hb", function() {
            return gd;
          }),
          n.d(e, "Ib", function() {
            return bd;
          }),
          n.d(e, "Qb", function() {
            return wd;
          }),
          n.d(e, "yc", function() {
            return xd;
          }),
          n.d(e, "Dc", function() {
            return Sd;
          }),
          n.d(e, "R", function() {
            return Wd;
          }),
          n.d(e, "lb", function() {
            return $d;
          }),
          n.d(e, "Rb", function() {
            return qd;
          }),
          n.d(e, "Xb", function() {
            return Hd;
          }),
          n.d(e, "ec", function() {
            return Kd;
          }),
          n.d(e, "ub", function() {
            return Td;
          }),
          n.d(e, "vb", function() {
            return Rd;
          }),
          n.d(e, "wb", function() {
            return Dd;
          }),
          n.d(e, "Tc", function() {
            return jd;
          }),
          n.d(e, "Uc", function() {
            return Ld;
          }),
          n.d(e, "w", function() {
            return gc;
          }),
          n.d(e, "y", function() {
            return bc;
          }),
          n.d(e, "B", function() {
            return wc;
          }),
          n.d(e, "N", function() {
            return xc;
          }),
          n.d(e, "V", function() {
            return Ec;
          }),
          n.d(e, "X", function() {
            return Sc;
          }),
          n.d(e, "Mb", function() {
            return Ic;
          }),
          n.d(e, "Pb", function() {
            return Cc;
          }),
          n.d(e, "Tb", function() {
            return Dc;
          }),
          n.d(e, "Ub", function() {
            return Mc;
          }),
          n.d(e, "Yb", function() {
            return jc;
          }),
          n.d(e, "tc", function() {
            return Lc;
          }),
          n.d(e, "zc", function() {
            return Bc;
          }),
          n.d(e, "Ac", function() {
            return Fc;
          }),
          n.d(e, "Kc", function() {
            return zc;
          }),
          n.d(e, "Oc", function() {
            return Uc;
          }),
          n.d(e, "Pc", function() {
            return Vc;
          }),
          n.d(e, "hc", function() {
            return Wc;
          }),
          n.d(e, "Z", function() {
            return Pn;
          }),
          n.d(e, "pb", function() {
            return Dn;
          }),
          n.d(e, "Nb", function() {
            return An;
          }),
          n.d(e, "Vb", function() {
            return Mn;
          }),
          n.d(e, "cc", function() {
            return xn;
          }),
          n.d(e, "Hc", function() {
            return _n;
          }),
          n.d(e, "Ic", function() {
            return En;
          }),
          n.d(e, "Vc", function() {
            return kn;
          }),
          n.d(e, "Ob", function() {
            return jn;
          }),
          n.d(e, "Wc", function() {
            return Ln;
          }),
          n.d(e, "Nc", function() {
            return Xd;
          }),
          n.d(e, "rc", function() {
            return pn;
          }),
          n.d(e, "tb", function() {
            return dn;
          }),
          n.d(e, "qb", function() {
            return Yd;
          }),
          n.d(e, "cb", function() {
            return om;
          }),
          n.d(e, "Cc", function() {
            return mm;
          }),
          n.d(e, "Lc", function() {
            return ym;
          }),
          n.d(e, "dc", function() {
            return bm;
          }),
          n.d(e, "Y", function() {
            return Sm;
          }),
          n.d(e, "gb", function() {
            return Nm;
          }),
          n.d(e, "ac", function() {
            return Om;
          }),
          n.d(e, "jb", function() {
            return Im;
          }),
          n.d(e, "uc", function() {
            return Pm;
          }),
          n.d(e, "db", function() {
            return Dm;
          }),
          n.d(e, "Mc", function() {
            return xg;
          }),
          n.d(e, "Jc", function() {
            return Se;
          }),
          n.d(e, "kb", function() {
            return Ne;
          }),
          n.d(e, "P", function() {
            return Oe;
          });
        /**
         * @license
         * Copyright 2019 Google LLC. All Rights Reserved.
         * Licensed under the Apache License, Version 2.0 (the "License");
         * you may not use this file except in compliance with the License.
         * You may obtain a copy of the License at
         *
         * http://www.apache.org/licenses/LICENSE-2.0
         *
         * Unless required by applicable law or agreed to in writing, software
         * distributed under the License is distributed on an "AS IS" BASIS,
         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
         * See the License for the specific language governing permissions and
         * limitations under the License.
         * =============================================================================
         */
        var a = function(t, e) {
          return (a =
            Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array &&
              function(t, e) {
                t.__proto__ = e;
              }) ||
            function(t, e) {
              for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
            })(t, e);
        };
        function o(t, e) {
          function n() {
            this.constructor = t;
          }
          a(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        }
        var s = function() {
          return (s =
            Object.assign ||
            function(t) {
              for (var e, n = 1, r = arguments.length; n < r; n++)
                for (var i in (e = arguments[n]))
                  Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
              return t;
            }).apply(this, arguments);
        };
        function u(t, e, n, r) {
          return new (n || (n = Promise))(function(i, a) {
            function o(t) {
              try {
                u(r.next(t));
              } catch (t) {
                a(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                a(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(o, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        }
        function c(t, e) {
          var n,
            r,
            i,
            a,
            o = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (a = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (a[Symbol.iterator] = function() {
                return this;
              }),
            a
          );
          function s(a) {
            return function(s) {
              return (function(a) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; o; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & a[0]
                            ? r.return
                            : a[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, a[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (a = [2 & a[0], i.value]), a[0])) {
                      case 0:
                      case 1:
                        i = a;
                        break;
                      case 4:
                        return o.label++, { value: a[1], done: !1 };
                      case 5:
                        o.label++, (r = a[1]), (a = [0]);
                        continue;
                      case 7:
                        (a = o.ops.pop()), o.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = o.trys).length > 0 && i[i.length - 1]) &&
                          (6 === a[0] || 2 === a[0])
                        ) {
                          o = 0;
                          continue;
                        }
                        if (
                          3 === a[0] &&
                          (!i || (a[1] > i[0] && a[1] < i[3]))
                        ) {
                          o.label = a[1];
                          break;
                        }
                        if (6 === a[0] && o.label < i[1]) {
                          (o.label = i[1]), (i = a);
                          break;
                        }
                        if (i && o.label < i[2]) {
                          (o.label = i[2]), o.ops.push(a);
                          break;
                        }
                        i[2] && o.ops.pop(), o.trys.pop();
                        continue;
                    }
                    a = e.call(t, o);
                  } catch (t) {
                    (a = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & a[0]) throw a[1];
                return { value: a[0] ? a[1] : void 0, done: !0 };
              })([a, s]);
            };
          }
        }
        var l = {},
          f = {
            alpha: !1,
            antialias: !1,
            premultipliedAlpha: !1,
            preserveDrawingBuffer: !1,
            depth: !1,
            stencil: !1,
            failIfMajorPerformanceCaveat: !0
          };
        function h(t) {
          t in l ||
            (document.createElement("canvas").addEventListener(
              "webglcontextlost",
              function(e) {
                e.preventDefault(), delete l[t];
              },
              !1
            ),
            (l[t] = p(t)));
          var e = l[t];
          return e.isContextLost()
            ? (delete l[t], h(t))
            : (e.disable(e.DEPTH_TEST),
              e.disable(e.STENCIL_TEST),
              e.disable(e.BLEND),
              e.disable(e.DITHER),
              e.disable(e.POLYGON_OFFSET_FILL),
              e.disable(e.SAMPLE_COVERAGE),
              e.enable(e.SCISSOR_TEST),
              e.enable(e.CULL_FACE),
              e.cullFace(e.BACK),
              l[t]);
        }
        function p(t) {
          if (1 !== t && 2 !== t)
            throw new Error(
              "Cannot get WebGL rendering context, WebGL is disabled."
            );
          var e = document.createElement("canvas");
          return 1 === t
            ? e.getContext("webgl", f) || e.getContext("experimental-webgl", f)
            : e.getContext("webgl2", f);
        }
        function d() {
          var t = navigator.userAgent || navigator.vendor || window.opera;
          return (
            /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(
              t
            ) ||
            /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(
              t.substr(0, 4)
            )
          );
        }
        function m(t) {
          for (var e = t.length, n = 0, r = 0; e > 0; )
            (r = (Math.random() * e) | 0),
              (n = t[--e]),
              (t[e] = t[r]),
              (t[r] = n);
        }
        function v(t, e, n) {
          return Math.max(t, Math.min(e, n));
        }
        function y(t) {
          return t % 2 == 0 ? t : t + 1;
        }
        function g(t) {
          for (var e = 0, n = 0; n < t.length; n++) e += t[n];
          return e;
        }
        function b(t, e) {
          var n = Math.random();
          return e * n + (1 - n) * t;
        }
        function w(t, e) {
          for (var n = 0, r = 0; r < t.length; r++) {
            var i = Number(t[r]) - Number(e[r]);
            n += i * i;
          }
          return n;
        }
        function _(t, e) {
          if (!t) throw new Error("string" == typeof e ? e : e());
        }
        function x(t, e, n) {
          void 0 === n && (n = ""),
            _(I(t, e), n + " Shapes " + t + " and " + e + " must match");
        }
        function E(t) {
          _(
            null != t,
            "The input to the tensor constructor must be a non-null value."
          );
        }
        function S(t, e) {
          if ((void 0 === e && (e = []), Array.isArray(t) || V(t)))
            for (var n = 0; n < t.length; ++n) S(t[n], e);
          else e.push(t);
          return e;
        }
        function N(t) {
          if (0 === t.length) return 1;
          for (var e = t[0], n = 1; n < t.length; n++) e *= t[n];
          return e;
        }
        function O(t) {
          return 0 === t.length;
        }
        function I(t, e) {
          if (t === e) return !0;
          if (null == t || null == e) return !1;
          if (t.length !== e.length) return !1;
          for (var n = 0; n < t.length; n++) if (t[n] !== e[n]) return !1;
          return !0;
        }
        function C(t) {
          return t % 1 == 0;
        }
        function A(t) {
          if (null != Math.tanh) return Math.tanh(t);
          if (t === 1 / 0) return 1;
          if (t === -1 / 0) return -1;
          var e = Math.exp(2 * t);
          return (e - 1) / (e + 1);
        }
        function k(t) {
          var e = Math.ceil(Math.sqrt(t));
          return [e, Math.ceil(t / e)];
        }
        function P(t) {
          for (var e = new Uint32Array(t), n = 0; n < t; ++n) e[n] = n;
          return m(e), e;
        }
        function T(t, e) {
          return e <= t.length ? t : t + " ".repeat(e - t.length);
        }
        function R(t, e, n) {
          return (
            void 0 === e &&
              (e = function(t) {
                return 0;
              }),
            new Promise(function(r, i) {
              var a = 0,
                o = function() {
                  if (t()) r();
                  else {
                    var s = e(++a);
                    null != n && a >= n ? i() : setTimeout(o, s);
                  }
                };
              o();
            })
          );
        }
        function D(t, e) {
          for (var n = 1, r = -1, i = 0; i < t.length; ++i)
            if (t[i] >= 0) n *= t[i];
            else if (-1 === t[i]) {
              if (-1 !== r)
                throw Error(
                  "Shapes can only have 1 implicit size. Found -1 at dim " +
                    r +
                    " and dim " +
                    i
                );
              r = i;
            } else if (t[i] < 0)
              throw Error(
                "Shapes can not be < 0. Found " + t[i] + " at dim " + i
              );
          if (-1 === r) {
            if (e > 0 && e !== n)
              throw Error(
                "Size(" + e + ") must match the product of shape " + t
              );
            return t;
          }
          if (0 === n)
            throw Error(
              "Cannot infer the missing size in [" +
                t +
                "] when there are 0 elements"
            );
          if (e % n != 0)
            throw Error(
              "The implicit shape can't be a fractional number. Got " +
                e +
                " / " +
                n
            );
          var a = t.slice();
          return (a[r] = e / n), a;
        }
        function M(t, e) {
          var n = e.length;
          return (
            _(
              (t =
                null == t
                  ? e.map(function(t, e) {
                      return e;
                    })
                  : [].concat(t)).every(function(t) {
                return t >= -n && t < n;
              }),
              "All values in axis param must be in range [-" +
                n +
                ", " +
                n +
                ") but got axis " +
                t
            ),
            _(
              t.every(function(t) {
                return C(t);
              }),
              "All values in axis param must be integers but got axis " + t
            ),
            t.map(function(t) {
              return t < 0 ? n + t : t;
            })
          );
        }
        function j(t, e) {
          for (
            var n = [],
              r = [],
              i = null == e ? null : M(e, t).sort(),
              a = 0,
              o = 0;
            o < t.length;
            ++o
          ) {
            if (null != i) {
              if (i[a] === o && 1 !== t[o])
                throw new Error(
                  "Can't squeeze axis " +
                    o +
                    " since its dim '" +
                    t[o] +
                    "' is not 1"
                );
              (null == i[a] || i[a] > o) &&
                1 === t[o] &&
                (n.push(t[o]), r.push(o)),
                i[a] <= o && a++;
            }
            1 !== t[o] && (n.push(t[o]), r.push(o));
          }
          return { newShape: n, keptDims: r };
        }
        function L(t, e) {
          var n = null;
          if (null == t || "float32" === t) n = new Float32Array(e);
          else if ("int32" === t) n = new Int32Array(e);
          else {
            if ("bool" !== t) throw new Error("Unknown data type " + t);
            n = new Uint8Array(e);
          }
          return n;
        }
        function B(t, e) {
          var n = null;
          if (null == t || "float32" === t) n = new Float32Array(e);
          else if ("int32" === t) n = new Int32Array(e);
          else if ("bool" === t) n = new Uint8Array(e);
          else {
            if ("string" !== t) throw new Error("Unknown data type " + t);
            n = new Array(e);
          }
          return n;
        }
        function F(t, e, n) {
          if ("float32" === e)
            for (var r = 0; r < t.length; r++) {
              var i = t[r];
              if (isNaN(i) || !isFinite(i))
                throw Error("The result of the '" + n + "' is " + i + ".");
            }
        }
        function z(t, e) {
          for (var n = 0; n < t.length; n++) {
            var r = t[n];
            if (isNaN(r) || !isFinite(r))
              throw Error(
                "A tensor of type " + e + " being uploaded contains " + r + "."
              );
          }
        }
        function U(t, e) {
          return (
            "complex64" !== e &&
            ("float32" !== e || "complex64" === t) &&
            ("int32" !== e || "float32" === t || "complex64" === t) &&
            ("bool" !== e || "bool" !== t)
          );
        }
        function V(t) {
          return (
            t instanceof Float32Array ||
            t instanceof Int32Array ||
            t instanceof Uint8Array
          );
        }
        function W(t) {
          if ("float32" === t || "int32" === t) return 4;
          if ("complex64" === t) return 8;
          if ("bool" === t) return 1;
          throw new Error("Unknown dtype " + t);
        }
        function $(t) {
          if (null == t) return 0;
          var e = 0;
          return (
            t.forEach(function(t) {
              return (e += 2 * t.length);
            }),
            e
          );
        }
        function q(t) {
          return "string" == typeof t || t instanceof String;
        }
        function H(t) {
          return "boolean" == typeof t;
        }
        function K(t) {
          return "number" == typeof t;
        }
        function G(t) {
          return Array.isArray(t)
            ? G(t[0])
            : t instanceof Float32Array
            ? "float32"
            : t instanceof Int32Array || t instanceof Uint8Array
            ? "int32"
            : K(t)
            ? "float32"
            : q(t)
            ? "string"
            : H(t)
            ? "bool"
            : "float32";
        }
        function X(t) {
          return !!(t && t.constructor && t.call && t.apply);
        }
        function J(t, e) {
          for (var n = e; n < t; ++n) if (t % n == 0) return n;
          return t;
        }
        function Y(t) {
          var e = t.length;
          if (e < 2) return [];
          var n = new Array(e - 1);
          n[e - 2] = t[e - 1];
          for (var r = e - 3; r >= 0; --r) n[r] = n[r + 1] * t[r + 1];
          return n;
        }
        function Q(t, e, n) {
          if ("string" === e)
            throw new Error("Cannot convert a string[] to a TypedArray");
          if ((Array.isArray(t) && (t = S(t)), n && z(t, e), et(t, e)))
            return t;
          if (null == e || "float32" === e || "complex64" === e)
            return new Float32Array(t);
          if ("int32" === e) return new Int32Array(t);
          if ("bool" === e) {
            for (var r = new Uint8Array(t.length), i = 0; i < r.length; ++i)
              0 !== Math.round(t[i]) && (r[i] = 1);
            return r;
          }
          throw new Error("Unknown data type " + e);
        }
        function Z(t, e, n) {
          var r = new Array();
          if (1 === e.length)
            for (var i = e[0], a = 0; a < i; a++) r[a] = n[t + a];
          else {
            i = e[0];
            var o = e.slice(1),
              s = o.reduce(function(t, e) {
                return t * e;
              });
            for (a = 0; a < i; a++) r[a] = Z(t + a * s, o, n);
          }
          return r;
        }
        function tt(t, e) {
          if (0 === t.length) return e[0];
          var n = t.reduce(function(t, e) {
            return t * e;
          });
          if (0 === n) return [];
          if (n !== e.length)
            throw new Error("[" + t + "] does not match the input size.");
          return Z(0, t, e);
        }
        function et(t, e) {
          return (
            (t instanceof Float32Array && "float32" === e) ||
            (t instanceof Int32Array && "int32" === e) ||
            (t instanceof Uint8Array && "bool" === e)
          );
        }
        function nt(t, e) {
          for (var n = rt(t, e), r = 0; r < n.length; r++) n[r] = 1;
          return n;
        }
        function rt(t, e) {
          if (null == e || "float32" === e || "complex64" === e)
            return new Float32Array(t);
          if ("int32" === e) return new Int32Array(t);
          if ("bool" === e) return new Uint8Array(t);
          throw new Error("Unknown data type " + e);
        }
        function it() {
          if ("undefined" != typeof performance) return performance.now();
          if ("undefined" != typeof t) {
            var e = t.hrtime();
            return 1e3 * e[0] + e[1] / 1e6;
          }
          throw new Error(
            "Cannot measure time in this environment. You should run tf.js in the browser or in Node.js"
          );
        }
        function at(t, e, n, r) {
          !(function(t) {
            _(
              null != t && Array.isArray(t) && t.length > 0,
              "promises must be a none empty array"
            );
          })(t),
            (function(t, e) {
              _(
                t >= 0 && t <= 1,
                "Progress fraction must be in range [0, 1], but got startFraction " +
                  t
              ),
                _(
                  e >= 0 && e <= 1,
                  "Progress fraction must be in range [0, 1], but got endFraction " +
                    e
                ),
                _(
                  e >= t,
                  "startFraction must be no more than endFraction, but got startFraction " +
                    t +
                    " and endFraction " +
                    e
                );
            })((n = null == n ? 0 : n), (r = null == r ? 1 : r));
          var i = 0;
          return Promise.all(
            t.map(function(a) {
              return (
                a.then(function(a) {
                  var o = n + (++i / t.length) * (r - n);
                  return e(o), a;
                }),
                a
              );
            })
          );
        }
        var ot = Object.freeze({
            shuffle: m,
            clamp: v,
            nearestLargerEven: y,
            sum: g,
            randUniform: b,
            distSquared: w,
            assert: _,
            assertShapesMatch: x,
            assertNonNull: E,
            flatten: S,
            sizeFromShape: N,
            isScalarShape: O,
            arraysEqual: I,
            isInt: C,
            tanh: A,
            sizeToSquarishShape: k,
            createShuffledIndices: P,
            rightPad: T,
            repeatedTry: R,
            inferFromImplicitShape: D,
            parseAxisParam: M,
            squeezeShape: j,
            getTypedArrayFromDType: L,
            getArrayFromDType: B,
            checkComputationForErrors: F,
            checkConversionForErrors: z,
            hasEncodingLoss: U,
            isTypedArray: V,
            bytesPerElement: W,
            bytesFromStringArray: $,
            isString: q,
            isBoolean: H,
            isNumber: K,
            inferDtype: G,
            isFunction: X,
            nearestDivisor: J,
            computeStrides: Y,
            toTypedArray: Q,
            toNestedArray: tt,
            makeOnesTypedArray: nt,
            makeZerosTypedArray: rt,
            now: it,
            monitorPromisesProgress: at
          }),
          st = (function() {
            function t(t, e) {
              (this.backendTimer = t),
                (this.logger = e),
                null == e && (this.logger = new ut());
            }
            return (
              (t.prototype.profileKernel = function(t, e) {
                var n,
                  r = this,
                  i = this.backendTimer.time(function() {
                    n = e();
                  });
                return (
                  (Array.isArray(n) ? n : [n]).forEach(function(e) {
                    var n = e.dataSync();
                    F(n, e.dtype, t),
                      i.then(function(i) {
                        var a = "";
                        null != i.getExtraProfileInfo &&
                          (a = i.getExtraProfileInfo()),
                          r.logger.logKernelProfile(t, e, n, i.kernelMs, a);
                      });
                  }),
                  n
                );
              }),
              t
            );
          })(),
          ut = (function() {
            function t() {}
            return (
              (t.prototype.logKernelProfile = function(t, e, n, r, i) {
                var a = T(r + "ms", 9),
                  o = T(t, 25),
                  s = e.rank,
                  u = e.size,
                  c = T(e.shape.toString(), 14);
                console.log(
                  "%c" +
                    o +
                    "\t%c" +
                    a +
                    "\t%c" +
                    s +
                    "D " +
                    c +
                    "\t%c" +
                    u +
                    "\t%c" +
                    i,
                  "font-weight:bold",
                  "color:red",
                  "color:blue",
                  "color: orange",
                  "color: green"
                );
              }),
              t
            );
          })(),
          ct = 20,
          lt = 3,
          ft = 7;
        function ht(t, e, n, r) {
          var i = Y(e),
            a = pt(t, e, n, i),
            o = e.length,
            s = mt(t, e, n, i, a),
            u = ["Tensor"];
          return (
            r &&
              (u.push("  dtype: " + n),
              u.push("  rank: " + o),
              u.push("  shape: [" + e + "]"),
              u.push("  values:")),
            u.push(
              s
                .map(function(t) {
                  return "    " + t;
                })
                .join("\n")
            ),
            u.join("\n")
          );
        }
        function pt(t, e, n, r) {
          var i = N(e),
            a = r[r.length - 1],
            o = new Array(a).fill(0),
            s = e.length,
            u = "complex64" === n ? vt(t) : t;
          if (s > 1)
            for (var c = 0; c < i / a; c++)
              for (var l = c * a, f = 0; f < a; f++)
                o[f] = Math.max(o[f], dt(u[l + f], 0).length);
          return o;
        }
        function dt(t, e) {
          return T(
            Array.isArray(t)
              ? parseFloat(t[0].toFixed(ft)) +
                  " + " +
                  parseFloat(t[1].toFixed(ft)) +
                  "j"
              : q(t)
              ? "'" + t + "'"
              : parseFloat(t.toFixed(ft)).toString(),
            e
          );
        }
        function mt(t, e, n, r, i, a) {
          void 0 === a && (a = !0);
          var o = "complex64" === n ? 2 : 1,
            s = e[0],
            u = e.length;
          if (0 === u)
            return "complex64" === n ? [dt(vt(t)[0], 0)] : [t[0].toString()];
          if (1 === u) {
            if (s > ct) {
              var c = lt * o,
                l = Array.from(t.slice(0, c)),
                f = Array.from(t.slice(s - lt * o, s));
              return (
                "complex64" === n && ((l = vt(l)), (f = vt(f))),
                [
                  "[" +
                    l
                      .map(function(t, e) {
                        return dt(t, i[e]);
                      })
                      .join(", ") +
                    ", ..., " +
                    f
                      .map(function(t, e) {
                        return dt(t, i[s - lt + e]);
                      })
                      .join(", ") +
                    "]"
                ]
              );
            }
            return [
              "[" +
                ("complex64" === n ? vt(t) : Array.from(t))
                  .map(function(t, e) {
                    return dt(t, i[e]);
                  })
                  .join(", ") +
                "]"
            ];
          }
          var h = e.slice(1),
            p = r.slice(1),
            d = r[0] * o,
            m = [];
          if (s > ct) {
            for (var v = 0; v < lt; v++) {
              var y = (g = v * d) + d;
              m.push.apply(m, mt(t.slice(g, y), h, n, p, i, !1));
            }
            for (m.push("..."), v = s - lt; v < s; v++)
              (y = (g = v * d) + d),
                m.push.apply(m, mt(t.slice(g, y), h, n, p, i, v === s - 1));
          } else
            for (v = 0; v < s; v++) {
              var g;
              (y = (g = v * d) + d),
                m.push.apply(m, mt(t.slice(g, y), h, n, p, i, v === s - 1));
            }
          var b = 2 === u ? "," : "";
          for (m[0] = "[" + m[0] + b, v = 1; v < m.length - 1; v++)
            m[v] = " " + m[v] + b;
          var w = ",\n";
          for (v = 2; v < u; v++) w += "\n";
          return (
            (m[m.length - 1] = " " + m[m.length - 1] + "]" + (a ? "" : w)), m
          );
        }
        function vt(t) {
          for (var e = [], n = 0; n < t.length; n += 2)
            e.push([t[n], t[n + 1]]);
          return e;
        }
        var yt = (function() {
            function t(t, e, n) {
              if (
                ((this.dtype = e),
                (this.shape = t.slice()),
                (this.size = N(t)),
                null != n)
              ) {
                var r = n.length;
                _(
                  r === this.size,
                  "Length of values '" +
                    r +
                    "' does not match the size inferred by the shape '" +
                    this.size +
                    "'."
                );
              }
              if ("complex64" === e)
                throw new Error(
                  "complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag)."
                );
              (this.values = n || B(e, N(this.shape))), (this.strides = Y(t));
            }
            return (
              (t.prototype.set = function(t) {
                for (var e = [], n = 1; n < arguments.length; n++)
                  e[n - 1] = arguments[n];
                0 === e.length && (e = [0]),
                  _(
                    e.length === this.rank,
                    "The number of provided coordinates (" +
                      e.length +
                      ") must match the rank (" +
                      this.rank +
                      ")"
                  );
                var r = this.locToIndex(e);
                this.values[r] = t;
              }),
              (t.prototype.get = function() {
                for (var t = [], e = 0; e < arguments.length; e++)
                  t[e] = arguments[e];
                0 === t.length && (t = [0]);
                for (var n = t[t.length - 1], r = 0; r < t.length - 1; ++r)
                  n += this.strides[r] * t[r];
                return this.values[n];
              }),
              (t.prototype.locToIndex = function(t) {
                if (0 === this.rank) return 0;
                if (1 === this.rank) return t[0];
                for (var e = t[t.length - 1], n = 0; n < t.length - 1; ++n)
                  e += this.strides[n] * t[n];
                return e;
              }),
              (t.prototype.indexToLoc = function(t) {
                if (0 === this.rank) return [];
                if (1 === this.rank) return [t];
                for (
                  var e = new Array(this.shape.length), n = 0;
                  n < e.length - 1;
                  ++n
                )
                  (e[n] = Math.floor(t / this.strides[n])),
                    (t -= e[n] * this.strides[n]);
                return (e[e.length - 1] = t), e;
              }),
              Object.defineProperty(t.prototype, "rank", {
                get: function() {
                  return this.shape.length;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.toTensor = function() {
                return St.make(this.shape, { values: this.values }, this.dtype);
              }),
              t
            );
          })(),
          gt = null,
          bt = null,
          wt = null;
        function _t(t) {
          gt = t;
        }
        function xt(t) {
          bt = t;
        }
        function Et(t) {
          wt = t;
        }
        var St = (function() {
          function t(t, e, n, r) {
            (this.isDisposedInternal = !1),
              (this.shape = t.slice()),
              (this.dtype = e || "float32"),
              (this.size = N(t)),
              (this.strides = Y(t)),
              (this.dataId = null != r ? r : {}),
              (this.id = gt().nextTensorId()),
              (this.rankType = this.rank < 5 ? this.rank.toString() : "higher"),
              gt().registerTensor(this),
              null != n && gt().write(this.dataId, n);
          }
          return (
            (t.make = function(e, n, r) {
              return new t(e, r, n.values, n.dataId);
            }),
            (t.prototype.flatten = function() {
              return this.throwIfDisposed(), this.as1D();
            }),
            (t.prototype.asScalar = function() {
              return (
                this.throwIfDisposed(),
                _(1 === this.size, "The array must have only 1 element."),
                this.reshape([])
              );
            }),
            (t.prototype.as1D = function() {
              return this.throwIfDisposed(), this.reshape([this.size]);
            }),
            (t.prototype.as2D = function(t, e) {
              return this.throwIfDisposed(), this.reshape([t, e]);
            }),
            (t.prototype.as3D = function(t, e, n) {
              return this.throwIfDisposed(), this.reshape([t, e, n]);
            }),
            (t.prototype.as4D = function(t, e, n, r) {
              return this.throwIfDisposed(), this.reshape([t, e, n, r]);
            }),
            (t.prototype.as5D = function(t, e, n, r, i) {
              return this.throwIfDisposed(), this.reshape([t, e, n, r, i]);
            }),
            (t.prototype.asType = function(t) {
              return this.throwIfDisposed(), bt.cast(this, t);
            }),
            Object.defineProperty(t.prototype, "rank", {
              get: function() {
                return this.shape.length;
              },
              enumerable: !0,
              configurable: !0
            }),
            (t.prototype.get = function() {
              for (var t = [], e = 0; e < arguments.length; e++)
                t[e] = arguments[e];
              wt(
                "Tensor.get() is deprecated. Use Tensor.array() and native array indexing instead."
              ),
                _(
                  t.length === this.rank,
                  "Number of coordinates in get() must match the rank of the tensor"
                ),
                _(
                  "complex64" !== this.dtype,
                  "Tensor.get() is not supported for complex64 tensors yet."
                ),
                this.throwIfDisposed(),
                0 === t.length && (t = [0]);
              for (var n = t[t.length - 1], r = 0; r < t.length - 1; ++r)
                n += this.strides[r] * t[r];
              return this.dataSync()[n];
            }),
            (t.prototype.buffer = function() {
              return (
                wt(
                  "Tensor.buffer() is renamed to Tensor.bufferSync() in TensorFlow.js 1.0 and Tensor.buffer() will become an async function."
                ),
                bt.buffer(this.shape, this.dtype, this.dataSync())
              );
            }),
            (t.prototype.bufferSync = function() {
              return bt.buffer(this.shape, this.dtype, this.dataSync());
            }),
            (t.prototype.array = function() {
              return u(this, void 0, void 0, function() {
                var t, e;
                return c(this, function(n) {
                  switch (n.label) {
                    case 0:
                      return (t = tt), (e = [this.shape]), [4, this.data()];
                    case 1:
                      return [2, t.apply(void 0, e.concat([n.sent()]))];
                  }
                });
              });
            }),
            (t.prototype.arraySync = function() {
              return tt(this.shape, this.dataSync());
            }),
            (t.prototype.data = function() {
              return u(this, void 0, void 0, function() {
                return c(this, function(t) {
                  return this.throwIfDisposed(), [2, gt().read(this.dataId)];
                });
              });
            }),
            (t.prototype.dataSync = function() {
              return this.throwIfDisposed(), gt().readSync(this.dataId);
            }),
            (t.prototype.dispose = function() {
              this.isDisposed ||
                (gt().disposeTensor(this), (this.isDisposedInternal = !0));
            }),
            Object.defineProperty(t.prototype, "isDisposed", {
              get: function() {
                return this.isDisposedInternal;
              },
              enumerable: !0,
              configurable: !0
            }),
            (t.prototype.throwIfDisposed = function() {
              if (this.isDisposed) throw new Error("Tensor is disposed.");
            }),
            (t.prototype.toFloat = function() {
              return this.asType("float32");
            }),
            (t.prototype.toInt = function() {
              return this.asType("int32");
            }),
            (t.prototype.toBool = function() {
              return this.asType("bool");
            }),
            (t.prototype.print = function(t) {
              return void 0 === t && (t = !1), bt.print(this, t);
            }),
            (t.prototype.reshape = function(t) {
              return this.throwIfDisposed(), bt.reshape(this, t);
            }),
            (t.prototype.reshapeAs = function(t) {
              return this.throwIfDisposed(), this.reshape(t.shape);
            }),
            (t.prototype.expandDims = function(t) {
              return void 0 === t && (t = 0), bt.expandDims(this, t);
            }),
            (t.prototype.cumsum = function(t, e, n) {
              return (
                void 0 === t && (t = 0),
                void 0 === e && (e = !1),
                void 0 === n && (n = !1),
                bt.cumsum(this, t, e, n)
              );
            }),
            (t.prototype.squeeze = function(t) {
              return this.throwIfDisposed(), bt.squeeze(this, t);
            }),
            (t.prototype.clone = function() {
              return this.throwIfDisposed(), bt.clone(this);
            }),
            (t.prototype.oneHot = function(t, e, n) {
              return this.throwIfDisposed(), bt.oneHot(this, t, e, n);
            }),
            (t.prototype.toString = function(t) {
              return (
                void 0 === t && (t = !1),
                ht(this.dataSync(), this.shape, this.dtype, t)
              );
            }),
            (t.prototype.tile = function(t) {
              return this.throwIfDisposed(), bt.tile(this, t);
            }),
            (t.prototype.gather = function(t, e) {
              return (
                void 0 === e && (e = 0),
                this.throwIfDisposed(),
                bt.gather(this, t, e)
              );
            }),
            (t.prototype.matMul = function(t, e, n) {
              return (
                void 0 === e && (e = !1),
                void 0 === n && (n = !1),
                this.throwIfDisposed(),
                bt.matMul(this, t, e, n)
              );
            }),
            (t.prototype.dot = function(t) {
              return this.throwIfDisposed(), bt.dot(this, t);
            }),
            (t.prototype.norm = function(t, e, n) {
              return (
                void 0 === t && (t = "euclidean"),
                void 0 === e && (e = null),
                void 0 === n && (n = !1),
                this.throwIfDisposed(),
                bt.norm(this, t, e, n)
              );
            }),
            (t.prototype.slice = function(t, e) {
              return this.throwIfDisposed(), bt.slice(this, t, e);
            }),
            (t.prototype.reverse = function(t) {
              return this.throwIfDisposed(), bt.reverse(this, t);
            }),
            (t.prototype.concat = function(e, n) {
              return (
                void 0 === n && (n = 0),
                this.throwIfDisposed(),
                e instanceof t && (e = [e]),
                bt.concat([this].concat(e), n)
              );
            }),
            (t.prototype.split = function(t, e) {
              return (
                void 0 === e && (e = 0),
                this.throwIfDisposed(),
                bt.split(this, t, e)
              );
            }),
            (t.prototype.stack = function(t, e) {
              return void 0 === e && (e = 0), bt.stack([this, t], e);
            }),
            (t.prototype.unstack = function(t) {
              return void 0 === t && (t = 0), bt.unstack(this, t);
            }),
            (t.prototype.pad = function(t, e) {
              return void 0 === e && (e = 0), bt.pad(this, t, e);
            }),
            (t.prototype.batchNormalization = function(t, e, n, r, i) {
              return (
                void 0 === n && (n = 0.001),
                wt(
                  "tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon"
                ),
                this.batchNorm(t, e, i, r, n)
              );
            }),
            (t.prototype.batchNorm = function(t, e, n, r, i) {
              return (
                void 0 === i && (i = 0.001),
                this.throwIfDisposed(),
                bt.batchNorm(this, t, e, n, r, i)
              );
            }),
            (t.prototype.all = function(t, e) {
              return (
                void 0 === t && (t = null),
                void 0 === e && (e = !1),
                this.throwIfDisposed(),
                bt.all(this, t, e)
              );
            }),
            (t.prototype.any = function(t, e) {
              return (
                void 0 === t && (t = null),
                void 0 === e && (e = !1),
                this.throwIfDisposed(),
                bt.any(this, t, e)
              );
            }),
            (t.prototype.logSumExp = function(t, e) {
              return (
                void 0 === t && (t = null),
                void 0 === e && (e = !1),
                this.throwIfDisposed(),
                bt.logSumExp(this, t, e)
              );
            }),
            (t.prototype.sum = function(t, e) {
              return (
                void 0 === t && (t = null),
                void 0 === e && (e = !1),
                this.throwIfDisposed(),
                bt.sum(this, t, e)
              );
            }),
            (t.prototype.prod = function(t, e) {
              return (
                void 0 === t && (t = null),
                void 0 === e && (e = !1),
                this.throwIfDisposed(),
                bt.prod(this, t, e)
              );
            }),
            (t.prototype.mean = function(t, e) {
              return (
                void 0 === t && (t = null),
                void 0 === e && (e = !1),
                this.throwIfDisposed(),
                bt.mean(this, t, e)
              );
            }),
            (t.prototype.min = function(t, e) {
              return (
                void 0 === t && (t = null),
                void 0 === e && (e = !1),
                this.throwIfDisposed(),
                bt.min(this, t, e)
              );
            }),
            (t.prototype.max = function(t, e) {
              return (
                void 0 === t && (t = null),
                void 0 === e && (e = !1),
                this.throwIfDisposed(),
                bt.max(this, t, e)
              );
            }),
            (t.prototype.argMin = function(t) {
              return (
                void 0 === t && (t = null),
                this.throwIfDisposed(),
                bt.argMin(this, t)
              );
            }),
            (t.prototype.argMax = function(t) {
              return (
                void 0 === t && (t = null),
                this.throwIfDisposed(),
                bt.argMax(this, t)
              );
            }),
            (t.prototype.cast = function(t) {
              return this.throwIfDisposed(), bt.cast(this, t);
            }),
            (t.prototype.add = function(t) {
              return this.throwIfDisposed(), bt.add(this, t);
            }),
            (t.prototype.addStrict = function(t) {
              return this.throwIfDisposed(), bt.addStrict(this, t);
            }),
            (t.prototype.atan2 = function(t) {
              return this.throwIfDisposed(), bt.atan2(this, t);
            }),
            (t.prototype.sub = function(t) {
              return this.throwIfDisposed(), bt.sub(this, t);
            }),
            (t.prototype.subStrict = function(t) {
              return this.throwIfDisposed(), bt.subStrict(this, t);
            }),
            (t.prototype.pow = function(t) {
              return this.throwIfDisposed(), bt.pow(this, t);
            }),
            (t.prototype.powStrict = function(t) {
              return this.throwIfDisposed(), bt.powStrict(this, t);
            }),
            (t.prototype.mul = function(t) {
              return this.throwIfDisposed(), bt.mul(this, t);
            }),
            (t.prototype.mulStrict = function(t) {
              return this.throwIfDisposed(), bt.mulStrict(this, t);
            }),
            (t.prototype.div = function(t) {
              return this.throwIfDisposed(), bt.div(this, t);
            }),
            (t.prototype.floorDiv = function(t) {
              return this.throwIfDisposed(), bt.floorDiv(this, t);
            }),
            (t.prototype.divStrict = function(t) {
              return this.throwIfDisposed(), bt.divStrict(this, t);
            }),
            (t.prototype.minimum = function(t) {
              return this.throwIfDisposed(), bt.minimum(this, t);
            }),
            (t.prototype.minimumStrict = function(t) {
              return this.throwIfDisposed(), bt.minimumStrict(this, t);
            }),
            (t.prototype.maximum = function(t) {
              return this.throwIfDisposed(), bt.maximum(this, t);
            }),
            (t.prototype.maximumStrict = function(t) {
              return this.throwIfDisposed(), bt.maximumStrict(this, t);
            }),
            (t.prototype.mod = function(t) {
              return this.throwIfDisposed(), bt.mod(this, t);
            }),
            (t.prototype.modStrict = function(t) {
              return this.throwIfDisposed(), bt.modStrict(this, t);
            }),
            (t.prototype.squaredDifference = function(t) {
              return this.throwIfDisposed(), bt.squaredDifference(this, t);
            }),
            (t.prototype.squaredDifferenceStrict = function(t) {
              return (
                this.throwIfDisposed(), bt.squaredDifferenceStrict(this, t)
              );
            }),
            (t.prototype.transpose = function(t) {
              return this.throwIfDisposed(), bt.transpose(this, t);
            }),
            (t.prototype.notEqual = function(t) {
              return this.throwIfDisposed(), bt.notEqual(this, t);
            }),
            (t.prototype.notEqualStrict = function(t) {
              return this.throwIfDisposed(), bt.notEqualStrict(this, t);
            }),
            (t.prototype.less = function(t) {
              return this.throwIfDisposed(), bt.less(this, t);
            }),
            (t.prototype.lessStrict = function(t) {
              return this.throwIfDisposed(), bt.lessStrict(this, t);
            }),
            (t.prototype.equal = function(t) {
              return this.throwIfDisposed(), bt.equal(this, t);
            }),
            (t.prototype.equalStrict = function(t) {
              return this.throwIfDisposed(), bt.equalStrict(this, t);
            }),
            (t.prototype.lessEqual = function(t) {
              return this.throwIfDisposed(), bt.lessEqual(this, t);
            }),
            (t.prototype.lessEqualStrict = function(t) {
              return this.throwIfDisposed(), bt.lessEqualStrict(this, t);
            }),
            (t.prototype.greater = function(t) {
              return this.throwIfDisposed(), bt.greater(this, t);
            }),
            (t.prototype.greaterStrict = function(t) {
              return this.throwIfDisposed(), bt.greaterStrict(this, t);
            }),
            (t.prototype.greaterEqual = function(t) {
              return this.throwIfDisposed(), bt.greaterEqual(this, t);
            }),
            (t.prototype.greaterEqualStrict = function(t) {
              return this.throwIfDisposed(), bt.greaterEqualStrict(this, t);
            }),
            (t.prototype.logicalAnd = function(t) {
              return this.throwIfDisposed(), bt.logicalAnd(this, t);
            }),
            (t.prototype.logicalOr = function(t) {
              return this.throwIfDisposed(), bt.logicalOr(this, t);
            }),
            (t.prototype.logicalNot = function() {
              return this.throwIfDisposed(), bt.logicalNot(this);
            }),
            (t.prototype.logicalXor = function(t) {
              return this.throwIfDisposed(), bt.logicalXor(this, t);
            }),
            (t.prototype.where = function(t, e) {
              return this.throwIfDisposed(), bt.where(t, this, e);
            }),
            (t.prototype.neg = function() {
              return this.throwIfDisposed(), bt.neg(this);
            }),
            (t.prototype.ceil = function() {
              return this.throwIfDisposed(), bt.ceil(this);
            }),
            (t.prototype.floor = function() {
              return this.throwIfDisposed(), bt.floor(this);
            }),
            (t.prototype.sign = function() {
              return this.throwIfDisposed(), bt.sign(this);
            }),
            (t.prototype.exp = function() {
              return this.throwIfDisposed(), bt.exp(this);
            }),
            (t.prototype.expm1 = function() {
              return this.throwIfDisposed(), bt.expm1(this);
            }),
            (t.prototype.log = function() {
              return this.throwIfDisposed(), bt.log(this);
            }),
            (t.prototype.log1p = function() {
              return this.throwIfDisposed(), bt.log1p(this);
            }),
            (t.prototype.sqrt = function() {
              return this.throwIfDisposed(), bt.sqrt(this);
            }),
            (t.prototype.rsqrt = function() {
              return this.throwIfDisposed(), bt.rsqrt(this);
            }),
            (t.prototype.square = function() {
              return this.throwIfDisposed(), bt.square(this);
            }),
            (t.prototype.reciprocal = function() {
              return this.throwIfDisposed(), bt.reciprocal(this);
            }),
            (t.prototype.abs = function() {
              return this.throwIfDisposed(), bt.abs(this);
            }),
            (t.prototype.clipByValue = function(t, e) {
              return this.throwIfDisposed(), bt.clipByValue(this, t, e);
            }),
            (t.prototype.relu = function() {
              return this.throwIfDisposed(), bt.relu(this);
            }),
            (t.prototype.elu = function() {
              return this.throwIfDisposed(), bt.elu(this);
            }),
            (t.prototype.selu = function() {
              return this.throwIfDisposed(), bt.selu(this);
            }),
            (t.prototype.leakyRelu = function(t) {
              return (
                void 0 === t && (t = 0.2),
                this.throwIfDisposed(),
                bt.leakyRelu(this, t)
              );
            }),
            (t.prototype.prelu = function(t) {
              return this.throwIfDisposed(), bt.prelu(this, t);
            }),
            (t.prototype.sigmoid = function() {
              return this.throwIfDisposed(), bt.sigmoid(this);
            }),
            (t.prototype.logSigmoid = function() {
              return this.throwIfDisposed(), bt.logSigmoid(this);
            }),
            (t.prototype.softplus = function() {
              return this.throwIfDisposed(), bt.softplus(this);
            }),
            (t.prototype.zerosLike = function() {
              return this.throwIfDisposed(), bt.zerosLike(this);
            }),
            (t.prototype.onesLike = function() {
              return this.throwIfDisposed(), bt.onesLike(this);
            }),
            (t.prototype.sin = function() {
              return this.throwIfDisposed(), bt.sin(this);
            }),
            (t.prototype.cos = function() {
              return this.throwIfDisposed(), bt.cos(this);
            }),
            (t.prototype.tan = function() {
              return this.throwIfDisposed(), bt.tan(this);
            }),
            (t.prototype.asin = function() {
              return this.throwIfDisposed(), bt.asin(this);
            }),
            (t.prototype.acos = function() {
              return this.throwIfDisposed(), bt.acos(this);
            }),
            (t.prototype.atan = function() {
              return this.throwIfDisposed(), bt.atan(this);
            }),
            (t.prototype.sinh = function() {
              return this.throwIfDisposed(), bt.sinh(this);
            }),
            (t.prototype.cosh = function() {
              return this.throwIfDisposed(), bt.cosh(this);
            }),
            (t.prototype.tanh = function() {
              return this.throwIfDisposed(), bt.tanh(this);
            }),
            (t.prototype.asinh = function() {
              return this.throwIfDisposed(), bt.asinh(this);
            }),
            (t.prototype.acosh = function() {
              return this.throwIfDisposed(), bt.acosh(this);
            }),
            (t.prototype.atanh = function() {
              return this.throwIfDisposed(), bt.atanh(this);
            }),
            (t.prototype.erf = function() {
              return this.throwIfDisposed(), bt.erf(this);
            }),
            (t.prototype.round = function() {
              return this.throwIfDisposed(), bt.round(this);
            }),
            (t.prototype.step = function(t) {
              return (
                void 0 === t && (t = 0),
                this.throwIfDisposed(),
                bt.step(this, t)
              );
            }),
            (t.prototype.softmax = function(t) {
              return (
                void 0 === t && (t = -1),
                this.throwIfDisposed(),
                bt.softmax(this, t)
              );
            }),
            (t.prototype.logSoftmax = function(t) {
              return (
                void 0 === t && (t = -1),
                this.throwIfDisposed(),
                bt.logSoftmax(this, t)
              );
            }),
            (t.prototype.resizeBilinear = function(t, e) {
              return (
                void 0 === e && (e = !1),
                this.throwIfDisposed(),
                bt.image.resizeBilinear(this, t, e)
              );
            }),
            (t.prototype.resizeNearestNeighbor = function(t, e) {
              return (
                void 0 === e && (e = !1),
                this.throwIfDisposed(),
                bt.image.resizeNearestNeighbor(this, t, e)
              );
            }),
            (t.prototype.conv1d = function(t, e, n, r, i, a) {
              return (
                void 0 === r && (r = "NWC"),
                void 0 === i && (i = 1),
                this.throwIfDisposed(),
                bt.conv1d(this, t, e, n, r, i, a)
              );
            }),
            (t.prototype.conv2d = function(t, e, n, r, i, a) {
              return (
                void 0 === r && (r = "NHWC"),
                void 0 === i && (i = [1, 1]),
                this.throwIfDisposed(),
                bt.conv2d(this, t, e, n, r, i, a)
              );
            }),
            (t.prototype.conv2dTranspose = function(t, e, n, r, i) {
              return (
                this.throwIfDisposed(), bt.conv2dTranspose(this, t, e, n, r, i)
              );
            }),
            (t.prototype.depthwiseConv2D = function(t, e, n, r, i, a) {
              return (
                void 0 === r && (r = "NHWC"),
                void 0 === i && (i = [1, 1]),
                this.throwIfDisposed(),
                bt.depthwiseConv2d(this, t, e, n, r, i, a)
              );
            }),
            (t.prototype.separableConv2d = function(t, e, n, r, i, a) {
              return (
                void 0 === i && (i = [1, 1]),
                void 0 === a && (a = "NHWC"),
                this.throwIfDisposed(),
                bt.separableConv2d(this, t, e, n, r, i, a)
              );
            }),
            (t.prototype.avgPool = function(t, e, n, r) {
              return this.throwIfDisposed(), bt.avgPool(this, t, e, n, r);
            }),
            (t.prototype.maxPool = function(t, e, n, r) {
              return this.throwIfDisposed(), bt.maxPool(this, t, e, n, r);
            }),
            (t.prototype.localResponseNormalization = function(t, e, n, r) {
              return (
                void 0 === t && (t = 5),
                void 0 === e && (e = 1),
                void 0 === n && (n = 1),
                void 0 === r && (r = 0.5),
                bt.localResponseNormalization(this, t, e, n, r)
              );
            }),
            (t.prototype.pool = function(t, e, n, r, i) {
              return this.throwIfDisposed(), bt.pool(this, t, e, n, r, i);
            }),
            (t.prototype.variable = function(t, e, n) {
              return (
                void 0 === t && (t = !0),
                this.throwIfDisposed(),
                Nt.variable(this, t, e, n)
              );
            }),
            (t.prototype.unsortedSegmentSum = function(t, e) {
              return this.throwIfDisposed(), bt.unsortedSegmentSum(this, t, e);
            }),
            (t.prototype.batchToSpaceND = function(t, e) {
              return this.throwIfDisposed(), bt.batchToSpaceND(this, t, e);
            }),
            (t.prototype.spaceToBatchND = function(t, e) {
              return this.throwIfDisposed(), bt.spaceToBatchND(this, t, e);
            }),
            (t.prototype.topk = function(t, e) {
              return (
                void 0 === t && (t = 1),
                void 0 === e && (e = !0),
                this.throwIfDisposed(),
                bt.topk(this, t, e)
              );
            }),
            (t.prototype.stridedSlice = function(t, e, n, r, i, a, o, s) {
              return (
                void 0 === r && (r = 0),
                void 0 === i && (i = 0),
                void 0 === a && (a = 0),
                void 0 === o && (o = 0),
                void 0 === s && (s = 0),
                this.throwIfDisposed(),
                bt.stridedSlice(this, t, e, n, r, i, a, o, s)
              );
            }),
            (t.prototype.depthToSpace = function(t, e) {
              return this.throwIfDisposed(), bt.depthToSpace(this, t, e);
            }),
            (t.prototype.fft = function() {
              return this.throwIfDisposed(), bt.spectral.fft(this);
            }),
            (t.prototype.ifft = function() {
              return this.throwIfDisposed(), bt.spectral.ifft(this);
            }),
            (t.prototype.rfft = function() {
              return this.throwIfDisposed(), bt.spectral.rfft(this);
            }),
            (t.prototype.irfft = function() {
              return this.throwIfDisposed(), bt.spectral.irfft(this);
            }),
            t
          );
        })();
        Object.defineProperty(St, Symbol.hasInstance, {
          value: function(t) {
            return (
              !!t && null != t.dataId && null != t.shape && null != t.dtype
            );
          }
        });
        var Nt = (function(t) {
          function e(e, n, r) {
            void 0 === n && (n = !0);
            var i = t.call(this, e.shape, e.dtype, null, e.dataId) || this;
            (i.trainable = n),
              (i.name = r),
              null == i.name &&
                (i.name = gt()
                  .nextVariableId()
                  .toString());
            try {
              gt().registerVariable(i);
            } catch (t) {
              throw (gt().disposeTensor(i), t);
            }
            return i;
          }
          return (
            o(e, t),
            (e.variable = function(t, n, r, i) {
              return (
                void 0 === n && (n = !0),
                null != i && i !== t.dtype && (t = t.asType(i)),
                new e(t, n, r)
              );
            }),
            (e.prototype.assign = function(t) {
              if (t.dtype !== this.dtype)
                throw new Error(
                  "dtype of the new value (" +
                    t.dtype +
                    ") and previous value (" +
                    this.dtype +
                    ") must match"
                );
              if (!I(t.shape, this.shape))
                throw new Error(
                  "shape of the new value (" +
                    t.shape +
                    ") and previous value (" +
                    this.shape +
                    ") must match"
                );
              gt().disposeTensor(this),
                (this.dataId = t.dataId),
                gt().registerTensor(this);
            }),
            e
          );
        })(St);
        Object.defineProperty(Nt, Symbol.hasInstance, {
          value: function(t) {
            return (
              t instanceof St &&
              null != t.assign &&
              t.assign instanceof Function
            );
          }
        });
        var Ot,
          It,
          Ct,
          At,
          kt,
          Pt = Nt.variable;
        function Tt(t, e, n) {
          for (var r = {}, i = {}, a = 0; a < e.length; a++) r[e[a].id] = !0;
          for (a = 0; a < t.length; a++) {
            var o = (d = t[a]).inputs;
            for (var s in o) {
              for (var u = o[s], c = !1, l = 0; l < e.length; l++)
                if (r[u.id]) {
                  d.outputs.forEach(function(t) {
                    return (r[t.id] = !0);
                  }),
                    (c = !0),
                    (i[d.id] = !0);
                  break;
                }
              if (c) break;
            }
          }
          var f = {};
          f[n.id] = !0;
          var h = {};
          for (a = t.length - 1; a >= 0; a--)
            for (o = (d = t[a]).inputs, l = 0; l < d.outputs.length; l++)
              if (f[d.outputs[l].id]) {
                for (var s in o) (f[o[s].id] = !0), (h[d.id] = !0);
                break;
              }
          var p = [];
          for (a = 0; a < t.length; a++) {
            var d;
            if (i[(d = t[a]).id] && h[d.id]) {
              var m = {};
              for (var s in d.inputs) {
                var v = d.inputs[s];
                r[v.id] && (m[s] = v);
              }
              var y = Object.assign({}, d);
              (y.inputs = m), (y.outputs = d.outputs), p.push(y);
            }
          }
          return p;
        }
        function Rt(t, e) {
          for (
            var n = function(n) {
                var r = e[n],
                  i = [];
                if (
                  (r.outputs.forEach(function(e) {
                    var n = t[e.id];
                    if (null != n) i.push(n);
                    else {
                      var r = St.make(
                        e.shape,
                        { values: rt(e.size, e.dtype) },
                        e.dtype
                      );
                      i.push(r);
                    }
                  }),
                  null == r.gradient)
                )
                  throw new Error(
                    "Cannot compute gradient: gradient function not found for " +
                      r.name +
                      "."
                  );
                var a = r.gradient(1 === r.outputs.length ? i[0] : i);
                for (var o in r.inputs) {
                  if (!(o in a))
                    throw new Error(
                      "Cannot backprop through input " +
                        o +
                        ". Available gradients found: " +
                        Object.keys(a) +
                        "."
                    );
                  var s = a[o]();
                  if ("float32" !== s.dtype)
                    throw new Error(
                      "Error in gradient for op " +
                        r.name +
                        ". The gradient of input " +
                        o +
                        " must have 'float32' dtype, but has '" +
                        s.dtype +
                        "'"
                    );
                  var u = r.inputs[o];
                  if (!I(s.shape, u.shape))
                    throw new Error(
                      "Error in gradient for op " +
                        r.name +
                        ". The gradient of input '" +
                        o +
                        "' has shape '" +
                        s.shape +
                        "', which does not match the shape of the input '" +
                        u.shape +
                        "'"
                    );
                  if (null == t[u.id]) t[u.id] = s;
                  else {
                    var c = t[u.id];
                    (t[u.id] = c.add(s)), c.dispose();
                  }
                }
              },
              r = e.length - 1;
            r >= 0;
            r--
          )
            n(r);
        }
        !(function(t) {
          (t.R0 = "R0"),
            (t.R1 = "R1"),
            (t.R2 = "R2"),
            (t.R3 = "R3"),
            (t.R4 = "R4"),
            (t.R5 = "R5"),
            (t.R6 = "R6");
        })(Ot || (Ot = {})),
          (function(t) {
            (t.float32 = "float32"),
              (t.int32 = "int32"),
              (t.bool = "int32"),
              (t.complex64 = "complex64");
          })(It || (It = {})),
          (function(t) {
            (t.float32 = "float32"),
              (t.int32 = "int32"),
              (t.bool = "bool"),
              (t.complex64 = "complex64");
          })(Ct || (Ct = {})),
          (function(t) {
            (t.float32 = "float32"),
              (t.int32 = "float32"),
              (t.bool = "float32"),
              (t.complex64 = "complex64");
          })(At || (At = {})),
          (function(t) {
            (t.float32 = "complex64"),
              (t.int32 = "complex64"),
              (t.bool = "complex64"),
              (t.complex64 = "complex64");
          })(kt || (kt = {}));
        var Dt = { float32: At, int32: It, bool: Ct, complex64: kt };
        function Mt(t, e) {
          if ("string" === t || "string" === e) {
            if ("string" === t && "string" === e) return "string";
            throw new Error("Can not upcast " + t + " with " + e);
          }
          return Dt[t][e];
        }
        function jt(t) {
          return Mt(t, "int32");
        }
        function Lt(t, e) {
          if (t.dtype === e.dtype) return [t, e];
          var n = Mt(t.dtype, e.dtype);
          return [t.cast(n), e.cast(n)];
        }
        function Bt(t, e) {
          _(
            t.dtype === e.dtype,
            "The dtypes of the first(" +
              t.dtype +
              ") and second(" +
              e.dtype +
              ") input must match"
          );
        }
        function Ft(t, e) {
          for (var n = 0; n < e.length; n++) if (e[n].id === t.id) return !0;
          return !1;
        }
        function zt(t) {
          var e = [];
          return Ut(t, e, new Set()), e;
        }
        function Ut(t, e, n) {
          if (null != t)
            if (t instanceof St) e.push(t);
            else if (Vt(t)) {
              var r = t;
              for (var i in r) {
                var a = r[i];
                n.has(a) || (n.add(a), Ut(a, e, n));
              }
            }
        }
        function Vt(t) {
          return Array.isArray(t) || "object" == typeof t;
        }
        var Wt,
          $t = (function() {
            function t(t, e, n) {
              (this.backend = t),
                (this.safeMode = e),
                (this.debugMode = n),
                (this.registeredVariables = {}),
                (this.nextTapeNodeId = 0),
                (this.numBytes = 0),
                (this.numTensors = 0),
                (this.numStringTensors = 0),
                (this.numDataBuffers = 0),
                (this.profiling = !1),
                (this.gradientScopeCount = 0),
                (this.customGradientDepth = 0),
                (this.scopeStack = []),
                (this.keepTensors = new Set()),
                (this.tensorInfo = new WeakMap()),
                (this.profiler = new st(t)),
                (this.activeProfile = {
                  newBytes: 0,
                  newTensors: 0,
                  peakBytes: 0,
                  kernels: [],
                  result: null
                });
            }
            return (
              (t.prototype.moveData = function(t) {
                this.write(t, this.readSync(t));
              }),
              (t.prototype.tidy = function(t, e, n) {
                var r = this;
                void 0 === n && (n = !1);
                var i,
                  a = null;
                if (null == e) {
                  if ("function" != typeof t)
                    throw new Error("Please provide a function to tidy()");
                  e = t;
                } else {
                  if ("string" != typeof t && !(t instanceof String))
                    throw new Error(
                      "When calling with two arguments, the first argument to tidy() must be a string"
                    );
                  if ("function" != typeof e)
                    throw new Error(
                      "When calling with two arguments, the 2nd argument to tidy() must be a function"
                    );
                  a = t;
                }
                return this.scopedRun(
                  function() {
                    return r.startScope(a, n);
                  },
                  function() {
                    return r.endScope(i, n);
                  },
                  function() {
                    return (
                      (i = e()) instanceof Promise &&
                        console.error(
                          "Cannot return a Promise inside of tidy."
                        ),
                      i
                    );
                  }
                );
              }),
              (t.prototype.scopedRun = function(t, e, n) {
                t();
                try {
                  var r = n();
                  return e(), r;
                } catch (t) {
                  throw (e(), t);
                }
              }),
              (t.prototype.nextTensorId = function() {
                return t.nextTensorId++;
              }),
              (t.prototype.nextVariableId = function() {
                return t.nextVariableId++;
              }),
              (t.prototype.runKernel = function(t, e, n) {
                var r,
                  i = this,
                  a = [],
                  o = function(t) {
                    return a.push(t), t;
                  },
                  s = null != this.activeScope ? this.activeScope.name : "",
                  u = this.numBytes,
                  c = this.numTensors;
                if (
                  (this.scopedRun(
                    function() {
                      return i.customGradientDepth++;
                    },
                    function() {
                      return i.customGradientDepth--;
                    },
                    function() {
                      r = i.debugMode()
                        ? i.profiler.profileKernel(s, function() {
                            return t(i.backend, o);
                          })
                        : t(i.backend, o);
                    }
                  ),
                  this.shouldRecord())
                ) {
                  var l = {
                    id: this.nextTapeNodeId++,
                    name: s,
                    inputs: e,
                    outputs: Array.isArray(r) ? r : [r]
                  };
                  null != n &&
                    (l.gradient = function(t) {
                      return n(t, a);
                    }),
                    this.activeTape.push(l);
                }
                return (
                  this.profiling &&
                    this.activeProfile.kernels.push({
                      name: s,
                      bytesAdded: this.numBytes - u,
                      totalBytesSnapshot: this.numBytes,
                      tensorsAdded: this.numTensors - c,
                      totalTensorsSnapshot: this.numTensors,
                      inputShapes: Object.keys(e).map(function(t) {
                        return e[t].shape;
                      }),
                      outputShape: Array.isArray(r)
                        ? r.map(function(t) {
                            return t.shape;
                          })
                        : r.shape
                    }),
                  r
                );
              }),
              (t.prototype.registerTensor = function(t) {
                var e = this.tensorInfo.has(t.dataId)
                  ? this.tensorInfo.get(t.dataId).refCount
                  : 0;
                if (
                  (this.numTensors++,
                  "string" === t.dtype && this.numStringTensors++,
                  0 === e)
                ) {
                  this.numDataBuffers++;
                  var n = 0;
                  "complex64" !== t.dtype &&
                    "string" !== t.dtype &&
                    (n = N(t.shape) * W(t.dtype)),
                    this.tensorInfo.set(t.dataId, {
                      backend: this.backend,
                      dtype: t.dtype,
                      shape: t.shape,
                      bytes: n,
                      refCount: 0
                    }),
                    (this.numBytes += n),
                    this.backend.register(t.dataId, t.shape, t.dtype);
                }
                this.tensorInfo.get(t.dataId).refCount++,
                  t instanceof Nt || this.track(t);
              }),
              (t.prototype.registerVariable = function(t) {
                if (null != this.registeredVariables[t.name])
                  throw new Error(
                    "Variable with name " + t.name + " was already registered"
                  );
                this.registeredVariables[t.name] = t;
              }),
              (t.prototype.disposeTensor = function(t) {
                if (this.tensorInfo.has(t.dataId)) {
                  this.keepTensors.has(t.id) && this.keepTensors.delete(t.id),
                    this.numTensors--,
                    "string" === t.dtype && this.numStringTensors--;
                  var e = this.tensorInfo.get(t.dataId);
                  e.refCount <= 1
                    ? ("complex64" !== t.dtype && (this.numBytes -= e.bytes),
                      this.numDataBuffers--,
                      e.backend.disposeData(t.dataId),
                      this.tensorInfo.delete(t.dataId))
                    : this.tensorInfo.get(t.dataId).refCount--;
                }
              }),
              (t.prototype.disposeVariables = function() {
                for (var t in this.registeredVariables) {
                  var e = this.registeredVariables[t];
                  this.disposeTensor(e), delete this.registeredVariables[t];
                }
              }),
              (t.prototype.memory = function() {
                var t = this.backend.memory();
                return (
                  (t.numTensors = this.numTensors),
                  (t.numDataBuffers = this.numDataBuffers),
                  (t.numBytes = this.numBytes),
                  this.numStringTensors > 0 &&
                    ((t.unreliable = !0),
                    null == t.reasons && (t.reasons = []),
                    t.reasons.push(
                      "Memory usage by string tensors is approximate (2 bytes per character)"
                    )),
                  t
                );
              }),
              (t.prototype.profile = function(t) {
                return u(this, void 0, void 0, function() {
                  var e, n;
                  return c(this, function(r) {
                    return (
                      (this.profiling = !0),
                      (e = this.numBytes),
                      (n = this.numTensors),
                      (this.activeProfile.kernels = []),
                      (this.activeProfile.result = t()),
                      (this.profiling = !1),
                      (this.activeProfile.peakBytes = Math.max.apply(
                        Math,
                        this.activeProfile.kernels.map(function(t) {
                          return t.totalBytesSnapshot;
                        })
                      )),
                      (this.activeProfile.newBytes = this.numBytes - e),
                      (this.activeProfile.newTensors = this.numTensors - n),
                      [2, this.activeProfile]
                    );
                  });
                });
              }),
              (t.prototype.shouldRecord = function() {
                return (
                  null != this.activeTape && 0 === this.customGradientDepth
                );
              }),
              (t.prototype.addTapeNode = function(t, e, n) {
                var r = {};
                t.forEach(function(t, e) {
                  r[e] = t;
                });
                var i = {
                  id: this.nextTapeNodeId++,
                  name: this.activeScope.name,
                  inputs: r,
                  outputs: [e],
                  gradient: function(t) {
                    var e = {};
                    return (
                      n(t).forEach(function(t, n) {
                        e[n] = function() {
                          return t;
                        };
                      }),
                      e
                    );
                  }
                };
                this.activeTape.push(i);
              }),
              (t.prototype.keep = function(t) {
                if (1 === this.scopeStack.length && this.safeMode)
                  throw new Error(
                    "Safe mode is ON. Enclose all tensor operations inside tf.tidy(): tf.tidy(() => {...}) to avoid memory leaks."
                  );
                return this.keepTensors.add(t.id), t;
              }),
              (t.prototype.startScope = function(t, e) {
                void 0 === e && (e = !1),
                  e && 0 === this.gradientScopeCount && (this.activeTape = []),
                  e && this.gradientScopeCount++;
                var n = { track: [], name: "unnamed scope" };
                t && (n.name = t),
                  this.scopeStack.push(n),
                  (this.activeScope = n);
              }),
              (t.prototype.endScope = function(t, e) {
                var n = this;
                void 0 === e && (e = !1),
                  e &&
                    (this.gradientScopeCount--,
                    0 === this.gradientScopeCount && (this.activeTape = null));
                var r = new Set(this.keepTensors),
                  i = zt(t);
                i.forEach(function(t) {
                  return r.add(t.id);
                });
                for (var a = 0; a < this.activeScope.track.length; a++) {
                  var o = this.activeScope.track[a];
                  r.has(o.id) ||
                    (null != this.activeTape ? i.push(o) : o.dispose());
                }
                var s = this.scopeStack.pop();
                (this.activeScope =
                  0 === this.scopeStack.length
                    ? null
                    : this.scopeStack[this.scopeStack.length - 1]),
                  i.forEach(function(t) {
                    !n.keepTensors.has(t.id) && Ft(t, s.track) && n.track(t);
                  });
              }),
              (t.prototype.gradients = function(t, e, n, r) {
                var i = this;
                if (
                  (void 0 === r && (r = !1),
                  _(e.length > 0, "gradients() received an empty list of xs."),
                  null != n && "float32" !== n.dtype)
                )
                  throw new Error(
                    "dy must have 'float32' dtype, but has '" + n.dtype + "'"
                  );
                return this.tidy(
                  "gradients",
                  function() {
                    var a = t();
                    _(
                      a instanceof St,
                      "The result y returned by f() must be a tensor."
                    );
                    var o = Tt(i.activeTape, e, a);
                    if (!r && 0 === o.length && e.length > 0)
                      throw new Error(
                        "Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y."
                      );
                    var s = {};
                    return (
                      (s[a.id] = null == n ? qt(a.shape) : n),
                      Rt(s, o),
                      {
                        value: a,
                        grads: e.map(function(t) {
                          return s[t.id];
                        })
                      }
                    );
                  },
                  !0
                );
              }),
              (t.prototype.customGrad = function(t) {
                var e = this;
                return (
                  _(X(t), "The f passed in customGrad(f) must be a function."),
                  function() {
                    for (var n, r, i = [], a = 0; a < arguments.length; a++)
                      i[a] = arguments[a];
                    return (
                      _(
                        i.every(function(t) {
                          return t instanceof St;
                        }),
                        "The args passed in customGrad(f)(x1, x2,...) must all be tensors"
                      ),
                      e.scopedRun(
                        function() {
                          return e.customGradientDepth++;
                        },
                        function() {
                          return e.customGradientDepth--;
                        },
                        function() {
                          r = e.tidy(
                            t.name,
                            function() {
                              var e = t.apply(void 0, i),
                                r = e.value,
                                a = e.gradFunc;
                              return (
                                _(
                                  r instanceof St,
                                  "The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"
                                ),
                                _(
                                  X(a),
                                  "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."
                                ),
                                (n = a),
                                r
                              );
                            },
                            !0
                          );
                        }
                      ),
                      e.shouldRecord() &&
                        e.addTapeNode(i, r, function(t) {
                          var e = n(t),
                            r = Array.isArray(e) ? e : [e];
                          return (
                            _(
                              r.length === i.length,
                              "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."
                            ),
                            _(
                              r.every(function(t) {
                                return t instanceof St;
                              }),
                              "The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."
                            ),
                            r
                          );
                        }),
                      r
                    );
                  }
                );
              }),
              (t.prototype.write = function(t, e) {
                var n = this.tensorInfo.get(t);
                if ("string" === n.dtype) {
                  var r = $(e);
                  (this.numBytes += r - n.bytes), (n.bytes = r);
                }
                this.backend !== n.backend &&
                  (n.backend.disposeData(t),
                  (n.backend = this.backend),
                  this.backend.register(t, n.shape, n.dtype)),
                  this.backend.write(t, e);
              }),
              (t.prototype.readSync = function(t) {
                return this.tensorInfo.get(t).backend.readSync(t);
              }),
              (t.prototype.read = function(t) {
                return this.tensorInfo.get(t).backend.read(t);
              }),
              (t.prototype.fromPixels = function(t, e) {
                return this.backend.fromPixels(t, e);
              }),
              (t.prototype.time = function(t) {
                return u(this, void 0, void 0, function() {
                  var e, n;
                  return c(this, function(r) {
                    switch (r.label) {
                      case 0:
                        return (e = it()), [4, this.backend.time(t)];
                      case 1:
                        return ((n = r.sent()).wallMs = it() - e), [2, n];
                    }
                  });
                });
              }),
              (t.prototype.track = function(t) {
                if (1 === this.scopeStack.length && this.safeMode)
                  throw new Error(
                    "Safe mode is ON. Enclose all tensor operations inside tf.tidy(): tf.tidy(() => {op();...}); to avoid memory leaks."
                  );
                return (
                  null != this.activeScope && this.activeScope.track.push(t), t
                );
              }),
              (t.nextTensorId = 0),
              (t.nextVariableId = 0),
              t
            );
          })();
        function qt(t) {
          var e = nt(N(t), "float32");
          return St.make(t, { values: e });
        }
        !(function(t) {
          (t[(t.NUMBER = 0)] = "NUMBER"),
            (t[(t.BOOLEAN = 1)] = "BOOLEAN"),
            (t[(t.STRING = 2)] = "STRING");
        })(Wt || (Wt = {}));
        var Ht,
          Kt,
          Gt = [
            { name: "DEBUG", type: Wt.BOOLEAN },
            { name: "IS_BROWSER", type: Wt.BOOLEAN },
            { name: "WEBGL_LAZILY_UNPACK", type: Wt.BOOLEAN },
            { name: "WEBGL_CPU_FORWARD", type: Wt.BOOLEAN },
            { name: "WEBGL_PACK", type: Wt.BOOLEAN },
            { name: "WEBGL_PACK_BATCHNORMALIZATION", type: Wt.BOOLEAN },
            { name: "WEBGL_PACK_CLIP", type: Wt.BOOLEAN },
            { name: "WEBGL_PACK_DEPTHWISECONV", type: Wt.BOOLEAN },
            { name: "WEBGL_PACK_BINARY_OPERATIONS", type: Wt.BOOLEAN },
            { name: "WEBGL_PACK_ARRAY_OPERATIONS", type: Wt.BOOLEAN },
            { name: "WEBGL_CONV_IM2COL", type: Wt.BOOLEAN },
            { name: "WEBGL_MAX_TEXTURE_SIZE", type: Wt.NUMBER },
            { name: "WEBGL_NUM_MB_BEFORE_PAGING", type: Wt.NUMBER },
            { name: "WEBGL_MAX_TEXTURES_IN_SHADER", type: Wt.NUMBER },
            {
              name: "WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",
              type: Wt.NUMBER
            },
            {
              name: "WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",
              type: Wt.BOOLEAN
            },
            { name: "WEBGL_VERSION", type: Wt.NUMBER },
            { name: "WEBGL_RENDER_FLOAT32_ENABLED", type: Wt.BOOLEAN },
            { name: "WEBGL_DOWNLOAD_FLOAT_ENABLED", type: Wt.BOOLEAN },
            { name: "WEBGL_FENCE_API_ENABLED", type: Wt.BOOLEAN },
            { name: "WEBGL_SIZE_UPLOAD_UNIFORM", type: Wt.NUMBER },
            { name: "BACKEND", type: Wt.STRING },
            { name: "EPSILON", type: Wt.NUMBER },
            { name: "PROD", type: Wt.BOOLEAN },
            { name: "TENSORLIKE_CHECK_SHAPE_CONSISTENCY", type: Wt.BOOLEAN },
            { name: "DEPRECATION_WARNINGS_ENABLED", type: Wt.BOOLEAN }
          ];
        function Xt(t) {
          try {
            if (null != h(t)) return !0;
          } catch (t) {
            return !1;
          }
          return !1;
        }
        function Jt(t) {
          if (null == Ht) {
            var e = h(t);
            Ht = e.getParameter(e.MAX_TEXTURE_SIZE);
          }
          return Ht;
        }
        function Yt(t) {
          if (null == Kt) {
            var e = h(t);
            Kt = e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS);
          }
          return Math.min(16, Kt);
        }
        function Qt(t) {
          if (0 === t) return 0;
          var e = h(t);
          return ae(e, "EXT_disjoint_timer_query_webgl2") && 2 === t
            ? 2
            : ae(e, "EXT_disjoint_timer_query")
            ? 1
            : 0;
        }
        function Zt(t) {
          if (0 === t) return !1;
          var e = h(t);
          if (1 === t) {
            if (!ae(e, "OES_texture_float")) return !1;
          } else if (!ae(e, "EXT_color_buffer_float")) return !1;
          return oe(e, t);
        }
        function te(t) {
          if (0 === t) return !1;
          var e = h(t);
          if (1 === t) {
            if (!ae(e, "OES_texture_float")) return !1;
            if (!ae(e, "WEBGL_color_buffer_float")) return !1;
          } else if (!ae(e, "EXT_color_buffer_float")) return !1;
          return oe(e, t);
        }
        function ee(t) {
          return 2 === t && null != h(t).fenceSync;
        }
        function ne() {
          return (
            "undefined" != typeof navigator &&
            null != navigator &&
            null != navigator.userAgent &&
            /Chrome/.test(navigator.userAgent) &&
            /Google Inc/.test(navigator.vendor)
          );
        }
        var re = "tfjsflags";
        function ie() {
          var t = {};
          if (
            "undefined" == typeof window ||
            void 0 === window.location ||
            void 0 === window.location.search
          )
            return t;
          var e = se(window.location.search);
          if (re in e) {
            var n = {};
            e[re].split(",").forEach(function(t) {
              var e = t.split(":"),
                r = e[0],
                i = e[1];
              n[r] = i;
            }),
              Gt.forEach(function(e) {
                e.name in n &&
                  (console.log(
                    "Setting feature override from URL " +
                      e.name +
                      ": " +
                      n[e.name]
                  ),
                  e.type === Wt.NUMBER
                    ? (t[e.name] = +n[e.name])
                    : e.type === Wt.BOOLEAN
                    ? (t[e.name] = "true" === n[e.name])
                    : e.type === Wt.STRING
                    ? (t[e.name] = n[e.name])
                    : console.warn("Unknown URL param: " + e.name + "."));
              });
          }
          return t;
        }
        function ae(t, e) {
          return null != t.getExtension(e);
        }
        function oe(t, e) {
          var n = t.createFramebuffer(),
            r = t.createTexture();
          t.bindTexture(t.TEXTURE_2D, r);
          var i = 2 === e ? t.RGBA32F : t.RGBA;
          t.texImage2D(t.TEXTURE_2D, 0, i, 1, 1, 0, t.RGBA, t.FLOAT, null),
            t.bindFramebuffer(t.FRAMEBUFFER, n),
            t.framebufferTexture2D(
              t.FRAMEBUFFER,
              t.COLOR_ATTACHMENT0,
              t.TEXTURE_2D,
              r,
              0
            );
          var a =
            t.checkFramebufferStatus(t.FRAMEBUFFER) === t.FRAMEBUFFER_COMPLETE;
          return (
            t.bindTexture(t.TEXTURE_2D, null),
            t.bindFramebuffer(t.FRAMEBUFFER, null),
            t.deleteTexture(r),
            t.deleteFramebuffer(n),
            a
          );
        }
        function se(t) {
          var e = {};
          return (
            t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, function(t) {
              for (var n = [], r = 1; r < arguments.length; r++)
                n[r - 1] = arguments[r];
              return ue(e, n[0], n[1]), n.join("=");
            }),
            e
          );
        }
        function ue(t, e, n) {
          t[decodeURIComponent(e)] = decodeURIComponent(n || "");
        }
        var ce = 600;
        function le() {
          return (
            (window.screen.height *
              window.screen.width *
              window.devicePixelRatio *
              ce) /
            1024
          );
        }
        var fe = 1e-4,
          he = 0.1,
          pe = 1e-7,
          de = 0.001,
          me = (function() {
            function e(t) {
              (this.features = {}),
                (this.registry = {}),
                null != t && (this.features = t),
                this.get("DEBUG") &&
                  console.warn(
                    "Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance."
                  );
            }
            return (
              (e.setBackend = function(t, e) {
                if ((void 0 === e && (e = !1), !(t in _e.registry)))
                  throw new Error(
                    "Backend name '" + t + "' not found in registry"
                  );
                (_e.engine.backend = _e.findBackend(t)), (_e.backendName = t);
              }),
              (e.getBackend = function() {
                return _e.initEngine(), _e.backendName;
              }),
              (e.disposeVariables = function() {
                _e.engine.disposeVariables();
              }),
              (e.memory = function() {
                return _e.engine.memory();
              }),
              (e.profile = function(t) {
                return _e.engine.profile(t);
              }),
              (e.tidy = function(t, e) {
                return _e.engine.tidy(t, e);
              }),
              (e.dispose = function(t) {
                zt(t).forEach(function(t) {
                  return t.dispose();
                });
              }),
              (e.keep = function(t) {
                return _e.engine.keep(t);
              }),
              (e.time = function(t) {
                return _e.engine.time(t);
              }),
              (e.prototype.get = function(t) {
                return t in this.features
                  ? this.features[t]
                  : ((this.features[t] = this.evaluateFeature(t)),
                    this.features[t]);
              }),
              (e.prototype.getFeatures = function() {
                return this.features;
              }),
              (e.prototype.set = function(t, e) {
                this.features[t] = e;
              }),
              (e.prototype.getBestBackendName = function() {
                var t = this;
                if (0 === Object.keys(this.registry).length)
                  throw new Error("No backend found in registry.");
                return Object.keys(this.registry)
                  .map(function(e) {
                    return { name: e, entry: t.registry[e] };
                  })
                  .sort(function(t, e) {
                    return e.entry.priority - t.entry.priority;
                  })[0].name;
              }),
              (e.prototype.evaluateFeature = function(e) {
                if ("DEBUG" === e) return !1;
                if ("IS_BROWSER" === e) return "undefined" != typeof window;
                if ("IS_NODE" === e)
                  return (
                    "undefined" != typeof t &&
                    void 0 !== t.versions &&
                    void 0 !== t.versions.node
                  );
                if ("IS_CHROME" === e) return ne();
                if ("WEBGL_CPU_FORWARD" === e) return !0;
                if ("WEBGL_PACK" === e) return !1;
                if ("WEBGL_PACK_BATCHNORMALIZATION" === e)
                  return this.get("WEBGL_PACK");
                if ("WEBGL_PACK_CLIP" === e) return this.get("WEBGL_PACK");
                if ("WEBGL_PACK_DEPTHWISECONV" === e)
                  return this.get("WEBGL_PACK");
                if ("WEBGL_PACK_BINARY_OPERATIONS" === e)
                  return this.get("WEBGL_PACK");
                if ("WEBGL_PACK_ARRAY_OPERATIONS" === e)
                  return this.get("WEBGL_PACK");
                if ("WEBGL_LAZILY_UNPACK" === e) return this.get("WEBGL_PACK");
                if ("WEBGL_CONV_IM2COL" === e) return this.get("WEBGL_PACK");
                if ("WEBGL_NUM_MB_BEFORE_PAGING" === e)
                  return this.get("PROD") || !this.get("IS_BROWSER")
                    ? Number.POSITIVE_INFINITY
                    : le();
                if ("WEBGL_MAX_TEXTURE_SIZE" === e)
                  return Jt(this.get("WEBGL_VERSION"));
                if ("WEBGL_MAX_TEXTURES_IN_SHADER" === e)
                  return Yt(this.get("WEBGL_VERSION"));
                if ("IS_TEST" === e) return !1;
                if ("BACKEND" === e) return this.getBestBackendName();
                if ("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION" === e) {
                  var n = this.get("WEBGL_VERSION");
                  return 0 === n ? 0 : Qt(n);
                }
                if ("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE" === e)
                  return (
                    this.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION") >
                      0 && !d()
                  );
                if ("HAS_WEBGL" === e) return this.get("WEBGL_VERSION") > 0;
                if ("WEBGL_VERSION" === e) return Xt(2) ? 2 : Xt(1) ? 1 : 0;
                if ("WEBGL_RENDER_FLOAT32_ENABLED" === e)
                  return Zt(this.get("WEBGL_VERSION"));
                if ("WEBGL_DOWNLOAD_FLOAT_ENABLED" === e)
                  return te(this.get("WEBGL_VERSION"));
                if ("WEBGL_FENCE_API_ENABLED" === e)
                  return ee(this.get("WEBGL_VERSION"));
                if ("WEBGL_SIZE_UPLOAD_UNIFORM" === e)
                  return this.get("WEBGL_RENDER_FLOAT32_ENABLED") ? 4 : 0;
                if ("TEST_EPSILON" === e)
                  return 32 === this.backend.floatPrecision() ? de : he;
                if ("EPSILON" === e)
                  return 32 === this.backend.floatPrecision() ? pe : fe;
                if ("PROD" === e) return !1;
                if ("TENSORLIKE_CHECK_SHAPE_CONSISTENCY" === e)
                  return !this.get("PROD");
                if ("DEPRECATION_WARNINGS_ENABLED" === e) return !0;
                throw new Error("Unknown feature " + e + ".");
              }),
              (e.prototype.setFeatures = function(t) {
                this.features = Object.assign({}, t);
              }),
              (e.prototype.reset = function() {
                (this.features = ie()),
                  null != this.globalEngine && (this.globalEngine = null);
              }),
              Object.defineProperty(e.prototype, "backend", {
                get: function() {
                  return this.engine.backend;
                },
                enumerable: !0,
                configurable: !0
              }),
              (e.prototype.findBackend = function(t) {
                return t in this.registry ? this.registry[t].backend : null;
              }),
              (e.prototype.registerBackend = function(t, e, n, r) {
                var i = this;
                if ((void 0 === n && (n = 1), t in this.registry))
                  return (
                    console.warn(
                      t +
                        " backend was already registered. Reusing existing backend"
                    ),
                    null != r &&
                      r(function() {
                        return i.engine;
                      }),
                    !1
                  );
                try {
                  var a = e();
                  return (
                    a.setDataMover({
                      moveData: function(t) {
                        return i.engine.moveData(t);
                      }
                    }),
                    (this.registry[t] = { backend: a, priority: n }),
                    !0
                  );
                } catch (e) {
                  return (
                    console.warn("Registration of backend " + t + " failed"),
                    console.warn(e.stack || e.message),
                    !1
                  );
                }
              }),
              (e.prototype.removeBackend = function(t) {
                if (!(t in this.registry))
                  throw new Error(t + " backend not found in registry");
                this.registry[t].backend.dispose(), delete this.registry[t];
              }),
              Object.defineProperty(e.prototype, "engine", {
                get: function() {
                  return this.initEngine(), this.globalEngine;
                },
                enumerable: !0,
                configurable: !0
              }),
              (e.prototype.initEngine = function() {
                var t = this;
                if (null == this.globalEngine) {
                  this.backendName = this.get("BACKEND");
                  var e = this.findBackend(this.backendName);
                  this.globalEngine = new $t(e, !1, function() {
                    return t.get("DEBUG");
                  });
                }
              }),
              e
            );
          })();
        function ve() {
          var e;
          if ("undefined" != typeof window) e = window;
          else {
            if ("undefined" == typeof t)
              throw new Error("Could not find a global object");
            e = t;
          }
          return e;
        }
        function ye() {
          var t = ve();
          return (
            null == t.ENV &&
              ((t.ENV = new me(ie())),
              _t(function() {
                return t.ENV.engine;
              })),
            t.ENV
          );
        }
        function ge() {
          _e.set("PROD", !0);
        }
        function be() {
          _e.set("DEPRECATION_WARNINGS_ENABLED", !1),
            console.warn(
              "TensorFlow.js deprecation warnings have been disabled."
            );
        }
        function we(t) {
          _e.get("DEPRECATION_WARNINGS_ENABLED") &&
            console.warn(
              t +
                " You can disable deprecation warnings with tf.disableDeprecationWarnings()."
            );
        }
        Et(we);
        var _e = ye();
        Object.freeze({
          EPSILON_FLOAT16: fe,
          EPSILON_FLOAT32: pe,
          Environment: me,
          enableProdMode: ge,
          disableDeprecationWarnings: be,
          deprecationWarn: we,
          ENV: _e
        });
        function xe(t, e) {
          if (
            (_(X(t), "The f passed in variableGrads(f) must be a function"),
            _(
              null == e ||
                (Array.isArray(e) &&
                  e.every(function(t) {
                    return t instanceof Nt;
                  })),
              "The varList passed in variableGrads(f, varList) must be an array of variables"
            ),
            null == e)
          )
            for (var n in ((e = []), _e.engine.registeredVariables))
              e.push(_e.engine.registeredVariables[n]);
          var r = e.length;
          _(
            (e = e.filter(function(t) {
              return t.trainable;
            })).length > 0,
            "variableGrads() expects at least one of the input variables to be trainable, but none of the " +
              r +
              " variables is trainable."
          );
          var i = _e.engine.gradients(t, e, null, !0),
            a = i.value,
            o = i.grads;
          _(
            o.some(function(t) {
              return null != t;
            }),
            "Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."
          ),
            _(
              0 === a.rank,
              "The f passed in variableGrads(f) must return a scalar, but it returned a rank-" +
                a.rank +
                " tensor"
            );
          var s = {};
          return (
            e.forEach(function(t, e) {
              null != o[e] && (s[t.name] = o[e]);
            }),
            { value: a, grads: s }
          );
        }
        function Ee(t) {
          return _e.engine.customGrad(t);
        }
        var Se = me.tidy,
          Ne = me.keep,
          Oe = me.dispose;
        me.time, me.profile;
        function Ie() {
          for (var t = [], e = 0; e < arguments.length; e++)
            t[e] = arguments[e];
          _e.get("IS_TEST") || console.warn.apply(console, t);
        }
        function Ce(t, e, n, r) {
          void 0 === r && (r = !0);
          var i = [];
          if (r)
            (i = i.concat(e.slice(0))).push(t[0] / n),
              (i = i.concat(t.slice(1)));
          else {
            i = i.concat(t[0]);
            for (var a = e.length, o = 0; o < a; ++o)
              i = i.concat([t[o + 1] / e[o], e[o]]);
            i = i.concat(t.slice(a + 1));
          }
          return i;
        }
        function Ae(t, e, n) {
          void 0 === n && (n = !0);
          var r = [];
          if (n) {
            r.push(e);
            for (var i = e + 1; i < t; ++i)
              i <= 2 * e ? (r.push(i), r.push(i - (e + 1))) : r.push(i);
          } else {
            var a = [],
              o = [];
            for (i = 1; i < t; ++i)
              i >= 2 * e + 1 || i % 2 == 1 ? o.push(i) : a.push(i);
            r.push.apply(r, a), r.push(0), r.push.apply(r, o);
          }
          return r;
        }
        function ke(t, e, n, r) {
          void 0 === r && (r = !0);
          var i = [];
          r ? i.push(t[0] / n) : i.push(t[0] * n);
          for (var a = 1; a < t.length; ++a)
            a <= e.length
              ? r
                ? i.push(e[a - 1] * t[a])
                : i.push(t[a] / e[a - 1])
              : i.push(t[a]);
          return i;
        }
        function Pe(t, e) {
          for (var n = [0], r = 0; r < e; ++r) n.push(t[r][0]);
          return n;
        }
        function Te(t, e, n) {
          for (var r = t.slice(0, 1), i = 0; i < n; ++i)
            r.push(t[i + 1] - e[i][0] - e[i][1]);
          return r;
        }
        function Re(t, e) {
          for (var n = 0; n < t.length; ++n)
            if (t[t.length - n - 1] !== e - 1 - n) return !1;
          return !0;
        }
        function De(t, e, n) {
          for (
            var r = t.length + e.length, i = [], a = 0, o = 0, s = 0;
            s < r;
            s++
          )
            -1 === n.indexOf(s) ? i.push(t[a++]) : i.push(e[o++]);
          return i;
        }
        function Me(t, e) {
          for (var n = [], r = t.length, i = 0; i < r; i++)
            -1 === e.indexOf(i) && n.push(t[i]);
          return [
            n,
            e.map(function(e) {
              return t[e];
            })
          ];
        }
        function je(t, e) {
          return De(
            t,
            e.map(function(t) {
              return 1;
            }),
            e
          );
        }
        function Le(t, e, n) {
          _(
            Re(e, n),
            t +
              " supports only inner-most axes for now. Got axes " +
              e +
              " and rank-" +
              n +
              " input."
          );
        }
        function Be(t, e) {
          if (Re(t, e)) return null;
          for (var n = [], r = 0; r < e; ++r) -1 === t.indexOf(r) && n.push(r);
          return (
            t.forEach(function(t) {
              return n.push(t);
            }),
            n
          );
        }
        function Fe(t) {
          return t
            .map(function(t, e) {
              return [e, t];
            })
            .sort(function(t, e) {
              return t[1] - e[1];
            })
            .map(function(t) {
              return t[0];
            });
        }
        function ze(t, e) {
          for (var n = [], r = e - t; r < e; ++r) n.push(r);
          return n;
        }
        function Ue(t, e) {
          var n = t[0].length;
          t.forEach(function(t, e) {
            _(
              t.length === n,
              "Error in concat" +
                n +
                "D: rank of tensors[" +
                e +
                "] must be the same as the rank of the rest (" +
                n +
                ")"
            );
          }),
            _(
              e >= 0 && e < n,
              "Error in concat" +
                n +
                "D: axis must be between 0 and " +
                (n - 1) +
                "."
            );
          var r = t[0];
          t.forEach(function(t, i) {
            for (var a = 0; a < n; a++)
              _(
                a === e || t[a] === r[a],
                "Error in concat" +
                  n +
                  "D: Shape of tensors[" +
                  i +
                  "] (" +
                  t +
                  ") does not match the shape of the rest (" +
                  r +
                  ") along the non-concatenated axis " +
                  i +
                  "."
              );
          });
        }
        function Ve(t, e) {
          for (var n = t[0].slice(), r = 1; r < t.length; r++) n[e] += t[r][e];
          return n;
        }
        function We(t, e) {
          if (t.rank < 1)
            throw new Error(
              "tf.gatherND() expects the input to be rank 1 or higher, but the rank was " +
                t.rank +
                "."
            );
          if (e.rank < 1)
            throw new Error(
              "tf.gatherND() expects the indices to be rank 1 or higher, but the rank was " +
                e.rank +
                "."
            );
          if ("int32" !== e.dtype)
            throw new Error(
              "tf.gatherND() expects the indices to be int32 type, but the dtype was " +
                e.dtype +
                "."
            );
          if (e.shape[e.rank - 1] > t.rank)
            throw new Error(
              "index innermost dimension length must be <= tensor rank; saw: " +
                e.shape[e.rank - 1] +
                " vs. " +
                t.rank
            );
          if (0 === t.size)
            throw new Error(
              "Requested more than 0 entries, but input is empty. Input shape: " +
                t.shape +
                "."
            );
          for (
            var n = e.shape, r = n[n.length - 1], i = 1, a = 0;
            a < n.length - 1;
            ++a
          )
            i *= n[a];
          var o = t.shape,
            s = n.slice();
          s.pop();
          var u = 1;
          for (a = r; a < t.rank; ++a) (u *= o[a]), s.push(o[a]);
          var c = Y(t.shape)
            .map(function(t) {
              return t / u;
            })
            .concat([1])
            .slice(0, r);
          return [s, i, u, c];
        }
        var $e = 30;
        function qe(t) {
          return t <= $e ? t : J(t, Math.floor(Math.sqrt(t)));
        }
        function He(t, e, n) {
          var r = e.rank > 1 ? e.shape[e.rank - 1] : 1,
            i = e.rank > 1 ? e.rank - 1 : 1,
            a =
              "Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: " +
              n.shape +
              ", indices.shape: " +
              e.shape +
              ", shape: " +
              t +
              ", sliceDim: " +
              r +
              ", and batchDim: " +
              i +
              ".";
          if (n.rank < i) throw new Error(a + " update.rank < " + i + ". ");
          if (t.length < r + (n.rank - i))
            throw new Error(a + " Output shape length < " + (r + (n.rank - i)));
          if (n.rank !== i + t.length - r)
            throw new Error(a + " update.rank != " + (i + t.length - r));
          for (var o = 0; o < i; ++o)
            if (n.shape[o] !== e.shape[o])
              throw new Error(
                a +
                  " updates.shape[" +
                  o +
                  "] (" +
                  n.shape[o] +
                  ") != indices.shape[" +
                  o +
                  "] (" +
                  e.shape[o] +
                  ")."
              );
          for (o = 0; o < n.rank - i; ++o)
            if (n.shape[o + i] !== t[o + r])
              throw new Error(
                a +
                  " updates.shape[" +
                  (o + i) +
                  "] (" +
                  n.shape[o + i] +
                  ") != shape[" +
                  (o + i) +
                  "] (" +
                  t[o + i] +
                  ")"
              );
        }
        function Ke(t, e, n) {
          if (e.rank < 1)
            throw new Error(
              "tf.scatterND() expects the indices to be rank 1 or higher, but the rank was " +
                e.rank +
                "."
            );
          if (t.rank < 1)
            throw new Error(
              "tf.scatterND() expects the updates to be rank 1 or higher, but the rank was " +
                t.rank +
                "."
            );
          if ("int32" !== e.dtype)
            throw new Error(
              "The dtype of 'indices' should be int32, but got dtype: " +
                e.dtype
            );
          if (n.length < 1)
            throw new Error(
              "Output rank must be greater or equal to 1, but got shape: " + n
            );
          if (0 === n.length) {
            if (0 === e.size)
              throw new Error(
                "Indices specified for empty output. indices shape: " + e.shape
              );
            if (0 === t.size)
              throw new Error(
                "Updates specified for empty output. updates shape: " + t.shape
              );
          }
          He(n, e, t);
        }
        function Ge(t, e, n) {
          for (
            var r = e.rank > 1 ? e.shape[e.rank - 1] : 1,
              i = n.length,
              a = 1,
              o = r;
            o < i;
            ++o
          )
            a *= n[o];
          var s = r < 1 ? 1 : r;
          return {
            sliceRank: r,
            numUpdates: e.size / s,
            sliceSize: a,
            strides: Y(n.slice(0, r)).concat([1]),
            outputSize: N(n)
          };
        }
        function Xe(t, e) {
          var n,
            r = !1;
          for (
            t <= $e
              ? ((n = t), (r = !0))
              : (n = J(t, Math.floor(Math.sqrt(t))));
            !r;

          ) {
            if (n > e || n === t) {
              r = !0;
              break;
            }
            n = J(t, n + 1);
          }
          return n;
        }
        function Je(t, e, n) {
          for (var r = [], i = t.length, a = 0; a < i; a++)
            a !== e ? r.push(t[a]) : r.push(n);
          return r;
        }
        function Ye(t, e, n) {
          for (var r = t.shape[n], i = [], a = 1, o = 1, s = 0; s < n; s++)
            i.push(t.shape[s]), (a *= t.shape[s]);
          for (s = 0; s < e.rank; s++) i.push(e.shape[s]);
          for (s = n + 1; s < t.rank; s++)
            i.push(t.shape[s]), (o *= t.shape[s]);
          return { batchSize: a, sliceSize: o, dimSize: r, outputShape: i };
        }
        function Qe(t, e, n) {
          _(
            t.rank === e.length,
            "Error in slice" +
              t.rank +
              "D: Length of begin " +
              e +
              " must match the rank of the array (" +
              t.rank +
              ")."
          ),
            _(
              t.rank === n.length,
              "Error in slice" +
                t.rank +
                "D: Length of size " +
                n +
                " must match the rank of the array (" +
                t.rank +
                ")."
            );
          for (var r = 0; r < t.rank; ++r)
            _(
              e[r] + n[r] <= t.shape[r],
              "Error in slice" +
                t.rank +
                "D: begin[" +
                r +
                "] + size[" +
                r +
                "] (" +
                (e[r] + n[r]) +
                ") would overflow input.shape[" +
                r +
                "] (" +
                t.shape[r] +
                ")"
            );
        }
        function Ze(t, e, n, r, i, a, o, s, u) {
          if (
            (void 0 === i && (i = 0),
            void 0 === a && (a = 0),
            void 0 === o && (o = 0),
            void 0 === s && (s = 0),
            void 0 === u && (u = 0),
            0 !== o)
          )
            throw new Error("ellipsis mask is not yet supported");
          if (0 !== s) throw new Error("new axis mask is not yet supported");
          for (var c = [], l = [], f = [], h = 0; h < t.length; h++)
            (c[h] = tn(i, e, r, t, h)),
              (l[h] = en(a, n, r, t, h)),
              u & (1 << h) && ((l[h] = c[h] + 1), f.push(h));
          var p = new Array(t.length).fill(0);
          return (
            (p = p.map(function(t, e) {
              for (
                var n = 0, i = c[e];
                !(r[e] > 0 ? i >= l[e] : i <= l[e]);
                i += r[e]
              )
                n += 1;
              return n;
            })),
            [c, p, f]
          );
        }
        function tn(t, e, n, r, i) {
          var a = e[i];
          t & (1 << i) &&
            (a = n[i] > 0 ? Number.MIN_SAFE_INTEGER : Number.MAX_SAFE_INTEGER);
          var o = r[i];
          return a < 0 && (a += o), v(0, a, o - 1);
        }
        function en(t, e, n, r, i) {
          var a = e[i];
          t & (1 << i) &&
            (a = n[i] > 0 ? Number.MAX_SAFE_INTEGER : Number.MIN_SAFE_INTEGER);
          var o = r[i];
          return a < 0 && (a += o), n[i] > 0 ? v(0, a, o) : v(-1, a, o - 1);
        }
        function nn(t, e, n) {
          for (var r = n.length, i = 0; i < n.length; i++)
            if (n[i] > 1) {
              r = i;
              break;
            }
          for (i = r + 1; i < n.length; i++)
            if (e[i] > 0 || n[i] !== t[i]) return !1;
          return !0;
        }
        function rn(t, e) {
          for (
            var n = t.length > 0 ? t[t.length - 1] : 1, r = 0;
            r < t.length - 1;
            r++
          )
            n += t[r] * e[r];
          return n;
        }
        function an(t) {
          var e = t;
          if (V(t)) return [t.length];
          if (!Array.isArray(t)) return [];
          for (var n = []; Array.isArray(e) || V(e); )
            n.push(e.length), (e = e[0]);
          return (
            Array.isArray(t) &&
              _e.get("TENSORLIKE_CHECK_SHAPE_CONSISTENCY") &&
              on(t, n, []),
            n
          );
        }
        function on(t, e, n) {
          if (((n = n || []), Array.isArray(t) || V(t))) {
            _(e.length > 0, function() {
              return (
                "Element arr[" +
                n.join("][") +
                "] should be a primitive, but is an array of " +
                t.length +
                " elements"
              );
            }),
              _(t.length === e[0], function() {
                return (
                  "Element arr[" +
                  n.join("][") +
                  "] should have " +
                  e[0] +
                  " elements, but has " +
                  t.length +
                  " elements"
                );
              });
            for (var r = e.slice(1), i = 0; i < t.length; ++i)
              on(t[i], r, n.concat(i));
          } else
            _(0 === e.length, function() {
              return (
                "Element arr[" +
                n.join("][") +
                "] is a primitive, but should be an array/TypedArray of " +
                e[0] +
                " elements"
              );
            });
        }
        function sn(t, e, n, r) {
          if (
            null != t &&
            (("numeric" !== t && t !== e) ||
              ("numeric" === t && "string" === e))
          )
            throw new Error(
              "Argument '" +
                n +
                "' passed to '" +
                r +
                "' must be " +
                t +
                " tensor, but got " +
                e +
                " tensor"
            );
        }
        function un(t, e, n, r) {
          if ((void 0 === r && (r = "numeric"), t instanceof St))
            return sn(r, t.dtype, e, n), t;
          var i = G(t);
          if (
            ("string" !== i &&
              ["bool", "int32", "float32"].indexOf(r) >= 0 &&
              (i = r),
            sn(r, i, e, n),
            !V(t) &&
              !Array.isArray(t) &&
              "number" != typeof t &&
              "boolean" != typeof t &&
              "string" != typeof t)
          )
            throw new Error(
              "Argument '" +
                e +
                "' passed to '" +
                n +
                "' must be a Tensor or TensorLike, but got '" +
                t.constructor.name +
                "'"
            );
          var a = an(t);
          V(t) || Array.isArray(t) || (t = [t]);
          var o = "string" !== i ? Q(t, i, _e.get("DEBUG")) : S(t);
          return St.make(a, { values: o }, i);
        }
        function cn(t, e, n) {
          if (!Array.isArray(t))
            throw new Error(
              "Argument " +
                e +
                " passed to " +
                n +
                " must be a `Tensor[]` or `TensorLike[]`"
            );
          return t.map(function(t, r) {
            return un(t, e + "[" + r + "]", n);
          });
        }
        function ln(t) {
          var e = Object.keys(t);
          if (1 !== e.length)
            throw new Error(
              "Please provide an object with a single key (operation name) mapping to a function. Got an object with " +
                e.length +
                " keys."
            );
          var n = e[0],
            r = t[n];
          n.endsWith("_") && (n = n.substring(0, n.length - 1));
          var i = function() {
            for (var t = [], e = 0; e < arguments.length; e++)
              t[e] = arguments[e];
            _e.engine.startScope(n);
            try {
              var i = r.apply(void 0, t);
              return (
                i instanceof Promise &&
                  console.error("Cannot return a Promise inside of tidy."),
                _e.engine.endScope(i),
                i
              );
            } catch (t) {
              throw (_e.engine.endScope(null), t);
            }
          };
          return (
            Object.defineProperty(i, "name", { value: n, configurable: !0 }), i
          );
        }
        function fn(t, e) {
          void 0 === e && (e = -1);
          var n = un(t, "logits", "softmax");
          if ((-1 === e && (e = n.rank - 1), e !== n.rank - 1))
            throw Error(
              "Softmax along a non-last dimension is not yet supported. Logits was rank " +
                n.rank +
                " and dim was " +
                e
            );
          return Ee(function(t) {
            var n = t.logSumExp([e], !0),
              r = t
                .toFloat()
                .sub(n)
                .exp();
            return {
              value: r,
              gradFunc: function(t) {
                var n = t.mul(r);
                return n.sub(n.sum([e], !0).mul(r));
              }
            };
          })(n);
        }
        function hn(t, e) {
          void 0 === e && (e = -1);
          var n = un(t, "logits", "logSoftmax");
          if ((-1 === e && (e = n.rank - 1), e !== n.rank - 1))
            throw Error(
              "Log Softmax along a non-last dimension is not yet supported. Logits was rank " +
                n.rank +
                " and axis was " +
                e
            );
          return Ee(function(t) {
            var n = t.max(e, !0),
              r = t.sub(n),
              i = r.toFloat().sub(
                r
                  .exp()
                  .sum(e, !0)
                  .log()
              );
            return {
              value: i,
              gradFunc: function(t) {
                var n = i.exp();
                return t.sub(t.sum(e, !0).mul(n));
              }
            };
          })(n);
        }
        var pn = ln({ softmax_: fn }),
          dn = ln({ logSoftmax_: hn });
        function mn(t, e) {
          var n = un(t, "real", "complex"),
            r = un(e, "imag", "complex");
          return (
            x(
              n.shape,
              r.shape,
              "real and imag shapes, " +
                n.shape +
                " and " +
                r.shape +
                ", must match in call to tf.complex()."
            ),
            _e.engine.runKernel(
              function(t) {
                return t.complex(n, r);
              },
              { $real: n, $imag: r }
            )
          );
        }
        function vn(t) {
          var e = un(t, "input", "real");
          return _e.engine.runKernel(
            function(t) {
              return t.real(e);
            },
            { $input: e }
          );
        }
        function yn(t) {
          var e = un(t, "input", "imag");
          return _e.engine.runKernel(
            function(t) {
              return t.imag(e);
            },
            { $input: e }
          );
        }
        var gn = ln({ complex_: mn }),
          bn = ln({ real_: vn }),
          wn = ln({ imag_: yn });
        function _n(t, e, n) {
          if ((null == n && (n = G(t)), "complex64" === n))
            throw new Error(
              "Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag)."
            );
          if (
            !V(t) &&
            !Array.isArray(t) &&
            "number" != typeof t &&
            "boolean" != typeof t &&
            "string" != typeof t
          )
            throw new Error(
              "values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray"
            );
          var r = an(t);
          if (null != e) {
            var i = N(e),
              a = N(r);
            _(i === a, function() {
              return (
                "Based on the provided shape, [" +
                e +
                "], the tensor should have " +
                i +
                " values but has " +
                a
              );
            });
            for (var o = 0; o < r.length; ++o) {
              var s = r[o],
                u = o !== r.length - 1 || s !== N(e.slice(o));
              _(r[o] === e[o] || !u, function() {
                return (
                  "Error creating a new Tensor. Inferred shape (" +
                  r +
                  ") does not match the provided shape (" +
                  e +
                  "). "
                );
              });
            }
          }
          return (
            V(t) || Array.isArray(t) || (t = [t]),
            (e = e || r),
            (t = "string" !== n ? Q(t, n, _e.get("DEBUG")) : S(t)),
            St.make(e, { values: t }, n)
          );
        }
        function xn(t, e) {
          if ((V(t) || Array.isArray(t)) && "complex64" !== e)
            throw new Error(
              "Error creating a new Scalar: value must be a primitive (number|boolean|string)"
            );
          return _n(t, [], e);
        }
        function En(t, e) {
          E(t);
          var n = an(t);
          if (1 !== n.length)
            throw new Error(
              "tensor1d() requires values to be a flat/TypedArray"
            );
          return _n(t, n, e);
        }
        function Sn(t, e, n) {
          if ((E(t), null != e && 2 !== e.length))
            throw new Error("tensor2d() requires shape to have two numbers");
          var r = an(t);
          if (2 !== r.length && 1 !== r.length)
            throw new Error(
              "tensor2d() requires values to be number[][] or flat/TypedArray"
            );
          if (1 === r.length && null == e)
            throw new Error(
              "tensor2d() requires shape to be provided when `values` are a flat/TypedArray"
            );
          return _n(t, (e = e || r), n);
        }
        function Nn(t, e, n) {
          if ((E(t), null != e && 3 !== e.length))
            throw new Error("tensor3d() requires shape to have three numbers");
          var r = an(t);
          if (3 !== r.length && 1 !== r.length)
            throw new Error(
              "tensor3d() requires values to be number[][][] or flat/TypedArray"
            );
          if (1 === r.length && null == e)
            throw new Error(
              "tensor3d() requires shape to be provided when `values` are a flat array"
            );
          return _n(t, (e = e || r), n);
        }
        function On(t, e, n) {
          if ((E(t), null != e && 4 !== e.length))
            throw new Error("tensor4d() requires shape to have four numbers");
          var r = an(t);
          if (4 !== r.length && 1 !== r.length)
            throw new Error(
              "tensor4d() requires values to be number[][][][] or flat/TypedArray"
            );
          if (1 === r.length && null == e)
            throw new Error(
              "tensor4d() requires shape to be provided when `values` are a flat array"
            );
          return _n(t, (e = e || r), n);
        }
        function In(t, e, n) {
          if ((E(t), null != e && 5 !== e.length))
            throw new Error("tensor5d() requires shape to have five numbers");
          var r = an(t);
          if (5 !== r.length && 1 !== r.length)
            throw new Error(
              "tensor5d() requires values to be number[][][][][] or flat/TypedArray"
            );
          if (1 === r.length && null == e)
            throw new Error(
              "tensor5d() requires shape to be provided when `values` are a flat array"
            );
          return _n(t, (e = e || r), n);
        }
        function Cn(t, e, n) {
          if ((E(t), null != e && 6 !== e.length))
            throw new Error("tensor6d() requires shape to have six numbers");
          var r = an(t);
          if (6 !== r.length && 1 !== r.length)
            throw new Error(
              "tensor6d() requires values to be number[][][][][][] or flat/TypedArray"
            );
          if (1 === r.length && null == e)
            throw new Error(
              "tensor6d() requires shape to be provided when `values` are a flat array"
            );
          return _n(t, (e = e || r), n);
        }
        function An(t, e) {
          if ((void 0 === e && (e = "float32"), "complex64" === e)) {
            var n = An(t, "float32"),
              r = An(t, "float32");
            return gn(n, r);
          }
          var i = nt(N(t), e);
          return St.make(t, { values: i }, e);
        }
        function kn(t, e) {
          if ((void 0 === e && (e = "float32"), "complex64" === e)) {
            var n = kn(t, "float32"),
              r = kn(t, "float32");
            return gn(n, r);
          }
          var i = rt(N(t), e);
          return St.make(t, { values: i }, e);
        }
        function Pn(t, e, n) {
          var r = B((n = n || G(e)), N(t));
          return r.fill(e), St.make(t, { values: r }, n);
        }
        function Tn(t) {
          var e = un(t, "x", "onesLike");
          return An(e.shape, e.dtype);
        }
        function Rn(t) {
          var e = un(t, "x", "zerosLike");
          return kn(e.shape, e.dtype);
        }
        function Dn(t, e, n) {
          if (0 === n) throw new Error("Cannot request zero samples");
          var r = (e - t) / (n - 1),
            i = rt(n, "float32");
          i[0] = t;
          for (var a = 1; a < i.length; a++) i[a] = i[a - 1] + r;
          return En(i, "float32");
        }
        function Mn(t, e, n, r) {
          if (
            (void 0 === n && (n = 1), void 0 === r && (r = "float32"), 0 === n)
          )
            throw new Error("Cannot have a step of zero");
          if (t === e || (t < e && n < 0) || (e < t && n > 1))
            return kn([0], r);
          var i = rt(Math.abs(Math.ceil((e - t) / n)), r);
          e < t && 1 === n && (n = -1), (i[0] = t);
          for (var a = 1; a < i.length; a++) i[a] = i[a - 1] + n;
          return En(i, r);
        }
        var jn = ln({ onesLike_: Tn }),
          Ln = ln({ zerosLike_: Rn }),
          Bn = (function() {
            function t(t) {
              (this.dataMover = t), (this.data = new WeakMap());
            }
            return (
              (t.prototype.get = function(t) {
                return (
                  this.data.has(t) || this.dataMover.moveData(t),
                  this.data.get(t)
                );
              }),
              (t.prototype.set = function(t, e) {
                this.data.set(t, e);
              }),
              (t.prototype.has = function(t) {
                return this.data.has(t);
              }),
              (t.prototype.delete = function(t) {
                return this.data.delete(t);
              }),
              t
            );
          })();
        (function() {
          function t() {}
          (t.prototype.time = function(t) {
            throw new Error("Not yet implemented.");
          }),
            (t.prototype.read = function(t) {
              throw new Error("Not yet implemented.");
            }),
            (t.prototype.readSync = function(t) {
              throw new Error("Not yet implemented.");
            }),
            (t.prototype.disposeData = function(t) {
              throw new Error("Not yet implemented.");
            }),
            (t.prototype.write = function(t, e) {
              throw new Error("Not yet implemented.");
            }),
            (t.prototype.fromPixels = function(t, e) {
              throw new Error("Not yet implemented.");
            }),
            (t.prototype.register = function(t, e, n) {
              throw new Error("Not yet implemented.");
            }),
            (t.prototype.memory = function() {
              throw new Error("Not yet implemented.");
            }),
            (t.prototype.floatPrecision = function() {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.batchMatMul = function(t, e, n, r) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.fusedBatchMatMul = function(t, e, n, r, i, a) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.slice = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.stridedSlice = function(t, e, n, r, i, a, o, s, u) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.unstack = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.reverse = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.concat = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.neg = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.add = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.addN = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.subtract = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.multiply = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.realDivide = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.floorDiv = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.sum = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.prod = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.unsortedSegmentSum = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.argMin = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.argMax = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.equal = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.notEqual = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.less = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.lessEqual = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.greater = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.greaterEqual = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.logicalNot = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.logicalAnd = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.logicalOr = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.where = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.select = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.topk = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.min = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.minimum = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.mod = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.max = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.maximum = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.all = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.any = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.squaredDifference = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.ceil = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.floor = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.round = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.sign = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.pow = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.exp = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.expm1 = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.log = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.log1p = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.sqrt = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.rsqrt = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.square = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.reciprocal = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.relu = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.prelu = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.elu = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.eluDer = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.selu = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.int = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.clip = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.abs = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.complexAbs = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.sigmoid = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.softplus = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.sin = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.cos = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.tan = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.asin = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.acos = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.atan = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.atan2 = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.sinh = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.cosh = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.tanh = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.asinh = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.acosh = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.atanh = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.erf = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.step = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.conv2d = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.conv2dDerInput = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.conv2dDerFilter = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.depthwiseConv2D = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.depthwiseConv2DDerInput = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.depthwiseConv2DDerFilter = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.conv3d = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.conv3dDerInput = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.conv3dDerFilter = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.maxPool = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.maxPoolBackprop = function(t, e, n, r) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.avgPool = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.avgPoolBackprop = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.reshape = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.cast = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.tile = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.pad = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.transpose = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.gather = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.gatherND = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.scatterND = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.batchToSpaceND = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.spaceToBatchND = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.resizeBilinear = function(t, e, n, r) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.resizeBilinearBackprop = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.resizeNearestNeighbor = function(t, e, n, r) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.resizeNearestNeighborBackprop = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.batchNormalization = function(t, e, n, r, i, a) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.localResponseNormalization4D = function(
              t,
              e,
              n,
              r,
              i
            ) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.LRNGrad = function(t, e, n, r, i, a, o) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.multinomial = function(t, e, n, r) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.oneHot = function(t, e, n, r) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.cumsum = function(t, e, n, r) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.nonMaxSuppression = function(t, e, n, r, i) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.fft = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.ifft = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.complex = function(t, e) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.real = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.imag = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.cropAndResize = function(t, e, n, r, i, a) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.depthToSpace = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.split = function(t, e, n) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.sparseToDense = function(t, e, n, r) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.setDataMover = function(t) {
              throw new Error("Not yet implemented");
            }),
            (t.prototype.dispose = function() {
              throw new Error("Not yet implemented");
            });
        })();
        function Fn(t, e, n) {
          if ("complex64" === e) {
            if ("complex64" === t.dtype) return t.clone();
            var r = kn(t.shape),
              i = t.toFloat(),
              a = n.complex(i, r);
            return r.dispose(), i.dispose(), a;
          }
          if (!U(t.dtype, e)) return St.make(t.shape, { dataId: t.dataId }, e);
          if ("complex64" === t.dtype) {
            var o = n.real(t);
            return (a = o.cast(e)), o.dispose(), a;
          }
          if ("int32" === e) return n.int(t);
          if ("bool" === e) {
            var s = xn(0, t.dtype);
            return (a = n.notEqual(t, s)), s.dispose(), a;
          }
          throw new Error("Error in Cast: unknown dtype argument (" + e + ")");
        }
        function zn(t, e) {
          return St.make(e, { dataId: t.dataId }, t.dtype);
        }
        function Un(t, e) {
          if (t.length !== e.length)
            throw new Error(
              "Cannot merge real and imag arrays of different lengths. real:" +
                t.length +
                ", imag: " +
                e.length +
                "."
            );
          for (
            var n = new Float32Array(2 * t.length), r = 0;
            r < n.length;
            r += 2
          )
            (n[r] = t[r / 2]), (n[r + 1] = e[r / 2]);
          return n;
        }
        function Vn(t) {
          for (
            var e = new Float32Array(t.length / 2),
              n = new Float32Array(t.length / 2),
              r = 0;
            r < t.length;
            r += 2
          )
            (e[r / 2] = t[r]), (n[r / 2] = t[r + 1]);
          return { real: e, imag: n };
        }
        function Wn(t) {
          for (
            var e = Math.ceil(t.length / 4),
              n = new Float32Array(e),
              r = new Float32Array(e),
              i = 0;
            i < t.length;
            i += 4
          )
            (n[Math.floor(i / 4)] = t[i]), (r[Math.floor(i / 4)] = t[i + 1]);
          return { real: n, imag: r };
        }
        function $n(t) {
          for (
            var e = Math.floor(t.length / 4),
              n = new Float32Array(e),
              r = new Float32Array(e),
              i = 2;
            i < t.length;
            i += 4
          )
            (n[Math.floor(i / 4)] = t[i]), (r[Math.floor(i / 4)] = t[i + 1]);
          return { real: n, imag: r };
        }
        function qn(t, e) {
          return { real: t[2 * e], imag: t[2 * e + 1] };
        }
        function Hn(t, e, n, r) {
          (t[2 * r] = e), (t[2 * r + 1] = n);
        }
        function Kn(t, e) {
          for (
            var n = new Float32Array(t / 2), r = new Float32Array(t / 2), i = 0;
            i < Math.ceil(t / 2);
            i++
          ) {
            var a = (e ? 2 : -2) * Math.PI * (i / t);
            (n[i] = Math.cos(a)), (r[i] = Math.sin(a));
          }
          return { real: n, imag: r };
        }
        function Gn(t, e, n) {
          var r = (n ? 2 : -2) * Math.PI * (t / e);
          return { real: Math.cos(r), imag: Math.sin(r) };
        }
        function Xn(t, e, n, r, i) {
          for (
            var a = Array.from(e)
                .map(function(t, e) {
                  return { score: t, boxIndex: e };
                })
                .filter(function(t) {
                  return t.score > i;
                })
                .sort(function(t, e) {
                  return e.score - t.score;
                }),
              o = [],
              s = 0;
            s < a.length;
            s++
          ) {
            var u = a[s],
              c = u.score,
              l = u.boxIndex;
            if (c < i) break;
            for (var f = !1, h = o.length - 1; h >= 0; --h)
              if (Jn(t, l, o[h]) >= r) {
                f = !0;
                break;
              }
            if (!f && (o.push(l), o.length >= n)) break;
          }
          return En(o, "int32");
        }
        function Jn(t, e, n) {
          var r = t.subarray(4 * e, 4 * e + 4),
            i = t.subarray(4 * n, 4 * n + 4),
            a = Math.min(r[0], r[2]),
            o = Math.min(r[1], r[3]),
            s = Math.max(r[0], r[2]),
            u = Math.max(r[1], r[3]),
            c = Math.min(i[0], i[2]),
            l = Math.min(i[1], i[3]),
            f = Math.max(i[0], i[2]),
            h = Math.max(i[1], i[3]),
            p = (s - a) * (u - o),
            d = (f - c) * (h - l);
          if (p <= 0 || d <= 0) return 0;
          var m = Math.max(a, c),
            v = Math.max(o, l),
            y = Math.min(s, f),
            g = Math.min(u, h),
            b = Math.max(y - m, 0) * Math.max(g - v, 0);
          return b / (p + d - b);
        }
        function Yn(t, e, n) {
          var r = new Array(t.rank).fill(0),
            i = t.shape.slice();
          return e.map(function(e) {
            i[n] = e;
            var a = t.slice(r, i);
            return (r[n] += e), a;
          });
        }
        function Qn(t, e, n, r, i) {
          for (
            var a = e[e.length - 1],
              o = [t.length / a, a],
              s = o[0],
              u = o[1],
              c = L(n, s * r),
              l = L("int32", s * r),
              f = 0;
            f < s;
            f++
          ) {
            for (
              var h = f * u, p = t.subarray(h, h + u), d = [], m = 0;
              m < p.length;
              m++
            )
              d.push({ value: p[m], index: m });
            d.sort(function(t, e) {
              return e.value - t.value;
            });
            var v = f * r,
              y = c.subarray(v, v + r),
              g = l.subarray(v, v + r);
            for (m = 0; m < r; m++) (y[m] = d[m].value), (g[m] = d[m].index);
          }
          var b = e.slice();
          return (b[b.length - 1] = r), [_n(c, b, n), _n(l, b, "int32")];
        }
        var Zn = (function() {
            return function(t, e, n) {
              this.variableNames = ["A"];
              var r = t.windowSize,
                i = t.batchSize,
                a = t.inSize,
                o = Math.ceil(a / r);
              n || this.variableNames.push("bestIndicesA"),
                (this.outputShape = [i, o]);
              var s = "max" === e ? ">" : "<",
                u = n
                  ? "inOffset + i;"
                  : "round(getBestIndicesA(batch, inOffset + i));";
              this.userCode =
                "\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * " +
                r +
                ";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < " +
                r +
                "; i++) {\n          int inIdx = " +
                u +
                ";\n          float candidate = getA(batch, inIdx);\n          if (candidate " +
                s +
                " bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ";
            };
          })(),
          tr = (function() {
            return function(t) {
              (this.variableNames = ["dy"]), (this.outputShape = t.inShape);
              var e = t.filterHeight,
                n = t.filterWidth,
                r = t.strideHeight,
                i = t.strideWidth,
                a = t.dilationHeight,
                o = t.dilationWidth,
                s = t.effectiveFilterHeight,
                u = t.effectiveFilterWidth,
                c = s - 1 - t.padInfo.top,
                l = u - 1 - t.padInfo.left,
                f = 1 / (e * n);
              this.userCode =
                "\n      const ivec2 pads = ivec2(" +
                c +
                ", " +
                l +
                ");\n      const float avgMultiplier = float(" +
                f +
                ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < " +
                s +
                ";\n            wR += " +
                a +
                ") {\n          float dyR = float(dyRCorner + wR) / " +
                r +
                ".0;\n\n          if (dyR < 0.0 || dyR >= " +
                t.outHeight +
                ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < " +
                u +
                ";\n            wC+= " +
                o +
                ") {\n            float dyC = float(dyCCorner + wC) / " +
                i +
                ".0;\n\n            if (dyC < 0.0 || dyC >= " +
                t.outWidth +
                ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
            };
          })();
        function er(t, e) {
          for (var n = t.length, r = [], i = 0; i < n; i++) {
            var a = n - 1 - i,
              o = t[a] || 1;
            (e[e.length - 1 - i] || 1) > 1 && 1 === o && r.unshift(a);
          }
          return r;
        }
        function nr(t, e) {
          for (var n = [], r = 0; r < e.length; r++) {
            var i = t[t.length - r - 1],
              a = e.length - r - 1,
              o = e[a];
            (null == i || (1 === i && o > 1)) && n.unshift(a);
          }
          return n;
        }
        function rr(t, e) {
          for (
            var n = [], r = Math.max(t.length, e.length), i = 0;
            i < r;
            i++
          ) {
            var a = t[t.length - i - 1];
            null == a && (a = 1);
            var o = e[e.length - i - 1];
            if ((null == o && (o = 1), 1 === a)) n.unshift(o);
            else if (1 === o) n.unshift(a);
            else {
              if (a !== o)
                throw Error(
                  "Operands could not be broadcast together with shapes " +
                    t +
                    " and " +
                    e +
                    "."
                );
              n.unshift(a);
            }
          }
          return n;
        }
        var ir = (function() {
            return function(t, e, n, r, i, a) {
              (this.outputShape = []),
                (this.variableNames = ["x", "mean", "variance"]),
                rr(t, e),
                rr(t, n);
              var o = "0.0";
              null != r &&
                (rr(t, r),
                this.variableNames.push("offset"),
                (o = "getOffsetAtOutCoords()"));
              var s = "1.0";
              null != i &&
                (rr(t, i),
                this.variableNames.push("scale"),
                (s = "getScaleAtOutCoords()")),
                (this.outputShape = t),
                (this.userCode =
                  "\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = " +
                  o +
                  ";\n        float scale = " +
                  s +
                  ";\n        float inv = scale * inversesqrt(variance + float(" +
                  a +
                  "));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ");
            };
          })(),
          ar = (function() {
            return function(t, e, n, r, i, a) {
              (this.usesPackedTextures = !0),
                (this.variableNames = ["x", "mean", "variance"]),
                rr(t, e),
                rr(t, n);
              var o = "vec4(0.0)";
              null != r &&
                (rr(t, r),
                this.variableNames.push("offset"),
                (o = "getOffsetAtOutCoords()"));
              var s = "vec4(1.0)";
              null != i &&
                (rr(t, i),
                this.variableNames.push("scale"),
                (s = "getScaleAtOutCoords()")),
                (this.outputShape = t),
                (this.userCode =
                  "\n      void main() {\n        vec4 offset = " +
                  o +
                  ";\n        vec4 scale = " +
                  s +
                  ";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(" +
                  a +
                  "));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ");
            };
          })(),
          or = {
            REAL: "return areal * breal - aimag * bimag;",
            IMAG: "return areal * bimag + aimag * breal;"
          },
          sr = (function() {
            return function(t, e, n) {
              (this.variableNames = ["AReal", "AImag", "BReal", "BImag"]),
                (this.outputShape = rr(e, n)),
                (this.userCode =
                  "\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        " +
                  t +
                  "\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ");
            };
          })(),
          ur = "\n  if (isNaN(a)) return a;\n  if (isNaN(b)) return b;\n",
          cr = "return a + b;",
          lr = "return a - b;",
          fr = "return a * b;",
          hr = "if (a == b) return 1.0;\n  return a / b;",
          pr =
            "\n  float resultSign = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  int result = ia / ib;\n  int amodb = ia - ib * result;\n\n  if (resultSign < 0.0 && amodb != 0) {\n    result -= 1;\n  }\n  return float(result);\n",
          dr =
            "\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",
          mr = "return (a - b) * (a - b);",
          vr = "return float(a == b);",
          yr = "return float(a != b);",
          gr = "return float(a < b);",
          br = "return float(a <= b);",
          wr = "return float(a > b);",
          _r = "return float(a >= b);",
          xr = "return float(a >= 1.0 && b >= 1.0);",
          Er = "return float(a >= 1.0 || b >= 1.0);",
          Sr = ur + "\n  return max(a, b);\n",
          Nr = ur + "\n  return min(a, b);\n",
          Or = "if (b == 0.0) return NAN;\n  return mod(a, b);",
          Ir = ur + "\n  return atan(a, b);\n",
          Cr = "return (b >= 1.0) ? a : a * (b + 1.0);",
          Ar = "return (a < 0.) ? b * a : a;",
          kr = (function() {
            function t(t, e, n) {
              (this.variableNames = ["A", "B"]),
                (this.outputShape = rr(e, n)),
                (this.userCode =
                  "\n      uniform float NAN;\n      float binaryOperation(float a, float b) {\n        " +
                  t +
                  "\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ");
            }
            return (
              (t.prototype.getCustomSetupFunc = function() {
                var t = this;
                return function(e, n) {
                  (null == t.startLoc &&
                    ((t.startLoc = e.getUniformLocationNoThrow(n, "NAN")),
                    null == t.startLoc)) ||
                    e.gl.uniform1f(t.startLoc, NaN);
                };
              }),
              t
            );
          })(),
          Pr =
            "\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  result.x = a.x == b.x ? 1. : result.x;\n  result.y = a.y == b.y ? 1. : result.y;\n  result.z = a.z == b.z ? 1. : result.z;\n  result.w = a.w == b.w ? 1. : result.w;\n  return result;\n",
          Tr =
            "\n  vec4 resultSign = sign(a) * sign(b);\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  ivec4 result = ia / ib;\n  ivec4 amodb = ia - ib * result;\n\n  // Vectorize INT_DIV\n  // if (resultSign < 0.0 && amodb != 0) result -= 1;\n  // return float(result);\n  return vec4(result -\n     ivec4(lessThan(resultSign, vec4(0.0))) * ivec4(notEqual(amodb, ivec4(0))));\n",
          Rr =
            "\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",
          Dr = (function() {
            function t(t, e, n) {
              (this.variableNames = ["A", "B"]),
                (this.supportsBroadcasting = !0),
                (this.usesPackedTextures = !0),
                (this.outputShape = rr(e, n)),
                (this.userCode =
                  "\n      uniform float NAN;\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        " +
                  t +
                  "\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ");
            }
            return (
              (t.prototype.getCustomSetupFunc = function() {
                var t = this;
                return function(e, n) {
                  (null == t.startLoc &&
                    ((t.startLoc = e.getUniformLocationNoThrow(n, "NAN")),
                    null == t.startLoc)) ||
                    e.gl.uniform1f(t.startLoc, NaN);
                };
              }),
              t
            );
          })(),
          Mr = (function() {
            function t(t) {
              (this.variableNames = ["A"]),
                (this.outputShape = t),
                (this.userCode =
                  "\n      uniform float min;\n      uniform float max;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isNaN(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, min, max));\n      }\n    ");
            }
            return (
              (t.prototype.getCustomSetupFunc = function(t, e) {
                var n = this;
                return function(r, i) {
                  null == n.minLoc &&
                    ((n.minLoc = r.getUniformLocationNoThrow(i, "min")),
                    (n.maxLoc = r.getUniformLocationNoThrow(i, "max"))),
                    r.gl.uniform1f(n.minLoc, t),
                    r.gl.uniform1f(n.maxLoc, e);
                };
              }),
              t
            );
          })(),
          jr = (function() {
            function t(t) {
              (this.variableNames = ["A"]),
                (this.usesPackedTextures = !0),
                (this.outputShape = t),
                (this.userCode =
                  "\n      uniform float min;\n      uniform float max;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (hasNaN(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(min), vec4(max)));\n      }\n    ");
            }
            return (
              (t.prototype.getCustomSetupFunc = function(t, e) {
                var n = this;
                return function(r, i) {
                  null == n.minLoc &&
                    ((n.minLoc = r.getUniformLocationNoThrow(i, "min")),
                    (n.maxLoc = r.getUniformLocationNoThrow(i, "max"))),
                    r.gl.uniform1f(n.minLoc, t),
                    r.gl.uniform1f(n.maxLoc, e);
                };
              }),
              t
            );
          })(),
          Lr = (function() {
            return function(t) {
              (this.variableNames = ["real", "imag"]),
                (this.outputShape = t),
                (this.userCode =
                  "\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    ");
            };
          })(),
          Br = (function() {
            return function(t) {
              (this.outputShape = []),
                (this.outputShape = Ve(t, 1)),
                (this.variableNames = t.map(function(t, e) {
                  return "T" + e;
                }));
              var e = new Array(t.length - 1);
              e[0] = t[0][1];
              for (var n = 1; n < e.length; n++) e[n] = e[n - 1] + t[n][1];
              var r = ["if (yC < " + e[0] + ") setOutput(getT0(yR, yC));"];
              for (n = 1; n < e.length; n++) {
                var i = e[n - 1];
                r.push(
                  "else if (yC < " +
                    e[n] +
                    ") setOutput(getT" +
                    n +
                    "(yR, yC-" +
                    i +
                    "));"
                );
              }
              var a = e.length,
                o = e[e.length - 1];
              r.push("else setOutput(getT" + a + "(yR, yC-" + o + "));"),
                (this.userCode =
                  "\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        " +
                  r.join("\n        ") +
                  "\n      }\n    ");
            };
          })(),
          Fr = (function() {
            return function(t) {
              (this.variableNames = ["x", "dy"]),
                (this.outputShape = t.filterShape);
              var e = t.strideHeight,
                n = t.strideWidth,
                r = t.padInfo.top,
                i = t.padInfo.left;
              this.userCode =
                "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < " +
                t.batchSize +
                "; b++) {\n          for (int yR = 0; yR < " +
                t.outHeight +
                "; yR++) {\n            int xR = wR + yR * " +
                e +
                " - " +
                r +
                ";\n\n            if (xR < 0 || xR >= " +
                t.inHeight +
                ") {\n              continue;\n            }\n\n            for (int yC = 0; yC < " +
                t.outWidth +
                "; yC++) {\n              int xC = wC + yC * " +
                n +
                " - " +
                i +
                ";\n\n              if (xC < 0 || xC >= " +
                t.inWidth +
                ") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
            };
          })(),
          zr = (function() {
            return function(t) {
              (this.variableNames = ["dy", "W"]),
                (this.outputShape = t.inShape);
              var e = t.filterHeight,
                n = t.filterWidth,
                r = t.strideHeight,
                i = t.strideWidth,
                a = e - 1 - t.padInfo.top,
                o = n - 1 - t.padInfo.left;
              this.userCode =
                "\n      const ivec2 pads = ivec2(" +
                a +
                ", " +
                o +
                ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < " +
                e +
                "; wR++) {\n          float dyR = float(dyRCorner + wR) / " +
                r +
                ".0;\n\n          if (dyR < 0.0 || dyR >= " +
                t.outHeight +
                ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = " +
                e +
                " - 1 - wR;\n\n          for (int wC = 0; wC < " +
                n +
                "; wC++) {\n            float dyC = float(dyCCorner + wC) / " +
                i +
                ".0;\n\n            if (dyC < 0.0 || dyC >= " +
                t.outWidth +
                ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = " +
                n +
                " - 1 - wC;\n\n            for (int d2 = 0; d2 < " +
                t.outChannels +
                "; d2++) {\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, d2);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
            };
          })(),
          Ur = (function() {
            return function(t) {
              (this.variableNames = ["x", "dy"]),
                (this.outputShape = t.filterShape);
              var e = t.strideDepth,
                n = t.strideHeight,
                r = t.strideWidth,
                i = t.padInfo.front,
                a = t.padInfo.top,
                o = t.padInfo.left;
              this.userCode =
                "\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < " +
                t.batchSize +
                "; b++) {\n          for (int yF = 0; yF < " +
                t.outDepth +
                "; yF++) {\n            int xF = wF + yF * " +
                e +
                " - " +
                i +
                ";\n\n            if (xF < 0 || xF >= " +
                t.inDepth +
                ") {\n              continue;\n            }\n\n            for (int yR = 0; yR < " +
                t.outHeight +
                "; yR++) {\n              int xR = wR + yR * " +
                n +
                " - " +
                a +
                ";\n\n              if (xR < 0 || xR >= " +
                t.inHeight +
                ") {\n                continue;\n              }\n\n              for (int yC = 0; yC < " +
                t.outWidth +
                "; yC++) {\n                int xC = wC + yC * " +
                r +
                " - " +
                o +
                ";\n\n                if (xC < 0 || xC >= " +
                t.inWidth +
                ") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
            };
          })(),
          Vr = (function() {
            return function(t) {
              (this.variableNames = ["dy", "W"]),
                (this.outputShape = t.inShape);
              var e = t.filterDepth,
                n = t.filterHeight,
                r = t.filterWidth,
                i = t.strideDepth,
                a = t.strideHeight,
                o = t.strideWidth,
                s = e - 1 - t.padInfo.front,
                u = n - 1 - t.padInfo.top,
                c = r - 1 - t.padInfo.left;
              this.userCode =
                "\n      const ivec3 pads = ivec3(" +
                s +
                ", " +
                u +
                ", " +
                c +
                ");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < " +
                e +
                "; wF++) {\n          float dyF = float(dyFCorner + wF) / " +
                i +
                ".0;\n\n          if (dyF < 0.0 || dyF >= " +
                t.outDepth +
                ".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = " +
                e +
                " - 1 - wF;\n\n          for (int wR = 0; wR < " +
                n +
                "; wR++) {\n            float dyR = float(dyRCorner + wR) / " +
                a +
                ".0;\n\n            if (dyR < 0.0 || dyR >= " +
                t.outHeight +
                ".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = " +
                n +
                " - 1 - wR;\n\n            for (int wC = 0; wC < " +
                r +
                "; wC++) {\n              float dyC = float(dyCCorner + wC) / " +
                o +
                ".0;\n\n              if (dyC < 0.0 || dyC >= " +
                t.outWidth +
                ".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = " +
                r +
                " - 1 - wC;\n\n              for (int d2 = 0; d2 < " +
                t.outChannels +
                "; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
            };
          })(),
          Wr = (function() {
            return function(t) {
              (this.variableNames = ["x", "dy"]),
                (this.outputShape = t.filterShape);
              var e = t.strideHeight,
                n = t.strideWidth,
                r = t.padInfo.top,
                i = t.padInfo.left,
                a = t.outChannels / t.inChannels;
              this.userCode =
                "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * " +
                a +
                " + dm;\n\n        float dotProd = 0.0;\n\n        // TODO: Vec4 over the batch size\n        for (int b = 0; b < " +
                t.batchSize +
                "; b++) {\n          for (int yR = 0; yR < " +
                t.outHeight +
                "; yR++) {\n            int xR = wR + yR * " +
                e +
                " - " +
                r +
                ";\n\n            if (xR < 0 || xR >= " +
                t.inHeight +
                ") {\n              continue;\n            }\n\n            for (int yC = 0; yC < " +
                t.outWidth +
                "; yC++) {\n              int xC = wC + yC * " +
                n +
                " - " +
                i +
                ";\n\n              if (xC < 0 || xC >= " +
                t.inWidth +
                ") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
            };
          })(),
          $r = (function() {
            return function(t) {
              (this.variableNames = ["dy", "W"]),
                (this.outputShape = t.inShape);
              var e = t.filterHeight,
                n = t.filterWidth,
                r = t.strideHeight,
                i = t.strideWidth,
                a = e - 1 - t.padInfo.top,
                o = n - 1 - t.padInfo.left,
                s = t.outChannels / t.inChannels;
              this.userCode =
                "\n      const ivec2 pads = ivec2(" +
                a +
                ", " +
                o +
                ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < " +
                e +
                "; wR++) {\n          float dyR = float(dyRCorner + wR) / " +
                r +
                ".0;\n\n          if (dyR < 0.0 || dyR >= " +
                t.outHeight +
                ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = " +
                e +
                " - 1 - wR;\n\n          for (int wC = 0; wC < " +
                n +
                "; wC++) {\n            float dyC = float(dyCCorner + wC) / " +
                i +
                ".0;\n\n            if (dyC < 0.0 || dyC >= " +
                t.outWidth +
                ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = " +
                n +
                " - 1 - wC;\n\n            // TODO: Vec4 over the channelMul\n            for (int dm = 0; dm < " +
                s +
                "; dm++) {\n              int d2 = d1 * " +
                s +
                " + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
            };
          })(),
          qr = (function() {
            return function(t) {
              (this.variableNames = ["x", "W"]),
                (this.outputShape = t.outShape);
              var e = t.padInfo.top,
                n = t.padInfo.left,
                r = t.strideHeight,
                i = t.strideWidth,
                a = t.dilationHeight,
                o = t.dilationWidth,
                s = t.filterHeight,
                u = t.filterWidth,
                c = 4 * Math.floor(t.inChannels / 4),
                l = t.inChannels % 4;
              this.userCode =
                "\n      const ivec2 strides = ivec2(" +
                r +
                ", " +
                i +
                ");\n      const ivec2 pads = ivec2(" +
                e +
                ", " +
                n +
                ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < " +
                s +
                "; wR++) {\n          int xR = xRCorner + wR * " +
                a +
                ";\n\n          if (xR < 0 || xR >= " +
                t.inHeight +
                ") {\n            continue;\n          }\n\n          for (int wC = 0; wC < " +
                u +
                "; wC++) {\n            int xC = xCCorner + wC * " +
                o +
                ";\n\n            if (xC < 0 || xC >= " +
                t.inWidth +
                ") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < " +
                c +
                "; d1 += 4) {\n              vec4 xValues = vec4(\n                getX(batch, xR, xC, d1),\n                getX(batch, xR, xC, d1 + 1),\n                getX(batch, xR, xC, d1 + 2),\n                getX(batch, xR, xC, d1 + 3)\n              );\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              dotProd += dot(xValues, wValues);\n            }\n\n            if (" +
                (1 === l) +
                ") {\n              dotProd +=\n                getX(batch, xR, xC, " +
                c +
                ") *\n                getW(wR, wC, " +
                c +
                ", d2);\n            } else if (" +
                (2 === l) +
                ") {\n              vec2 xValues = vec2(\n                getX(batch, xR, xC, " +
                c +
                "),\n                getX(batch, xR, xC, " +
                c +
                " + 1)\n              );\n              vec2 wValues = vec2(\n                getW(wR, wC, " +
                c +
                ", d2),\n                getW(wR, wC, " +
                c +
                " + 1, d2)\n              );\n              dotProd += dot(xValues, wValues);\n            } else if (" +
                (3 === l) +
                ") {\n              vec3 xValues = vec3(\n                getX(batch, xR, xC, " +
                c +
                "),\n                getX(batch, xR, xC, " +
                c +
                " + 1),\n                getX(batch, xR, xC, " +
                c +
                " + 2)\n              );\n              vec3 wValues = vec3(\n                getW(wR, wC, " +
                c +
                ", d2),\n                getW(wR, wC, " +
                c +
                " + 1, d2),\n                getW(wR, wC, " +
                c +
                " + 2, d2)\n              );\n              dotProd += dot(xValues, wValues);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
            };
          })(),
          Hr = (function() {
            return function(t) {
              (this.variableNames = ["x", "W"]),
                (this.outputShape = t.outShape);
              var e = t.padInfo.front,
                n = t.padInfo.top,
                r = t.padInfo.left,
                i = t.strideDepth,
                a = t.strideHeight,
                o = t.strideWidth,
                s = t.dilationDepth,
                u = t.dilationHeight,
                c = t.dilationWidth,
                l = t.filterDepth,
                f = t.filterHeight,
                h = t.filterWidth,
                p = 4 * Math.floor(t.inChannels / 4),
                d = t.inChannels % 4;
              this.userCode =
                "\n      const ivec3 strides = ivec3(" +
                i +
                ", " +
                a +
                ", " +
                o +
                ");\n      const ivec3 pads = ivec3(" +
                e +
                ", " +
                n +
                ", " +
                r +
                ");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < " +
                l +
                "; wF++) {\n          int xF = xFCorner + wF * " +
                s +
                ";\n\n          if (xF < 0 || xF >= " +
                t.inDepth +
                ") {\n            continue;\n          }\n\n          for (int wR = 0; wR < " +
                f +
                "; wR++) {\n            int xR = xRCorner + wR * " +
                u +
                ";\n\n            if (xR < 0 || xR >= " +
                t.inHeight +
                ") {\n              continue;\n            }\n\n            for (int wC = 0; wC < " +
                h +
                "; wC++) {\n              int xC = xCCorner + wC * " +
                c +
                ";\n\n              if (xC < 0 || xC >= " +
                t.inWidth +
                ") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < " +
                p +
                "; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (" +
                (1 === d) +
                ") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, " +
                p +
                ") *\n                  getW(wF, wR, wC, " +
                p +
                ", d2);\n              } else if (" +
                (2 === d) +
                ") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, " +
                p +
                "),\n                  getX(batch, xF, xR, xC, " +
                p +
                " + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, " +
                p +
                ", d2),\n                  getW(wF, wR, wC, " +
                p +
                " + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (" +
                (3 === d) +
                ") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, " +
                p +
                "),\n                  getX(batch, xF, xR, xC, " +
                p +
                " + 1),\n                  getX(batch, xF, xR, xC, " +
                p +
                " + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, " +
                p +
                ", d2),\n                  getW(wF, wR, wC, " +
                p +
                " + 1, d2),\n                  getW(wF, wR, wC, " +
                p +
                " + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
            };
          })(),
          Kr = (function() {
            return function(t) {
              (this.variableNames = ["x", "W"]),
                (this.outputShape = t.outShape);
              var e = t.inHeight,
                n = t.inWidth,
                r = t.padInfo.top,
                i = t.padInfo.left,
                a = t.strideHeight,
                o = t.strideWidth,
                s = t.dilationHeight,
                u = t.dilationWidth,
                c = t.filterHeight,
                l = t.filterWidth,
                f = t.outChannels / t.inChannels;
              this.userCode =
                "\n      const ivec2 strides = ivec2(" +
                a +
                ", " +
                o +
                ");\n      const ivec2 pads = ivec2(" +
                r +
                ", " +
                i +
                ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / " +
                f +
                ";\n        int q = d2 - d1 * " +
                f +
                ";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TODO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < " +
                c +
                "; wR++) {\n          int xR = xRCorner + wR * " +
                s +
                ";\n\n          if (xR < 0 || xR >= " +
                e +
                ") {\n            continue;\n          }\n\n          for (int wC = 0; wC < " +
                l +
                "; wC++) {\n            int xC = xCCorner + wC * " +
                u +
                ";\n\n            if (xC < 0 || xC >= " +
                n +
                ") {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
            };
          })(),
          Gr = (function() {
            return function(t) {
              (this.variableNames = ["x", "W"]),
                (this.usesPackedTextures = !0),
                (this.outputShape = t.outShape);
              for (
                var e = t.inHeight,
                  n = t.inWidth,
                  r = t.padInfo.top,
                  i = t.padInfo.left,
                  a = t.strideHeight,
                  o = t.strideWidth,
                  s = t.dilationHeight,
                  u = t.dilationWidth,
                  c = t.filterHeight,
                  l = t.filterWidth,
                  f = l,
                  h = "int xR; int xC; int xCOffset;",
                  p = 0;
                p < c;
                p++
              )
                for (var d = 0; d < l; d++)
                  h +=
                    "\n          vec4 xTexelR" +
                    p +
                    "C" +
                    2 * d +
                    " = vec4(0.);\n          vec4 wR" +
                    p +
                    "C" +
                    d +
                    " = vec4(0.);\n          vec4 xR" +
                    p +
                    "C" +
                    d +
                    " = vec4(0.);";
              for (p = 0; p < c; p++)
                for (var m = 0; m < f; m++) {
                  if (
                    ((h +=
                      "\n          xR = xRCorner + " +
                      p * s +
                      ";\n          xC = xCCorner + " +
                      (d = 2 * m) * u +
                      ";\n        "),
                    1 === o)
                  ) {
                    if (
                      d < l &&
                      ((h +=
                        i % 2 == 1
                          ? "\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < " +
                            e +
                            " && xCOffset >= 0 && xCOffset < " +
                            n +
                            ") {\n                  xTexelR" +
                            p +
                            "C" +
                            d +
                            " = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR" +
                            p +
                            "C" +
                            d +
                            " = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < " +
                            e +
                            " && xCOffset >= 0 && xCOffset < " +
                            n +
                            ") {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n                  xR" +
                            p +
                            "C" +
                            d +
                            " = vec4(previous.zw, xTexelR" +
                            p +
                            "C" +
                            d +
                            ".xy);\n                } else {\n                  xR" +
                            p +
                            "C" +
                            d +
                            " = vec4(0, 0, xTexelR" +
                            p +
                            "C" +
                            d +
                            ".xy);\n                }\n              "
                          : "\n                if(xR >= 0 && xR < " +
                            e +
                            " && xC >= 0 && xC < " +
                            n +
                            ") {\n                  xTexelR" +
                            p +
                            "C" +
                            d +
                            " = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR" +
                            p +
                            "C" +
                            d +
                            " = vec4(0.);\n                }\n\n                xR" +
                            p +
                            "C" +
                            d +
                            " = xTexelR" +
                            p +
                            "C" +
                            d +
                            ";\n              "),
                      d + 1 < l)
                    ) {
                      var v = i % 2 == 0 ? y(u) : u;
                      (u % 2 == 0 && i % 2 == 1) || (u % 2 != 0 && i % 2 != 1)
                        ? ((h +=
                            "\n                  xCOffset = xC + " +
                            (i % 2) +
                            " + " +
                            v +
                            ";\n\n                  if(xR >= 0 && xR < " +
                            e +
                            " &&\n                    xCOffset >= 0 && xCOffset < " +
                            n +
                            ") {\n                    xTexelR" +
                            p +
                            "C" +
                            (d + 2) +
                            " = getX(batch, xR, xCOffset, d1);\n                  }\n                "),
                          u > 1 &&
                            (h +=
                              "\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < " +
                              e +
                              " &&\n                      xCOffset >= 0 && xCOffset < " +
                              n +
                              ") {\n                      xTexelR" +
                              p +
                              "C" +
                              d +
                              " = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR" +
                              p +
                              "C" +
                              d +
                              " = vec4(0.);\n                    }\n                  "),
                          (h +=
                            "\n                  xR" +
                            p +
                            "C" +
                            (d + 1) +
                            " = vec4(\n                    xTexelR" +
                            p +
                            "C" +
                            d +
                            ".zw, xTexelR" +
                            p +
                            "C" +
                            (d + 2) +
                            ".xy);\n                "))
                        : (h +=
                            "\n                  xCOffset = xC + " +
                            v +
                            ";\n\n                  if(xR >= 0 && xR < " +
                            e +
                            " &&\n                    xCOffset >= 0 && xCOffset < " +
                            n +
                            ") {\n                    xTexelR" +
                            p +
                            "C" +
                            (d + 2) +
                            " = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR" +
                            p +
                            "C" +
                            (d + 1) +
                            " = xTexelR" +
                            p +
                            "C" +
                            (d + 2) +
                            ";\n                ");
                    }
                  } else
                    d < l &&
                      ((h +=
                        "\n              if(xR >= 0 && xR < " +
                        e +
                        ") {\n            "),
                      i % 2 == 1
                        ? ((h +=
                            "\n                xCOffset = xC + 1 - " +
                            o +
                            ";\n                if(xCOffset >= 0 && xCOffset < " +
                            n +
                            ") {\n                  xTexelR" +
                            p +
                            "C" +
                            d +
                            " = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR" +
                            p +
                            "C" +
                            d +
                            " = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < " +
                            n +
                            ") {\n                  xTexelR" +
                            p +
                            "C" +
                            (d + 2) +
                            " = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR" +
                            p +
                            "C" +
                            (d + 2) +
                            " = vec4(0.);\n                }\n\n                xR" +
                            p +
                            "C" +
                            d +
                            " = vec4(\n                  xTexelR" +
                            p +
                            "C" +
                            d +
                            ".zw, xTexelR" +
                            p +
                            "C" +
                            (d + 2) +
                            ".zw);\n              "),
                          d + 1 < l &&
                            (h +=
                              "\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + " +
                              o +
                              ";\n                  if(xCOffset >= 0 && xCOffset < " +
                              n +
                              ") {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR" +
                              p +
                              "C" +
                              (d + 1) +
                              " = vec4(xTexelR" +
                              p +
                              "C" +
                              (d + 2) +
                              ".xy, final.xy);\n                "))
                        : ((h +=
                            "\n                if(xC >= 0 && xC < " +
                            n +
                            ") {\n                  xTexelR" +
                            p +
                            "C" +
                            d +
                            " = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR" +
                            p +
                            "C" +
                            d +
                            " = vec4(0.);\n                }\n\n                xCOffset = xC + " +
                            o +
                            ";\n                if(xCOffset >= 0 && xCOffset < " +
                            n +
                            ") {\n                  xTexelR" +
                            p +
                            "C" +
                            (d + 2) +
                            " = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR" +
                            p +
                            "C" +
                            (d + 2) +
                            " = vec4(0.);\n                }\n\n                xR" +
                            p +
                            "C" +
                            d +
                            " = vec4(\n                  xTexelR" +
                            p +
                            "C" +
                            d +
                            ".xy, xTexelR" +
                            p +
                            "C" +
                            (d + 2) +
                            ".xy);\n              "),
                          d + 1 < l &&
                            (h +=
                              "\n                  xR" +
                              p +
                              "C" +
                              (d + 1) +
                              " = vec4(\n                    xTexelR" +
                              p +
                              "C" +
                              d +
                              ".zw, xTexelR" +
                              p +
                              "C" +
                              (d + 2) +
                              ".zw);\n                ")),
                      (h += "}"));
                  d < l &&
                    ((h +=
                      "\n            vec4 wTexelR" +
                      p +
                      "C" +
                      d +
                      " = getW(" +
                      p +
                      ", " +
                      d +
                      ", d1, q);\n            wR" +
                      p +
                      "C" +
                      d +
                      " = vec4(wTexelR" +
                      p +
                      "C" +
                      d +
                      ".xz, wTexelR" +
                      p +
                      "C" +
                      d +
                      ".xz);\n          "),
                    d + 1 < l &&
                      (h +=
                        "\n              vec4 wTexelR" +
                        p +
                        "C" +
                        (d + 1) +
                        " = getW(" +
                        p +
                        ", " +
                        (d + 1) +
                        ", d1, q);\n              wR" +
                        p +
                        "C" +
                        (d + 1) +
                        " =\n                vec4(wTexelR" +
                        p +
                        "C" +
                        (d + 1) +
                        ".xz, wTexelR" +
                        p +
                        "C" +
                        (d + 1) +
                        ".xz);"));
                }
              for (p = 0; p < c; p++)
                for (d = 0; d < l; d++)
                  h +=
                    "result += xR" + p + "C" + d + " * wR" + p + "C" + d + ";";
              this.userCode =
                "\n      const ivec2 strides = ivec2(" +
                a +
                ", " +
                o +
                ");\n      const ivec2 pads = ivec2(" +
                r +
                ", " +
                i +
                ");\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 result = vec4(0.);\n\n        " +
                h +
                "\n\n        setOutput(result);\n      }\n    ";
            };
          })(),
          Xr = (function() {
            return function(t, e, n, r, i) {
              (this.variableNames = ["Image", "Boxes", "BoxInd"]),
                (this.outputShape = []);
              var a = t[0],
                o = t[1],
                s = t[2],
                u = t[3],
                c = e[0],
                l = n[0],
                f = n[1];
              this.outputShape = [c, l, f, u];
              var h = "bilinear" === r ? 1 : 0,
                p = [o - 1 + ".0", s - 1 + ".0"],
                d = p[0],
                m = p[1],
                v =
                  l > 1
                    ? [
                        "" + (o - 1) / (l - 1),
                        "(y2-y1) * height_ratio",
                        "y1*" + d + " + float(y)*(height_scale)"
                      ]
                    : ["0.0", "0.0", "0.5 * (y1+y2) * " + d],
                y = v[0],
                g = v[1],
                b = v[2],
                w =
                  f > 1
                    ? [
                        "" + (s - 1) / (f - 1),
                        "(x2-x1) * width_ratio",
                        "x1*" + m + " + float(x)*(width_scale)"
                      ]
                    : ["0.0", "0.0", "0.5 * (x1+x2) * " + m],
                _ = w[0],
                x = w[1],
                E = w[2];
              this.userCode =
                "\n      const float height_ratio = float(" +
                y +
                ");\n      const float width_ratio = float(" +
                _ +
                ");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= " +
                a +
                ") {\n          return;\n        }\n\n        float height_scale = " +
                g +
                ";\n        float width_scale = " +
                x +
                ";\n\n        float in_y = " +
                b +
                ";\n        if( in_y < 0.0 || in_y > " +
                d +
                " ) {\n          setOutput(float(" +
                i +
                "));\n          return;\n        }\n        float in_x = " +
                E +
                ";\n        if( in_x < 0.0 || in_x > " +
                m +
                " ) {\n          setOutput(float(" +
                i +
                "));\n          return;\n        }\n\n        vec2 sourceFracIndexRC = vec2(in_y,in_x);\n        if(" +
                h +
                " == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n          ivec2 sourceCeilRC = ivec2(ceil(sourceFracIndexRC));\n\n          float topLeft = getImage(b, sourceFloorRC.x, sourceFloorRC.y, d);\n          float bottomLeft = getImage(b, sourceCeilRC.x, sourceFloorRC.y, d);\n          float topRight = getImage(b, sourceFloorRC.x, sourceCeilRC.y, d);\n          float bottomRight = getImage(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n          vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n          float top = topLeft + (topRight - topLeft) * fracRC.y;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n          float newValue = top + (bottom - top) * fracRC.x;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestRC = ivec2(floor(\n            sourceFracIndexRC + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestRC.x, sourceNearestRC.y, d);\n          setOutput(newValue);\n        }\n      }\n    ";
            };
          })();
        function Jr() {
          var t, e, n, r, i, a, o, s;
          return (
            2 === _e.get("WEBGL_VERSION")
              ? ((t = "#version 300 es"),
                (e = "in"),
                (n = "out"),
                (r = "in"),
                (i = "texture"),
                (a = "outputColor"),
                (o = "out vec4 outputColor;"),
                (s =
                  "\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "))
              : ((t = ""),
                (e = "attribute"),
                (n = "varying"),
                (r = "varying"),
                (i = "texture2D"),
                (a = "gl_FragColor"),
                (o = ""),
                (s =
                  "\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    ")),
            {
              version: t,
              attribute: e,
              varyingVs: n,
              varyingFs: r,
              texture2D: i,
              output: a,
              defineOutput: o,
              defineRound: s
            }
          );
        }
        function Yr(t, e, n) {
          void 0 === n && (n = "index");
          var r = Y(e);
          return r
            .map(function(e, i) {
              return (
                "int " +
                t[i] +
                " = " +
                n +
                " / " +
                e +
                "; " +
                (i === r.length - 1
                  ? "int " + t[i + 1] + " = " + n + " - " + t[i] + " * " + e
                  : "index -= " + t[i] + " * " + e) +
                ";"
              );
            })
            .join("");
        }
        function Qr(t) {
          return 1 === t.length
            ? "" + t[0]
            : "vec" + t.length + "(" + t.join(",") + ")";
        }
        function Zr(t, e) {
          if (t.length !== e.length)
            throw new Error(
              "Vectors to be dotted must be of the same length -got " +
                t.length +
                " and " +
                e.length
            );
          for (
            var n = [], r = Math.floor(t.length / 4), i = t.length % 4, a = 0;
            a < r;
            a++
          ) {
            var o = t.slice(4 * a, 4 * a + 4),
              s = e.slice(4 * a, 4 * a + 4);
            n.push(Qr(o) + ", " + Qr(s));
          }
          return (
            0 !== i &&
              ((o = t.slice(4 * r)),
              (s = e.slice(4 * r)),
              1 === o.length &&
                ((o = o.map(function(t) {
                  return "float(" + t + ")";
                })),
                (s = s.map(function(t) {
                  return "float(" + t + ")";
                }))),
              n.push(Qr(o) + ", " + Qr(s))),
            n
              .map(function(t, e) {
                return "dot(" + t + ")";
              })
              .join("+")
          );
        }
        function ti(t, e, n, r) {
          var i = [];
          t.forEach(function(t) {
            var e = N(t.shapeInfo.logicalShape);
            t.shapeInfo.isUniform
              ? i.push(
                  "uniform float " + t.name + (e > 1 ? "[" + e + "]" : "") + ";"
                )
              : (i.push("uniform sampler2D " + t.name + ";"),
                i.push("uniform int offset" + t.name + ";"));
          });
          var a,
            o,
            s = i.join("\n"),
            u = t
              .map(function(t) {
                return ri(t, e, r);
              })
              .join("\n"),
            c = e.texShape,
            l = Jr(),
            f = oi(l),
            h = ci(l);
          return (
            e.isPacked
              ? ((a = ii(e.logicalShape, c)), (o = ui(l)))
              : ((a = ai(e.logicalShape, c)), (o = si(l))),
            r && (h += mi),
            [h, f, o, s, a, u, n].join("\n")
          );
        }
        function ei(t) {
          var e = t.shapeInfo.logicalShape;
          switch (e.length) {
            case 0:
              return Ai(t);
            case 1:
              return Pi(t);
            case 2:
              return Ri(t);
            case 3:
              return Mi(t);
            case 4:
              return Li(t);
            case 5:
              return Bi(t);
            case 6:
              return Fi(t);
            default:
              throw new Error(
                e.length + "-D input sampling is not yet supported"
              );
          }
        }
        function ni(t) {
          switch (t.shapeInfo.logicalShape.length) {
            case 0:
              return Ci(t);
            case 1:
              return ki(t);
            case 2:
              return Ti(t);
            case 3:
              return Di(t);
            default:
              return ji(t);
          }
        }
        function ri(t, e, n) {
          void 0 === n && (n = !1);
          var r = "";
          r += n ? ni(t) : ei(t);
          var i = t.shapeInfo.logicalShape,
            a = e.logicalShape;
          return i.length <= a.length && (r += n ? Ui(t, e) : Vi(t, e)), r;
        }
        function ii(t, e) {
          switch (t.length) {
            case 0:
              return vi();
            case 1:
              return yi(t, e);
            case 2:
              return Ni(t, e);
            case 3:
              return bi(t, e);
            default:
              return _i(t, e);
          }
        }
        function ai(t, e) {
          switch (t.length) {
            case 0:
              return vi();
            case 1:
              return gi(t, e);
            case 2:
              return Oi(t, e);
            case 3:
              return wi(t, e);
            case 4:
              return xi(t, e);
            case 5:
              return Ei(t, e);
            case 6:
              return Si(t, e);
            default:
              throw new Error(
                t.length + "-D output sampling is not yet supported"
              );
          }
        }
        function oi(t) {
          return (
            "\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return " +
            t.texture2D +
            "(textureSampler, uv).r;\n    }\n  "
          );
        }
        function si(t) {
          return (
            "\n    void setOutput(float val) {\n      " +
            t.output +
            " = vec4(val, 0, 0, 0);\n    }\n  "
          );
        }
        function ui(t) {
          return (
            "\n    void setOutput(vec4 val) {\n      " +
            t.output +
            " = val;\n    }\n  "
          );
        }
        function ci(t) {
          var e = "";
          return (
            (e = _e.get("PROD")
              ? "\n      bool isNaN(float val) {\n        return false;\n      }\n\n      bool hasNaN(vec4 values) {\n        return false;\n      }\n    "
              : "\n      bool isNaN(float val) {\n        return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n      }\n\n      bool hasNaN(vec4 values) {\n        return any(bvec4(\n          isNaN(values.x),\n          isNaN(values.y),\n          isNaN(values.z),\n          isNaN(values.w)\n        ));\n      }\n    "),
            t.version +
              "\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    " +
              t.varyingFs +
              " vec2 resultUV;\n    " +
              t.defineOutput +
              "\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    " +
              e +
              "\n\n    float getNaN(vec4 values) {\n      return dot(vec4(1), values);\n    }\n\n    " +
              t.defineRound +
              "\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    " +
              li +
              "\n    " +
              fi +
              "\n    " +
              hi +
              "\n    " +
              pi +
              "\n    " +
              di +
              "\n  "
          );
        }
        var li =
            "\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",
          fi =
            "\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",
          hi =
            "\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",
          pi =
            "\nvec2 UVfrom5D(int texNumR, int texNumC, int stride0,\n    int stride1, int stride2, int stride3, int row, int col, int depth,\n    int depth2, int depth3) {\n  // Explicitly use integer operations as dot() only works on floats.\n  int index = row * stride0 + col * stride1 +\n              depth * stride2 + depth2 * stride3 + depth3;\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",
          di =
            "\nvec2 UVfrom6D(int texNumR, int texNumC, int stride0,\n    int stride1, int stride2, int stride3, int stride4,\n    int row, int col, int depth, int depth2, int depth3, int depth4) {\n  // Explicitly use integer operations as dot() only works on floats.\n  int index = row * stride0 + col * stride1 + depth * stride2 + depth2 *\n    stride3 + depth3 * stride4 + depth4;\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",
          mi =
            "\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";
        function vi() {
          return "\n    int getOutputCoords() {\n      return 0;\n    }\n  ";
        }
        function yi(t, e) {
          var n = [Math.ceil(e[0] / 2), Math.ceil(e[1] / 2)];
          return 1 === n[0]
            ? "\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * " +
                n[1] +
                ".0);\n      }\n    "
            : 1 === n[1]
            ? "\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * " +
              n[0] +
              ".0);\n      }\n    "
            : "\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" +
              n[0] +
              ", " +
              n[1] +
              "));\n      return resTexRC.x * " +
              n[1] +
              " + resTexRC.y;\n    }\n  ";
        }
        function gi(t, e) {
          return 1 === e[0]
            ? "\n      int getOutputCoords() {\n        return int(resultUV.x * " +
                e[1] +
                ".0);\n      }\n    "
            : 1 === e[1]
            ? "\n      int getOutputCoords() {\n        return int(resultUV.y * " +
              e[0] +
              ".0);\n      }\n    "
            : "\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" +
              e[0] +
              ", " +
              e[1] +
              "));\n      return resTexRC.x * " +
              e[1] +
              " + resTexRC.y;\n    }\n  ";
        }
        function bi(t, e) {
          var n = [Math.ceil(e[0] / 2), Math.ceil(e[1] / 2)],
            r = Math.ceil(t[2] / 2),
            i = r * Math.ceil(t[1] / 2);
          return (
            "\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" +
            n[0] +
            ", " +
            n[1] +
            "));\n      int index = resTexRC.x * " +
            n[1] +
            " + resTexRC.y;\n\n      int b = index / " +
            i +
            ";\n      index -= b * " +
            i +
            ";\n\n      int r = 2 * (index / " +
            r +
            ");\n      int c = imod(index, " +
            r +
            ") * 2;\n\n      return ivec3(b, r, c);\n    }\n  "
          );
        }
        function wi(t, e) {
          var n = Yr(["r", "c", "d"], t);
          return (
            "\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" +
            e[0] +
            ", " +
            e[1] +
            "));\n      int index = resTexRC.x * " +
            e[1] +
            " + resTexRC.y;\n      " +
            n +
            "\n      return ivec3(r, c, d);\n    }\n  "
          );
        }
        function _i(t, e) {
          for (
            var n = [Math.ceil(e[0] / 2), Math.ceil(e[1] / 2)],
              r = Math.ceil(t[t.length - 1] / 2),
              i = r * Math.ceil(t[t.length - 2] / 2),
              a = i,
              o = "",
              s = "b, r, c",
              u = 2;
            u < t.length - 1;
            u++
          )
            (o =
              "\n      int b" +
              u +
              " = index / " +
              (a *= t[t.length - u - 1]) +
              ";\n      index -= b" +
              u +
              " * " +
              a +
              ";\n    " +
              o),
              (s = "b" + u + ", " + s);
          return (
            "\n    ivec" +
            t.length +
            " getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" +
            n[0] +
            ", " +
            n[1] +
            "));\n      int index = resTexRC.x * " +
            n[1] +
            " + resTexRC.y;\n\n      " +
            o +
            "\n\n      int b = index / " +
            i +
            ";\n      index -= b * " +
            i +
            ";\n\n      int r = 2 * (index / " +
            r +
            ");\n      int c = imod(index, " +
            r +
            ") * 2;\n\n      return ivec" +
            t.length +
            "(" +
            s +
            ");\n    }\n  "
          );
        }
        function xi(t, e) {
          var n = Yr(["r", "c", "d", "d2"], t);
          return (
            "\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(" +
            e[0] +
            ", " +
            e[1] +
            "));\n      int index = resTexRC.x * " +
            e[1] +
            " + resTexRC.y;\n      " +
            n +
            "\n      return ivec4(r, c, d, d2);\n    }\n  "
          );
        }
        function Ei(t, e) {
          var n = Yr(["r", "c", "d", "d2", "d3"], t);
          return (
            "\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(" +
            e[0] +
            ",\n                             " +
            e[1] +
            "));\n\n      int index = resTexRC.x * " +
            e[1] +
            " + resTexRC.y;\n\n      " +
            n +
            "\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  "
          );
        }
        function Si(t, e) {
          var n = Yr(["r", "c", "d", "d2", "d3", "d4"], t);
          return (
            "\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(" +
            e[0] +
            ", " +
            e[1] +
            "));\n      int index = resTexRC.x * " +
            e[1] +
            " + resTexRC.y;\n\n      " +
            n +
            "\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  "
          );
        }
        function Ni(t, e) {
          var n = [Math.ceil(e[0] / 2), Math.ceil(e[1] / 2)];
          if (I(t, e))
            return (
              "\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(" +
              n[0] +
              ", " +
              n[1] +
              "));\n      }\n    "
            );
          var r = Math.ceil(t[1] / 2);
          return (
            "\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" +
            n[0] +
            ", " +
            n[1] +
            "));\n\n      int index = resTexRC.x * " +
            n[1] +
            " + resTexRC.y;\n      int r = 2 * (index / " +
            r +
            ");\n      int c = imod(index, " +
            r +
            ") * 2;\n\n      return ivec2(r, c);\n    }\n  "
          );
        }
        function Oi(t, e) {
          return I(t, e)
            ? "\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(" +
                e[0] +
                ", " +
                e[1] +
                "));\n      }\n    "
            : 1 === t[1]
            ? "\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(" +
              e[0] +
              ", " +
              e[1] +
              "));\n        int index = resTexRC.x * " +
              e[1] +
              " + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    "
            : 1 === t[0]
            ? "\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(" +
              e[0] +
              ", " +
              e[1] +
              "));\n        int index = resTexRC.x * " +
              e[1] +
              " + resTexRC.y;\n        return ivec2(0, index);\n      }\n    "
            : "\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(" +
              e[0] +
              ", " +
              e[1] +
              "));\n      int index = resTexRC.x * " +
              e[1] +
              " + resTexRC.y;\n      int r = index / " +
              t[1] +
              ";\n      int c = index - r * " +
              t[1] +
              ";\n      return ivec2(r, c);\n    }\n  ";
        }
        function Ii(t) {
          return "offset" + t;
        }
        function Ci(t) {
          var e = t.name;
          return (
            "\n    vec4 get" +
            e.charAt(0).toUpperCase() +
            e.slice(1) +
            "() {\n      return " +
            Jr().texture2D +
            "(" +
            e +
            ", halfCR);\n    }\n  "
          );
        }
        function Ai(t) {
          var e = t.name,
            n = "get" + e.charAt(0).toUpperCase() + e.slice(1);
          if (t.shapeInfo.isUniform)
            return "float " + n + "() {return " + e + ";}";
          var r = t.shapeInfo.texShape,
            i = r[0],
            a = r[1];
          if (1 === i && 1 === a)
            return (
              "\n      float " +
              n +
              "() {\n        return sampleTexture(" +
              e +
              ", halfCR);\n      }\n    "
            );
          var o = t.shapeInfo.texShape;
          return (
            "\n    float " +
            n +
            "() {\n      vec2 uv = uvFromFlat(" +
            o[0] +
            ", " +
            o[1] +
            ", " +
            Ii(e) +
            ");\n      return sampleTexture(" +
            e +
            ", uv);\n    }\n  "
          );
        }
        function ki(t) {
          var e = t.name,
            n = "get" + e.charAt(0).toUpperCase() + e.slice(1),
            r = t.shapeInfo.texShape,
            i = [Math.ceil(r[0] / 2), Math.ceil(r[1] / 2)],
            a = Jr();
          return (
            "\n    vec4 " +
            n +
            "(int index) {\n      vec2 uv = packedUVfrom1D(\n        " +
            i[0] +
            ", " +
            i[1] +
            ", index);\n      return " +
            a.texture2D +
            "(" +
            e +
            ", uv);\n    }\n  "
          );
        }
        function Pi(t) {
          var e = t.name,
            n = "get" + e.charAt(0).toUpperCase() + e.slice(1);
          if (t.shapeInfo.isUniform)
            return (
              "\n      float " +
              n +
              "(int index) {\n        " +
              zi(t) +
              "\n      }\n    "
            );
          var r = t.shapeInfo.texShape,
            i = r[0],
            a = r[1];
          if (1 === a && 1 === i)
            return (
              "\n      float " +
              n +
              "(int index) {\n        return sampleTexture(" +
              e +
              ", halfCR);\n      }\n    "
            );
          var o = Ii(e);
          return 1 === a
            ? "\n      float " +
                n +
                "(int index) {\n        vec2 uv = vec2(0.5, (float(index + " +
                o +
                ") + 0.5) / " +
                i +
                ".0);\n        return sampleTexture(" +
                e +
                ", uv);\n      }\n    "
            : 1 === i
            ? "\n      float " +
              n +
              "(int index) {\n        vec2 uv = vec2((float(index + " +
              o +
              ") + 0.5) / " +
              a +
              ".0, 0.5);\n        return sampleTexture(" +
              e +
              ", uv);\n      }\n    "
            : "\n    float " +
              n +
              "(int index) {\n      vec2 uv = uvFromFlat(" +
              i +
              ", " +
              a +
              ", index + " +
              o +
              ");\n      return sampleTexture(" +
              e +
              ", uv);\n    }\n  ";
        }
        function Ti(t) {
          var e = t.shapeInfo.logicalShape,
            n = t.name,
            r = "get" + n.charAt(0).toUpperCase() + n.slice(1),
            i = t.shapeInfo.texShape,
            a = i[0],
            o = i[1],
            s = Jr();
          if (null != i && I(e, i))
            return (
              "\n      vec4 " +
              r +
              "(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(" +
              o +
              ".0, " +
              a +
              ".0);\n\n        return " +
              s.texture2D +
              "(" +
              n +
              ", uv);\n      }\n    "
            );
          var u = [Math.ceil(i[0] / 2), Math.ceil(i[1] / 2)];
          return (
            "\n    vec4 " +
            r +
            "(int row, int col) {\n      vec2 uv = packedUVfrom2D(" +
            Math.ceil(e[1] / 2) +
            ", " +
            u[0] +
            ", " +
            u[1] +
            ", row, col);\n      return " +
            s.texture2D +
            "(" +
            n +
            ", uv);\n    }\n  "
          );
        }
        function Ri(t) {
          var e = t.shapeInfo.logicalShape,
            n = t.name,
            r = "get" + n.charAt(0).toUpperCase() + n.slice(1),
            i = t.shapeInfo.texShape;
          if (null != i && I(e, i)) {
            var a = i[0];
            return (
              "\n    float " +
              r +
              "(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(" +
              i[1] +
              ".0, " +
              a +
              ".0);\n      return sampleTexture(" +
              n +
              ", uv);\n    }\n  "
            );
          }
          var o = j(e),
            s = o.newShape,
            u = o.keptDims,
            c = s;
          if (c.length < e.length)
            return (
              "\n      " +
              ei($i(t, c)) +
              "\n      float " +
              r +
              "(int row, int col) {\n        return " +
              r +
              "(" +
              qi(["row", "col"], u) +
              ");\n      }\n    "
            );
          if (t.shapeInfo.isUniform)
            return (
              "\n      float " +
              r +
              "(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(" +
              e[1] +
              ", 1)));\n        " +
              zi(t) +
              "\n      }\n    "
            );
          var l = i[0],
            f = i[1],
            h = Ii(n);
          return 1 === f
            ? "\n    float " +
                r +
                "(int row, int col) {\n      float index = dot(vec3(row, col, " +
                h +
                "), vec3(" +
                e[1] +
                ", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / " +
                l +
                ".0);\n      return sampleTexture(" +
                n +
                ", uv);\n    }\n  "
            : 1 === l
            ? "\n    float " +
              r +
              "(int row, int col) {\n      float index = dot(vec3(row, col, " +
              h +
              "), vec3(" +
              e[1] +
              ", 1, 1));\n      vec2 uv = vec2((index + 0.5) / " +
              f +
              ".0, 0.5);\n      return sampleTexture(" +
              n +
              ", uv);\n    }\n  "
            : "\n  float " +
              r +
              "(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * " +
              e[1] +
              " + col + " +
              h +
              ";\n    vec2 uv = uvFromFlat(" +
              l +
              ", " +
              f +
              ", index);\n    return sampleTexture(" +
              n +
              ", uv);\n  }\n";
        }
        function Di(t) {
          var e = t.shapeInfo.logicalShape,
            n = t.name,
            r = "get" + n.charAt(0).toUpperCase() + n.slice(1),
            i = t.shapeInfo.texShape,
            a = [Math.ceil(i[0] / 2), Math.ceil(i[1] / 2)];
          if (1 === e[0])
            return (
              "\n        " +
              ni($i(t, e.slice(1))) +
              "\n        vec4 " +
              r +
              "(int b, int row, int col) {\n          return " +
              r +
              "(" +
              qi(["b", "row", "col"], [1, 2]) +
              ");\n        }\n      "
            );
          var o = a[0],
            s = a[1],
            u = Math.ceil(e[2] / 2);
          return (
            "\n    vec4 " +
            r +
            "(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        " +
            o +
            ", " +
            s +
            ", " +
            u * Math.ceil(e[1] / 2) +
            ", " +
            u +
            ", b, row, col);\n      return " +
            Jr().texture2D +
            "(" +
            n +
            ", uv);\n    }\n  "
          );
        }
        function Mi(t) {
          var e = t.shapeInfo.logicalShape,
            n = t.name,
            r = "get" + n.charAt(0).toUpperCase() + n.slice(1),
            i = e[1] * e[2],
            a = e[2],
            o = j(e),
            s = o.newShape,
            u = o.keptDims,
            c = s;
          if (c.length < e.length)
            return (
              "\n        " +
              ei($i(t, c)) +
              "\n        float " +
              r +
              "(int row, int col, int depth) {\n          return " +
              r +
              "(" +
              qi(["row", "col", "depth"], u) +
              ");\n        }\n      "
            );
          if (t.shapeInfo.isUniform)
            return (
              "\n      float " +
              r +
              "(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(" +
              i +
              ", " +
              a +
              ", 1)));\n        " +
              zi(t) +
              "\n      }\n    "
            );
          var l = t.shapeInfo.texShape,
            f = l[0],
            h = l[1],
            p = t.shapeInfo.flatOffset;
          return h === i && null == p
            ? "\n        float " +
                r +
                "(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(" +
                a +
                ", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(" +
                h +
                ".0, " +
                f +
                ".0);\n          return sampleTexture(" +
                n +
                ", uv);\n        }\n      "
            : h === a && null == p
            ? "\n    float " +
              r +
              "(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(" +
              e[1] +
              ", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(" +
              h +
              ".0, " +
              f +
              ".0);\n      return sampleTexture(" +
              n +
              ", uv);\n    }\n  "
            : "\n      float " +
              r +
              "(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * " +
              i +
              " + col * " +
              a +
              " + depth + " +
              Ii(n) +
              ";\n        vec2 uv = uvFromFlat(" +
              f +
              ", " +
              h +
              ", index);\n        return sampleTexture(" +
              n +
              ", uv);\n      }\n  ";
        }
        function ji(t) {
          for (
            var e = t.shapeInfo.logicalShape,
              n = e.length,
              r = t.name,
              i = "get" + r.charAt(0).toUpperCase() + r.slice(1),
              a = t.shapeInfo.texShape,
              o = [Math.ceil(a[0] / 2), Math.ceil(a[1] / 2)],
              s = o[0],
              u = o[1],
              c = Math.ceil(e[n - 1] / 2),
              l = c * Math.ceil(e[n - 2] / 2),
              f = "int b, int row, int col",
              h = "b * " + l + " + (row / 2) * " + c + " + (col / 2)",
              p = 2;
            p < n - 1;
            p++
          )
            (f = "int b" + p + ", " + f),
              (h = "b" + p + " * " + (l *= e[n - p - 1]) + " + " + h);
          return (
            "\n    vec4 " +
            i +
            "(" +
            f +
            ") {\n      int index = " +
            h +
            ";\n      int texR = index / " +
            u +
            ";\n      int texC = index - texR * " +
            u +
            ";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(" +
            u +
            ", " +
            s +
            ");\n      return " +
            Jr().texture2D +
            "(" +
            r +
            ", uv);\n    }\n  "
          );
        }
        function Li(t) {
          var e = t.shapeInfo.logicalShape,
            n = t.name,
            r = "get" + n.charAt(0).toUpperCase() + n.slice(1),
            i = e[3],
            a = e[2] * i,
            o = e[1] * a,
            s = j(e),
            u = s.newShape,
            c = s.keptDims;
          if (u.length < e.length)
            return (
              "\n      " +
              ei($i(t, u)) +
              "\n      float " +
              r +
              "(int row, int col, int depth, int depth2) {\n        return " +
              r +
              "(" +
              qi(["row", "col", "depth", "depth2"], c) +
              ");\n      }\n    "
            );
          if (t.shapeInfo.isUniform)
            return (
              "\n      float " +
              r +
              "(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(" +
              o +
              ", " +
              a +
              ", " +
              i +
              ", 1)));\n        " +
              zi(t) +
              "\n      }\n    "
            );
          var l = t.shapeInfo.flatOffset,
            f = t.shapeInfo.texShape,
            h = f[0],
            p = f[1];
          return p === o && null == l
            ? "\n      float " +
                r +
                "(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(" +
                a +
                ", " +
                i +
                ", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(" +
                p +
                ".0, " +
                h +
                ".0);\n        return sampleTexture(" +
                n +
                ", uv);\n      }\n    "
            : p === i && null == l
            ? "\n      float " +
              r +
              "(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(" +
              e[1] * e[2] +
              ", " +
              e[2] +
              ", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(" +
              p +
              ".0, " +
              h +
              ".0);\n        return sampleTexture(" +
              n +
              ", uv);\n      }\n    "
            : "\n    float " +
              r +
              "(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * " +
              o +
              " + col * " +
              a +
              " +\n          depth * " +
              i +
              " + depth2;\n      vec2 uv = uvFromFlat(" +
              h +
              ", " +
              p +
              ", index + " +
              Ii(n) +
              ");\n      return sampleTexture(" +
              n +
              ", uv);\n    }\n  ";
        }
        function Bi(t) {
          var e = t.shapeInfo.logicalShape,
            n = t.name,
            r = "get" + n.charAt(0).toUpperCase() + n.slice(1),
            i = e[4],
            a = e[3] * i,
            o = e[2] * a,
            s = e[1] * o,
            u = j(e),
            c = u.newShape,
            l = u.keptDims;
          if (c.length < e.length)
            return (
              "\n      " +
              ei($i(t, c)) +
              "\n      float " +
              r +
              "(int row, int col, int depth, int depth2, int depth3) {\n        return " +
              r +
              "(" +
              qi(["row", "col", "depth", "depth2", "depth3"], l) +
              ");\n      }\n    "
            );
          if (t.shapeInfo.isUniform)
            return (
              "\n      float " +
              r +
              "(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(" +
              s +
              ", " +
              o +
              ", " +
              a +
              ", " +
              i +
              ")) +\n          depth3;\n        " +
              zi(t) +
              "\n      }\n    "
            );
          var f = t.shapeInfo.flatOffset,
            h = t.shapeInfo.texShape,
            p = h[0],
            d = h[1];
          return d === s && null == f
            ? "\n      float " +
                r +
                "(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(" +
                o +
                ", " +
                a +
                ", " +
                i +
                ", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(" +
                d +
                ".0, " +
                p +
                ".0);\n        return sampleTexture(" +
                n +
                ", uv);\n      }\n    "
            : d === i && null == f
            ? "\n      float " +
              r +
              "(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(" +
              e[1] * e[2] * e[3] +
              ",\n               " +
              e[2] * e[3] +
              ", " +
              e[3] +
              ", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(" +
              d +
              ".0, " +
              p +
              ".0);\n        return sampleTexture(" +
              n +
              ", uv);\n      }\n    "
            : "\n    float " +
              r +
              "(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * " +
              s +
              " + col * " +
              o +
              " + depth * " +
              a +
              " +\n          depth2 * " +
              i +
              " + depth3 + " +
              Ii(n) +
              ";\n      vec2 uv = uvFromFlat(" +
              p +
              ", " +
              d +
              ", index);\n      return sampleTexture(" +
              n +
              ", uv);\n    }\n  ";
        }
        function Fi(t) {
          var e = t.shapeInfo.logicalShape,
            n = t.name,
            r = "get" + n.charAt(0).toUpperCase() + n.slice(1),
            i = j(e),
            a = i.newShape,
            o = i.keptDims;
          if (a.length < e.length)
            return (
              "\n      " +
              ei($i(t, a)) +
              "\n      float " +
              r +
              "(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return " +
              r +
              "(" +
              qi(["row", "col", "depth", "depth2", "depth3", "depth4"], o) +
              ");\n      }\n    "
            );
          var s = e[5],
            u = e[4] * s,
            c = e[3] * u,
            l = e[2] * c,
            f = e[1] * l;
          if (t.shapeInfo.isUniform)
            return (
              "\n      float " +
              r +
              "(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(" +
              f +
              ", " +
              l +
              ", " +
              c +
              ", " +
              u +
              ")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(" +
              s +
              ", 1)));\n        " +
              zi(t) +
              "\n      }\n    "
            );
          var h = t.shapeInfo.flatOffset,
            p = t.shapeInfo.texShape,
            d = p[0],
            m = p[1];
          return m === f && null == h
            ? "\n      float " +
                r +
                "(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(" +
                l +
                ", " +
                c +
                ", " +
                u +
                ", " +
                s +
                ")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(" +
                m +
                ".0, " +
                d +
                ".0);\n        return sampleTexture(" +
                n +
                ", uv);\n      }\n    "
            : m === s && null == h
            ? "\n      float " +
              r +
              "(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(" +
              e[1] * e[2] * e[3] * e[4] +
              ",\n               " +
              e[2] * e[3] * e[4] +
              ",\n               " +
              e[3] * e[4] +
              ",\n               " +
              e[4] +
              ")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(" +
              m +
              ".0, " +
              d +
              ".0);\n        return sampleTexture(" +
              n +
              ", uv);\n      }\n    "
            : "\n    float " +
              r +
              "(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * " +
              f +
              " + col * " +
              l +
              " + depth * " +
              c +
              " +\n          depth2 * " +
              u +
              " + depth3 * " +
              s +
              " + depth4 + " +
              Ii(n) +
              ";\n      vec2 uv = uvFromFlat(" +
              d +
              ", " +
              m +
              ", index);\n      return sampleTexture(" +
              n +
              ", uv);\n    }\n  ";
        }
        function zi(t) {
          var e = t.name,
            n = N(t.shapeInfo.logicalShape);
          return 1 === n
            ? "return " + e + ";"
            : "\n    for (int i = 0; i < " +
                n +
                "; i++) {\n      if (i == index) {\n        return " +
                e +
                "[i];\n      }\n    }\n  ";
        }
        function Ui(t, e) {
          var n,
            r = t.name,
            i = r.charAt(0).toUpperCase() + r.slice(1),
            a = "get" + i + "AtOutCoords",
            o = t.shapeInfo.logicalShape.length,
            s = e.logicalShape.length,
            u = er(t.shapeInfo.logicalShape, e.logicalShape),
            c = Wi(s),
            l = s - o,
            f = ["x", "y", "z", "w", "u", "v"];
          n =
            0 === o
              ? ""
              : s < 2 && u.length >= 1
              ? "coords = 0;"
              : u
                  .map(function(t) {
                    return "coords." + f[t + l] + " = 0;";
                  })
                  .join("\n");
          var h = "";
          h =
            s < 2 && o > 0
              ? "coords"
              : t.shapeInfo.logicalShape
                  .map(function(t, e) {
                    return "coords." + f[e + l];
                  })
                  .join(", ");
          var p = "return outputValue;";
          if (1 === o && s > 1)
            p = "\n      return vec4(outputValue.xy, outputValue.xy);\n    ";
          else if (0 === o && s > 0)
            p =
              1 === s
                ? "\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      "
                : "\n        return vec4(outputValue.x);\n      ";
          else if (u.length) {
            var d = o - 2,
              m = o - 1;
            u.indexOf(d) > -1 && u.indexOf(m) > -1
              ? (p = "return vec4(outputValue.x);")
              : u.indexOf(d) > -1
              ? (p =
                  "return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);")
              : u.indexOf(m) > -1 &&
                (p = "return vec4(outputValue.xx, outputValue.zz);");
          }
          return (
            "\n    vec4 " +
            a +
            "() {\n      " +
            c +
            " coords = getOutputCoords();\n      " +
            n +
            "\n      vec4 outputValue = get" +
            i +
            "(" +
            h +
            ");\n      " +
            p +
            "\n    }\n  "
          );
        }
        function Vi(t, e) {
          var n = t.name,
            r = n.charAt(0).toUpperCase() + n.slice(1),
            i = "get" + r + "AtOutCoords",
            a = e.texShape,
            o = t.shapeInfo.texShape,
            s = t.shapeInfo.logicalShape.length,
            u = e.logicalShape.length;
          if (
            !t.shapeInfo.isUniform &&
            s === u &&
            null == t.shapeInfo.flatOffset &&
            I(o, a)
          )
            return (
              "\n      float " +
              i +
              "() {\n        return sampleTexture(" +
              n +
              ", resultUV);\n      }\n    "
            );
          var c = Wi(u),
            l = er(t.shapeInfo.logicalShape, e.logicalShape),
            f = u - s,
            h = ["x", "y", "z", "w", "u", "v"];
          return (
            "\n    float " +
            i +
            "() {\n      " +
            c +
            " coords = getOutputCoords();\n      " +
            (0 === s
              ? ""
              : u < 2 && l.length >= 1
              ? "coords = 0;"
              : l
                  .map(function(t) {
                    return "coords." + h[t + f] + " = 0;";
                  })
                  .join("\n")) +
            "\n      return get" +
            r +
            "(" +
            (u < 2 && s > 0
              ? "coords"
              : t.shapeInfo.logicalShape
                  .map(function(t, e) {
                    return "coords." + h[e + f];
                  })
                  .join(", ")) +
            ");\n    }\n  "
          );
        }
        function Wi(t) {
          if (t <= 1) return "int";
          if (2 === t) return "ivec2";
          if (3 === t) return "ivec3";
          if (4 === t) return "ivec4";
          if (5 === t) return "ivec5";
          if (6 === t) return "ivec6";
          throw Error("GPU for rank " + t + " is not yet supported");
        }
        function $i(t, e) {
          var n = JSON.parse(JSON.stringify(t));
          return (n.shapeInfo.logicalShape = e), n;
        }
        function qi(t, e) {
          return e
            .map(function(e) {
              return t[e];
            })
            .join(", ");
        }
        var Hi = (function() {
          return function(t, e, n) {
            (this.variableNames = ["x"]), (this.outputShape = t);
            var r = t.length,
              i = t[t.length - 1],
              a = n ? "<" : ">";
            this.userCode =
              "\n      int getIndex(int i) {\n        " +
              (n ? "return " + i + " -i - 1;" : "return i;") +
              "\n      }\n\n      void main() {\n        " +
              Wi(r) +
              " coords = getOutputCoords();\n        int end = " +
              Gi(r, "coords") +
              ";\n        float val = 0.0;\n        for (int i = " +
              i +
              " - 1; i >= 0; i -= 1) {\n          int idx = getIndex(i);\n          if (idx " +
              a +
              " end) {\n            continue;\n          }\n          if (idx == end && " +
              e +
              ") {\n            continue;\n          }\n          " +
              Gi(r, "coords") +
              " = idx;\n          val += getX(" +
              Ki(r, "coords") +
              ");\n        }\n        setOutput(val);\n      }\n    ";
          };
        })();
        function Ki(t, e) {
          if (1 === t) return "" + e;
          if (2 === t) return e + ".x, " + e + ".y";
          if (3 === t) return e + ".x, " + e + ".y, " + e + ".z";
          if (4 === t) return e + ".x, " + e + ".y, " + e + ".z, " + e + ".w";
          throw Error("Cumulative sum for rank " + t + " is not yet supported");
        }
        function Gi(t, e) {
          if (1 === t) return "" + e;
          if (2 === t) return e + ".y";
          if (3 === t) return e + ".z";
          if (4 === t) return e + ".w";
          throw Error("Cumulative sum for rank " + t + " is not yet supported");
        }
        var Xi = (function() {
            function t(t, e, n) {
              (this.variableNames = ["x"]),
                (this.outputShape = []),
                (this.outputShape = t),
                (this.blockSize = e),
                (this.dataFormat = n),
                (this.userCode =
                  "\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = " +
                  this.getHeightCoordString() +
                  ";\n      int w = " +
                  this.getWidthCoordString() +
                  ";\n      int d = " +
                  this.getDepthCoordString() +
                  ";\n\n      int in_h = h / " +
                  e +
                  ";\n      int offset_h = imod(h, " +
                  e +
                  ");\n      int in_w = w / " +
                  e +
                  ";\n      int offset_w = imod(w, " +
                  e +
                  ");\n      int offset_d = (offset_h * " +
                  e +
                  " + offset_w) *\n        " +
                  this.getOutputDepthSize() +
                  ";\n      int in_d = d + offset_d;\n\n      float result = " +
                  this.getInputSamplingString() +
                  ";\n      setOutput(result);\n    }\n  ");
            }
            return (
              (t.prototype.getHeightCoordString = function() {
                return "NHWC" === this.dataFormat ? "coords[1]" : "coords[2]";
              }),
              (t.prototype.getWidthCoordString = function() {
                return "NHWC" === this.dataFormat ? "coords[2]" : "coords[3]";
              }),
              (t.prototype.getDepthCoordString = function() {
                return "NHWC" === this.dataFormat ? "coords[3]" : "coords[1]";
              }),
              (t.prototype.getOutputDepthSize = function() {
                return "NHWC" === this.dataFormat
                  ? this.outputShape[3]
                  : this.outputShape[1];
              }),
              (t.prototype.getInputSamplingString = function() {
                return "NHWC" === this.dataFormat
                  ? "getX(b, in_h, in_w, in_d)"
                  : "getX(b, in_d, in_h, in_w)";
              }),
              t
            );
          })(),
          Ji = (function() {
            return function(t) {
              this.variableNames = ["A"];
              var e = Jr();
              (this.outputShape = t),
                (this.userCode =
                  "\n      const float FLOAT_MAX = 1.70141184e38;\n      const float FLOAT_MIN = 1.17549435e-38;\n\n      lowp vec4 encode_float(highp float v) {\n        if (isNaN(v)) {\n          return vec4(255, 255, 255, 255);\n        }\n\n        highp float av = abs(v);\n\n        if(av < FLOAT_MIN) {\n          return vec4(0.0, 0.0, 0.0, 0.0);\n        } else if(v > FLOAT_MAX) {\n          return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n        } else if(v < -FLOAT_MAX) {\n          return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n        }\n\n        highp vec4 c = vec4(0,0,0,0);\n\n        highp float e = floor(log2(av));\n        highp float m = exp2(fract(log2(av))) - 1.0;\n\n        c[2] = floor(128.0 * m);\n        m -= c[2] / 128.0;\n        c[1] = floor(32768.0 * m);\n        m -= c[1] / 32768.0;\n        c[0] = floor(8388608.0 * m);\n\n        highp float ebias = e + 127.0;\n        c[3] = floor(ebias / 2.0);\n        ebias -= c[3] * 2.0;\n        c[2] += floor(ebias) * 128.0;\n\n        c[3] += 128.0 * step(0.0, -v);\n\n        return c / 255.0;\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        " +
                  e.output +
                  " = encode_float(x);\n      }\n    ");
            };
          })(),
          Yi = {
            REAL: "return real * expR - imag * expI;",
            IMAG: "return real * expI + imag * expR;"
          },
          Qi = (function() {
            return function(t, e, n) {
              this.variableNames = ["real", "imag"];
              var r = e[1];
              this.outputShape = e;
              var i = n ? "2.0 * " + Math.PI : "-2.0 * " + Math.PI,
                a = n ? r + ".0" : "1.0";
              this.userCode =
                "\n      const float exponentMultiplier = " +
                i +
                ";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        " +
                t +
                "\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(" +
                r +
                ");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < " +
                r +
                "; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / " +
                a +
                ";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ";
            };
          })(),
          Zi = (function() {
            return function(t) {
              this.variableNames = ["A"];
              var e = Jr(),
                n = t[0],
                r = t[1];
              (this.outputShape = t),
                (this.userCode =
                  "\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(" +
                  r +
                  ".0, " +
                  n +
                  ".0);\n\n        vec4 values = " +
                  e.texture2D +
                  "(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ");
            };
          })(),
          ta = (function() {
            return function(t, e, n) {
              this.variableNames = ["A", "indices"];
              var r = t.slice();
              (r[n] = e), (this.outputShape = r), (this.rank = r.length);
              var i = Wi(this.rank),
                a = ea(t, n);
              this.userCode =
                "\n      void main() {\n        " +
                i +
                " resRC = getOutputCoords();\n        setOutput(getA(" +
                a +
                "));\n      }\n    ";
            };
          })();
        function ea(t, e) {
          var n = t.length;
          if (n > 4)
            throw Error("Gather for rank " + n + " is not yet supported");
          if (1 === n) return "int(getIndices(resRC))";
          for (
            var r = ["resRC.x", "resRC.y", "resRC.z", "resRC.w"], i = [], a = 0;
            a < t.length;
            a++
          )
            a === e
              ? i.push("int(getIndices(" + r[a] + "))")
              : i.push("" + r[a]);
          return i.join();
        }
        var na,
          ra,
          ia = (function() {
            return function(t, e, n) {
              (this.sliceDim = t),
                (this.strides = e),
                (this.variableNames = ["x", "indices"]),
                (this.outputShape = n);
              var r = Wi(e.length),
                i = Wi(n.length),
                a = this.sliceDim > 1 ? "strides[j]" : "strides";
              this.userCode =
                "\n        " +
                r +
                " strides = " +
                r +
                "(" +
                this.strides +
                ");\n         void main() {\n          " +
                i +
                " coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < " +
                this.sliceDim +
                "; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * " +
                a +
                ";\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      ";
            };
          })();
        function aa(t, e) {
          return [e, t];
        }
        function oa(t, e) {
          return t * e;
        }
        function sa(t, e) {
          if (t % e != 0)
            throw new Error(
              "unpackedSize (" + t + ") must be a multiple of " + e
            );
          return t / e;
        }
        function ua(t, e, n) {
          var r = oa(t.length, n);
          if (e.length < r)
            throw new Error(
              "unpackedArray length (" + e.length + ") must be >= " + r
            );
          for (var i = 0, a = 0; a < t.length; ++a) (e[i] = t[a]), (i += n);
        }
        function ca(t, e, n) {
          var r = sa(t.length, n);
          if (e.length < r)
            throw new Error("matrix length (" + e.length + ") must be >= " + r);
          for (var i = 0, a = 0; a < t.length; a += n) e[i++] = t[a];
        }
        function la(t, e) {
          return [Math.max(1, Math.ceil(e / 2)), Math.max(1, Math.ceil(t / 2))];
        }
        function fa(t, e) {
          var n = la(t, e);
          return n[0] * n[1] * 4;
        }
        function ha(t, e, n, r, i) {
          for (
            var a = r % 2 == 1,
              o = n % 2 == 1,
              s = Math.floor(r / 2),
              u = Math.floor(n / 2),
              c = Math.ceil(r / 2),
              l = c * Math.ceil(n / 2),
              f = y(n) * y(r),
              h = 0;
            h < e;
            h++
          ) {
            for (
              var p = h * n * r, d = h * f, m = a ? 4 : 0, v = r, g = d, b = 0;
              b < u;
              ++b
            ) {
              for (var w = 2 * b * r, _ = 0; _ < s; ++_) {
                var x = p + w + 2 * _;
                (i[g] = t[x]),
                  (i[g + 1] = t[x + 1]),
                  (i[g + 2] = t[x + v]),
                  (i[g + 3] = t[x + v + 1]),
                  (g += 4);
              }
              g += m;
            }
            if (a) {
              (x = p + r - 1), (g = d + 4 * (c - 1));
              var E = 2 * r;
              for (m = 4 * c, b = 0; b < u; ++b)
                (i[g] = t[x]), (i[g + 2] = t[x + r]), (x += E), (g += m);
            }
            if (o) {
              for (x = p + (n - 1) * r, g = d + 4 * (l - c), _ = 0; _ < s; ++_)
                (i[g++] = t[x++]), (i[g++] = t[x++]), (g += 2);
              a && o && (i[d + f - 4] = t[x]);
            }
          }
          return i;
        }
        function pa(t, e, n, r, i) {
          var a = n * r;
          if (i.length < a)
            throw new Error("matrix length (" + i.length + ") must be >= " + a);
          for (
            var o = r % 2 == 1,
              s = n % 2 == 1,
              u = Math.floor(r / 2),
              c = Math.floor(n / 2),
              l = Math.ceil(r / 2),
              f = l * Math.ceil(n / 2),
              h = y(n) * y(r),
              p = 0;
            p < e;
            p++
          ) {
            for (
              var d = p * n * r,
                m = p * h,
                v = o ? 4 : 0,
                g = r + (o ? 1 : 0),
                b = m,
                w = d,
                _ = d + r,
                x = 0;
              x < c;
              ++x
            ) {
              for (var E = 0; E < u; ++E)
                (i[w++] = t[b++]),
                  (i[w++] = t[b++]),
                  (i[_++] = t[b++]),
                  (i[_++] = t[b++]);
              (b += v), (w += g), (_ += g);
            }
            if (o) {
              b = m + 4 * (l - 1);
              var S = d + r - 1;
              for (v = 4 * l, g = 2 * r, x = 0; x < c; ++x)
                (i[S] = t[b]), (i[S + r] = t[b + 2]), (b += v), (S += g);
            }
            if (s) {
              for (b = m + 4 * (f - l), S = d + (n - 1) * r, E = 0; E < u; ++E)
                (i[S++] = t[b++]), (i[S++] = t[b++]), (b += 2);
              o && (i[d + n * r - 1] = t[b]);
            }
          }
          return i;
        }
        function da(t, e) {
          var n = e();
          return ya(t), n;
        }
        !(function(t) {
          (t[(t.RENDER = 0)] = "RENDER"),
            (t[(t.UPLOAD = 1)] = "UPLOAD"),
            (t[(t.PIXELS = 2)] = "PIXELS"),
            (t[(t.DOWNLOAD = 3)] = "DOWNLOAD");
        })(na || (na = {})),
          (function(t) {
            (t[(t.UNPACKED_FLOAT16 = 0)] = "UNPACKED_FLOAT16"),
              (t[(t.UNPACKED_FLOAT32 = 1)] = "UNPACKED_FLOAT32"),
              (t[(t.PACKED_4X1_UNSIGNED_BYTE = 2)] =
                "PACKED_4X1_UNSIGNED_BYTE"),
              (t[(t.PACKED_2X2_FLOAT32 = 3)] = "PACKED_2X2_FLOAT32"),
              (t[(t.PACKED_2X2_FLOAT16 = 4)] = "PACKED_2X2_FLOAT16");
          })(ra || (ra = {}));
        var ma = !1;
        function va(t) {
          ma = t;
        }
        function ya(t) {
          if (ma) {
            var e = t.getError();
            if (e !== t.NO_ERROR) throw new Error("WebGL Error: " + _a(t, e));
          }
        }
        var ga = 5.96e-8,
          ba = 65504;
        function wa(t) {
          return !!(
            _e.get("WEBGL_RENDER_FLOAT32_ENABLED") ||
            0 === t ||
            (ga < Math.abs(t) && Math.abs(t) < ba)
          );
        }
        function _a(t, e) {
          switch (e) {
            case t.NO_ERROR:
              return "NO_ERROR";
            case t.INVALID_ENUM:
              return "INVALID_ENUM";
            case t.INVALID_VALUE:
              return "INVALID_VALUE";
            case t.INVALID_OPERATION:
              return "INVALID_OPERATION";
            case t.INVALID_FRAMEBUFFER_OPERATION:
              return "INVALID_FRAMEBUFFER_OPERATION";
            case t.OUT_OF_MEMORY:
              return "OUT_OF_MEMORY";
            case t.CONTEXT_LOST_WEBGL:
              return "CONTEXT_LOST_WEBGL";
            default:
              return "Unknown error code " + e;
          }
        }
        function xa(t, e) {
          return Ka(
            t,
            function() {
              return t.getExtension(e);
            },
            'Extension "' + e + '" not supported on this browser.'
          );
        }
        function Ea(t, e) {
          var n = Ka(
            t,
            function() {
              return t.createShader(t.VERTEX_SHADER);
            },
            "Unable to create vertex WebGLShader."
          );
          if (
            (da(t, function() {
              return t.shaderSource(n, e);
            }),
            da(t, function() {
              return t.compileShader(n);
            }),
            !1 === t.getShaderParameter(n, t.COMPILE_STATUS))
          )
            throw (console.log(t.getShaderInfoLog(n)),
            new Error("Failed to compile vertex shader."));
          return n;
        }
        function Sa(t, e) {
          var n = Ka(
            t,
            function() {
              return t.createShader(t.FRAGMENT_SHADER);
            },
            "Unable to create fragment WebGLShader."
          );
          if (
            (da(t, function() {
              return t.shaderSource(n, e);
            }),
            da(t, function() {
              return t.compileShader(n);
            }),
            !1 === t.getShaderParameter(n, t.COMPILE_STATUS))
          )
            throw (Oa(e, t.getShaderInfoLog(n)),
            new Error("Failed to compile fragment shader."));
          return n;
        }
        var Na = /ERROR: [0-9]+:([0-9]+):/g;
        function Oa(t, e) {
          var n = Na.exec(e);
          if (null == n)
            return (
              console.log("Couldn't parse line number in error: " + e),
              void console.log(t)
            );
          for (
            var r = +n[1],
              i = t.split("\n"),
              a = i.length.toString().length + 2,
              o = i.map(function(t, e) {
                return T((e + 1).toString(), a) + t;
              }),
              s = 0,
              u = 0;
            u < o.length;
            u++
          )
            s = Math.max(o[u].length, s);
          var c = o.slice(0, r - 1),
            l = o.slice(r - 1, r),
            f = o.slice(r);
          console.log(c.join("\n")),
            console.log(e.split("\n")[0]),
            console.log(
              "%c " + T(l[0], s),
              "border:1px solid red; background-color:#e3d2d2; color:#a61717"
            ),
            console.log(f.join("\n"));
        }
        function Ia(t) {
          return Ka(
            t,
            function() {
              return t.createProgram();
            },
            "Unable to create WebGLProgram."
          );
        }
        function Ca(t, e) {
          if (
            (da(t, function() {
              return t.linkProgram(e);
            }),
            !1 === t.getProgramParameter(e, t.LINK_STATUS))
          )
            throw (console.log(t.getProgramInfoLog(e)),
            new Error("Failed to link vertex and fragment shaders."));
        }
        function Aa(t, e) {
          if (
            (da(t, function() {
              return t.validateProgram(e);
            }),
            !1 === t.getProgramParameter(e, t.VALIDATE_STATUS))
          )
            throw (console.log(t.getProgramInfoLog(e)),
            new Error("Shader program validation failed."));
        }
        function ka(t, e) {
          var n = Ka(
            t,
            function() {
              return t.createBuffer();
            },
            "Unable to create WebGLBuffer"
          );
          return (
            da(t, function() {
              return t.bindBuffer(t.ARRAY_BUFFER, n);
            }),
            da(t, function() {
              return t.bufferData(t.ARRAY_BUFFER, e, t.STATIC_DRAW);
            }),
            n
          );
        }
        function Pa(t, e) {
          var n = Ka(
            t,
            function() {
              return t.createBuffer();
            },
            "Unable to create WebGLBuffer"
          );
          return (
            da(t, function() {
              return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER, n);
            }),
            da(t, function() {
              return t.bufferData(t.ELEMENT_ARRAY_BUFFER, e, t.STATIC_DRAW);
            }),
            n
          );
        }
        function Ta() {
          return 2 === _e.get("WEBGL_VERSION") ? 1 : 4;
        }
        function Ra(t) {
          return Ka(
            t,
            function() {
              return t.createTexture();
            },
            "Unable to create WebGLTexture."
          );
        }
        function Da(t, e) {
          var n = _e.get("WEBGL_MAX_TEXTURE_SIZE");
          if (t <= 0 || e <= 0) {
            var r = "[" + t + "x" + e + "]";
            throw new Error("Requested texture size " + r + " is invalid.");
          }
          if (t > n || e > n)
            throw ((r = "[" + t + "x" + e + "]"),
            new Error(
              "Requested texture size " +
                r +
                " greater than WebGL maximum on this browser / GPU [" +
                n +
                "x" +
                n +
                "]."
            ));
        }
        function Ma(t) {
          return Ka(
            t,
            function() {
              return t.createFramebuffer();
            },
            "Unable to create WebGLFramebuffer."
          );
        }
        function ja(t, e, n, r, i, a, o) {
          var s = t.getAttribLocation(e, n);
          return (
            -1 !== s &&
            (da(t, function() {
              return t.bindBuffer(t.ARRAY_BUFFER, r);
            }),
            da(t, function() {
              return t.vertexAttribPointer(s, i, t.FLOAT, !1, a, o);
            }),
            da(t, function() {
              return t.enableVertexAttribArray(s);
            }),
            !0)
          );
        }
        function La(t, e, n) {
          Ga(t, n),
            da(t, function() {
              return t.activeTexture(t.TEXTURE0 + n);
            }),
            da(t, function() {
              return t.bindTexture(t.TEXTURE_2D, e);
            });
        }
        function Ba(t, e) {
          Ga(t, e),
            da(t, function() {
              return t.activeTexture(t.TEXTURE0 + e);
            }),
            da(t, function() {
              return t.bindTexture(t.TEXTURE_2D, null);
            });
        }
        function Fa(t, e, n) {
          return Ka(
            t,
            function() {
              return t.getUniformLocation(e, n);
            },
            'uniform "' + n + '" not present in program.'
          );
        }
        function za(t, e, n) {
          return t.getUniformLocation(e, n);
        }
        function Ua(t, e, n, r, i) {
          da(t, function() {
            return La(t, n, i);
          }),
            da(t, function() {
              return t.uniform1i(r, i);
            });
        }
        function Va(t) {
          da(t, function() {
            return t.bindFramebuffer(t.FRAMEBUFFER, null);
          }),
            da(t, function() {
              return t.viewport(0, 0, t.canvas.width, t.canvas.height);
            }),
            da(t, function() {
              return t.scissor(0, 0, t.canvas.width, t.canvas.height);
            });
        }
        function Wa(t, e, n) {
          da(t, function() {
            return t.bindFramebuffer(t.FRAMEBUFFER, n);
          }),
            da(t, function() {
              return t.framebufferTexture2D(
                t.FRAMEBUFFER,
                t.COLOR_ATTACHMENT0,
                t.TEXTURE_2D,
                e,
                0
              );
            });
        }
        function $a(t, e) {
          da(t, function() {
            return t.bindFramebuffer(t.FRAMEBUFFER, e);
          }),
            da(t, function() {
              return t.framebufferTexture2D(
                t.FRAMEBUFFER,
                t.COLOR_ATTACHMENT0,
                t.TEXTURE_2D,
                null,
                0
              );
            });
        }
        function qa(t) {
          var e = t.checkFramebufferStatus(t.FRAMEBUFFER);
          if (e !== t.FRAMEBUFFER_COMPLETE)
            throw new Error("Error binding framebuffer: " + Ha(t, e));
        }
        function Ha(t, e) {
          switch (e) {
            case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:
              return "FRAMEBUFFER_INCOMPLETE_ATTACHMENT";
            case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:
              return "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";
            case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:
              return "FRAMEBUFFER_INCOMPLETE_DIMENSIONS";
            case t.FRAMEBUFFER_UNSUPPORTED:
              return "FRAMEBUFFER_UNSUPPORTED";
            default:
              return "unknown error " + e;
          }
        }
        function Ka(t, e, n) {
          var r = da(t, function() {
            return e();
          });
          if (null == r) throw new Error(n);
          return r;
        }
        function Ga(t, e) {
          var n = t.MAX_COMBINED_TEXTURE_IMAGE_UNITS - 1,
            r = e + t.TEXTURE0;
          if (r < t.TEXTURE0 || r > n)
            throw new Error(
              "textureUnit must be in [gl.TEXTURE0, gl.TEXTURE" + n + "]."
            );
        }
        function Xa(t, e) {
          return void 0 === e && (e = 2), N(t.slice(0, t.length - e));
        }
        function Ja(t) {
          if (0 === t.length)
            throw Error("Cannot get rows and columns of an empty shape array.");
          return [t.length > 1 ? t[t.length - 2] : 1, t[t.length - 1]];
        }
        function Ya(t, e) {
          var n;
          void 0 === e && (e = !1);
          var r = _e.get("WEBGL_MAX_TEXTURE_SIZE");
          if (
            (e &&
              ((r *= 2),
              1 ===
                (t = t.map(function(e, n) {
                  return n >= t.length - 2 ? y(t[n]) : t[n];
                })).length && (t = [2, t[0]])),
            2 !== t.length)
          ) {
            var i = j(t);
            t = i.newShape;
          }
          var a = N(t);
          if (t.length <= 1 && a <= r) return [1, a];
          if (2 === t.length && t[0] <= r && t[1] <= r) return t;
          if (3 === t.length && t[0] * t[1] <= r && t[2] <= r)
            return [t[0] * t[1], t[2]];
          if (3 === t.length && t[0] <= r && t[1] * t[2] <= r)
            return [t[0], t[1] * t[2]];
          if (4 === t.length && t[0] * t[1] * t[2] <= r && t[3] <= r)
            return [t[0] * t[1] * t[2], t[3]];
          if (4 === t.length && t[0] <= r && t[1] * t[2] * t[3] <= r)
            return [t[0], t[1] * t[2] * t[3]];
          if (e) {
            var o = Xa(t),
              s = 2,
              u = 2;
            return (
              t.length && ((s = (n = Ja(t))[0]), (u = n[1])),
              k((a = o * (s / 2) * (u / 2))).map(function(t) {
                return 2 * t;
              })
            );
          }
          return k(a);
        }
        function Qa(t) {
          return t % 2 == 0;
        }
        function Za(t, e) {
          if (I((t = t.slice(-2)), (e = e.slice(-2)))) return !0;
          if (!t.length || !e.length) return !0;
          if (0 === t[0] || 0 === t[1] || 0 === e[0] || 0 === e[1]) return !0;
          if (t.length !== e.length) {
            var n = t.slice(-1)[0],
              r = e.slice(-1)[0];
            if (n === r) return !0;
            if (Qa(n) && Qa(r) && (1 === t[0] || 1 === e[0])) return !0;
          }
          return t[1] === e[1] && Qa(t[0]) && Qa(e[0]);
        }
        var to = Object.freeze({
          callAndCheck: da,
          enableDebugWebGLErrorChecking: va,
          checkWebGLError: ya,
          canBeRepresented: wa,
          getWebGLErrorMessage: _a,
          getExtensionOrThrow: xa,
          createVertexShader: Ea,
          createFragmentShader: Sa,
          createProgram: Ia,
          linkProgram: Ca,
          validateProgram: Aa,
          createStaticVertexBuffer: ka,
          createStaticIndexBuffer: Pa,
          getNumChannels: Ta,
          createTexture: Ra,
          validateTextureSize: Da,
          createFramebuffer: Ma,
          bindVertexBufferToProgramAttribute: ja,
          bindTextureUnit: La,
          unbindTextureUnit: Ba,
          getProgramUniformLocationOrThrow: Fa,
          getProgramUniformLocation: za,
          bindTextureToProgramUniformSampler: Ua,
          bindCanvasToFramebuffer: Va,
          bindColorTextureToFramebuffer: Wa,
          unbindColorTextureFromFramebuffer: $a,
          validateFramebuffer: qa,
          getFramebufferErrorMessage: Ha,
          getBatchDim: Xa,
          getRowsCols: Ja,
          getTextureShapeFromLogicalShape: Ya,
          isReshapeFree: Za
        });
        function eo(t) {
          var e = Jr();
          return Ea(
            t,
            e.version +
              "\n    precision highp float;\n    " +
              e.attribute +
              " vec3 clipSpacePos;\n    " +
              e.attribute +
              " vec2 uv;\n    " +
              e.varyingVs +
              " vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"
          );
        }
        function no(t) {
          return ka(
            t,
            new Float32Array([
              -1,
              1,
              0,
              0,
              1,
              -1,
              -1,
              0,
              0,
              0,
              1,
              1,
              0,
              1,
              1,
              1,
              -1,
              0,
              1,
              0
            ])
          );
        }
        function ro(t) {
          return Pa(t, new Uint16Array([0, 1, 2, 2, 1, 3]));
        }
        function io(t, e) {
          var n,
            r,
            i,
            a,
            o,
            s,
            u,
            c = t;
          return (
            2 === _e.get("WEBGL_VERSION")
              ? ((n = c.R32F),
                (r = c.R16F),
                (i = c.RGBA32F),
                (a = c.RED),
                (o = 4),
                (s = 1),
                (u = c.HALF_FLOAT))
              : ((n = t.RGBA),
                (r = t.RGBA),
                (i = c.RGBA),
                (a = t.RGBA),
                (o = 4),
                (s = 4),
                (u = null != e ? e.HALF_FLOAT_OES : null)),
            {
              internalFormatFloat: n,
              internalFormatHalfFloat: r,
              internalFormatPackedFloat: i,
              textureFormatFloat: a,
              downloadTextureFormat: t.RGBA,
              downloadUnpackNumChannels: o,
              defaultNumChannels: s,
              textureTypeHalfFloat: u
            }
          );
        }
        function ao(t, e, n, r, i, a) {
          Da(e, n);
          var o = Ra(t),
            s = t.TEXTURE_2D;
          return (
            da(t, function() {
              return t.bindTexture(s, o);
            }),
            da(t, function() {
              return t.texParameteri(s, t.TEXTURE_WRAP_S, t.CLAMP_TO_EDGE);
            }),
            da(t, function() {
              return t.texParameteri(s, t.TEXTURE_WRAP_T, t.CLAMP_TO_EDGE);
            }),
            da(t, function() {
              return t.texParameteri(s, t.TEXTURE_MIN_FILTER, t.NEAREST);
            }),
            da(t, function() {
              return t.texParameteri(s, t.TEXTURE_MAG_FILTER, t.NEAREST);
            }),
            da(t, function() {
              return t.texImage2D(s, 0, r, e, n, 0, i, a, null);
            }),
            da(t, function() {
              return t.bindTexture(t.TEXTURE_2D, null);
            }),
            o
          );
        }
        function oo(t, e, n, r) {
          var i = aa(e, n);
          return ao(
            t,
            i[0],
            i[1],
            r.internalFormatFloat,
            r.textureFormatFloat,
            t.FLOAT
          );
        }
        function so(t, e, n, r) {
          var i = aa(e, n);
          return ao(
            t,
            i[0],
            i[1],
            r.internalFormatFloat,
            r.textureFormatFloat,
            r.textureTypeHalfFloat
          );
        }
        function uo(t, e, n, r) {
          var i = aa(e, n);
          return ao(t, i[0], i[1], t.RGBA, t.RGBA, t.UNSIGNED_BYTE);
        }
        function co(t, e, n, r) {
          var i = la(e, n);
          return ao(
            t,
            i[0],
            i[1],
            r.internalFormatPackedFloat,
            t.RGBA,
            t.FLOAT
          );
        }
        function lo(t, e, n, r) {
          var i = la(e, n);
          return ao(
            t,
            i[0],
            i[1],
            r.internalFormatHalfFloat,
            t.RGBA,
            r.textureTypeHalfFloat
          );
        }
        function fo(t, e, n) {
          return (
            da(t, function() {
              return t.bindBuffer(t.ARRAY_BUFFER, n);
            }),
            ja(t, e, "clipSpacePos", n, 3, 20, 0) &&
              ja(t, e, "uv", n, 2, 20, 12)
          );
        }
        function ho(t, e, n) {
          da(t, function() {
            return t.bindTexture(t.TEXTURE_2D, e);
          }),
            da(t, function() {
              return t.texImage2D(
                t.TEXTURE_2D,
                0,
                t.RGBA,
                t.RGBA,
                t.UNSIGNED_BYTE,
                n
              );
            }),
            da(t, function() {
              return t.bindTexture(t.TEXTURE_2D, null);
            });
        }
        function po(t, e, n, r, i, a) {
          Da(n, r),
            da(t, function() {
              return t.bindTexture(t.TEXTURE_2D, e);
            }),
            da(t, function() {
              return t.texSubImage2D(
                t.TEXTURE_2D,
                0,
                0,
                0,
                n,
                r,
                a,
                t.FLOAT,
                i
              );
            }),
            da(t, function() {
              return t.bindTexture(t.TEXTURE_2D, null);
            });
        }
        function mo(t, e, n, r, i, a, o) {
          var s,
            u = aa(n, r),
            c = u[0],
            l = u[1],
            f = n * r;
          1 === o.defaultNumChannels && f === i.length
            ? (s = i)
            : ua(i, (s = new Float32Array(f * a)), a),
            po(t, e, c, l, s, o.textureFormatFloat);
        }
        function vo(t, e, n, r, i, a, o, s, u) {
          var c = la(a, o),
            l = c[0],
            f = c[1],
            h = new Float32Array(fa(a, o));
          ha(s, n, r, i, h), po(t, e, l, f, h, t.RGBA);
        }
        function yo(t, e, n, r, i) {
          var a = e;
          if (2 === _e.get("WEBGL_VERSION")) {
            var o = t,
              s = o.createBuffer();
            da(t, function() {
              return t.bindBuffer(o.PIXEL_PACK_BUFFER, s);
            });
            var u = 4 * oa(n * r, i.downloadUnpackNumChannels);
            da(t, function() {
              return t.bufferData(o.PIXEL_PACK_BUFFER, u, o.STREAM_READ);
            }),
              da(t, function() {
                return o.readPixels(0, 0, r, n, t.RGBA, t.FLOAT, 0);
              }),
              da(t, function() {
                return t.bindBuffer(o.PIXEL_PACK_BUFFER, null);
              }),
              (a = s);
          }
          return a;
        }
        function go(t, e, n, r, i) {
          var a = t,
            o = new Float32Array(oa(n * r, i.downloadUnpackNumChannels));
          a.bindBuffer(a.PIXEL_PACK_BUFFER, e),
            a.getBufferSubData(a.PIXEL_PACK_BUFFER, 0, o),
            a.bindBuffer(a.PIXEL_PACK_BUFFER, null);
          var s = new Float32Array(n * r);
          return ca(o, s, i.downloadUnpackNumChannels), s;
        }
        function bo(t, e, n, r) {
          var i = aa(e, n),
            a = i[0],
            o = i[1],
            s = new Float32Array(oa(e * n, r.downloadUnpackNumChannels));
          da(t, function() {
            return t.readPixels(
              0,
              0,
              a,
              o,
              r.downloadTextureFormat,
              t.FLOAT,
              s
            );
          });
          var u = new Float32Array(e * n);
          return ca(s, u, r.downloadUnpackNumChannels), u;
        }
        function wo(t, e, n, r) {
          var i = aa(e, n),
            a = i[0],
            o = i[1],
            s = new Uint8Array(oa(e * n, 4));
          return (
            da(t, function() {
              return t.readPixels(
                0,
                0,
                a,
                o,
                r.downloadTextureFormat,
                t.UNSIGNED_BYTE,
                s
              );
            }),
            new Float32Array(s.buffer)
          );
        }
        function _o(t, e, n, r, i, a, o, s) {
          var u = t,
            c = new Float32Array(fa(a, o));
          u.bindBuffer(u.PIXEL_PACK_BUFFER, e),
            u.getBufferSubData(u.PIXEL_PACK_BUFFER, 0, c),
            u.bindBuffer(u.PIXEL_PACK_BUFFER, null);
          var l = new Float32Array(N([n, r, i]));
          return pa(c, n, r, i, l), l;
        }
        function xo(t, e, n, r, i, a, o) {
          var s = la(i, a),
            u = s[0],
            c = s[1],
            l = new Float32Array(fa(i, a));
          da(t, function() {
            return t.readPixels(0, 0, u, c, t.RGBA, t.FLOAT, l);
          });
          var f = new Float32Array(N([e, n, r]));
          return pa(l, e, n, r, f);
        }
        var Eo = Object.freeze({
            createVertexShader: eo,
            createVertexBuffer: no,
            createIndexBuffer: ro,
            getTextureConfig: io,
            createFloat32MatrixTexture: oo,
            createFloat16MatrixTexture: so,
            createUnsignedBytesMatrixTexture: uo,
            createPackedMatrixTexture: co,
            createFloat16PackedMatrixTexture: lo,
            bindVertexProgramAttributeStreams: fo,
            uploadPixelDataToTexture: ho,
            uploadMatrixToTexture: mo,
            uploadMatrixToPackedTexture: vo,
            maybeCreateBufferFromOutputTexture: yo,
            downloadFloat32MatrixFromBuffer: go,
            downloadFloat32MatrixFromOutputTexture: bo,
            downloadByteEncodedFloatMatrixFromOutputTexture: wo,
            downloadPackedMatrixFromBuffer: _o,
            downloadMatrixFromPackedOutputTexture: xo
          }),
          So = (function() {
            function t(t) {
              (this.outputTexture = null),
                (this.program = null),
                (this.disposed = !1),
                (this.autoDebugValidate = !1),
                (this.vertexAttrsAreBound = !1),
                (this.itemsToPoll = []),
                (this.gl = null != t ? t : h(_e.get("WEBGL_VERSION"))),
                1 === _e.get("WEBGL_VERSION")
                  ? ((this.textureFloatExtension = xa(
                      this.gl,
                      "OES_texture_float"
                    )),
                    (this.colorBufferFloatExtension = this.gl.getExtension(
                      "WEBGL_color_buffer_float"
                    )),
                    _e.get("WEBGL_RENDER_FLOAT32_ENABLED") ||
                      ((this.textureHalfFloatExtension = xa(
                        this.gl,
                        "OES_texture_half_float"
                      )),
                      (this.colorBufferHalfFloatExtension = this.gl.getExtension(
                        "EXT_color_buffer_half_float"
                      ))))
                  : (this.colorBufferFloatExtension = xa(
                      this.gl,
                      "EXT_color_buffer_float"
                    )),
                (this.vertexBuffer = no(this.gl)),
                (this.indexBuffer = ro(this.gl)),
                (this.framebuffer = Ma(this.gl)),
                (this.textureConfig = io(
                  this.gl,
                  this.textureHalfFloatExtension
                ));
            }
            return (
              (t.prototype.dispose = function() {
                var t = this;
                if (!this.disposed) {
                  null != this.program &&
                    console.warn(
                      "Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."
                    ),
                    null != this.outputTexture &&
                      console.warn(
                        "Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing."
                      );
                  var e = this.gl;
                  da(e, function() {
                    return e.finish();
                  }),
                    da(e, function() {
                      return e.bindFramebuffer(e.FRAMEBUFFER, null);
                    }),
                    da(e, function() {
                      return e.deleteFramebuffer(t.framebuffer);
                    }),
                    da(e, function() {
                      return e.bindBuffer(e.ARRAY_BUFFER, null);
                    }),
                    da(e, function() {
                      return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER, null);
                    }),
                    da(e, function() {
                      return e.deleteBuffer(t.indexBuffer);
                    }),
                    (this.disposed = !0);
                }
              }),
              (t.prototype.enableAutomaticDebugValidation = function(t) {
                (this.autoDebugValidate = t), va(t);
              }),
              (t.prototype.createFloat32MatrixTexture = function(t, e) {
                return (
                  this.throwIfDisposed(), oo(this.gl, t, e, this.textureConfig)
                );
              }),
              (t.prototype.createFloat16MatrixTexture = function(t, e) {
                return (
                  this.throwIfDisposed(), so(this.gl, t, e, this.textureConfig)
                );
              }),
              (t.prototype.createUnsignedBytesMatrixTexture = function(t, e) {
                return (
                  this.throwIfDisposed(), uo(this.gl, t, e, this.textureConfig)
                );
              }),
              (t.prototype.uploadPixelDataToTexture = function(t, e) {
                this.throwIfDisposed(), ho(this.gl, t, e);
              }),
              (t.prototype.createFloat16PackedMatrixTexture = function(t, e) {
                return (
                  this.throwIfDisposed(), lo(this.gl, t, e, this.textureConfig)
                );
              }),
              (t.prototype.createPackedMatrixTexture = function(t, e) {
                return (
                  this.throwIfDisposed(), co(this.gl, t, e, this.textureConfig)
                );
              }),
              (t.prototype.deleteMatrixTexture = function(t) {
                var e = this;
                this.throwIfDisposed(),
                  this.outputTexture === t &&
                    ($a(this.gl, this.framebuffer),
                    (this.outputTexture = null)),
                  da(this.gl, function() {
                    return e.gl.deleteTexture(t);
                  });
              }),
              (t.prototype.uploadMatrixToTexture = function(t, e, n, r) {
                this.throwIfDisposed();
                var i = Ta();
                return mo(this.gl, t, e, n, r, i, this.textureConfig);
              }),
              (t.prototype.uploadMatrixToPackedTexture = function(
                t,
                e,
                n,
                r,
                i,
                a,
                o
              ) {
                return (
                  this.throwIfDisposed(),
                  vo(this.gl, t, e, n, r, i, a, o, this.textureConfig)
                );
              }),
              (t.prototype.downloadFloat32MatrixFromOutputTexture = function(
                t,
                e,
                n
              ) {
                var r = this;
                return this.downloadMatrixDriver(t, function() {
                  return bo(r.gl, e, n, r.textureConfig);
                });
              }),
              (t.prototype.downloadByteEncodedFloatMatrixFromOutputTexture = function(
                t,
                e,
                n
              ) {
                var r = this;
                return this.downloadMatrixDriver(t, function() {
                  return wo(r.gl, e, n, r.textureConfig);
                });
              }),
              (t.prototype.downloadPackedMatrixFromBuffer = function(
                t,
                e,
                n,
                r,
                i,
                a
              ) {
                return _o(this.gl, t, e, n, r, i, a, this.textureConfig);
              }),
              (t.prototype.downloadFloat32MatrixFromBuffer = function(t, e, n) {
                return go(this.gl, t, e, n, this.textureConfig);
              }),
              (t.prototype.maybeCreateBufferFromTexture = function(t, e, n) {
                this.bindTextureToFrameBuffer(t);
                var r = yo(this.gl, t, e, n, this.textureConfig);
                return this.unbindTextureToFrameBuffer(), r;
              }),
              (t.prototype.createAndWaitForFence = function() {
                var t = this.createFence(this.gl);
                return this.pollFence(t);
              }),
              (t.prototype.createFence = function(t) {
                var e,
                  n,
                  r = this;
                if (_e.get("WEBGL_FENCE_API_ENABLED")) {
                  var i = t,
                    a = i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE, 0);
                  t.flush(),
                    (n = function() {
                      var t = i.clientWaitSync(a, 0, 0);
                      return (
                        t === i.ALREADY_SIGNALED || t === i.CONDITION_SATISFIED
                      );
                    }),
                    (e = a);
                } else
                  _e.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION") > 0
                    ? ((e = this.beginQuery()),
                      this.endQuery(),
                      (n = function() {
                        return r.isQueryAvailable(
                          e,
                          _e.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")
                        );
                      }))
                    : (n = function() {
                        return !0;
                      });
                return { query: e, isFencePassed: n };
              }),
              (t.prototype.downloadMatrixFromPackedTexture = function(
                t,
                e,
                n,
                r,
                i,
                a
              ) {
                var o = this;
                return this.downloadMatrixDriver(t, function() {
                  return xo(o.gl, e, n, r, i, a, o.textureConfig);
                });
              }),
              (t.prototype.createProgram = function(t) {
                this.throwIfDisposed();
                var e = this.gl,
                  n = Sa(e, t),
                  r = eo(e),
                  i = Ia(e);
                return (
                  da(e, function() {
                    return e.attachShader(i, r);
                  }),
                  da(e, function() {
                    return e.attachShader(i, n);
                  }),
                  Ca(e, i),
                  this.autoDebugValidate && Aa(e, i),
                  this.vertexAttrsAreBound ||
                    (this.setProgram(i),
                    (this.vertexAttrsAreBound = fo(
                      e,
                      this.program,
                      this.vertexBuffer
                    ))),
                  i
                );
              }),
              (t.prototype.deleteProgram = function(t) {
                var e = this;
                this.throwIfDisposed(),
                  t === this.program && (this.program = null),
                  null != t &&
                    da(this.gl, function() {
                      return e.gl.deleteProgram(t);
                    });
              }),
              (t.prototype.setProgram = function(t) {
                var e = this;
                this.throwIfDisposed(),
                  (this.program = t),
                  null != this.program &&
                    this.autoDebugValidate &&
                    Aa(this.gl, this.program),
                  da(this.gl, function() {
                    return e.gl.useProgram(t);
                  });
              }),
              (t.prototype.getUniformLocation = function(t, e, n) {
                return (
                  void 0 === n && (n = !0),
                  this.throwIfDisposed(),
                  n ? Fa(this.gl, t, e) : za(this.gl, t, e)
                );
              }),
              (t.prototype.getAttributeLocation = function(t, e) {
                var n = this;
                return (
                  this.throwIfDisposed(),
                  da(this.gl, function() {
                    return n.gl.getAttribLocation(t, e);
                  })
                );
              }),
              (t.prototype.getUniformLocationNoThrow = function(t, e) {
                return this.throwIfDisposed(), this.gl.getUniformLocation(t, e);
              }),
              (t.prototype.setInputMatrixTexture = function(t, e, n) {
                this.throwIfDisposed(),
                  this.throwIfNoProgram(),
                  Ua(this.gl, this.program, t, e, n);
              }),
              (t.prototype.setOutputMatrixTexture = function(t, e, n) {
                this.setOutputMatrixTextureDriver(t, n, e);
              }),
              (t.prototype.setOutputPackedMatrixTexture = function(t, e, n) {
                this.throwIfDisposed();
                var r = la(e, n),
                  i = r[0],
                  a = r[1];
                this.setOutputMatrixTextureDriver(t, i, a);
              }),
              (t.prototype.setOutputMatrixWriteRegion = function(t, e, n, r) {
                this.setOutputMatrixWriteRegionDriver(n, t, r, e);
              }),
              (t.prototype.setOutputPackedMatrixWriteRegion = function(
                t,
                e,
                n,
                r
              ) {
                throw new Error(
                  "setOutputPackedMatrixWriteRegion not implemented."
                );
              }),
              (t.prototype.debugValidate = function() {
                null != this.program && Aa(this.gl, this.program), qa(this.gl);
              }),
              (t.prototype.executeProgram = function() {
                this.throwIfDisposed(), this.throwIfNoProgram();
                var t = this.gl;
                this.autoDebugValidate && this.debugValidate(),
                  da(t, function() {
                    return t.drawElements(t.TRIANGLES, 6, t.UNSIGNED_SHORT, 0);
                  });
              }),
              (t.prototype.blockUntilAllProgramsCompleted = function() {
                var t = this;
                this.throwIfDisposed(),
                  da(this.gl, function() {
                    return t.gl.finish();
                  });
              }),
              (t.prototype.getQueryTimerExtension = function() {
                return (
                  null == this.disjointQueryTimerExtension &&
                    (this.disjointQueryTimerExtension = xa(
                      this.gl,
                      2 ===
                        _e.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")
                        ? "EXT_disjoint_timer_query_webgl2"
                        : "EXT_disjoint_timer_query"
                    )),
                  this.disjointQueryTimerExtension
                );
              }),
              (t.prototype.getQueryTimerExtensionWebGL2 = function() {
                return this.getQueryTimerExtension();
              }),
              (t.prototype.getQueryTimerExtensionWebGL1 = function() {
                return this.getQueryTimerExtension();
              }),
              (t.prototype.beginQuery = function() {
                if (
                  2 === _e.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")
                ) {
                  var t = this.gl,
                    e = this.getQueryTimerExtensionWebGL2(),
                    n = t.createQuery();
                  return t.beginQuery(e.TIME_ELAPSED_EXT, n), n;
                }
                var r = this.getQueryTimerExtensionWebGL1(),
                  i = r.createQueryEXT();
                return r.beginQueryEXT(r.TIME_ELAPSED_EXT, i), i;
              }),
              (t.prototype.endQuery = function() {
                if (
                  2 !== _e.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")
                ) {
                  var t = this.getQueryTimerExtensionWebGL1();
                  t.endQueryEXT(t.TIME_ELAPSED_EXT);
                } else {
                  var e = this.gl,
                    n = this.getQueryTimerExtensionWebGL2();
                  e.endQuery(n.TIME_ELAPSED_EXT);
                }
              }),
              (t.prototype.waitForQueryAndGetTime = function(t) {
                return u(this, void 0, void 0, function() {
                  var e = this;
                  return c(this, function(n) {
                    switch (n.label) {
                      case 0:
                        return [
                          4,
                          R(function() {
                            return (
                              e.disposed ||
                              e.isQueryAvailable(
                                t,
                                _e.get(
                                  "WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"
                                )
                              )
                            );
                          })
                        ];
                      case 1:
                        return (
                          n.sent(),
                          [
                            2,
                            this.getQueryTime(
                              t,
                              _e.get(
                                "WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"
                              )
                            )
                          ]
                        );
                    }
                  });
                });
              }),
              (t.prototype.getQueryTime = function(t, e) {
                if (0 === e) return null;
                if (2 === e) {
                  var n = this.gl;
                  return n.getQueryParameter(t, n.QUERY_RESULT) / 1e6;
                }
                var r = this.getQueryTimerExtensionWebGL1();
                return r.getQueryObjectEXT(t, r.QUERY_RESULT_EXT) / 1e6;
              }),
              (t.prototype.isQueryAvailable = function(t, e) {
                if (0 === e) return !0;
                if (2 === e) {
                  var n = this.gl,
                    r = this.getQueryTimerExtensionWebGL2(),
                    i = n.getQueryParameter(t, n.QUERY_RESULT_AVAILABLE);
                  return (
                    null == this.disjoint &&
                      (this.disjoint = this.gl.getParameter(
                        r.GPU_DISJOINT_EXT
                      )),
                    i && !this.disjoint
                  );
                }
                return (
                  (i = (r = this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(
                    t,
                    r.QUERY_RESULT_AVAILABLE_EXT
                  )),
                  null == this.disjoint &&
                    (this.disjoint = this.gl.getParameter(r.GPU_DISJOINT_EXT)),
                  i && !this.disjoint
                );
              }),
              (t.prototype.pollFence = function(t) {
                var e = this;
                return new Promise(function(n) {
                  e.addItemToPoll(
                    function() {
                      return t.isFencePassed();
                    },
                    function() {
                      return n();
                    }
                  );
                });
              }),
              (t.prototype.pollItems = function() {
                for (
                  var t = No(
                      this.itemsToPoll.map(function(t) {
                        return t.isDoneFn;
                      })
                    ),
                    e = 0;
                  e <= t;
                  ++e
                )
                  (0, this.itemsToPoll[e].resolveFn)();
                this.itemsToPoll = this.itemsToPoll.slice(t + 1);
              }),
              (t.prototype.addItemToPoll = function(t, e) {
                var n = this;
                this.itemsToPoll.push({ isDoneFn: t, resolveFn: e }),
                  this.itemsToPoll.length > 1 ||
                    R(function() {
                      return n.pollItems(), 0 === n.itemsToPoll.length;
                    });
              }),
              (t.prototype.bindTextureToFrameBuffer = function(t) {
                this.throwIfDisposed(),
                  Wa(this.gl, t, this.framebuffer),
                  this.autoDebugValidate && qa(this.gl);
              }),
              (t.prototype.unbindTextureToFrameBuffer = function() {
                null != this.outputTexture
                  ? (Wa(this.gl, this.outputTexture, this.framebuffer),
                    this.autoDebugValidate && qa(this.gl))
                  : $a(this.gl, this.framebuffer);
              }),
              (t.prototype.downloadMatrixDriver = function(t, e) {
                this.bindTextureToFrameBuffer(t);
                var n = e();
                return this.unbindTextureToFrameBuffer(), n;
              }),
              (t.prototype.setOutputMatrixTextureDriver = function(t, e, n) {
                this.throwIfDisposed();
                var r = this.gl;
                Wa(r, t, this.framebuffer),
                  this.autoDebugValidate && qa(r),
                  (this.outputTexture = t),
                  da(r, function() {
                    return r.viewport(0, 0, e, n);
                  }),
                  da(r, function() {
                    return r.scissor(0, 0, e, n);
                  });
              }),
              (t.prototype.setOutputMatrixWriteRegionDriver = function(
                t,
                e,
                n,
                r
              ) {
                var i = this;
                this.throwIfDisposed(),
                  da(this.gl, function() {
                    return i.gl.scissor(t, e, n, r);
                  });
              }),
              (t.prototype.throwIfDisposed = function() {
                if (this.disposed)
                  throw new Error("Attempted to use disposed GPGPUContext.");
              }),
              (t.prototype.throwIfNoProgram = function() {
                if (null == this.program)
                  throw new Error("No GPU program is currently set.");
              }),
              t
            );
          })();
        function No(t) {
          for (var e = 0; e < t.length; ++e) if (!t[e]()) break;
          return e - 1;
        }
        function Oo(t, e, n, r) {
          for (
            var i = e.userCode,
              a = n.map(function(t, n) {
                var r = {
                  logicalShape: t.shape,
                  texShape: t.isUniform ? null : t.texData.texShape,
                  isUniform: t.isUniform,
                  isPacked: !t.isUniform && t.texData.isPacked,
                  flatOffset: null
                };
                return (
                  null != t.texData &&
                    null != t.texData.slice &&
                    t.texData.slice.flatOffset > 0 &&
                    (r.flatOffset = t.texData.slice.flatOffset),
                  { name: e.variableNames[n], shapeInfo: r }
                );
              }),
              o = a.map(function(t) {
                return t.shapeInfo;
              }),
              s = {
                logicalShape: r.shape,
                texShape: r.texData.texShape,
                isUniform: !1,
                isPacked: r.texData.isPacked,
                flatOffset: null
              },
              u = ti(a, s, i, e.usesPackedTextures),
              c = t.createProgram(u),
              l = {},
              f = 0;
            f < e.variableNames.length;
            f++
          ) {
            var h = e.variableNames[f];
            (l[h] = t.getUniformLocation(c, h, !1)),
              (l["offset" + h] = t.getUniformLocation(c, "offset" + h, !1));
          }
          return {
            program: e,
            source: u,
            webGLProgram: c,
            uniformLocations: l,
            gpgpu: t,
            inShapeInfos: o,
            outShapeInfo: s
          };
        }
        function Io(t, e) {
          if (t.length !== e.length)
            throw Error(
              "Binary was compiled with " +
                t.length +
                " inputs, but was executed with " +
                e.length +
                " inputs"
            );
          t.forEach(function(t, n) {
            var r = t.logicalShape,
              i = e[n],
              a = i.shape;
            if (!I(r, a))
              throw Error(
                "Binary was compiled with different shapes than the current args. Shapes " +
                  r +
                  " and " +
                  a +
                  " must match"
              );
            if (!t.isUniform || !i.isUniform) {
              var o = t.texShape,
                s = i.isUniform ? null : i.texData.texShape;
              if (!I(o, s))
                throw Error(
                  "Binary was compiled with different texture shapes than the current args. Shape " +
                    o +
                    " and " +
                    s +
                    " must match"
                );
            }
          });
        }
        function Co(t, e, n, r) {
          Io(t.inShapeInfos, e), Io([t.outShapeInfo], [n]);
          var i = n.texData.texture,
            a = n.texData.texShape,
            o = t.gpgpu;
          n.texData.isPacked
            ? o.setOutputPackedMatrixTexture(i, a[0], a[1])
            : o.setOutputMatrixTexture(i, a[0], a[1]),
            o.setProgram(t.webGLProgram),
            e.forEach(function(e, n) {
              var r = t.program.variableNames[n],
                i = t.uniformLocations[r],
                a = t.uniformLocations["offset" + r];
              if (null != i)
                if (e.isUniform)
                  if (1 === N(e.shape)) o.gl.uniform1f(i, e.uniformValues[0]);
                  else {
                    var s = e.uniformValues;
                    s instanceof Float32Array || (s = new Float32Array(s)),
                      o.gl.uniform1fv(i, s);
                  }
                else
                  null != e.texData.slice &&
                    null != a &&
                    o.gl.uniform1i(a, e.texData.slice.flatOffset),
                    o.setInputMatrixTexture(e.texData.texture, i, n);
            }),
            null != r && r(o, t.webGLProgram),
            o.executeProgram();
        }
        function Ao(t, e, n) {
          var r = "";
          e.concat(n).forEach(function(t) {
            var e =
                null != t.texData &&
                null != t.texData.slice &&
                t.texData.slice.flatOffset > 0,
              n = t.isUniform ? "uniform" : t.texData.texShape;
            r += t.shape + "_" + n + "_" + e;
          });
          var i = t.userCode,
            a = t.constructor.name;
          return a + "_" + r + "_" + i;
        }
        var ko = (function() {
            return function(t, e, n) {
              (this.variableNames = ["A"]), (this.outputShape = t);
              var r = n.filterWidth,
                i = n.inChannels,
                a = n.strideWidth,
                o = n.strideHeight,
                s = n.padInfo,
                u = n.outWidth,
                c = n.dilationWidth,
                l = n.dilationHeight,
                f = s.left,
                h = s.top,
                p = i * r,
                d = Jr();
              this.userCode =
                "\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            int blockIndex = rc.y + col;\n            int pos = rc.x + row;\n\n            if(blockIndex >= " +
                t[1] +
                " || pos >= " +
                t[0] +
                ") continue;\n\n            int offsetY = int(blockIndex / (" +
                u +
                ")) * " +
                o +
                " - " +
                h +
                ";\n            int d0 = offsetY + " +
                l +
                " * (pos / " +
                p +
                ");\n\n            if(d0 >= " +
                e[0] +
                " || d0 < 0) continue;\n\n            int offsetX = int(mod(float(blockIndex), " +
                u +
                ".) * " +
                a +
                ". - " +
                f +
                ".);\n            int d1 = offsetX + " +
                c +
                " * (int(mod(float(pos), " +
                p +
                ".) / " +
                i +
                ".));\n\n            if(d1 >= " +
                e[1] +
                " || d1 < 0) continue;\n\n            result[row * 2 + col] = getA(d0, d1, int(mod(float(pos), " +
                i +
                ".)));\n          }\n        }\n\n        " +
                d.output +
                " = result;\n      }\n    ";
            };
          })(),
          Po = (function() {
            return function(t, e, n, r, i) {
              (this.variableNames = ["x"]), (this.outputShape = []);
              var a,
                o = e,
                s = t[3] - 1;
              this.outputShape = t;
              var u = "float(" + n + ") + float(" + r + ") * sum";
              (a =
                0.5 === i
                  ? "inversesqrt(" + u + ")"
                  : 1 === i
                  ? "1.0/(" + u + ")"
                  : "exp(log(" + u + ") * float(-" + i + "));"),
                (this.userCode =
                  "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -" +
                  o +
                  "; j <= " +
                  o +
                  "; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  " +
                  s +
                  ") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * " +
                  a +
                  ";\n        setOutput(val);\n      }\n    ");
            };
          })(),
          To = (function() {
            return function(t, e, n, r, i) {
              (this.variableNames = ["inputImage", "outputImage", "dy"]),
                (this.outputShape = []),
                (this.outputShape = t),
                (this.depth = t[3]),
                (this.depthRadius = e),
                (this.bias = n),
                (this.alpha = r),
                (this.beta = i),
                (this.userCode =
                  "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < " +
                  this.depth +
                  "; ++d) {\n          int depthBegin = int(max(0.0, float(d - " +
                  e +
                  ")));\n          int depthEnd = int(min(float(" +
                  this.depth +
                  "),\n              float(d + " +
                  e +
                  " + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = " +
                  this.depth +
                  ";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(" +
                  r +
                  ") * norm + float(" +
                  n +
                  ");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(" +
                  r +
                  ")\n                * float(" +
                  i +
                  ")\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * " +
                  i +
                  ");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ");
            };
          })(),
          Ro = (function() {
            return function(t) {
              (this.variableNames = ["dy", "maxPos"]),
                (this.outputShape = t.inShape);
              var e = t.strideHeight,
                n = t.strideWidth,
                r = t.dilationHeight,
                i = t.effectiveFilterHeight,
                a = t.effectiveFilterWidth,
                o = i - 1 - t.padInfo.top,
                s = a - 1 - t.padInfo.left,
                u = i * a - 1;
              this.userCode =
                "\n      const ivec2 pads = ivec2(" +
                o +
                ", " +
                s +
                ");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < " +
                i +
                ";\n          wR += " +
                r +
                ") {\n          float dyR = float(dyRCorner + wR) / " +
                e +
                ".0;\n\n          if (dyR < 0.0 || dyR >= " +
                t.outHeight +
                ".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < " +
                a +
                "; wC++) {\n            float dyC = float(dyCCorner + wC) / " +
                n +
                ".0;\n\n            if (dyC < 0.0 || dyC >= " +
                t.outWidth +
                ".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = " +
                u +
                " - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * " +
                a +
                " + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ";
            };
          })(),
          Do = (function() {
            return function(t, e, n, r, i, a) {
              void 0 === n && (n = !1),
                void 0 === r && (r = !1),
                void 0 === i && (i = !1),
                void 0 === a && (a = null),
                (this.variableNames = ["matrixA", "matrixB"]);
              var o = t[0],
                s = n ? t[2] : t[1],
                u = r ? e[1] : e[2],
                c = n ? t[1] : t[2];
              this.outputShape = [o, s, u];
              var l = function(t, e) {
                  return n
                    ? "batch, " + e + " + " + t + ", aRow"
                    : "batch, aRow, " + e + " + " + t;
                },
                f = function(t, e) {
                  return r
                    ? "batch, bCol, " + e + " + " + t
                    : "batch, " + e + " + " + t + ", bCol";
                },
                h = 4 * Math.floor(c / 4),
                p = c % 4,
                d = "",
                m = "";
              a &&
                ((d =
                  "float activation(float x) {\n        " + a + "\n      }"),
                (m = "result = activation(result);"));
              var v = i ? "result += getBiasAtOutCoords();" : "";
              i && this.variableNames.push("bias"),
                (this.userCode =
                  "\n      " +
                  d +
                  "\n\n      float dotARowBCol(int batch, int aRow, int bCol) {\n        float result = 0.0;\n        for (int i = 0; i < " +
                  h +
                  "; i += 4) {\n          vec4 a = vec4(\n            getMatrixA(" +
                  l(0, "i") +
                  "),\n            getMatrixA(" +
                  l(1, "i") +
                  "),\n            getMatrixA(" +
                  l(2, "i") +
                  "),\n            getMatrixA(" +
                  l(3, "i") +
                  ")\n          );\n          vec4 b = vec4(\n            getMatrixB(" +
                  f(0, "i") +
                  "),\n            getMatrixB(" +
                  f(1, "i") +
                  "),\n            getMatrixB(" +
                  f(2, "i") +
                  "),\n            getMatrixB(" +
                  f(3, "i") +
                  ")\n          );\n\n          result += dot(a, b);\n        }\n\n        if (" +
                  (1 === p) +
                  ") {\n          result += getMatrixA(" +
                  l(0, h) +
                  ") *\n            getMatrixB(" +
                  f(0, h) +
                  ");\n        } else if (" +
                  (2 === p) +
                  ") {\n          vec2 a = vec2(\n            getMatrixA(" +
                  l(0, h) +
                  "),\n            getMatrixA(" +
                  l(1, h) +
                  ")\n          );\n          vec2 b = vec2(\n            getMatrixB(" +
                  f(0, h) +
                  "),\n            getMatrixB(" +
                  f(1, h) +
                  ")\n          );\n          result += dot(a, b);\n        } else if (" +
                  (3 === p) +
                  ") {\n          vec3 a = vec3(\n            getMatrixA(" +
                  l(0, h) +
                  "),\n            getMatrixA(" +
                  l(1, h) +
                  "),\n            getMatrixA(" +
                  l(2, h) +
                  ")\n          );\n          vec3 b = vec3(\n            getMatrixB(" +
                  f(0, h) +
                  "),\n            getMatrixB(" +
                  f(1, h) +
                  "),\n            getMatrixB(" +
                  f(2, h) +
                  ")\n          );\n          result += dot(a, b);\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec3 resBRC = getOutputCoords();\n        float result = dotARowBCol(resBRC.x, resBRC.y, resBRC.z);\n\n        " +
                  v +
                  "\n\n        " +
                  m +
                  "\n\n        setOutput(result);\n      }\n    ");
            };
          })(),
          Mo = (function() {
            return function(t, e, n, r, i, a, o) {
              void 0 === r && (r = !1),
                void 0 === i && (i = !1),
                void 0 === a && (a = !1),
                void 0 === o && (o = null),
                (this.variableNames = ["matrixA", "matrixB"]),
                (this.usesPackedTextures = !0),
                (this.outputShape = n);
              var s = r ? t[0] : t[1],
                u = Math.ceil(s / 2),
                c = r ? "i * 2, rc.x" : "rc.x, i * 2",
                l = i ? "rc.y, i * 2" : "i * 2, rc.y",
                f = r ? ["a.xxyy", "a.zzww"] : ["a.xxzz", "a.yyww"],
                h = i ? ["b.xzxz", "b.ywyw"] : ["b.xyxy", "b.zwzw"],
                p = "",
                d = "";
              o &&
                ((p = "vec4 activation(vec4 x) {\n        " + o + "\n      }"),
                (d = "result = activation(result);"));
              var m = a ? "result += getBiasAtOutCoords();" : "";
              a && this.variableNames.push("bias"),
                (this.userCode =
                  "\n      " +
                  p +
                  "\n\n      const float sharedDimension = " +
                  u +
                  ".0;\n\n      vec4 dot2x2ARowBCol(ivec2 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < " +
                  u +
                  "; i++) {\n          vec4 a = getMatrixA(" +
                  c +
                  ");\n          vec4 b = getMatrixB(" +
                  l +
                  ");\n\n          result += (" +
                  f[0] +
                  " * " +
                  h[0] +
                  ") + (" +
                  f[1] +
                  " * " +
                  h[1] +
                  ");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        " +
                  m +
                  "\n\n        " +
                  d +
                  "\n\n        setOutput(result);\n      }\n    ");
            };
          })(),
          jo = (function() {
            function t(t, e, n) {
              (this.variableNames = ["probs"]),
                (this.outputShape = [t, n]),
                (this.userCode =
                  "\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < " +
                  (e - 1) +
                  "; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(" +
                  (e - 1) +
                  "));\n      }\n    ");
            }
            return (
              (t.prototype.getCustomSetupFunc = function(t) {
                var e = this;
                return function(n, r) {
                  null == e.seedLoc &&
                    (e.seedLoc = n.getUniformLocation(r, "seed")),
                    n.gl.uniform1f(e.seedLoc, t);
                };
              }),
              t
            );
          })(),
          Lo = (function() {
            return function(t, e, n, r) {
              (this.variableNames = ["indices"]),
                (this.outputShape = [t, e]),
                (this.userCode =
                  "\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(" +
                  r +
                  "), float(" +
                  n +
                  "),\n                      float(index == coords.y)));\n      }\n    ");
            };
          })();
        function Bo(t, e) {
          return ["x", "y", "z", "w", "u", "v"].slice(0, e).map(function(e) {
            return t + "." + e;
          });
        }
        function Fo(t, e) {
          return 1 === e ? [t] : Bo(t, e);
        }
        function zo(t, e) {
          if (1 === t) return "rc";
          for (var n = "", r = 0; r < t; r++)
            (n += e[r]), r < t - 1 && (n += ",");
          return n;
        }
        var Uo = (function() {
          return function(t) {
            (this.variableNames = ["A"]),
              (this.isPackShader = !0),
              (this.outputShape = t);
            var e = t.length;
            if (0 === e)
              this.userCode =
                "\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";
            else {
              var n = Fo("rc", e),
                r = Wi(e),
                i = Wo(e, t, n),
                a = $o(e, t[t.length - 1], t[t.length - 2], n),
                o = qo(t, n);
              this.userCode =
                "\n        void main() {\n          " +
                r +
                " rc = getOutputCoords();\n\n          if(" +
                i +
                ") {\n            setOutput(vec4(0));\n          } else {\n            " +
                a +
                "\n\n            setOutput(vec4(" +
                o +
                "));\n          }\n        }\n      ";
            }
          };
        })();
        function Vo(t, e) {
          for (var n = [], r = 0; r <= 1; r++)
            for (var i = 0; i <= 1; i++) {
              for (
                var a =
                    (0 === r ? "r" : "rp1") + ", " + (0 === i ? "c" : "cp1"),
                  o = 2;
                o < t;
                o++
              )
                a = e[e.length - 1 - o] + "," + a;
              n.push(a);
            }
          return n;
        }
        function Wo(t, e, n) {
          if (1 === t) return "rc > " + e[0];
          for (var r = "", i = t - 2; i < t; i++)
            (r += n[i] + " >= " + e[i]), i < t - 1 && (r += "||");
          return r;
        }
        function $o(t, e, n, r) {
          if (1 === t) return "";
          var i = r.slice(-2);
          return (
            "\n    int r = " +
            i[0] +
            ";\n    int c = " +
            i[1] +
            ";\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= " +
            e +
            ";\n    bool rEdge = rp1 >= " +
            n +
            ";\n  "
          );
        }
        function qo(t, e) {
          var n = t.length,
            r = Vo(n, e);
          return 1 === n
            ? "getA(rc),\n            rc + 1 >= " +
                t[0] +
                " ? 0. : getA(rc + 1),\n            0, 0"
            : "getA(" +
                r[0] +
                "),\n          cEdge ? 0. : getA(" +
                r[1] +
                "),\n          rEdge ? 0. : getA(" +
                r[2] +
                "),\n          rEdge || cEdge ? 0. : getA(" +
                r[3] +
                ")";
        }
        var Ho = (function() {
            return function(t, e, n) {
              (this.variableNames = ["x"]),
                (this.outputShape = e.map(function(e, n) {
                  return e[0] + t[n] + e[1];
                }));
              var r = t.length,
                i = Wi(r),
                a = e
                  .map(function(t) {
                    return t[0];
                  })
                  .join(","),
                o = e
                  .map(function(e, n) {
                    return e[0] + t[n];
                  })
                  .join(","),
                s = ["coords[0]", "coords[1]", "coords[2]", "coords[3]"].slice(
                  0,
                  r
                );
              this.userCode =
                1 !== r
                  ? "\n      " +
                    i +
                    " start = " +
                    i +
                    "(" +
                    a +
                    ");\n      " +
                    i +
                    " end = " +
                    i +
                    "(" +
                    o +
                    ");\n\n      void main() {\n        " +
                    i +
                    " outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(" +
                    n +
                    "));\n        } else {\n          " +
                    i +
                    " coords = outC - start;\n          setOutput(getX(" +
                    s +
                    "));\n        }\n      }\n    "
                  : "\n        int start = " +
                    a +
                    ";\n        int end = " +
                    o +
                    ";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(" +
                    n +
                    "));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ";
            };
          })(),
          Ko = (function() {
            return function(t, e, n) {
              (this.variableNames = ["x"]),
                (this.usesPackedTextures = !0),
                (this.outputShape = e.map(function(e, n) {
                  return e[0] + t[n] + e[1];
                }));
              for (
                var r = t.length,
                  i = Wi(r),
                  a = e
                    .map(function(t) {
                      return t[0];
                    })
                    .join(","),
                  o = e
                    .map(function(e, n) {
                      return e[0] + t[n];
                    })
                    .join(","),
                  s = Fo("rc", r),
                  u = Fo("source", r),
                  c = s[r - 1] + " < " + this.outputShape[r - 1],
                  l = 1 === r ? "source" : "vec2(" + u.slice(-2).join() + ")",
                  f = [
                    i + " rc = outputLoc;",
                    s[r - 1] + " += 1;\n       if(" + c + ") {\n      ",
                    1 === r
                      ? ""
                      : "}\n       rc = outputLoc;\n       " +
                        s[r - 2] +
                        " += 1;\n       if(" +
                        s[r - 2] +
                        " < " +
                        this.outputShape[r - 2] +
                        ") {",
                    1 === r
                      ? ""
                      : "  " + s[r - 1] + " += 1;\n         if(" + c + ") {"
                  ],
                  h =
                    1 === r
                      ? "rc < start || rc >= end"
                      : "any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",
                  p = "",
                  d = 0,
                  m = 1 === r ? 2 : 4;
                d < m;
                d++
              )
                p +=
                  "\n        " +
                  f[d] +
                  "\n        if (" +
                  h +
                  ") {\n          result[" +
                  d +
                  "] = float(" +
                  n +
                  ");\n        } else {\n          " +
                  i +
                  " source = rc - start;\n          result[" +
                  d +
                  "] = getChannel(getX(" +
                  u.join() +
                  "), " +
                  l +
                  ");\n        }\n      ";
              (p += 1 === r ? "} " : "}}"),
                (this.userCode =
                  "\n      const " +
                  i +
                  " start = " +
                  i +
                  "(" +
                  a +
                  ");\n      const " +
                  i +
                  " end = " +
                  i +
                  "(" +
                  o +
                  ");\n\n      void main() {\n        " +
                  i +
                  " outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        " +
                  p +
                  "\n        setOutput(result);\n      }\n    ");
            };
          })(),
          Go = (function() {
            return function(t, e, n) {
              if (((this.variableNames = ["x"]), "avg" === e && n))
                throw new Error("Cannot compute positions for average pool.");
              var r = t.filterWidth,
                i = t.strideHeight,
                a = t.strideWidth,
                o = t.dilationHeight,
                s = t.dilationWidth,
                u = t.effectiveFilterHeight,
                c = t.effectiveFilterWidth,
                l = t.padInfo.top,
                f = t.padInfo.left;
              this.outputShape = t.outShape;
              var h = "avg" === e,
                p = "0.0";
              if ((h || (p = "-1.0 / 1e-20"), n))
                this.userCode =
                  "\n        const ivec2 strides = ivec2(" +
                  i +
                  ", " +
                  a +
                  ");\n        const ivec2 pads = ivec2(" +
                  l +
                  ", " +
                  f +
                  ");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < " +
                  u +
                  ";\n              wR += " +
                  o +
                  ") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= " +
                  t.inHeight +
                  ") {\n              continue;\n            }\n\n            for (int wC = 0; wC < " +
                  c +
                  ";\n                wC += " +
                  s +
                  ") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= " +
                  t.inWidth +
                  ") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = wR * " +
                  c +
                  " + wC;\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      ";
              else {
                var d =
                  e +
                  "(" +
                  e +
                  "(" +
                  e +
                  "(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";
                "avg" === e && (d = "avgValue / count");
                var m = 4 * Math.floor(r / 4),
                  v = r % 4,
                  y =
                    "\n      if (" +
                    h +
                    ") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    ";
                this.userCode =
                  "\n      const ivec2 strides = ivec2(" +
                  i +
                  ", " +
                  a +
                  ");\n      const ivec2 pads = ivec2(" +
                  l +
                  ", " +
                  f +
                  ");\n      const float initializationValue = " +
                  p +
                  ";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= " +
                  t.inWidth +
                  ") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(" +
                  p +
                  ");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < " +
                  u +
                  ";\n            wR += " +
                  o +
                  ") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= " +
                  t.inHeight +
                  ") {\n            continue;\n          }\n\n          for (int wC = 0; wC < " +
                  m +
                  "; wC += 4) {\n            int xC = xCCorner + wC * " +
                  s +
                  ";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + " +
                  s +
                  ", d),\n              getValue(batch, xR, xC + 2 * " +
                  s +
                  ", d),\n              getValue(batch, xR, xC + 3 * " +
                  s +
                  ", d)\n            );\n\n            " +
                  y +
                  "\n          }\n\n          int xC = xCCorner + " +
                  m +
                  ";\n          if (" +
                  (1 === v) +
                  ") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            " +
                  y +
                  "\n          } else if (" +
                  (2 === v) +
                  ") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + " +
                  s +
                  ", d),\n              initializationValue,\n              initializationValue\n            );\n\n            " +
                  y +
                  "\n          } else if (" +
                  (3 === v) +
                  ") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + " +
                  s +
                  ", d),\n              getValue(batch, xR, xC + 2 * " +
                  s +
                  ", d),\n              initializationValue\n            );\n\n            " +
                  y +
                  "\n          }\n        }\n        setOutput(" +
                  d +
                  ");\n      }\n    ";
              }
            };
          })(),
          Xo = (function() {
            return function(t, e) {
              this.variableNames = ["x"];
              var n = t.windowSize,
                r = t.batchSize,
                i = t.inSize,
                a = Math.ceil(i / n);
              this.outputShape = [r, a];
              var o = "0.0",
                s = "";
              "prod" === e
                ? (o = "1.0")
                : "min" === e
                ? ((o = "1.0 / 1e-20"), (s = "min"))
                : "max" === e && ((o = "-1.0 / 1e-20"), (s = "max"));
              var u =
                e +
                "(" +
                e +
                "(" +
                e +
                "(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";
              "sum" === e
                ? (u = "sumValue")
                : "prod" === e
                ? (u = "prodValue")
                : "all" === e
                ? (u = "allValue")
                : "any" === e && (u = "anyValue");
              var c = 4 * Math.floor(n / 4),
                l = n % 4,
                f =
                  "\n      if (" +
                  ("sum" === e) +
                  ") {\n        sumValue += dot(values, ones);\n      } else if (" +
                  ("prod" === e) +
                  ") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = " +
                  s +
                  "(values, minMaxValue);\n      }\n    ",
                h = "vec4";
              "all" === e
                ? ((o = "1.0"),
                  (f =
                    "\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      "),
                  (h = "bvec4"))
                : "any" === e &&
                  ((o = "0.0"),
                  (f =
                    "\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      "),
                  (h = "bvec4"));
              var p = "";
              i % n > 0 &&
                (p =
                  "\n        if (inIdx < 0 || inIdx >= " +
                  i +
                  ") {\n          return initializationValue;\n        }\n      "),
                (this.userCode =
                  "\n      const float initializationValue = " +
                  o +
                  ";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        " +
                  p +
                  "\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * " +
                  n +
                  ";\n\n        vec4 minMaxValue = vec4(" +
                  o +
                  ");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < " +
                  c +
                  "; i += 4) {\n          int inIdx = inOffset + i;\n          " +
                  h +
                  " values = " +
                  h +
                  "(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          " +
                  f +
                  "\n        }\n\n        int inIdx = inOffset + " +
                  c +
                  ";\n        if (" +
                  (1 === l) +
                  ") {\n          " +
                  h +
                  " values = " +
                  h +
                  "(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          " +
                  f +
                  "\n        } else if (" +
                  (2 === l) +
                  ") {\n          " +
                  h +
                  " values = " +
                  h +
                  "(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          " +
                  f +
                  "\n        } else if (" +
                  (3 === l) +
                  ") {\n          " +
                  h +
                  " values = " +
                  h +
                  "(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          " +
                  f +
                  "\n        }\n        setOutput(" +
                  u +
                  ");\n      }\n    ");
            };
          })(),
          Jo = (function() {
            return function(t, e) {
              (this.variableNames = ["A"]),
                (this.usesPackedTextures = !0),
                (this.outputShape = t);
              for (var n = "", r = 0; r < 4; r++) {
                var i = "thisRC = rc;";
                r % 2 == 1 && (i += "thisRC.z += 1;"),
                  r > 1 && (i += "thisRC.y += 1;"),
                  (n +=
                    "\n        " +
                    i +
                    "\n        " +
                    (r > 0 ? "if(thisRC.y < rows && thisRC.z < cols){" : "") +
                    "\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[" +
                    r +
                    "] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        " +
                    (r > 0 ? "}" : "") +
                    "\n      ");
              }
              this.userCode =
                "\n      " +
                Qo(e) +
                "\n      " +
                Yo(t) +
                "\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = " +
                t[1] +
                ";\n        int cols = " +
                t[2] +
                ";\n\n        " +
                n +
                "\n\n        setOutput(result);\n      }\n    ";
            };
          })();
        function Yo(t) {
          return (
            "\n    int getFlatIndex(ivec3 coords) {\n      return round(" +
            Zr(
              ["coords.x", "coords.y", "coords.z"],
              Y(t)
                .map(function(t) {
                  return t.toString();
                })
                .concat(["1."])
            ) +
            ");\n    }\n  "
          );
        }
        function Qo(t) {
          return (
            "\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      " +
            Yr(["r", "c", "d"], t) +
            "\n      return ivec3(r, c, d);\n    }\n  "
          );
        }
        var Zo = (function() {
            return function(t, e, n) {
              (this.variableNames = ["dy"]),
                (this.outputShape = []),
                (this.outputShape = e.shape);
              var r = e.shape,
                i = r[1],
                a = r[2],
                o = t.shape,
                s = o[1],
                u = o[2],
                c = [n && s > 1 ? i - 1 : i, n && u > 1 ? a - 1 : a],
                l = [n && s > 1 ? s - 1 : s, n && u > 1 ? u - 1 : u],
                f = c[0] / l[0],
                h = c[1] / l[1],
                p = 1 / f,
                d = 1 / h,
                m = 2 * Math.ceil(p) + 2,
                v = 2 * Math.ceil(d) + 2;
              this.userCode =
                "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(" +
                f +
                ");\n        const float widthScale = float(" +
                h +
                ");\n\n        const float invHeightScale = float(" +
                p +
                ");\n        const float invWidthScale = float(" +
                d +
                ");\n\n        const int winHeight = int(" +
                m +
                ");\n        const int winWidth = int(" +
                v +
                ");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= " +
                s +
                ") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= " +
                u +
                ") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), " +
                (i - 1) +
                ".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), " +
                (a - 1) +
                ".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ";
            };
          })(),
          ts = (function() {
            return function(t, e, n, r) {
              (this.variableNames = ["A"]), (this.outputShape = []);
              var i = t[0],
                a = t[1],
                o = t[2],
                s = t[3];
              this.outputShape = [i, e, n, s];
              var u = [r && e > 1 ? a - 1 : a, r && n > 1 ? o - 1 : o],
                c = [r && e > 1 ? e - 1 : e, r && n > 1 ? n - 1 : n];
              this.userCode =
                "\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          " +
                u[0] / c[0] +
                ",\n          " +
                u[1] / c[1] +
                ");\n      const vec2 inputShapeRC = vec2(" +
                a +
                ".0, " +
                o +
                ".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ";
            };
          })(),
          es = (function() {
            return function(t, e, n) {
              (this.variableNames = ["dy"]),
                (this.outputShape = []),
                (this.outputShape = e.shape);
              var r = e.shape,
                i = r[1],
                a = r[2],
                o = t.shape,
                s = o[1],
                u = o[2],
                c = [n && s > 1 ? i - 1 : i, n && u > 1 ? a - 1 : a],
                l = [n && s > 1 ? s - 1 : s, n && u > 1 ? u - 1 : u],
                f = c[0] / l[0],
                h = c[1] / l[1],
                p = 1 / f,
                d = 1 / h,
                m = 2 * Math.ceil(p) + 2,
                v = 2 * Math.ceil(d) + 2;
              this.userCode =
                "\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(" +
                f +
                ");\n        const float widthScale = float(" +
                h +
                ");\n\n        const float invHeightScale = float(" +
                p +
                ");\n        const float invWidthScale = float(" +
                d +
                ");\n\n        const int winHeight = int(" +
                m +
                ");\n        const int winWidth = int(" +
                v +
                ");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= " +
                s +
                ") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= " +
                u +
                ") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(" +
                c[0] +
                ") *\n                (float(dyR) / float(" +
                l[0] +
                "));\n\n            float sourceFracCol =\n                float(" +
                c[1] +
                ") *\n                  (float(dyC) / float(" +
                l[1] +
                "));\n\n            int sourceNearestRow = int(min(\n                float(int(" +
                i +
                ") - 1),\n                " +
                n +
                " ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(" +
                a +
                ") - 1),\n                " +
                n +
                " ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ";
            };
          })(),
          ns = (function() {
            return function(t, e, n, r) {
              (this.variableNames = ["A"]), (this.outputShape = []);
              var i = t[0],
                a = t[1],
                o = t[2],
                s = t[3];
              this.outputShape = [i, e, n, s];
              var u = [r && e > 1 ? a - 1 : a, r && n > 1 ? o - 1 : o],
                c = [r && e > 1 ? e - 1 : e, r && n > 1 ? n - 1 : n],
                l = r ? "0.5" : "0.0";
              this.userCode =
                "\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          " +
                u[0] / c[0] +
                ",\n          " +
                u[1] / c[1] +
                ");\n      const vec2 inputShapeRC = vec2(" +
                a +
                ".0, " +
                o +
                ".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + " +
                l +
                ")));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ";
            };
          })(),
          rs = (function() {
            return function(t, e) {
              this.variableNames = ["x"];
              var n = t.length;
              if (n > 4)
                throw new Error(
                  "WebGL backend: Reverse of rank-" +
                    n +
                    " tensor is not yet supported"
                );
              if (((this.outputShape = t), 1 !== n)) {
                var r = t
                    .map(function(n, r) {
                      return (function(n) {
                        return -1 !== e.indexOf(n) && 1 !== t[n]
                          ? t[n] + " - coords[" + n + "] - 1"
                          : "coords[" + n + "]";
                      })(r);
                    })
                    .join(","),
                  i = Wi(n);
                this.userCode =
                  "\n      void main() {\n        " +
                  i +
                  " coords = getOutputCoords();\n        setOutput(getX(" +
                  r +
                  "));\n      }\n    ";
              } else
                this.userCode =
                  "\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(" +
                  t[0] +
                  " - coord - 1));\n        }\n      ";
            };
          })(),
          is = (function() {
            return function(t, e, n, r, i, a, o) {
              void 0 === o && (o = !0),
                (this.variableNames = ["updates", "indices", "defaultValue"]),
                (this.outputShape = a);
              var s = Wi(i.length),
                u = Wi(a.length),
                c = "";
              1 === n ? (c = "i") : 2 === n && (c = "i, j");
              var l = "getIndices(" + c + ")",
                f = "";
              1 === r ? (f = "i") : 2 === r && (f = "i, coords[1]");
              var h = "getUpdates(" + f + ")",
                p = e > 1 ? "strides[j]" : "strides";
              this.userCode =
                "\n        " +
                s +
                " strides = " +
                s +
                "(" +
                i +
                ");\n\n        void main() {\n          " +
                u +
                " coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < " +
                t +
                "; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < " +
                e +
                "; j++) {\n              int index = round(" +
                l +
                ");\n              flattenedIndex += index * " +
                p +
                ";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += " +
                h +
                ";\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      ";
            };
          })(),
          as = (function() {
            return function(t, e) {
              this.variableNames = ["x", "segmentIds"];
              var n = t.windowSize,
                r = t.batchSize,
                i = t.inSize,
                a = t.numSegments,
                o = a * Math.ceil(i / n);
              this.outputShape = [r, o];
              var s = 4 * Math.floor(n / 4),
                u = n % 4,
                c = "\n        sumValue += dot(values, segFilter);\n    ",
                l = "";
              i % n > 0 &&
                (l =
                  "\n        if (inIdx < 0 || inIdx >= " +
                  i +
                  ") {\n          return initializationValue;\n        }\n      ");
              var f = "";
              i % n > 0 &&
                (f =
                  "\n        if (inIdx < 0 || inIdx >= " +
                  i +
                  ") {\n          return -1.0;\n        }\n      "),
                (this.userCode =
                  "\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        " +
                  l +
                  "\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        " +
                  f +
                  "\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          " +
                  a +
                  ")) * float(" +
                  n +
                  "));\n        int currentSeg = int(mod(float(outIdx), float(" +
                  a +
                  ")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < " +
                  s +
                  "; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          " +
                  c +
                  "\n        }\n\n        int inIdx = inOffset + " +
                  s +
                  ";\n        if (" +
                  (1 === u) +
                  ") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          " +
                  c +
                  "\n        } else if (" +
                  (2 === u) +
                  ") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          " +
                  c +
                  "\n        } else if (" +
                  (3 === u) +
                  ") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          " +
                  c +
                  "\n        }\n        setOutput(sumValue);\n      }\n    ");
            };
          })(),
          os = (function() {
            return function(t, e, n) {
              var r, i;
              if (
                ((this.variableNames = ["c", "a", "b"]),
                (this.outputShape = e),
                n > 4)
              )
                throw Error("Where for rank " + n + " is not yet supported");
              if (1 === n) (i = "resRC"), (r = "resRC");
              else {
                for (
                  var a = ["resRC.x", "resRC.y", "resRC.z", "resRC.w"],
                    o = [],
                    s = [],
                    u = 0;
                  u < e.length;
                  u++
                )
                  s.push("" + a[u]), u < t && o.push("" + a[u]);
                (r = o.join()), (i = s.join());
              }
              var c = Wi(n);
              this.userCode =
                "\n      void main() {\n        " +
                c +
                " resRC = getOutputCoords();\n        float cVal = getC(" +
                r +
                ");\n        if (cVal >= 1.0) {\n          setOutput(getA(" +
                i +
                "));\n        } else {\n          setOutput(getB(" +
                i +
                "));\n        }\n      }\n    ";
            };
          })(),
          ss = (function() {
            function t(t) {
              (this.variableNames = ["source"]),
                (this.outputShape = t),
                (this.rank = t.length);
              var e,
                n = Wi(this.rank),
                r = "uniform int start[" + this.rank + "];",
                i = cs(this.rank);
              (e =
                "\n        " +
                n +
                " sourceLoc;\n        " +
                n +
                " coords = getOutputCoords();\n        " +
                t
                  .map(function(t, e) {
                    return (
                      "sourceLoc." +
                      us[e] +
                      " = start[" +
                      e +
                      "] + coords." +
                      us[e] +
                      ";"
                    );
                  })
                  .join("\n") +
                "\n      "),
                (this.userCode =
                  "\n      " +
                  r +
                  "\n      void main() {\n        " +
                  e +
                  "\n        setOutput(getSource(" +
                  i +
                  "));\n      }\n    ");
            }
            return (
              (t.prototype.getCustomSetupFunc = function(t) {
                var e = this;
                if (t.length !== this.rank)
                  throw Error(
                    "The rank (" +
                      this.rank +
                      ") of the program must match the length of start (" +
                      t.length +
                      ")"
                  );
                return function(n, r) {
                  (null == e.startLoc &&
                    ((e.startLoc = n.getUniformLocationNoThrow(r, "start")),
                    null == e.startLoc)) ||
                    n.gl.uniform1iv(e.startLoc, t);
                };
              }),
              t
            );
          })(),
          us = ["x", "y", "z", "w", "u", "v"];
        function cs(t) {
          if (1 === t) return "sourceLoc";
          if (t <= 6)
            return us
              .slice(0, t)
              .map(function(t) {
                return "sourceLoc." + t;
              })
              .join(",");
          throw Error("Slicing for rank " + t + " is not yet supported");
        }
        var ls = (function() {
            return function(t, e, n, r) {
              this.variableNames = ["x"];
              var i = n.filter(function(t, e) {
                return -1 === r.indexOf(e);
              });
              this.outputShape = i;
              var a = n.length,
                o = Wi(n.length),
                s = Wi(i.length),
                u = "";
              if (1 === a) u = "coords * strides + begin";
              else {
                var c = 0;
                u = n
                  .map(function(t, e) {
                    return -1 === r.indexOf(e)
                      ? (c++,
                        1 === i.length
                          ? "coords * strides[" + e + "] + begin[" + e + "]"
                          : "coords[" +
                            (c - 1) +
                            "] * strides[" +
                            e +
                            "] + begin[" +
                            e +
                            "]")
                      : "begin[" + e + "]";
                  })
                  .join(",");
              }
              this.userCode =
                "\n      " +
                o +
                " begin = " +
                o +
                "(" +
                t +
                ");\n      " +
                o +
                " strides = " +
                o +
                "(" +
                e +
                ");\n\n      void main() {\n        " +
                s +
                " coords = getOutputCoords();\n        setOutput(getX(" +
                u +
                "));\n      }\n    ";
            };
          })(),
          fs = (function() {
            function t(t) {
              (this.gpgpu = t),
                (this.numUsedTextures = 0),
                (this.numFreeTextures = 0),
                (this.freeTextures = {}),
                (this.logEnabled = !1),
                (this.usedTextures = {});
            }
            return (
              (t.prototype.acquireTexture = function(t, e, n) {
                var r,
                  i = hs(e, n),
                  a = ps(t, i, n);
                if (
                  (a in this.freeTextures || (this.freeTextures[a] = []),
                  a in this.usedTextures || (this.usedTextures[a] = []),
                  this.freeTextures[a].length > 0)
                ) {
                  this.numFreeTextures--, this.numUsedTextures++, this.log();
                  var o = this.freeTextures[a].shift();
                  return this.usedTextures[a].push(o), o;
                }
                return (
                  this.numUsedTextures++,
                  this.log(),
                  i === ra.PACKED_2X2_FLOAT32
                    ? (r = this.gpgpu.createPackedMatrixTexture(t[0], t[1]))
                    : i === ra.PACKED_2X2_FLOAT16
                    ? (r = this.gpgpu.createFloat16PackedMatrixTexture(
                        t[0],
                        t[1]
                      ))
                    : i === ra.UNPACKED_FLOAT32
                    ? (r = this.gpgpu.createFloat32MatrixTexture(t[0], t[1]))
                    : i === ra.UNPACKED_FLOAT16
                    ? (r = this.gpgpu.createFloat16MatrixTexture(t[0], t[1]))
                    : i === ra.PACKED_4X1_UNSIGNED_BYTE &&
                      (r = this.gpgpu.createUnsignedBytesMatrixTexture(
                        t[0],
                        t[1]
                      )),
                  this.usedTextures[a].push(r),
                  r
                );
              }),
              (t.prototype.releaseTexture = function(t, e, n, r) {
                if (null != this.freeTextures) {
                  var i = ps(e, hs(n, r), r);
                  i in this.freeTextures || (this.freeTextures[i] = []),
                    this.freeTextures[i].push(t),
                    this.numFreeTextures++,
                    this.numUsedTextures--;
                  var a = this.usedTextures[i],
                    o = a.indexOf(t);
                  if (o < 0)
                    throw new Error(
                      "Cannot release a texture that was never provided by this texture manager"
                    );
                  a.splice(o, 1), this.log();
                }
              }),
              (t.prototype.log = function() {
                if (this.logEnabled) {
                  var t = this.numFreeTextures + this.numUsedTextures;
                  console.log(
                    "Free/Used",
                    this.numFreeTextures + " / " + this.numUsedTextures,
                    "(" + t + ")"
                  );
                }
              }),
              (t.prototype.getNumUsedTextures = function() {
                return this.numUsedTextures;
              }),
              (t.prototype.getNumFreeTextures = function() {
                return this.numFreeTextures;
              }),
              (t.prototype.dispose = function() {
                var t = this;
                if (null != this.freeTextures) {
                  for (var e in this.freeTextures)
                    this.freeTextures[e].forEach(function(e) {
                      t.gpgpu.deleteMatrixTexture(e);
                    });
                  for (var e in this.usedTextures)
                    this.usedTextures[e].forEach(function(e) {
                      t.gpgpu.deleteMatrixTexture(e);
                    });
                  (this.freeTextures = null),
                    (this.usedTextures = null),
                    (this.numUsedTextures = 0),
                    (this.numFreeTextures = 0);
                }
              }),
              t
            );
          })();
        function hs(t, e) {
          if (t === na.UPLOAD)
            return e ? ra.PACKED_2X2_FLOAT32 : ra.UNPACKED_FLOAT32;
          if (t === na.RENDER || null == t)
            return e
              ? _e.get("WEBGL_RENDER_FLOAT32_ENABLED")
                ? ra.PACKED_2X2_FLOAT32
                : ra.PACKED_2X2_FLOAT16
              : _e.get("WEBGL_RENDER_FLOAT32_ENABLED")
              ? ra.UNPACKED_FLOAT32
              : ra.UNPACKED_FLOAT16;
          if (t === na.DOWNLOAD || t === na.PIXELS)
            return ra.PACKED_4X1_UNSIGNED_BYTE;
          throw new Error("Unknown logical texture type " + t);
        }
        function ps(t, e, n) {
          return t[0] + "_" + t[1] + "_" + e + "_" + n;
        }
        var ds = (function() {
          return function(t, e) {
            this.variableNames = ["A"];
            for (var n = new Array(t.length), r = 0; r < n.length; r++)
              n[r] = t[r] * e[r];
            (this.outputShape = n), (this.rank = n.length);
            var i = Wi(this.rank),
              a = ms(t);
            this.userCode =
              "\n      void main() {\n        " +
              i +
              " resRC = getOutputCoords();\n        setOutput(getA(" +
              a +
              "));\n      }\n    ";
          };
        })();
        function ms(t) {
          var e = t.length;
          if (e > 5)
            throw Error("Tile for rank " + e + " is not yet supported");
          if (1 === e) return "imod(resRC, " + t[0] + ")";
          for (
            var n = ["resRC.x", "resRC.y", "resRC.z", "resRC.w", "resRC.u"],
              r = [],
              i = 0;
            i < t.length;
            i++
          )
            r.push("imod(" + n[i] + ", " + t[i] + ")");
          return r.join();
        }
        var vs = (function() {
          return function(t, e) {
            this.variableNames = ["A"];
            for (var n = new Array(t.length), r = 0; r < n.length; r++)
              n[r] = t[e[r]];
            (this.outputShape = n), (this.rank = n.length);
            var i = Wi(this.rank),
              a = ys(e);
            this.userCode =
              "\n    void main() {\n      " +
              i +
              " resRC = getOutputCoords();\n      setOutput(getA(" +
              a +
              "));\n    }\n    ";
          };
        })();
        function ys(t) {
          var e = t.length;
          if (e > 6)
            throw Error("Transpose for rank " + e + " is not yet supported");
          for (
            var n = [
                "resRC.x",
                "resRC.y",
                "resRC.z",
                "resRC.w",
                "resRC.u",
                "resRC.v"
              ],
              r = new Array(e),
              i = 0;
            i < t.length;
            i++
          )
            r[t[i]] = n[i];
          return r.join();
        }
        var gs = 0.3275911,
          bs = 0.254829592,
          ws = -0.284496736,
          _s = 1.421413741,
          xs = -1.453152027,
          Es = 1.061405429,
          Ss = 1.7580993408473768,
          Ns = 1.0507009873554805,
          Os = (function() {
            function t(t, e) {
              (this.variableNames = ["A"]),
                (this.outputShape = t),
                (this.userCode =
                  "\n      uniform float NAN;\n      float unaryOperation(float x) {\n        " +
                  e +
                  "\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ");
            }
            return (
              (t.prototype.getCustomSetupFunc = function() {
                var t = this;
                return function(e, n) {
                  (null == t.startLoc &&
                    ((t.startLoc = e.getUniformLocationNoThrow(n, "NAN")),
                    null == t.startLoc)) ||
                    e.gl.uniform1f(t.startLoc, NaN);
                };
              }),
              t
            );
          })(),
          Is = "if (isNaN(x)) return x;",
          Cs = "return x;",
          As = "return abs(x);",
          ks = Is + "\n  return (x < 0.0) ? 0.0 : x;\n",
          Ps = "return (x >= 0.0) ? x : (exp(x) - 1.0);",
          Ts =
            "\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = " +
            Ss +
            ";\n  float scale = " +
            Ns +
            ";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n";
        function Rs(t) {
          return (
            void 0 === t && (t = 0),
            Is + "\n    return x > 0.0 ? 1.0 : float(" + t + ");\n  "
          );
        }
        var Ds = "return -x;",
          Ms = "return ceil(x);",
          js = "return floor(x);",
          Ls = "\n  if (isNaN(x)) { return 0.0; }\n  return sign(x);\n",
          Bs =
            "\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",
          Fs = "return exp(x);",
          zs = "return exp(x) - 1.0;",
          Us = "if (x < 0.0) return NAN;\n  return log(x);",
          Vs = "return log(1.0 + x);",
          Ws = "return sqrt(x);",
          $s = "return inversesqrt(x);",
          qs = "return 1.0 / (1.0 + exp(-1.0 * x));",
          Hs =
            "\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",
          Ks = Is + "\n  return sin(x);\n",
          Gs = Is + "\n  return cos(x);\n",
          Xs = "return tan(x);",
          Js = "return asin(x);",
          Ys = "return acos(x);",
          Qs = Is + "\n  return atan(x);\n",
          Zs = "\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",
          tu = "\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",
          eu =
            "\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",
          nu = "return log(x + sqrt(x * x + 1.0));",
          ru =
            Is +
            "\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));",
          iu =
            Is +
            "\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;",
          au =
            '\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ' +
            gs +
            ";\n  float a1 = " +
            bs +
            ";\n  float a2 = " +
            ws +
            ";\n  float a3 = " +
            _s +
            ";\n  float a4 = " +
            xs +
            ";\n  float a5 = " +
            Es +
            ";\n\n  float t = 1.0 / (1.0 + p * x);\n  return 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x);\n",
          ou = "return x * x;",
          su = "return 1.0 / x;",
          uu = "return float(!(x >= 1.0));",
          cu = "return float(int(x));",
          lu = "return x;",
          fu = "return x;",
          hu =
            "\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",
          pu =
            "\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n\n  result.r = isNaN(x.r) ? x.r : result.r;\n  result.g = isNaN(x.g) ? x.g : result.g;\n  result.b = isNaN(x.b) ? x.b : result.b;\n  result.a = isNaN(x.a) ? x.a : result.a;\n\n  return result;\n",
          du = (function() {
            function t(t, e) {
              (this.variableNames = ["A"]),
                (this.usesPackedTextures = !0),
                (this.outputShape = t),
                (this.userCode =
                  "\n      uniform float NAN;\n      vec4 unaryOperation(vec4 x) {\n        " +
                  e +
                  "\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ");
            }
            return (
              (t.prototype.getCustomSetupFunc = function() {
                var t = this;
                return function(e, n) {
                  (null == t.startLoc &&
                    ((t.startLoc = e.getUniformLocationNoThrow(n, "NAN")),
                    null == t.startLoc)) ||
                    e.gl.uniform1f(t.startLoc, NaN);
                };
              }),
              t
            );
          })(),
          mu = (function() {
            return function(t) {
              (this.variableNames = ["A"]),
                (this.usesPackedTextures = !0),
                (this.outputShape = t);
              var e = t.length,
                n = Fo("rc", e),
                r = Wi(e),
                i = zo(e, n),
                a = n.slice(-2),
                o = e <= 1 ? "rc" : "vec2(" + a.join(",") + ")";
              this.userCode =
                "\n      void main() {\n        " +
                r +
                " rc = getOutputCoords();\n        vec4 packedInput = getA(" +
                i +
                ");\n\n        setOutput(getChannel(packedInput, " +
                o +
                "));\n      }\n    ";
            };
          })();
        function vu(t, e) {
          if ((void 0 === e && (e = 3), e > 4))
            throw new Error(
              "Cannot construct Tensor with more than 4 channels from pixels."
            );
          return _e.engine.fromPixels(t, e);
        }
        function yu(t, e) {
          return u(this, void 0, void 0, function() {
            var n, r, i, a, o, s, u, l, f, h, p, d, m, v, y, g, b, w, _, x;
            return c(this, function(c) {
              switch (c.label) {
                case 0:
                  if (
                    ((n = un(t, "img", "toPixels")),
                    t instanceof St || (n = n.toInt()),
                    2 !== n.rank && 3 !== n.rank)
                  )
                    throw new Error(
                      "toPixels only supports rank 2 or 3 tensors, got rank " +
                        n.rank +
                        "."
                    );
                  if (
                    ((r = n.shape.slice(0, 2)),
                    (i = r[0]),
                    (a = r[1]),
                    (o = 2 === n.rank ? 1 : n.shape[2]) > 4 || 2 === o)
                  )
                    throw new Error(
                      "toPixels only supports depth of size 1, 3 or 4 but got " +
                        o
                    );
                  return (s = n.min()), (u = n.max()), [4, s.data()];
                case 1:
                  return (l = c.sent()[0]), [4, u.data()];
                case 2:
                  if (
                    ((f = c.sent()[0]),
                    s.dispose(),
                    u.dispose(),
                    "float32" === n.dtype)
                  ) {
                    if (l < 0 || f > 1)
                      throw new Error(
                        "Tensor values for a float32 Tensor must be in the range [0 - 1] but got range [" +
                          l +
                          " - " +
                          f +
                          "]."
                      );
                  } else {
                    if ("int32" !== n.dtype)
                      throw new Error(
                        "Unsupported type for toPixels: " +
                          n.dtype +
                          ". Please use float32 or int32 tensors."
                      );
                    if (l < 0 || f > 255)
                      throw new Error(
                        "Tensor values for a int32 Tensor must be in the range [0 - 255] but got range [" +
                          l +
                          " - " +
                          f +
                          "]."
                      );
                  }
                  return [4, n.data()];
                case 3:
                  for (
                    h = c.sent(),
                      p = "float32" === n.dtype ? 255 : 1,
                      d = new Uint8ClampedArray(a * i * 4),
                      m = 0;
                    m < i * a;
                    ++m
                  )
                    (v = void 0),
                      (y = void 0),
                      (g = void 0),
                      (b = void 0),
                      1 === o
                        ? ((v = h[m] * p),
                          (y = h[m] * p),
                          (g = h[m] * p),
                          (b = 255))
                        : 3 === o
                        ? ((v = h[3 * m] * p),
                          (y = h[3 * m + 1] * p),
                          (g = h[3 * m + 2] * p),
                          (b = 255))
                        : 4 === o &&
                          ((v = h[4 * m] * p),
                          (y = h[4 * m + 1] * p),
                          (g = h[4 * m + 2] * p),
                          (b = h[4 * m + 3] * p)),
                      (d[0 + (w = 4 * m)] = Math.round(v)),
                      (d[w + 1] = Math.round(y)),
                      (d[w + 2] = Math.round(g)),
                      (d[w + 3] = Math.round(b));
                  return (
                    null != e &&
                      ((e.width = a),
                      (e.height = i),
                      (_ = e.getContext("2d")),
                      (x = new ImageData(d, a, i)),
                      _.putImageData(x, 0, 0)),
                    n !== t && n.dispose(),
                    [2, d]
                  );
              }
            });
          });
        }
        var gu = ln({ fromPixels_: vu }),
          bu = Object.freeze({ toPixels: yu, fromPixels: gu });
        function wu(t) {
          return Ou(t, 0);
        }
        function _u(t, e) {
          return Ou(t, e);
        }
        function xu(t, e) {
          return Ou(t, e);
        }
        function Eu(t, e) {
          return Ou(t, e);
        }
        function Su(t, e) {
          void 0 === e && (e = 0),
            _(t.length >= 1, "Pass at least one tensor to concat");
          var n = cn(t, "tensors", "concat");
          e = M(e, n[0].shape)[0];
          var r = Ve(
            n.map(function(t) {
              return t.shape;
            }),
            e
          );
          if (0 === N(r)) return _n([], r);
          if (
            1 ===
            (n = n.filter(function(t) {
              return t.size > 0;
            })).length
          )
            return n[0];
          var i = n.map(function(t) {
            return t.shape;
          });
          Ue(i, e);
          var a = n;
          return _e.engine.runKernel(
            function(t) {
              return t.concat(n, e);
            },
            a,
            function(t) {
              var n = i.map(function(t) {
                return t[e];
              });
              return Pu(t, n, e).map(function(t) {
                return function() {
                  return t;
                };
              });
            }
          );
        }
        function Nu(t, e, n) {
          void 0 === n && (n = 0);
          var r,
            i = un(t, "x", "split");
          return (
            (n = M(n, i.shape)[0]),
            "number" == typeof e
              ? (_(
                  i.shape[n] % e == 0,
                  "Number of splits must evenly divide the axis."
                ),
                (r = new Array(e).fill(i.shape[n] / e)))
              : (_(
                  i.shape[n] ===
                    e.reduce(function(t, e) {
                      return t + e;
                    }),
                  "The sum of sizes must match the size of the axis dimension."
                ),
                (r = e)),
            _e.engine.runKernel(
              function(t) {
                return t.split(i, r, n);
              },
              { $x: i },
              function(t) {
                return {
                  $x: function() {
                    return Ou(t, n);
                  }
                };
              }
            )
          );
        }
        var Ou = ln({ concat_: Su }),
          Iu = ln({ concat1d_: wu }),
          Cu = ln({ concat2d_: _u }),
          Au = ln({ concat3d_: xu }),
          ku = ln({ concat4d_: Eu }),
          Pu = ln({ split_: Nu });
        "undefined" != typeof window
          ? window
          : "undefined" != typeof r || ("undefined" != typeof self && self);
        function Tu(t, e) {
          return t((e = { exports: {} }), e.exports), e.exports;
        }
        var Ru = Tu(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (
                  (e.c = t.c), (e.s0 = t.s0), (e.s1 = t.s1), (e.s2 = t.s2), e
                );
              }
              function i(t, e) {
                var n = new function(t) {
                    var e,
                      n = this,
                      r = ((e = 4022871197),
                      function(t) {
                        t = t.toString();
                        for (var n = 0; n < t.length; n++) {
                          var r = 0.02519603282416938 * (e += t.charCodeAt(n));
                          (r -= e = r >>> 0),
                            (e = (r *= e) >>> 0),
                            (e += 4294967296 * (r -= e));
                        }
                        return 2.3283064365386963e-10 * (e >>> 0);
                      });
                    (n.next = function() {
                      var t = 2091639 * n.s0 + 2.3283064365386963e-10 * n.c;
                      return (
                        (n.s0 = n.s1), (n.s1 = n.s2), (n.s2 = t - (n.c = 0 | t))
                      );
                    }),
                      (n.c = 1),
                      (n.s0 = r(" ")),
                      (n.s1 = r(" ")),
                      (n.s2 = r(" ")),
                      (n.s0 -= r(t)),
                      n.s0 < 0 && (n.s0 += 1),
                      (n.s1 -= r(t)),
                      n.s1 < 0 && (n.s1 += 1),
                      (n.s2 -= r(t)),
                      n.s2 < 0 && (n.s2 += 1),
                      (r = null);
                  }(t),
                  i = e && e.state,
                  a = n.next;
                return (
                  (a.int32 = function() {
                    return (4294967296 * n.next()) | 0;
                  }),
                  (a.double = function() {
                    return a() + 1.1102230246251565e-16 * ((2097152 * a()) | 0);
                  }),
                  (a.quick = a),
                  i &&
                    ("object" == typeof i && r(i, n),
                    (a.state = function() {
                      return r(n, {});
                    })),
                  a
                );
              }
              e && e.exports
                ? (e.exports = i)
                : n && n.amd
                ? n(function() {
                    return i;
                  })
                : (this.alea = i);
            })(0, t, !1);
          }),
          Du = Tu(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (e.x = t.x), (e.y = t.y), (e.z = t.z), (e.w = t.w), e;
              }
              function i(t, e) {
                var n = new function(t) {
                    var e = this,
                      n = "";
                    (e.x = 0),
                      (e.y = 0),
                      (e.z = 0),
                      (e.w = 0),
                      (e.next = function() {
                        var t = e.x ^ (e.x << 11);
                        return (
                          (e.x = e.y),
                          (e.y = e.z),
                          (e.z = e.w),
                          (e.w ^= (e.w >>> 19) ^ t ^ (t >>> 8))
                        );
                      }),
                      t === (0 | t) ? (e.x = t) : (n += t);
                    for (var r = 0; r < n.length + 64; r++)
                      (e.x ^= 0 | n.charCodeAt(r)), e.next();
                  }(t),
                  i = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  i &&
                    ("object" == typeof i && r(i, n),
                    (a.state = function() {
                      return r(n, {});
                    })),
                  a
                );
              }
              e && e.exports
                ? (e.exports = i)
                : n && n.amd
                ? n(function() {
                    return i;
                  })
                : (this.xor128 = i);
            })(0, t, !1);
          }),
          Mu = Tu(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (
                  (e.x = t.x),
                  (e.y = t.y),
                  (e.z = t.z),
                  (e.w = t.w),
                  (e.v = t.v),
                  (e.d = t.d),
                  e
                );
              }
              function i(t, e) {
                var n = new function(t) {
                    var e = this,
                      n = "";
                    (e.next = function() {
                      var t = e.x ^ (e.x >>> 2);
                      return (
                        (e.x = e.y),
                        (e.y = e.z),
                        (e.z = e.w),
                        (e.w = e.v),
                        ((e.d = (e.d + 362437) | 0) +
                          (e.v = e.v ^ (e.v << 4) ^ t ^ (t << 1))) |
                          0
                      );
                    }),
                      (e.x = 0),
                      (e.y = 0),
                      (e.z = 0),
                      (e.w = 0),
                      (e.v = 0),
                      t === (0 | t) ? (e.x = t) : (n += t);
                    for (var r = 0; r < n.length + 64; r++)
                      (e.x ^= 0 | n.charCodeAt(r)),
                        r == n.length && (e.d = (e.x << 10) ^ (e.x >>> 4)),
                        e.next();
                  }(t),
                  i = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  i &&
                    ("object" == typeof i && r(i, n),
                    (a.state = function() {
                      return r(n, {});
                    })),
                  a
                );
              }
              e && e.exports
                ? (e.exports = i)
                : n && n.amd
                ? n(function() {
                    return i;
                  })
                : (this.xorwow = i);
            })(0, t, !1);
          }),
          ju = Tu(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (e.x = t.x.slice()), (e.i = t.i), e;
              }
              function i(t, e) {
                null == t && (t = +new Date());
                var n = new function(t) {
                    var e = this;
                    (e.next = function() {
                      var t,
                        n,
                        r = e.x,
                        i = e.i;
                      return (
                        (t = r[i]),
                        (n = (t ^= t >>> 7) ^ (t << 24)),
                        (n ^= (t = r[(i + 1) & 7]) ^ (t >>> 10)),
                        (n ^= (t = r[(i + 3) & 7]) ^ (t >>> 3)),
                        (n ^= (t = r[(i + 4) & 7]) ^ (t << 7)),
                        (t = r[(i + 7) & 7]),
                        (n ^= (t ^= t << 13) ^ (t << 9)),
                        (r[i] = n),
                        (e.i = (i + 1) & 7),
                        n
                      );
                    }),
                      (function(t, e) {
                        var n,
                          r = [];
                        if (e === (0 | e)) r[0] = e;
                        else
                          for (e = "" + e, n = 0; n < e.length; ++n)
                            r[7 & n] =
                              (r[7 & n] << 15) ^
                              ((e.charCodeAt(n) + r[(n + 1) & 7]) << 13);
                        for (; r.length < 8; ) r.push(0);
                        for (n = 0; n < 8 && 0 === r[n]; ++n);
                        for (
                          8 == n ? (r[7] = -1) : r[n],
                            t.x = r,
                            t.i = 0,
                            n = 256;
                          n > 0;
                          --n
                        )
                          t.next();
                      })(e, t);
                  }(t),
                  i = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  i &&
                    (i.x && r(i, n),
                    (a.state = function() {
                      return r(n, {});
                    })),
                  a
                );
              }
              e && e.exports
                ? (e.exports = i)
                : n && n.amd
                ? n(function() {
                    return i;
                  })
                : (this.xorshift7 = i);
            })(0, t, !1);
          }),
          Lu = Tu(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (e.i = t.i), (e.w = t.w), (e.X = t.X.slice()), e;
              }
              function i(t, e) {
                null == t && (t = +new Date());
                var n = new function(t) {
                    var e = this;
                    (e.next = function() {
                      var t,
                        n,
                        r = e.w,
                        i = e.X,
                        a = e.i;
                      return (
                        (e.w = r = (r + 1640531527) | 0),
                        (n = i[(a + 34) & 127]),
                        (t = i[(a = (a + 1) & 127)]),
                        (n ^= n << 13),
                        (t ^= t << 17),
                        (n ^= n >>> 15),
                        (t ^= t >>> 12),
                        (n = i[a] = n ^ t),
                        (e.i = a),
                        (n + (r ^ (r >>> 16))) | 0
                      );
                    }),
                      (function(t, e) {
                        var n,
                          r,
                          i,
                          a,
                          o,
                          s = [],
                          u = 128;
                        for (
                          e === (0 | e)
                            ? ((r = e), (e = null))
                            : ((e += "\0"),
                              (r = 0),
                              (u = Math.max(u, e.length))),
                            i = 0,
                            a = -32;
                          a < u;
                          ++a
                        )
                          e && (r ^= e.charCodeAt((a + 32) % e.length)),
                            0 === a && (o = r),
                            (r ^= r << 10),
                            (r ^= r >>> 15),
                            (r ^= r << 4),
                            (r ^= r >>> 13),
                            a >= 0 &&
                              ((o = (o + 1640531527) | 0),
                              (i = 0 == (n = s[127 & a] ^= r + o) ? i + 1 : 0));
                        for (
                          i >= 128 && (s[127 & ((e && e.length) || 0)] = -1),
                            i = 127,
                            a = 512;
                          a > 0;
                          --a
                        )
                          (r = s[(i + 34) & 127]),
                            (n = s[(i = (i + 1) & 127)]),
                            (r ^= r << 13),
                            (n ^= n << 17),
                            (r ^= r >>> 15),
                            (n ^= n >>> 12),
                            (s[i] = r ^ n);
                        (t.w = o), (t.X = s), (t.i = i);
                      })(e, t);
                  }(t),
                  i = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  i &&
                    (i.X && r(i, n),
                    (a.state = function() {
                      return r(n, {});
                    })),
                  a
                );
              }
              e && e.exports
                ? (e.exports = i)
                : n && n.amd
                ? n(function() {
                    return i;
                  })
                : (this.xor4096 = i);
            })(0, t, !1);
          }),
          Bu = Tu(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (e.a = t.a), (e.b = t.b), (e.c = t.c), (e.d = t.d), e;
              }
              function i(t, e) {
                var n = new function(t) {
                    var e = this,
                      n = "";
                    (e.next = function() {
                      var t = e.b,
                        n = e.c,
                        r = e.d,
                        i = e.a;
                      return (
                        (t = (t << 25) ^ (t >>> 7) ^ n),
                        (n = (n - r) | 0),
                        (r = (r << 24) ^ (r >>> 8) ^ i),
                        (i = (i - t) | 0),
                        (e.b = t = (t << 20) ^ (t >>> 12) ^ n),
                        (e.c = n = (n - r) | 0),
                        (e.d = (r << 16) ^ (n >>> 16) ^ i),
                        (e.a = (i - t) | 0)
                      );
                    }),
                      (e.a = 0),
                      (e.b = 0),
                      (e.c = -1640531527),
                      (e.d = 1367130551),
                      t === Math.floor(t)
                        ? ((e.a = (t / 4294967296) | 0), (e.b = 0 | t))
                        : (n += t);
                    for (var r = 0; r < n.length + 20; r++)
                      (e.b ^= 0 | n.charCodeAt(r)), e.next();
                  }(t),
                  i = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  i &&
                    ("object" == typeof i && r(i, n),
                    (a.state = function() {
                      return r(n, {});
                    })),
                  a
                );
              }
              e && e.exports
                ? (e.exports = i)
                : n && n.amd
                ? n(function() {
                    return i;
                  })
                : (this.tychei = i);
            })(0, t, !1);
          }),
          Fu = Tu(function(t) {
            !(function(e, r) {
              var i,
                a = this,
                o = 256,
                s = 6,
                u = "random",
                c = r.pow(o, s),
                l = r.pow(2, 52),
                f = 2 * l,
                h = o - 1;
              function p(t, n, p) {
                var y = [],
                  g = m(
                    (function t(e, n) {
                      var r,
                        i = [],
                        a = typeof e;
                      if (n && "object" == a)
                        for (r in e)
                          try {
                            i.push(t(e[r], n - 1));
                          } catch (t) {}
                      return i.length ? i : "string" == a ? e : e + "\0";
                    })(
                      (n = 1 == n ? { entropy: !0 } : n || {}).entropy
                        ? [t, v(e)]
                        : null == t
                        ? (function() {
                            try {
                              var t;
                              return (
                                i && (t = i.randomBytes)
                                  ? (t = t(o))
                                  : ((t = new Uint8Array(o)),
                                    (a.crypto || a.msCrypto).getRandomValues(
                                      t
                                    )),
                                v(t)
                              );
                            } catch (t) {
                              var n = a.navigator,
                                r = n && n.plugins;
                              return [+new Date(), a, r, a.screen, v(e)];
                            }
                          })()
                        : t,
                      3
                    ),
                    y
                  ),
                  b = new function(t) {
                    var e,
                      n = t.length,
                      r = this,
                      i = 0,
                      a = (r.i = r.j = 0),
                      s = (r.S = []);
                    for (n || (t = [n++]); i < o; ) s[i] = i++;
                    for (i = 0; i < o; i++)
                      (s[i] = s[(a = h & (a + t[i % n] + (e = s[i])))]),
                        (s[a] = e);
                    (r.g = function(t) {
                      for (var e, n = 0, i = r.i, a = r.j, s = r.S; t--; )
                        (e = s[(i = h & (i + 1))]),
                          (n =
                            n * o +
                            s[
                              h & ((s[i] = s[(a = h & (a + e))]) + (s[a] = e))
                            ]);
                      return (r.i = i), (r.j = a), n;
                    })(o);
                  }(y),
                  w = function() {
                    for (var t = b.g(s), e = c, n = 0; t < l; )
                      (t = (t + n) * o), (e *= o), (n = b.g(1));
                    for (; t >= f; ) (t /= 2), (e /= 2), (n >>>= 1);
                    return (t + n) / e;
                  };
                return (
                  (w.int32 = function() {
                    return 0 | b.g(4);
                  }),
                  (w.quick = function() {
                    return b.g(4) / 4294967296;
                  }),
                  (w.double = w),
                  m(v(b.S), e),
                  (n.pass ||
                    p ||
                    function(t, e, n, i) {
                      return (
                        i &&
                          (i.S && d(i, b),
                          (t.state = function() {
                            return d(b, {});
                          })),
                        n ? ((r[u] = t), e) : t
                      );
                    })(w, g, "global" in n ? n.global : this == r, n.state)
                );
              }
              function d(t, e) {
                return (e.i = t.i), (e.j = t.j), (e.S = t.S.slice()), e;
              }
              function m(t, e) {
                for (var n, r = t + "", i = 0; i < r.length; )
                  e[h & i] = h & ((n ^= 19 * e[h & i]) + r.charCodeAt(i++));
                return v(e);
              }
              function v(t) {
                return String.fromCharCode.apply(0, t);
              }
              if (((r["seed" + u] = p), m(r.random(), e), t.exports)) {
                t.exports = p;
                try {
                  i = n("1c46");
                } catch (t) {}
              }
            })([], Math);
          });
        (Fu.alea = Ru),
          (Fu.xor128 = Du),
          (Fu.xorwow = Mu),
          (Fu.xorshift7 = ju),
          (Fu.xor4096 = Lu),
          (Fu.tychei = Bu);
        var zu = Fu,
          Uu = zu.alea,
          Vu = (function() {
            function t(t, e, n, r, i) {
              (this.mean = t),
                (this.stdDev = e),
                (this.dtype = n),
                (this.nextVal = NaN),
                (this.truncated = r),
                this.truncated &&
                  ((this.upper = this.mean + 2 * this.stdDev),
                  (this.lower = this.mean - 2 * this.stdDev));
              var a = i || Math.random();
              this.random = Uu(a.toString());
            }
            return (
              (t.prototype.nextValue = function() {
                if (!isNaN(this.nextVal)) {
                  var t = this.nextVal;
                  return (this.nextVal = NaN), t;
                }
                for (var e, n, r = !1; !r; ) {
                  var i = void 0,
                    a = void 0,
                    o = void 0;
                  do {
                    o =
                      (i = 2 * this.random() - 1) * i +
                      (a = 2 * this.random() - 1) * a;
                  } while (o >= 1 || 0 === o);
                  var s = Math.sqrt((-2 * Math.log(o)) / o);
                  (e = this.mean + this.stdDev * i * s),
                    (n = this.mean + this.stdDev * a * s),
                    (this.truncated && !this.isValidTruncated(e)) || (r = !0);
                }
                return (
                  (this.truncated && !this.isValidTruncated(n)) ||
                    (this.nextVal = this.convertValue(n)),
                  this.convertValue(e)
                );
              }),
              (t.prototype.convertValue = function(t) {
                return null == this.dtype || "float32" === this.dtype
                  ? t
                  : Math.round(t);
              }),
              (t.prototype.isValidTruncated = function(t) {
                return t <= this.upper && t >= this.lower;
              }),
              t
            );
          })();
        function Wu(t) {
          var e = un(t, "x", "clone", null);
          return _e.engine.runKernel(
            function(t) {
              return St.make(e.shape, { dataId: e.dataId }, e.dtype);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.toFloat();
                }
              };
            }
          );
        }
        function $u(t, e, n, r) {
          void 0 === r && (r = "float32"), null == e && (e = t);
          for (var i = vc([t, e], r), a = t <= e ? t : e, o = 0; o < a; ++o)
            i.set(1, o, o);
          var s = i.toTensor().as2D(t, e);
          if (null == n) return s;
          if (1 === n.length) return zc(Ec(s, 0), [n[0], 1, 1]);
          if (2 === n.length) return zc(Ec(Ec(s, 0), 0), [n[0], n[1], 1, 1]);
          if (3 === n.length)
            return zc(Ec(Ec(Ec(s, 0), 0), 0), [n[0], n[1], n[2], 1, 1]);
          throw new Error(
            "eye() currently supports only 1D and 2D batchShapes, but received " +
              n.length +
              "D."
          );
        }
        function qu(t, e, n, r, i) {
          if (
            (void 0 === e && (e = 0),
            void 0 === n && (n = 1),
            null != r && "bool" === r)
          )
            throw new Error("Unsupported data type " + r);
          for (
            var a = new Vu(e, n, r, !1, i), o = vc(t, r), s = 0;
            s < o.values.length;
            s++
          )
            o.values[s] = a.nextValue();
          return o.toTensor();
        }
        function Hu(t, e, n, r, i) {
          if (
            (void 0 === e && (e = 0),
            void 0 === n && (n = 1),
            null != r && "bool" === r)
          )
            throw new Error("Unsupported data type " + r);
          for (
            var a = new Vu(e, n, r, !0, i), o = vc(t, r), s = 0;
            s < o.values.length;
            s++
          )
            o.values[s] = a.nextValue();
          return o.toTensor();
        }
        function Ku(t, e, n, r) {
          void 0 === e && (e = 0),
            void 0 === n && (n = 1),
            void 0 === r && (r = "float32");
          for (var i = vc(t, r), a = 0; a < i.values.length; a++)
            i.values[a] = b(e, n);
          return i.toTensor();
        }
        function Gu(t, e, n) {
          var r = N(t),
            i = null;
          if (null == n || "float32" === n) i = new Float32Array(r);
          else if ("int32" === n) i = new Int32Array(r);
          else {
            if ("bool" !== n) throw new Error("Unknown data type " + n);
            i = new Uint8Array(r);
          }
          for (var a = 0; a < r; a++) i[a] = e();
          return St.make(t, { values: i }, n);
        }
        function Xu(t, e, n, r) {
          void 0 === r && (r = !1);
          var i = un(t, "logits", "multinomial"),
            a = i.size,
            o = i.rank;
          if (a < 2)
            throw new Error(
              "Error in multinomial: you need at least 2 outcomes, but got " +
                a +
                "."
            );
          if (o > 2)
            throw new Error(
              "Rank of probabilities must be 1 or 2, but is " + o
            );
          n = n || Math.random();
          var s = 1 === o ? i.as2D(1, -1) : i,
            u = _e.engine.runKernel(
              function(t) {
                return t.multinomial(s, r, e, n);
              },
              { logits2D: s }
            );
          return 1 === o ? u.as1D() : u;
        }
        function Ju(t, e, n, r) {
          if ((void 0 === n && (n = 1), void 0 === r && (r = 0), e < 2))
            throw new Error(
              "Error in oneHot: depth must be >=2, but it is " + e
            );
          var i = un(t, "indices", "oneHot", "int32"),
            a = i.shape.concat([e]);
          return (
            (i = i.flatten()),
            _e.engine
              .runKernel(
                function(t) {
                  return t.oneHot(i, e, n, r);
                },
                { $indices: i },
                function(t) {
                  return {
                    $indices: function() {
                      return kn(i.shape, "float32");
                    }
                  };
                }
              )
              .reshape(a)
          );
        }
        function Yu(t, e) {
          return (
            void 0 === e && (e = 3),
            we(
              "tf.fromPixels() is renamed to tf.browser.fromPixels(), please switch to the new method as the old method will be removed in TensorFlow.js 1.0."
            ),
            gu(t, e)
          );
        }
        function Qu(t, e) {
          return u(this, void 0, void 0, function() {
            return c(this, function(n) {
              return (
                we(
                  "tf.toPixels() is renamed to tf.browser.toPixels(), please switch to the new method as the old method will be removed in TensorFlow.js 1.0."
                ),
                [2, yu(t, e)]
              );
            });
          });
        }
        function Zu(t, e) {
          var n = un(t, "x", "reshape", null);
          return (
            (e = D(e, n.size)),
            _(
              n.size === N(e),
              "new shape and old shape must have the same number of elements."
            ),
            _e.engine.runKernel(
              function(t) {
                return t.reshape(n, e);
              },
              { $x: n },
              function(t) {
                return {
                  $x: function() {
                    return t.reshape(n.shape);
                  }
                };
              }
            )
          );
        }
        function tc(t, e) {
          var n = un(t, "x", "squeeze");
          return jc(n, j(n.shape, e).newShape);
        }
        function ec(t, e) {
          var n = un(t, "x", "cast");
          return _e.engine.runKernel(
            function(t) {
              return t.cast(n, e);
            },
            { $x: n },
            function(t) {
              return {
                $x: function() {
                  return t.clone();
                }
              };
            }
          );
        }
        function nc(t, e) {
          var n = un(t, "x", "tile");
          return (
            _(
              n.rank === e.length,
              "Error in transpose: rank of input " +
                n.rank +
                " must match length of reps " +
                e +
                "."
            ),
            _e.engine.runKernel(
              function(t) {
                return t.tile(n, e);
              },
              { $x: n },
              function(t) {
                return {
                  $x: function() {
                    var r = Ln(n);
                    if (1 === n.rank)
                      for (var i = 0; i < e[0]; ++i)
                        r = r.add(t.slice([i * n.shape[0]], [n.shape[0]]));
                    else if (2 === n.rank)
                      for (i = 0; i < e[0]; ++i)
                        for (var a = 0; a < e[1]; ++a)
                          r = r.add(
                            t.slice(
                              [i * n.shape[0], a * n.shape[1]],
                              [n.shape[0], n.shape[1]]
                            )
                          );
                    else if (3 === n.rank)
                      for (i = 0; i < e[0]; ++i)
                        for (a = 0; a < e[1]; ++a)
                          for (var o = 0; o < e[2]; ++o)
                            r = r.add(
                              t.slice(
                                [
                                  i * n.shape[0],
                                  a * n.shape[1],
                                  o * n.shape[2]
                                ],
                                [n.shape[0], n.shape[1], n.shape[2]]
                              )
                            );
                    else {
                      if (4 !== n.rank)
                        throw new Error(
                          "Gradient for tile operation is not implemented for rank-" +
                            n.rank +
                            " tensors yet."
                        );
                      for (i = 0; i < e[0]; ++i)
                        for (a = 0; a < e[1]; ++a)
                          for (o = 0; o < e[2]; ++o)
                            for (var s = 0; s < e[3]; ++s)
                              r = r.add(
                                t.slice(
                                  [
                                    i * n.shape[0],
                                    a * n.shape[1],
                                    o * n.shape[2],
                                    s * n.shape[3]
                                  ],
                                  [
                                    n.shape[0],
                                    n.shape[1],
                                    n.shape[2],
                                    n.shape[3]
                                  ]
                                )
                              );
                    }
                    return r;
                  }
                };
              }
            )
          );
        }
        function rc(t, e, n) {
          return (
            void 0 === n && (n = 0),
            _(
              2 === e.length,
              "Invalid number of paddings. Must be length of 2."
            ),
            Cc(t, [e], n)
          );
        }
        function ic(t, e, n) {
          return (
            void 0 === n && (n = 0),
            _(
              2 === e.length && 2 === e[0].length && 2 === e[1].length,
              "Invalid number of paddings. Must be length of 2 each."
            ),
            Cc(t, e, n)
          );
        }
        function ac(t, e, n) {
          return (
            void 0 === n && (n = 0),
            _(
              3 === e.length &&
                2 === e[0].length &&
                2 === e[1].length &&
                2 === e[2].length,
              "Invalid number of paddings. Must be length of 2 each."
            ),
            Cc(t, e, n)
          );
        }
        function oc(t, e, n) {
          return (
            void 0 === n && (n = 0),
            _(
              4 === e.length &&
                2 === e[0].length &&
                2 === e[1].length &&
                2 === e[2].length &&
                2 === e[3].length,
              "Invalid number of paddings. Must be length of 2 each."
            ),
            Cc(t, e, n)
          );
        }
        function sc(t, e, n) {
          void 0 === n && (n = 0);
          var r = un(t, "x", "pad");
          if (0 === r.rank)
            throw new Error(
              "pad(scalar) is not defined. Pass non-scalar to pad"
            );
          var i = e.map(function(t) {
            return t[0];
          });
          return _e.engine.runKernel(
            function(t) {
              return t.pad(r, e, n);
            },
            { $x: r },
            function(t) {
              return {
                $x: function() {
                  return t.slice(i, r.shape);
                }
              };
            }
          );
        }
        function uc(t, e) {
          void 0 === e && (e = 0);
          var n = cn(t, "tensors", "stack");
          if (
            (_(n.length >= 1, "Pass at least one tensor to tf.stack"),
            1 === n.length)
          )
            return n[0].expandDims(e);
          var r = n[0].rank,
            i = n[0].shape,
            a = n[0].dtype;
          _(e <= r, "Axis must be <= rank of the tensor"),
            n.forEach(function(t) {
              x(
                i,
                t.shape,
                "All tensors passed to stack must have matching shapes"
              );
            }),
            n.forEach(function(t) {
              _(
                a === t.dtype,
                "All tensors passed to stack must have matching dtypes"
              );
            });
          var o = n.map(function(t) {
            return t.expandDims(e);
          });
          return Ou(o, e);
        }
        function cc(t, e, n) {
          var r = un(t, "x", "batchToSpaceND"),
            i = e.reduce(function(t, e) {
              return t * e;
            });
          return (
            _(
              r.rank >= 1 + e.length,
              "input rank is " +
                r.rank +
                " but should be > than blockShape.length " +
                e.length
            ),
            _(
              n.length === e.length,
              "crops.length is " +
                n.length +
                " but should be equal to blockShape.length  " +
                e.length
            ),
            _(
              r.shape[0] % i == 0,
              "input tensor batch is " +
                r.shape[0] +
                " but is not divisible by the product of the elements of blockShape " +
                e.join(" * ") +
                " === " +
                i
            ),
            _e.engine.runKernel(
              function(t) {
                return t.batchToSpaceND(r, e, n);
              },
              { $x: r },
              function(t) {
                return {
                  $x: function() {
                    return t.spaceToBatchND(e, n);
                  }
                };
              }
            )
          );
        }
        function lc(t, e, n) {
          var r = un(t, "x", "spaceToBatchND");
          return (
            _(
              r.rank >= 1 + e.length,
              "input rank " +
                r.rank +
                " should be > than [blockShape] " +
                e.length
            ),
            _(
              n.length === e.length,
              "paddings.shape[0] " +
                n.length +
                " must be equal to [blockShape] " +
                e.length
            ),
            _(
              r.shape.reduce(function(t, r, i) {
                return i > 0 && i <= e.length
                  ? t && (r + n[i - 1][0] + n[i - 1][1]) % e[i - 1] == 0
                  : t;
              }, !0),
              "input spatial dimensions " +
                r.shape.slice(1) +
                " with paddings " +
                n.toString() +
                " must be divisible by blockShapes " +
                e.toString()
            ),
            _e.engine.runKernel(
              function(t) {
                return t.spaceToBatchND(r, e, n);
              },
              { $x: r },
              function(t) {
                return {
                  $x: function() {
                    return t.batchToSpaceND(e, n);
                  }
                };
              }
            )
          );
        }
        function fc(t, e) {
          void 0 === e && (e = 0), (e = e || 0);
          var n = un(t, "x", "unstack");
          return (
            _(
              e < n.shape.length,
              "Axis " + e + " is >= to tensor shape length " + n.shape.length
            ),
            _e.engine.runKernel(
              function(t) {
                return t.unstack(n, e);
              },
              { $x: n },
              function(t) {
                return {
                  $x: function() {
                    return Fc(t, e);
                  }
                };
              }
            )
          );
        }
        function hc(t, e, n, r) {
          void 0 === e && (e = 0),
            void 0 === n && (n = !1),
            void 0 === r && (r = !1);
          var i = un(t, "x", "cumsum"),
            a = Be([(e |= 0)], i.rank),
            o = i;
          null != a && (o = i.transpose(a));
          var s = ze(1, i.rank)[0],
            u = _e.engine.runKernel(
              function(t) {
                return t.cumsum(o, s, n, r);
              },
              { permutedX: o },
              function(t) {
                return {
                  permutedX: function() {
                    return t.cumsum(e, n, !r);
                  }
                };
              }
            );
          return null != a && (u = u.transpose(a)), u;
        }
        function pc(t, e) {
          void 0 === e && (e = 0);
          var n = un(t, "x", "expandDims");
          _(e <= n.rank, "Axis must be <= rank of the tensor");
          var r = n.shape.slice();
          return (
            e < 0 &&
              (_(
                -(n.rank + 1) <= e,
                "Axis must be in the interval [" +
                  -(n.rank + 1) +
                  ", " +
                  n.rank +
                  "]"
              ),
              (e = n.rank + e + 1)),
            r.splice(e, 0, 1),
            jc(n, r)
          );
        }
        function dc(t, e, n) {
          void 0 === n && (n = "NHWC");
          var r = un(t, "x", "depthToSpace"),
            i = "NHWC" === n ? r.shape[1] : r.shape[2],
            a = "NHWC" === n ? r.shape[2] : r.shape[3],
            o = "NHWC" === n ? r.shape[3] : r.shape[1];
          return (
            _(
              i * e >= 0,
              "Negative dimension size caused by overflow when multiplying\n      " +
                i +
                " and " +
                e +
                "  for depthToSpace with input shape\n      " +
                r.shape
            ),
            _(
              a * e >= 0,
              "Negative dimension size caused by overflow when multiplying\n      " +
                a +
                " and " +
                e +
                " for depthToSpace with input shape\n          " +
                r.shape
            ),
            _(
              o % (e * e) == 0,
              "Dimension size must be evenly divisible by " +
                e * e +
                " but is " +
                o +
                " for depthToSpace with input shape " +
                r.shape
            ),
            _e.engine.runKernel(
              function(t) {
                return t.depthToSpace(r, e, n);
              },
              { $x: r }
            )
          );
        }
        function mc(t, e) {
          return u(this, void 0, void 0, function() {
            var n, r, i, a, o, s, u, l, f, h;
            return c(this, function(c) {
              switch (c.label) {
                case 0:
                  return (
                    (n = un(t, "x", "setdiff1d")),
                    (r = un(e, "y", "setdiff1d")),
                    _(
                      n.dtype === r.dtype,
                      "x and y should have the same dtype, but got x (" +
                        n.dtype +
                        ") and y (" +
                        r.dtype +
                        ")."
                    ),
                    _(
                      1 === n.rank,
                      "x should be 1D tensor, but got x (" + n.shape + ")."
                    ),
                    _(
                      1 === r.rank,
                      "y should be 1D tensor, but got y (" + r.shape + ")."
                    ),
                    [4, n.data()]
                  );
                case 1:
                  return (i = c.sent()), [4, r.data()];
                case 2:
                  for (
                    a = c.sent(), o = new Set(a), s = 0, f = 0;
                    f < i.length;
                    f++
                  )
                    o.has(i[f]) || s++;
                  for (
                    u = new yt([s], n.dtype),
                      l = new yt([s], "int32"),
                      f = 0,
                      h = 0;
                    f < i.length;
                    f++
                  )
                    o.has(i[f]) ||
                      ((u.values[h] = i[f]), (l.values[h] = f), h++);
                  return [2, [u.toTensor(), l.toTensor()]];
              }
            });
          });
        }
        function vc(t, e, n) {
          return (
            void 0 === e && (e = "float32"), new yt(t, (e = e || "float32"), n)
          );
        }
        function yc(t, e) {
          void 0 === e && (e = !1), console.log(t.toString(e));
        }
        var gc = ln({ batchToSpaceND_: cc }),
          bc = ln({ cast_: ec }),
          wc = ln({ clone_: Wu }),
          _c = ln({ cumsum_: hc }),
          xc = ln({ depthToSpace_: dc }),
          Ec = ln({ expandDims_: pc }),
          Sc = ln({ eye_: $u }),
          Nc = Yu,
          Oc = ln({ multinomial_: Xu }),
          Ic = ln({ oneHot_: Ju }),
          Cc = ln({ pad_: sc }),
          Ac = ln({ pad1d_: rc }),
          kc = ln({ pad2d_: ic }),
          Pc = ln({ pad3d_: ac }),
          Tc = ln({ pad4d_: oc }),
          Rc = ln({ rand_: Gu }),
          Dc = ln({ randomNormal_: qu }),
          Mc = ln({ randomUniform_: Ku }),
          jc = ln({ reshape_: Zu }),
          Lc = ln({ spaceToBatchND_: lc }),
          Bc = ln({ squeeze_: tc }),
          Fc = ln({ stack_: uc }),
          zc = ln({ tile_: nc }),
          Uc = ln({ truncatedNormal_: Hu }),
          Vc = ln({ unstack_: fc }),
          Wc = mc;
        function $c(t, e) {
          for (var n = [], r = 0; r < e.length; r++) e[r] && n.push(r);
          var i = vc(t, "int32"),
            a = vc([n.length, t.length], "int32");
          for (r = 0; r < n.length; r++) {
            var o = i.indexToLoc(n[r]),
              s = r * t.length;
            a.values.set(o, s);
          }
          return a.toTensor();
        }
        function qc(t, e) {
          if ((void 0 === e && (e = !1), "linear" === t)) return e ? fu : Cs;
          if ("relu" === t) return e ? pu : ks;
          throw new Error(
            "Activation " +
              t +
              " has not been implemented for the WebGL backend."
          );
        }
        var Hc = 10,
          Kc = 1e3,
          Gc = (function() {
            function t(t, e) {
              if (
                (void 0 === e && (e = !0),
                (this.gpgpu = t),
                (this.delayedStorage = e),
                (this.pendingRead = new WeakMap()),
                (this.pendingDisposal = new WeakSet()),
                (this.dataRefCount = new WeakMap()),
                (this.lruDataGPU = []),
                (this.numBytesInGPU = 0),
                (this.uploadWaitMs = 0),
                (this.downloadWaitMs = 0),
                (this.binaryCache = {}),
                (this.disposed = !1),
                _e.get("WEBGL_VERSION") < 1)
              )
                throw new Error("WebGL is not supported on this device");
              if (null == t) {
                var n = h(_e.get("WEBGL_VERSION"));
                (this.gpgpu = new So(n)),
                  (this.canvas = n.canvas),
                  (this.gpgpuCreatedLocally = !0);
              } else
                (this.gpgpuCreatedLocally = !1), (this.canvas = t.gl.canvas);
              this.textureManager = new fs(this.gpgpu);
            }
            return (
              (t.prototype.register = function(t, e, n) {
                if (this.texData.has(t))
                  throw new Error("Data buffer is already registered");
                this.texData.set(t, { shape: e, dtype: n });
              }),
              (t.prototype.setDataMover = function(t) {
                this.texData = new Bn(t);
              }),
              (t.prototype.fromPixels = function(t, e) {
                if (null == t)
                  throw new Error(
                    "pixels passed to tf.browser.fromPixels() can not be null"
                  );
                var n = [t.height, t.width],
                  r = [t.height, t.width, e];
                if (
                  !(
                    t instanceof HTMLVideoElement ||
                    t instanceof HTMLImageElement ||
                    t instanceof HTMLCanvasElement ||
                    t instanceof ImageData
                  )
                )
                  throw new Error(
                    "pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement or ImageData, but was " +
                      t.constructor.name
                  );
                if (t instanceof HTMLVideoElement) {
                  if (null == this.fromPixels2DContext) {
                    if (!_e.get("IS_BROWSER"))
                      throw new Error(
                        "Can't read pixels from HTMLImageElement outside the browser."
                      );
                    if ("complete" !== document.readyState)
                      throw new Error(
                        "The DOM is not ready yet. Please call tf.fromPixels() once the DOM is ready. One way to do that is to add an event listener for `DOMContentLoaded` on the document object"
                      );
                    this.fromPixels2DContext = document
                      .createElement("canvas")
                      .getContext("2d");
                  }
                  (this.fromPixels2DContext.canvas.width = t.width),
                    (this.fromPixels2DContext.canvas.height = t.height),
                    this.fromPixels2DContext.drawImage(
                      t,
                      0,
                      0,
                      t.width,
                      t.height
                    ),
                    (t = this.fromPixels2DContext.canvas);
                }
                var i = this.makeTensorHandle(n, "int32");
                (this.texData.get(i.dataId).usage = na.PIXELS),
                  this.gpgpu.uploadPixelDataToTexture(
                    this.getTexture(i.dataId),
                    t
                  );
                var a = new Zi(r),
                  o = this.compileAndRun(a, [i]);
                return this.disposeData(i.dataId), o;
              }),
              (t.prototype.makeTensorHandle = function(t, e) {
                var n = {};
                return (
                  this.register(n, t, e), { dataId: n, shape: t, dtype: e }
                );
              }),
              (t.prototype.write = function(t, e) {
                if (null == e)
                  throw new Error(
                    "MathBackendWebGL.write(): values can not be null"
                  );
                if (_e.get("DEBUG"))
                  for (var n = 0; n < e.length; n++) {
                    var r = e[n];
                    if (!wa(r))
                      throw Error(
                        "The value " +
                          r +
                          " cannot be represented on this device."
                      );
                  }
                var i = this.texData.get(t),
                  a = i.texture,
                  o = i.texShape,
                  s = i.usage,
                  u = i.dtype,
                  c = i.isPacked;
                if ("complex64" === u)
                  throw new Error(
                    "Cannot write to a complex64 dtype. Please use tf.complex(real, imag)."
                  );
                null != a &&
                  (this.releaseTexture(t, a, o, s, c),
                  (i.texture = null),
                  (i.texShape = null)),
                  (i.usage = na.UPLOAD),
                  (i.values = e),
                  this.delayedStorage || this.uploadToGPU(t);
              }),
              (t.prototype.readSync = function(t) {
                var e = this.texData.get(t),
                  n = e.values,
                  r = e.dtype,
                  i = e.complexTensors,
                  a = e.slice,
                  o = e.shape;
                if (null != a) {
                  var s = new Os(o, lu),
                    u = this.compileAndRun(s, [
                      { dataId: t, shape: o, dtype: r }
                    ]),
                    c = this.readSync(u.dataId);
                  return u.dispose(), c;
                }
                if (null != n) return this.convertAndCacheOnCPU(t);
                if ("string" === r) return n;
                var l,
                  f,
                  h = null != this.activeTimers;
                return (
                  h && (l = performance.now()),
                  (f =
                    "complex64" === r
                      ? Un(i.real.dataSync(), i.imag.dataSync())
                      : this.getValuesFromTexture(t)),
                  h && (this.downloadWaitMs += performance.now() - l),
                  this.convertAndCacheOnCPU(t, f)
                );
              }),
              (t.prototype.read = function(t) {
                return u(this, void 0, void 0, function() {
                  var e,
                    n,
                    r,
                    i,
                    a,
                    o,
                    s,
                    u,
                    l,
                    f,
                    h,
                    p,
                    d,
                    m,
                    v,
                    y,
                    g,
                    b,
                    w,
                    _,
                    x,
                    E,
                    S,
                    O;
                  return c(this, function(c) {
                    switch (c.label) {
                      case 0:
                        if (this.pendingRead.has(t))
                          return (
                            (r = this.pendingRead.get(t)),
                            [
                              2,
                              new Promise(function(t) {
                                return r.push(t);
                              })
                            ]
                          );
                        if (
                          ((i = this.texData.get(t)),
                          (a = i.texture),
                          (o = i.values),
                          (s = i.texShape),
                          (u = i.isPacked),
                          (l = i.shape),
                          (f = i.slice),
                          (h = i.dtype),
                          null != f)
                        )
                          return (
                            (p = new Os(l, lu)),
                            (d = this.compileAndRun(p, [
                              { dataId: t, shape: l, dtype: h }
                            ])),
                            (m = this.read(d.dataId)),
                            d.dispose(),
                            [2, m]
                          );
                        if (null != o) return [2, this.convertAndCacheOnCPU(t)];
                        if (
                          (this.pendingRead.set(t, []),
                          !_e.get("WEBGL_DOWNLOAD_FLOAT_ENABLED") &&
                            2 === _e.get("WEBGL_VERSION"))
                        )
                          throw new Error(
                            "tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported."
                          );
                        return (
                          (v = s[1]),
                          (y = s[0]),
                          u && ((e = la(s[0], s[1])), (v = e[0]), (y = e[1])),
                          (g = this.gpgpu.maybeCreateBufferFromTexture(
                            a,
                            y,
                            v
                          )),
                          [4, this.gpgpu.createAndWaitForFence()]
                        );
                      case 1:
                        return (
                          c.sent(),
                          g instanceof WebGLTexture
                            ? (b = this.getValuesFromTexture(t))
                            : ((w = N(l)),
                              u
                                ? ((_ = Xa(l)),
                                  (x = 1),
                                  (E = 1),
                                  l.length &&
                                    ((n = Ja(l)), (x = n[0]), (E = n[1])),
                                  (b = this.gpgpu
                                    .downloadPackedMatrixFromBuffer(
                                      g,
                                      _,
                                      x,
                                      E,
                                      s[0],
                                      s[1]
                                    )
                                    .subarray(0, w)))
                                : (b = this.gpgpu
                                    .downloadFloat32MatrixFromBuffer(
                                      g,
                                      s[0],
                                      s[1]
                                    )
                                    .subarray(0, w))),
                          (S = this.convertAndCacheOnCPU(t, b)),
                          (O = this.pendingRead.get(t)),
                          this.pendingRead.delete(t),
                          O.forEach(function(t) {
                            return t(S);
                          }),
                          this.pendingDisposal.has(t) &&
                            (this.pendingDisposal.delete(t),
                            this.disposeData(t)),
                          [2, S]
                        );
                    }
                  });
                });
              }),
              (t.prototype.getValuesFromTexture = function(t) {
                var e,
                  n = this.texData.get(t),
                  r = n.shape,
                  i = n.dtype,
                  a = n.texture,
                  o = n.texShape,
                  s = N(r);
                if (_e.get("WEBGL_DOWNLOAD_FLOAT_ENABLED")) {
                  if (this.texData.get(t).isPacked) {
                    var u = Xa(r),
                      c = 1,
                      l = 1;
                    return (
                      r.length && ((c = (e = Ja(r))[0]), (l = e[1])),
                      this.gpgpu
                        .downloadMatrixFromPackedTexture(a, u, c, l, o[0], o[1])
                        .subarray(0, s)
                    );
                  }
                  return this.gpgpu
                    .downloadFloat32MatrixFromOutputTexture(a, o[0], o[1])
                    .subarray(0, s);
                }
                var f = this.makeTensorHandle(r, "float32");
                (f.size = N(r)),
                  (this.texData.get(f.dataId).usage = na.DOWNLOAD);
                var h = new Ji(r);
                this.compileAndRun(
                  h,
                  [{ shape: r, dtype: i, dataId: t }],
                  f,
                  null,
                  !1
                );
                var p = this.texData.get(f.dataId),
                  d = this.gpgpu
                    .downloadByteEncodedFloatMatrixFromOutputTexture(
                      p.texture,
                      p.texShape[0],
                      p.texShape[1]
                    )
                    .subarray(0, s);
                return this.disposeData(f.dataId), d;
              }),
              (t.prototype.time = function(t) {
                return u(this, void 0, void 0, function() {
                  var e, n, r, i, a, o, s;
                  return c(this, function(u) {
                    switch (u.label) {
                      case 0:
                        return (
                          (e = this.activeTimers),
                          (n = []),
                          (r = !1),
                          null == this.programTimersStack
                            ? ((this.programTimersStack = n), (r = !0))
                            : this.activeTimers.push(n),
                          (this.activeTimers = n),
                          t(),
                          (i = S(
                            this.activeTimers.map(function(t) {
                              return t.query;
                            })
                          ).filter(function(t) {
                            return null != t;
                          })),
                          (a = S(
                            this.activeTimers.map(function(t) {
                              return t.name;
                            })
                          ).filter(function(t) {
                            return null != t;
                          })),
                          (this.activeTimers = e),
                          r && (this.programTimersStack = null),
                          [4, Promise.all(i)]
                        );
                      case 1:
                        return (
                          (o = u.sent()),
                          (s = {
                            uploadWaitMs: this.uploadWaitMs,
                            downloadWaitMs: this.downloadWaitMs,
                            kernelMs: g(o),
                            getExtraProfileInfo: function() {
                              return o
                                .map(function(t, e) {
                                  return { name: a[e], ms: t };
                                })
                                .map(function(t) {
                                  return t.name + ": " + t.ms;
                                })
                                .join(", ");
                            },
                            wallMs: null
                          }),
                          (this.uploadWaitMs = 0),
                          (this.downloadWaitMs = 0),
                          [2, s]
                        );
                    }
                  });
                });
              }),
              (t.prototype.memory = function() {
                return { unreliable: !1, numBytesInGPU: this.numBytesInGPU };
              }),
              (t.prototype.startTimer = function() {
                return _e.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION") >
                  0
                  ? this.gpgpu.beginQuery()
                  : { startMs: performance.now(), endMs: null };
              }),
              (t.prototype.endTimer = function(t) {
                return _e.get("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION") >
                  0
                  ? (this.gpgpu.endQuery(), t)
                  : ((t.endMs = performance.now()), t);
              }),
              (t.prototype.getQueryTime = function(t) {
                return u(this, void 0, void 0, function() {
                  var e;
                  return c(this, function(n) {
                    return _e.get(
                      "WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"
                    ) > 0
                      ? [2, this.gpgpu.waitForQueryAndGetTime(t)]
                      : [2, (e = t).endMs - e.startMs];
                  });
                });
              }),
              (t.prototype.disposeData = function(t) {
                if (!this.pendingDisposal.has(t))
                  if (this.pendingRead.has(t)) this.pendingDisposal.add(t);
                  else if (this.texData.has(t)) {
                    var e = this.texData.get(t),
                      n = e.texture,
                      r = e.texShape,
                      i = e.usage,
                      a = e.complexTensors,
                      o = e.isPacked,
                      s = e.slice;
                    if (null != n) {
                      var u = (s && s.origDataId) || t,
                        c = this.dataRefCount.get(u);
                      c > 1
                        ? this.dataRefCount.set(u, c - 1)
                        : (this.dataRefCount.delete(u),
                          this.releaseTexture(t, n, r, i, o),
                          this.texData.delete(t));
                    }
                    null != a && (a.real.dispose(), a.imag.dispose());
                  }
              }),
              (t.prototype.getTexture = function(t) {
                return this.uploadToGPU(t), this.texData.get(t).texture;
              }),
              (t.prototype.getCPUBackend = function() {
                return _e.get("WEBGL_CPU_FORWARD")
                  ? (null == this.cpuBackend &&
                      (this.cpuBackend = _e.findBackend("cpu")),
                    this.cpuBackend)
                  : null;
              }),
              (t.prototype.shouldExecuteOnCPU = function(t, e) {
                var n = this;
                return (
                  void 0 === e && (e = Hc),
                  null != this.getCPUBackend() &&
                    t.every(function(t) {
                      return (
                        null == n.texData.get(t.dataId).texture && t.size < e
                      );
                    })
                );
              }),
              (t.prototype.getGPGPUContext = function() {
                return this.gpgpu;
              }),
              (t.prototype.getCanvas = function() {
                return this.canvas;
              }),
              (t.prototype.complex = function(t, e) {
                var n = this.makeOutputArray(t.shape, "complex64");
                return (
                  (this.texData.get(n.dataId).complexTensors = {
                    real: _e.engine.keep(t.clone()),
                    imag: _e.engine.keep(e.clone())
                  }),
                  n
                );
              }),
              (t.prototype.real = function(t) {
                return this.texData.get(t.dataId).complexTensors.real.clone();
              }),
              (t.prototype.imag = function(t) {
                return this.texData.get(t.dataId).complexTensors.imag.clone();
              }),
              (t.prototype.slice = function(t, e, n) {
                if (this.shouldExecuteOnCPU([t]))
                  return this.cpuBackend.slice(t, e, n);
                var r = this.texData.get(t.dataId).isPacked,
                  i = nn(t.shape, e, n);
                if (r || !i) {
                  var a = new ss(n),
                    o = a.getCustomSetupFunc(e);
                  return this.compileAndRun(a, [t], null, o);
                }
                return this.uploadToGPU(t.dataId), this.shallowSlice(t, e, n);
              }),
              (t.prototype.shallowSlice = function(t, e, n) {
                var r = this.texData.get(t.dataId),
                  i = St.make(n, {}, t.dtype),
                  a = this.texData.get(i.dataId);
                Object.assign(a, r), (a.shape = n), (a.dtype = t.dtype);
                var o = rn(e, t.strides);
                r.slice && (o += r.slice.flatOffset),
                  (a.slice = {
                    flatOffset: o,
                    origDataId: (r.slice && r.slice.origDataId) || t.dataId
                  });
                var s = this.dataRefCount.get(a.slice.origDataId) || 1;
                return this.dataRefCount.set(a.slice.origDataId, s + 1), i;
              }),
              (t.prototype.stridedSlice = function(t, e, n, r, i, a, o, s, u) {
                if (this.shouldExecuteOnCPU([t]))
                  return this.cpuBackend.stridedSlice(
                    t,
                    e,
                    n,
                    r,
                    i,
                    a,
                    o,
                    s,
                    u
                  );
                var c = Ze(t.shape, e, n, r, i, a, o, s, u),
                  l = c[0],
                  f = c[1],
                  h = c[2],
                  p = f.filter(function(t, e) {
                    return -1 === h.indexOf(e);
                  });
                if (
                  p.some(function(t) {
                    return 0 === t;
                  })
                )
                  return _n([], p);
                var d = new ls(l, r, f, h);
                return this.compileAndRun(d, [t]);
              }),
              (t.prototype.reverse = function(t, e) {
                var n = new rs(t.shape, e);
                return this.compileAndRun(n, [t]);
              }),
              (t.prototype.concat = function(t, e) {
                if (this.shouldExecuteOnCPU(t))
                  return this.cpuBackend.concat(t, e);
                if (1 === t.length) return t[0];
                if (t.length > _e.get("WEBGL_MAX_TEXTURES_IN_SHADER")) {
                  var n = Math.floor(t.length / 2),
                    r = this.concat(t.slice(0, n), e),
                    i = this.concat(t.slice(n), e);
                  return this.concat([r, i], e);
                }
                var a = Ve(
                    t.map(function(t) {
                      return t.shape;
                    }),
                    e
                  ),
                  o = t.map(function(t) {
                    return t.as2D(-1, N(t.shape.slice(e)));
                  }),
                  s = new Br(
                    o.map(function(t) {
                      return t.shape;
                    })
                  );
                return this.compileAndRun(s, o).reshape(a);
              }),
              (t.prototype.neg = function(t) {
                var e = new Os(t.shape, Ds);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.batchMatMul = function(t, e, n, r) {
                var i = n ? t.shape[2] : t.shape[1],
                  a = r ? e.shape[1] : e.shape[2],
                  o = n ? t.shape[1] : t.shape[2],
                  s = t.shape[0];
                if ((1 === i || 1 === a) && o > Kc) {
                  n && (t = t.transpose([0, 2, 1])),
                    r && (e = e.transpose([0, 2, 1]));
                  var u = 1 === a ? t : t.as3D(s, o, 1),
                    c = 1 === a ? 2 : 1,
                    l = 1 === a ? e.as3D(s, 1, o) : e;
                  return this.multiply(u, l).sum(c, !0);
                }
                var f = Mt(t.dtype, e.dtype);
                if (1 === s) {
                  var h = t.as2D(t.shape[1], t.shape[2]),
                    p = e.as2D(e.shape[1], e.shape[2]),
                    d = new Mo(h.shape, p.shape, [i, a], n, r),
                    m = this.makePackedTensor(d.outputShape, f),
                    v = this.compileAndRun(d, [h, p], m);
                  return v.reshape([1, v.shape[0], v.shape[1]]);
                }
                return (
                  (d = new Do(t.shape, e.shape, n, r)),
                  (m = this.makeOutputArray(d.outputShape, f)),
                  this.compileAndRun(d, [t, e], m)
                );
              }),
              (t.prototype.fusedBatchMatMul = function(t, e, n, r, i, a) {
                var o = n ? t.shape[2] : t.shape[1],
                  s = r ? e.shape[1] : e.shape[2],
                  u = t.shape[0],
                  c = Mt(t.dtype, e.dtype);
                if (1 === u) {
                  var l = t.as2D(t.shape[1], t.shape[2]),
                    f = e.as2D(e.shape[1], e.shape[2]),
                    h = new Mo(
                      l.shape,
                      f.shape,
                      [o, s],
                      n,
                      r,
                      !!i,
                      a ? qc(a, !0) : null
                    ),
                    p = this.makePackedTensor(h.outputShape, c),
                    d = [l, f];
                  i && d.push(i);
                  var m = this.compileAndRun(h, d, p);
                  return m.reshape([1, m.shape[0], m.shape[1]]);
                }
                return (
                  (h = new Do(t.shape, e.shape, n, r, !!i, a ? qc(a) : null)),
                  (d = [t, e]),
                  i && d.push(i),
                  (p = this.makeOutputArray(h.outputShape, c)),
                  this.compileAndRun(h, d, p)
                );
              }),
              (t.prototype.multiply = function(t, e) {
                if ("complex64" === t.dtype) {
                  var n = this.texData.get(t.dataId),
                    r = this.texData.get(e.dataId),
                    i = new sr(or.REAL, t.shape, e.shape),
                    a = new sr(or.IMAG, t.shape, e.shape),
                    o = [
                      this.makeComplexComponentTensorHandle(
                        t,
                        n.complexTensors.real
                      ),
                      this.makeComplexComponentTensorHandle(
                        t,
                        n.complexTensors.imag
                      ),
                      this.makeComplexComponentTensorHandle(
                        e,
                        r.complexTensors.real
                      ),
                      this.makeComplexComponentTensorHandle(
                        e,
                        r.complexTensors.imag
                      )
                    ],
                    s = this.compileAndRun(i, o),
                    u = this.compileAndRun(a, o),
                    c = this.complex(s, u);
                  return s.dispose(), u.dispose(), c;
                }
                if (this.shouldExecuteOnCPU([t, e]))
                  return this.cpuBackend.multiply(t, e);
                if (_e.get("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(t, e, fr, t.dtype);
                var l = new kr(fr, t.shape, e.shape),
                  f = this.makeOutputArray(l.outputShape, t.dtype);
                return this.compileAndRun(l, [t, e], f);
              }),
              (t.prototype.batchNormalization = function(t, e, n, r, i, a) {
                var o = [t, e, n],
                  s = null;
                null != a && ((s = a.shape), o.push(a));
                var u = null;
                if (
                  (null != i && ((u = i.shape), o.push(i)),
                  _e.get("WEBGL_PACK_BATCHNORMALIZATION"))
                ) {
                  var c = new ar(t.shape, e.shape, n.shape, s, u, r);
                  return this.compileAndRun(c, o);
                }
                var l = new ir(t.shape, e.shape, n.shape, s, u, r);
                return this.compileAndRun(l, o);
              }),
              (t.prototype.localResponseNormalization4D = function(
                t,
                e,
                n,
                r,
                i
              ) {
                var a = new Po(t.shape, e, n, r, i);
                return this.compileAndRun(a, [t]);
              }),
              (t.prototype.LRNGrad = function(t, e, n, r, i, a, o) {
                var s = new To(e.shape, r, i, a, o);
                return this.compileAndRun(s, [e, n, t]);
              }),
              (t.prototype.tile = function(t, e) {
                var n = new ds(t.shape, e);
                return this.compileAndRun(n, [t]);
              }),
              (t.prototype.pad = function(t, e, n) {
                var r = _e.get("WEBGL_PACK_ARRAY_OPERATIONS")
                  ? new Ko(t.shape, e, n)
                  : new Ho(t.shape, e, n);
                return this.compileAndRun(r, [t]);
              }),
              (t.prototype.transpose = function(t, e) {
                var n = new vs(t.shape, e);
                return this.compileAndRun(n, [t]);
              }),
              (t.prototype.gather = function(t, e, n) {
                var r = new ta(t.shape, e.size, n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.batchToSpaceND = function(t, e, n) {
                _(
                  t.rank <= 4,
                  "batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"
                );
                var r = e.reduce(function(t, e) {
                    return t * e;
                  }),
                  i = Ce(t.shape, e, r),
                  a = Ae(i.length, e.length),
                  o = ke(t.shape, e, r),
                  s = Pe(n, e.length),
                  u = Te(o, n, e.length);
                return t
                  .reshape(i)
                  .transpose(a)
                  .reshape(o)
                  .slice(s, u);
              }),
              (t.prototype.spaceToBatchND = function(t, e, n) {
                _(
                  t.rank <= 4,
                  "spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"
                );
                var r = e.reduce(function(t, e) {
                    return t * e;
                  }),
                  i = [[0, 0]];
                i.push.apply(i, n);
                for (var a = 1 + e.length; a < t.shape.length; ++a)
                  i.push([0, 0]);
                var o = t.pad(i),
                  s = Ce(o.shape, e, r, !1),
                  u = Ae(s.length, e.length, !1),
                  c = ke(o.shape, e, r, !1);
                return o
                  .reshape(s)
                  .transpose(u)
                  .reshape(c);
              }),
              (t.prototype.reduce = function(t, e, n) {
                var r = t.shape[0],
                  i = t.shape[1],
                  a = qe(i),
                  o = new Xo({ windowSize: a, inSize: i, batchSize: r }, e),
                  s = o.outputShape,
                  u = s[0],
                  c = s[1],
                  l = this.makeOutputArray([u, c], n);
                return (
                  this.compileAndRun(o, [t], l),
                  1 === l.shape[1] ? l : this.reduce(l, e, n)
                );
              }),
              (t.prototype.argReduce = function(t, e, n) {
                void 0 === n && (n = null);
                var r = t.shape[0],
                  i = t.shape[1];
                null != n && ((r = n.shape[0]), (i = n.shape[1]));
                var a = qe(i),
                  o = new Zn(
                    { windowSize: a, inSize: i, batchSize: r },
                    e,
                    null == n
                  ),
                  s = o.outputShape,
                  u = s[0],
                  c = s[1],
                  l = this.makeOutputArray([u, c], "int32"),
                  f = [t];
                return (
                  null != n && f.push(n),
                  this.compileAndRun(o, f, l),
                  1 === l.shape[1] ? l : this.argReduce(t, e, l)
                );
              }),
              (t.prototype.sum = function(t, e) {
                Le("sum", e, t.rank);
                var n = Me(t.shape, e),
                  r = n[0],
                  i = N(n[1]),
                  a = t.as2D(-1, i),
                  o = jt(t.dtype);
                return this.reduce(a, "sum", o).reshape(r);
              }),
              (t.prototype.prod = function(t, e) {
                var n = Me(t.shape, e),
                  r = n[0],
                  i = N(n[1]),
                  a = t.as2D(-1, i),
                  o = jt(t.dtype);
                return this.reduce(a, "prod", o).reshape(r);
              }),
              (t.prototype.unsortedSegmentSum = function(t, e, n) {
                var r = 0,
                  i = Be([r], t.rank),
                  a = t;
                null != i && ((a = t.transpose(i)), (r = ze(1, t.rank)[0]));
                var o = Je(a.shape, r, n),
                  s = N([a.shape[r]]),
                  u = a.as2D(-1, s),
                  c = jt(t.dtype),
                  l = this.segOpCompute(
                    u,
                    "unsortedSegmentSum",
                    e,
                    c,
                    n
                  ).reshape(o);
                return null != i && (l = l.transpose(Fe(i))), l;
              }),
              (t.prototype.segOpCompute = function(t, e, n, r, i) {
                var a = t.shape[0],
                  o = t.shape[1],
                  s = Xe(o, i),
                  u = new as(
                    { windowSize: s, inSize: o, batchSize: a, numSegments: i },
                    e
                  ),
                  c = u.outputShape,
                  l = c[0],
                  f = c[1],
                  h = this.makeOutputArray([l, f], r);
                return (
                  this.compileAndRun(u, [t, n], h),
                  h.shape[1] === i
                    ? h
                    : ((n = Mn(0, i).tile([o / s])),
                      this.segOpCompute(h, e, n, r, i))
                );
              }),
              (t.prototype.argMin = function(t, e) {
                var n = [e];
                Le("argMin", n, t.rank);
                var r = Me(t.shape, n),
                  i = r[0],
                  a = N(r[1]),
                  o = t.as2D(-1, a);
                return this.argReduce(o, "min").reshape(i);
              }),
              (t.prototype.argMax = function(t, e) {
                var n = [e];
                Le("argMax", n, t.rank);
                var r = Me(t.shape, n),
                  i = r[0],
                  a = N(r[1]),
                  o = t.as2D(-1, a);
                return this.argReduce(o, "max").reshape(i);
              }),
              (t.prototype.cumsum = function(t, e, n, r) {
                if (e !== t.rank - 1)
                  throw new Error(
                    "WebGL cumsum shader expects an inner-most axis=" +
                      (t.rank - 1) +
                      " but got axis=" +
                      e
                  );
                var i = new Hi(t.shape, n, r);
                return this.compileAndRun(i, [t]);
              }),
              (t.prototype.equal = function(t, e) {
                var n = new kr(vr, t.shape, e.shape),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.notEqual = function(t, e) {
                var n = new kr(yr, t.shape, e.shape),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.less = function(t, e) {
                if (this.shouldExecuteOnCPU([t, e]))
                  return this.cpuBackend.less(t, e);
                var n = new kr(gr, t.shape, e.shape),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.lessEqual = function(t, e) {
                var n = new kr(br, t.shape, e.shape),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.greater = function(t, e) {
                if (this.shouldExecuteOnCPU([t, e]))
                  return this.cpuBackend.greater(t, e);
                var n = new kr(wr, t.shape, e.shape),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.greaterEqual = function(t, e) {
                var n = new kr(_r, t.shape, e.shape),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.logicalNot = function(t) {
                var e = new Os(t.shape, uu);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.logicalAnd = function(t, e) {
                var n = new kr(xr, t.shape, e.shape),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.logicalOr = function(t, e) {
                var n = new kr(Er, t.shape, e.shape),
                  r = this.makeOutputArray(n.outputShape, "bool");
                return this.compileAndRun(n, [t, e], r);
              }),
              (t.prototype.select = function(t, e, n) {
                var r = new os(t.rank, e.shape, e.rank),
                  i = this.makeOutputArray(r.outputShape, Mt(e.dtype, n.dtype));
                return this.compileAndRun(r, [t, e, n], i);
              }),
              (t.prototype.where = function(t) {
                Ie(
                  "tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead"
                );
                var e = t.dataSync();
                return $c(t.shape, e);
              }),
              (t.prototype.topk = function(t, e, n) {
                return Qn(t.dataSync(), t.shape, t.dtype, e, n);
              }),
              (t.prototype.min = function(t, e) {
                Le("min", e, t.rank);
                var n = Me(t.shape, e),
                  r = n[0],
                  i = N(n[1]),
                  a = t.as2D(-1, i);
                return this.reduce(a, "min", a.dtype).reshape(r);
              }),
              (t.prototype.minimum = function(t, e) {
                if (this.shouldExecuteOnCPU([t, e]))
                  return this.cpuBackend.minimum(t, e);
                var n = new kr(Nr, t.shape, e.shape);
                return this.compileAndRun(n, [t, e]);
              }),
              (t.prototype.mod = function(t, e) {
                var n = new kr(Or, t.shape, e.shape),
                  r = n.getCustomSetupFunc();
                return this.compileAndRun(n, [t, e], null, r);
              }),
              (t.prototype.max = function(t, e) {
                Le("max", e, t.rank);
                var n = Me(t.shape, e),
                  r = n[0],
                  i = N(n[1]),
                  a = t.as2D(-1, i);
                return this.reduce(a, "max", a.dtype).reshape(r);
              }),
              (t.prototype.maximum = function(t, e) {
                if (this.shouldExecuteOnCPU([t, e]))
                  return this.cpuBackend.maximum(t, e);
                var n = new kr(Sr, t.shape, e.shape);
                return this.compileAndRun(n, [t, e]);
              }),
              (t.prototype.all = function(t, e) {
                Le("all", e, t.rank);
                var n = Me(t.shape, e),
                  r = n[0],
                  i = N(n[1]),
                  a = t.as2D(-1, i);
                return this.reduce(a, "all", a.dtype).reshape(r);
              }),
              (t.prototype.any = function(t, e) {
                Le("any", e, t.rank);
                var n = Me(t.shape, e),
                  r = n[0],
                  i = N(n[1]),
                  a = t.as2D(-1, i);
                return this.reduce(a, "any", a.dtype).reshape(r);
              }),
              (t.prototype.squaredDifference = function(t, e) {
                var n = new kr(mr, t.shape, e.shape);
                return this.compileAndRun(n, [t, e]);
              }),
              (t.prototype.realDivide = function(t, e) {
                var n = hr;
                if (_e.get("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(t, e, Pr, "float32");
                var r = new kr(n, t.shape, e.shape),
                  i = this.makeOutputArray(r.outputShape, "float32");
                return this.compileAndRun(r, [t, e], i);
              }),
              (t.prototype.floorDiv = function(t, e) {
                var n = pr;
                if (_e.get("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(t, e, Tr, "int32");
                var r = new kr(n, t.shape, e.shape),
                  i = this.makeOutputArray(r.outputShape, "int32");
                return this.compileAndRun(r, [t, e], i);
              }),
              (t.prototype.add = function(t, e) {
                if ("complex64" === t.dtype && "complex64" === e.dtype)
                  return this.complexSeparableBinaryOp(t, e, cr);
                var n = Mt(t.dtype, e.dtype);
                if (_e.get("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(t, e, cr, n);
                var r = new kr(cr, t.shape, e.shape),
                  i = this.makeOutputArray(r.outputShape, n);
                return this.compileAndRun(r, [t, e], i);
              }),
              (t.prototype.packedBinaryOp = function(t, e, n, r) {
                var i = new Dr(n, t.shape, e.shape),
                  a = this.makePackedTensor(i.outputShape, r);
                return this.compileAndRun(i, [t, e], a);
              }),
              (t.prototype.complexSeparableBinaryOp = function(t, e, n) {
                var r = this,
                  i = this.texData.get(t.dataId),
                  a = this.texData.get(e.dataId),
                  o = [
                    [i.complexTensors.real, a.complexTensors.real],
                    [i.complexTensors.imag, a.complexTensors.imag]
                  ].map(function(i) {
                    var a = i[0],
                      o = i[1],
                      s = new kr(n, t.shape, e.shape),
                      u = r.makeOutputArray(
                        s.outputShape,
                        Mt(a.dtype, o.dtype)
                      ),
                      c = r.makeComplexComponentTensorHandle(t, a),
                      l = r.makeComplexComponentTensorHandle(e, o);
                    return r.compileAndRun(s, [c, l], u);
                  }),
                  s = o[0],
                  u = o[1],
                  c = this.complex(s, u);
                return s.dispose(), u.dispose(), c;
              }),
              (t.prototype.makeComplexComponentTensorHandle = function(t, e) {
                return { dataId: e.dataId, dtype: e.dtype, shape: t.shape };
              }),
              (t.prototype.addN = function(t) {
                for (var e = t[0], n = 1; n < t.length; n++)
                  e = this.add(e, t[n]);
                return e;
              }),
              (t.prototype.subtract = function(t, e) {
                if ("complex64" === t.dtype && "complex64" === e.dtype)
                  return this.complexSeparableBinaryOp(t, e, lr);
                if (this.shouldExecuteOnCPU([t, e]))
                  return this.cpuBackend.subtract(t, e);
                var n = Mt(t.dtype, e.dtype);
                if (_e.get("WEBGL_PACK_BINARY_OPERATIONS"))
                  return this.packedBinaryOp(t, e, lr, t.dtype);
                var r = new kr(lr, t.shape, e.shape),
                  i = this.makeOutputArray(r.outputShape, n);
                return this.compileAndRun(r, [t, e], i);
              }),
              (t.prototype.pow = function(t, e) {
                var n = _e.get("WEBGL_PACK_BINARY_OPERATIONS"),
                  r = n
                    ? new Dr(Rr, t.shape, e.shape)
                    : new kr(dr, t.shape, e.shape),
                  i = Mt(t.dtype, e.dtype),
                  a = n
                    ? this.makePackedTensor(r.outputShape, i)
                    : this.makeOutputArray(r.outputShape, i),
                  o = r.getCustomSetupFunc();
                return this.compileAndRun(r, [t, e], a, o);
              }),
              (t.prototype.ceil = function(t) {
                var e = new Os(t.shape, Ms);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.floor = function(t) {
                var e = new Os(t.shape, js);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.sign = function(t) {
                var e = new Os(t.shape, Ls);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.round = function(t) {
                var e = new Os(t.shape, Bs);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.exp = function(t) {
                var e;
                return (
                  (e = _e.get("WEBGL_PACK")
                    ? new du(t.shape, Fs)
                    : new Os(t.shape, Fs)),
                  this.compileAndRun(e, [t])
                );
              }),
              (t.prototype.expm1 = function(t) {
                var e = new Os(t.shape, zs);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.log = function(t) {
                var e,
                  n = (e = _e.get("WEBGL_PACK")
                    ? new du(t.shape, hu)
                    : new Os(t.shape, Us)).getCustomSetupFunc();
                return this.compileAndRun(e, [t], null, n);
              }),
              (t.prototype.log1p = function(t) {
                var e = new Os(t.shape, Vs);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.sqrt = function(t) {
                var e = new Os(t.shape, Ws);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.rsqrt = function(t) {
                var e = new Os(t.shape, $s);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.square = function(t) {
                var e = new Os(t.shape, ou);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.reciprocal = function(t) {
                var e = new Os(t.shape, su);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.relu = function(t) {
                var e;
                return (
                  (e = _e.get("WEBGL_PACK")
                    ? new du(t.shape, pu)
                    : new Os(t.shape, ks)),
                  this.compileAndRun(e, [t])
                );
              }),
              (t.prototype.prelu = function(t, e) {
                var n = new kr(Ar, t.shape, e.shape);
                return this.compileAndRun(n, [t, e]);
              }),
              (t.prototype.elu = function(t) {
                var e = new Os(t.shape, Ps);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.eluDer = function(t, e) {
                var n = new kr(Cr, t.shape, e.shape);
                return this.compileAndRun(n, [t, e]);
              }),
              (t.prototype.selu = function(t) {
                var e = new Os(t.shape, Ts);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.int = function(t) {
                var e = new Os(t.shape, cu),
                  n = this.makeOutputArray(e.outputShape, "int32");
                return this.compileAndRun(e, [t], n);
              }),
              (t.prototype.clip = function(t, e, n) {
                var r,
                  i = (r = _e.get("WEBGL_PACK_CLIP")
                    ? new jr(t.shape)
                    : new Mr(t.shape)).getCustomSetupFunc(e, n);
                return this.compileAndRun(r, [t], null, i);
              }),
              (t.prototype.abs = function(t) {
                var e = new Os(t.shape, As);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.complexAbs = function(t) {
                var e = this.texData.get(t.dataId),
                  n = new Lr(t.shape),
                  r = [
                    this.makeComplexComponentTensorHandle(
                      t,
                      e.complexTensors.real
                    ),
                    this.makeComplexComponentTensorHandle(
                      t,
                      e.complexTensors.imag
                    )
                  ];
                return this.compileAndRun(n, r);
              }),
              (t.prototype.sigmoid = function(t) {
                var e = new Os(t.shape, qs);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.softplus = function(t) {
                var e = new Os(t.shape, Hs);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.sin = function(t) {
                var e = new Os(t.shape, Ks);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.cos = function(t) {
                var e = new Os(t.shape, Gs);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.tan = function(t) {
                var e = new Os(t.shape, Xs);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.asin = function(t) {
                var e = new Os(t.shape, Js);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.acos = function(t) {
                var e = new Os(t.shape, Ys);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.atan = function(t) {
                var e = new Os(t.shape, Qs);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.atan2 = function(t, e) {
                var n = new kr(Ir, t.shape, e.shape);
                return this.compileAndRun(n, [t, e]);
              }),
              (t.prototype.sinh = function(t) {
                var e = new Os(t.shape, Zs);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.cosh = function(t) {
                var e = new Os(t.shape, tu);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.tanh = function(t) {
                var e = new Os(t.shape, eu);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.asinh = function(t) {
                var e = new Os(t.shape, nu);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.acosh = function(t) {
                var e = new Os(t.shape, ru),
                  n = e.getCustomSetupFunc();
                return this.compileAndRun(e, [t], null, n);
              }),
              (t.prototype.atanh = function(t) {
                var e = new Os(t.shape, iu),
                  n = e.getCustomSetupFunc();
                return this.compileAndRun(e, [t], null, n);
              }),
              (t.prototype.erf = function(t) {
                var e = new Os(t.shape, au);
                return this.compileAndRun(e, [t]);
              }),
              (t.prototype.step = function(t, e) {
                var n = new Os(t.shape, Rs(e));
                return this.compileAndRun(n, [t]);
              }),
              (t.prototype.conv2dWithIm2Row = function(t, e, n) {
                var r = n.filterWidth,
                  i = n.filterHeight,
                  a = n.inChannels,
                  o = n.outWidth,
                  s = n.outHeight,
                  u = r * i * a,
                  c = s * o,
                  l = [u, c],
                  f = t.squeeze([0]),
                  h = e.reshape([u, -1]),
                  p = new ko(l, f.shape, n),
                  d = this.compileAndRun(p, [f]),
                  m = new Mo(d.shape, h.shape, [c, n.outChannels], !0, !1);
                return this.compileAndRun(m, [d, h]).reshape([
                  1,
                  s,
                  o,
                  n.outChannels
                ]);
              }),
              (t.prototype.conv2d = function(t, e, n) {
                if (_e.get("WEBGL_CONV_IM2COL") && 1 === t.shape[0])
                  return this.conv2dWithIm2Row(t, e, n);
                var r = new qr(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.conv2dDerInput = function(t, e, n) {
                var r = new zr(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.conv2dDerFilter = function(t, e, n) {
                var r = new Fr(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.depthwiseConv2D = function(t, e, n) {
                var r;
                return _e.get("WEBGL_PACK_DEPTHWISECONV") &&
                  n.strideWidth <= 2 &&
                  n.outChannels / n.inChannels == 1
                  ? ((r = new Gr(n)),
                    this.compileAndRun(
                      r,
                      [t, e],
                      this.makePackedTensor(n.outShape, t.dtype)
                    ))
                  : ((r = new Kr(n)), this.compileAndRun(r, [t, e]));
              }),
              (t.prototype.depthwiseConv2DDerInput = function(t, e, n) {
                var r = new $r(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.depthwiseConv2DDerFilter = function(t, e, n) {
                var r = new Wr(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.conv3d = function(t, e, n) {
                var r = new Hr(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.conv3dDerInput = function(t, e, n) {
                var r = new Vr(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.conv3dDerFilter = function(t, e, n) {
                var r = new Ur(n);
                return this.compileAndRun(r, [t, e]);
              }),
              (t.prototype.maxPool = function(t, e) {
                var n = new Go(e, "max", !1),
                  r = this.makeOutputArray(n.outputShape, t.dtype);
                return this.compileAndRun(n, [t], r);
              }),
              (t.prototype.avgPool = function(t, e) {
                var n = new Go(e, "avg", !1),
                  r = this.makeOutputArray(n.outputShape, "float32");
                return this.compileAndRun(n, [t], r);
              }),
              (t.prototype.maxPoolBackprop = function(t, e, n, r) {
                var i = new Go(r, "max", !0),
                  a = this.compileAndRun(i, [e]),
                  o = new Ro(r),
                  s = this.makeOutputArray(o.outputShape, e.dtype),
                  u = this.compileAndRun(o, [t, a], s);
                return a.dispose(), u;
              }),
              (t.prototype.avgPoolBackprop = function(t, e, n) {
                var r = new tr(n),
                  i = this.makeOutputArray(r.outputShape, e.dtype);
                return this.compileAndRun(r, [t], i);
              }),
              (t.prototype.cast = function(t, e) {
                return Fn(t, e, this);
              }),
              (t.prototype.unstack = function(t, e) {
                for (
                  var n = t.shape[e], r = new Array(t.rank - 1), i = 0, a = 0;
                  a < t.rank;
                  a++
                )
                  a !== e && (r[i++] = t.shape[a]);
                var o = new Array(t.rank).fill(0),
                  s = t.shape.slice();
                s[e] = 1;
                var u = new Array(n);
                for (a = 0; a < u.length; a++)
                  (o[e] = a), (u[a] = this.slice(t, o, s).reshape(r));
                return u;
              }),
              (t.prototype.reshape = function(t, e) {
                return this.texData.get(t.dataId).isPacked && !Za(t.shape, e)
                  ? this.packedReshape(t, e)
                  : zn(t, e);
              }),
              (t.prototype.resizeBilinear = function(t, e, n, r) {
                var i = new ts(t.shape, e, n, r);
                return this.compileAndRun(i, [t]);
              }),
              (t.prototype.resizeBilinearBackprop = function(t, e, n) {
                var r = new Zo(t, e, n);
                return this.compileAndRun(r, [t]);
              }),
              (t.prototype.resizeNearestNeighbor = function(t, e, n, r) {
                var i = new ns(t.shape, e, n, r);
                return this.compileAndRun(i, [t]);
              }),
              (t.prototype.resizeNearestNeighborBackprop = function(t, e, n) {
                var r = new es(t, e, n);
                return this.compileAndRun(r, [t]);
              }),
              (t.prototype.multinomial = function(t, e, n, r) {
                var i = e ? t : pn(t),
                  a = i.shape[0],
                  o = i.shape[1],
                  s = new jo(a, o, n),
                  u = this.makeOutputArray(s.outputShape, "int32"),
                  c = s.getCustomSetupFunc(r);
                return this.compileAndRun(s, [i], u, c);
              }),
              (t.prototype.oneHot = function(t, e, n, r) {
                var i = new Lo(t.size, e, n, r);
                return this.compileAndRun(i, [t]);
              }),
              (t.prototype.nonMaxSuppression = function(t, e, n, r, i) {
                return (
                  Ie(
                    "tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead"
                  ),
                  Xn(t.dataSync(), e.dataSync(), n, r, i)
                );
              }),
              (t.prototype.cropAndResize = function(t, e, n, r, i, a) {
                var o = new Xr(t.shape, e.shape, r, i, a);
                return this.compileAndRun(o, [t, e, n]);
              }),
              (t.prototype.depthToSpace = function(t, e, n) {
                _(
                  e > 1,
                  "blockSize should be > 1 for depthToSpace, but was: " + e
                );
                var r = t.shape[0],
                  i = ("NHWC" === n ? t.shape[1] : t.shape[2]) * e,
                  a = ("NHWC" === n ? t.shape[2] : t.shape[3]) * e,
                  o = ("NHWC" === n ? t.shape[3] : t.shape[1]) / (e * e),
                  s = new Xi("NHWC" === n ? [r, i, a, o] : [r, o, i, a], e, n);
                return this.compileAndRun(s, [t]);
              }),
              (t.prototype.split = function(t, e, n) {
                return Yn(t, e, n);
              }),
              (t.prototype.scatterND = function(t, e, n) {
                var r = Ge(e, t, n),
                  i = r.sliceRank,
                  a = r.numUpdates,
                  o = r.sliceSize,
                  s = r.strides,
                  u = r.outputSize,
                  c = [u / o, o],
                  l = t.reshape([a, i]),
                  f = e.reshape([a, o]);
                if (0 === u) return zn(_n([]), n);
                var h = xn(0),
                  p = new is(a, i, l.rank, f.rank, s, c);
                return this.compileAndRun(p, [f, l, h]).reshape(n);
              }),
              (t.prototype.sparseToDense = function(t, e, n, r) {
                var i = Ge(e, t, n),
                  a = i.sliceRank,
                  o = i.numUpdates,
                  s = i.strides,
                  u = i.outputSize,
                  c = new is(o, a, t.rank, e.rank, s, [u, 1], !1);
                return this.compileAndRun(c, [e, t, r]).reshape(n);
              }),
              (t.prototype.fft = function(t) {
                return this.fftImpl(t, !1);
              }),
              (t.prototype.ifft = function(t) {
                return this.fftImpl(t, !0);
              }),
              (t.prototype.fftImpl = function(t, e) {
                var n = this.texData.get(t.dataId),
                  r = new Qi(Yi.REAL, t.shape, e),
                  i = new Qi(Yi.IMAG, t.shape, e),
                  a = [
                    this.makeComplexComponentTensorHandle(
                      t,
                      n.complexTensors.real
                    ),
                    this.makeComplexComponentTensorHandle(
                      t,
                      n.complexTensors.imag
                    )
                  ],
                  o = this.compileAndRun(r, a),
                  s = this.compileAndRun(i, a),
                  u = this.complex(o, s).as2D(t.shape[0], t.shape[1]);
                return o.dispose(), s.dispose(), u;
              }),
              (t.prototype.gatherND = function(t, e) {
                var n = e.shape,
                  r = n[n.length - 1],
                  i = We(t, e),
                  a = i[0],
                  o = i[1],
                  s = i[2],
                  u = i[3],
                  c = e.reshape([o, r]),
                  l = t.reshape([t.size / s, s]),
                  f = new ia(r, u, [o, s]);
                return this.compileAndRun(f, [l, c]).reshape(a);
              }),
              (t.prototype.makeOutputArray = function(t, e) {
                return St.make(t, {}, e);
              }),
              (t.prototype.makePackedTensor = function(t, e) {
                var n = St.make(t, {}, e);
                return (this.texData.get(n.dataId).isPacked = !0), n;
              }),
              (t.prototype.unpackTensor = function(t) {
                var e = new mu(t.shape);
                return this.compileAndRun(
                  e,
                  [t],
                  St.make(e.outputShape, {}, t.dtype)
                );
              }),
              (t.prototype.packedReshape = function(t, e) {
                var n = t.reshape([Xa(t.shape)].concat(Ja(t.shape))),
                  r = [Xa(e)].concat(Ja(e)),
                  i = new Jo(r, n.shape);
                return this.compileAndRun(i, [n]).reshape(e);
              }),
              (t.prototype.compileAndRun = function(t, e, n, r, i) {
                var a = this;
                if (
                  (void 0 === i && (i = !0),
                  null == n &&
                    (n = t.usesPackedTextures
                      ? this.makePackedTensor(t.outputShape, e[0].dtype)
                      : this.makeOutputArray(t.outputShape, e[0].dtype)),
                  0 === n.size)
                )
                  return (this.texData.get(n.dataId).values = L(n.dtype, 0)), n;
                var o = e.map(function(e) {
                  if ("complex64" === e.dtype)
                    throw new Error(
                      "GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts."
                    );
                  var n = a.texData.get(e.dataId);
                  if (null == n.texture) {
                    if (
                      !t.usesPackedTextures &&
                      N(e.shape) <= _e.get("WEBGL_SIZE_UPLOAD_UNIFORM")
                    )
                      return {
                        shape: e.shape,
                        texData: null,
                        isUniform: !0,
                        uniformValues: a.readSync(e.dataId)
                      };
                    t.usesPackedTextures &&
                      ((n.isPacked = !0), (n.shape = e.shape));
                  } else if (!!n.isPacked != !!t.usesPackedTextures) {
                    var r = void 0,
                      i = void 0;
                    n.isPacked
                      ? ((r = new mu(e.shape)),
                        (i = a.compileAndRun(
                          r,
                          [e],
                          St.make(r.outputShape, {}, e.dtype)
                        )))
                      : ((r = new Uo(e.shape)),
                        (i = a.compileAndRun(
                          r,
                          [e],
                          a.makePackedTensor(e.shape, e.dtype)
                        ))),
                      (n = a.texData.get(i.dataId)),
                      (e = i);
                  } else if (n.isPacked && !Za(n.shape, e.shape)) {
                    a.delayedStorage = !1;
                    var o = e.dataSync();
                    (a.delayedStorage = !0),
                      (e = St.make(e.shape, { values: o }, e.dtype)),
                      ((n = a.texData.get(e.dataId)).isPacked = !0);
                  }
                  return (
                    a.uploadToGPU(e.dataId),
                    { shape: e.shape, texData: n, isUniform: !1 }
                  );
                });
                this.uploadToGPU(n.dataId);
                var s,
                  u = {
                    shape: n.shape,
                    texData: this.texData.get(n.dataId),
                    isUniform: !1
                  },
                  c = Ao(t, o, u),
                  l = this.getAndSaveBinary(c, function() {
                    return Oo(a.gpgpu, t, o, u);
                  }),
                  f = null != this.activeTimers;
                f && (s = this.startTimer()), Co(l, o, u, r);
                var h = 1024 * _e.get("WEBGL_NUM_MB_BEFORE_PAGING");
                if (i && this.numBytesInGPU > h)
                  for (
                    var p = this.numBytesInGPU - h;
                    p > 0 && this.lruDataGPU.length > 0;

                  ) {
                    var d = this.lruDataGPU.shift(),
                      m = this.texData.get(d),
                      v = m.shape,
                      y = m.dtype;
                    (p -= this.computeBytes(v, y)), this.read(d);
                  }
                return (
                  f &&
                    ((s = this.endTimer(s)),
                    this.activeTimers.push({
                      name: t.constructor.name,
                      query: this.getQueryTime(s)
                    })),
                  _e.get("WEBGL_LAZILY_UNPACK") ||
                  !this.texData.get(n.dataId).isPacked ||
                  t.isPackShader
                    ? n
                    : this.unpackTensor(n)
                );
              }),
              (t.prototype.getAndSaveBinary = function(t, e) {
                return (
                  t in this.binaryCache || (this.binaryCache[t] = e()),
                  this.binaryCache[t]
                );
              }),
              (t.prototype.getTextureManager = function() {
                return this.textureManager;
              }),
              (t.prototype.dispose = function() {
                if (!this.disposed) {
                  for (var t in this.binaryCache)
                    this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram);
                  this.textureManager.dispose(),
                    this.canvas.remove(),
                    null != this.fromPixels2DContext &&
                      this.fromPixels2DContext.canvas.remove(),
                    this.gpgpuCreatedLocally && this.gpgpu.dispose(),
                    (this.disposed = !0);
                }
              }),
              (t.prototype.floatPrecision = function() {
                var t = this;
                return Se(function() {
                  var e = _e.get("DEBUG");
                  _e.set("DEBUG", !1);
                  var n = t.abs(xn(1e-8)).dataSync()[0];
                  return _e.set("DEBUG", e), n > 0 ? 32 : 16;
                });
              }),
              (t.prototype.uploadToGPU = function(t) {
                var e,
                  n = this.texData.get(t),
                  r = n.shape,
                  i = n.values,
                  a = n.texture,
                  o = n.usage,
                  s = n.isPacked;
                if (null == a) {
                  var u,
                    c = null != this.activeTimers;
                  c && (u = performance.now());
                  var l = Ya(r, s);
                  n.texShape = l;
                  var f = this.acquireTexture(t, l, o, s);
                  if (((n.texture = f), null != i)) {
                    if (s) {
                      var h = Xa(r),
                        p = 1,
                        d = 1;
                      r.length && ((p = (e = Ja(r))[0]), (d = e[1])),
                        this.gpgpu.uploadMatrixToPackedTexture(
                          f,
                          h,
                          p,
                          d,
                          l[0],
                          l[1],
                          Jc(i)
                        );
                    } else
                      this.gpgpu.uploadMatrixToTexture(f, l[0], l[1], Jc(i));
                    (n.values = null),
                      c && (this.uploadWaitMs += performance.now() - u);
                  }
                } else
                  _e.get("WEBGL_NUM_MB_BEFORE_PAGING") <
                    Number.POSITIVE_INFINITY &&
                    this.lruDataGPU.indexOf(t) >= 0 &&
                    (this.lruDataGPU.splice(this.lruDataGPU.indexOf(t), 1),
                    this.lruDataGPU.push(t));
              }),
              (t.prototype.convertAndCacheOnCPU = function(t, e) {
                var n = this.delayedStorage,
                  r = this.texData.get(t),
                  i = r.texture,
                  a = r.texShape,
                  o = r.dtype,
                  s = r.usage,
                  u = r.isPacked;
                return (
                  n &&
                    null != i &&
                    (this.releaseTexture(t, i, a, s, u),
                    (r.texture = null),
                    (r.texShape = null),
                    (r.isPacked = !1)),
                  (r.usage = na.UPLOAD),
                  null != e && (r.values = Xc(e, o)),
                  r.values
                );
              }),
              (t.prototype.releaseTexture = function(t, e, n, r, i) {
                var a = this.texData.get(t),
                  o = a.shape,
                  s = a.dtype;
                if (
                  _e.get("WEBGL_NUM_MB_BEFORE_PAGING") <
                  Number.POSITIVE_INFINITY
                ) {
                  var u = this.lruDataGPU.indexOf(t);
                  u >= 0 && this.lruDataGPU.splice(u, 1);
                }
                (this.numBytesInGPU -= this.computeBytes(o, s)),
                  this.textureManager.releaseTexture(e, n, r, i);
              }),
              (t.prototype.acquireTexture = function(t, e, n, r) {
                var i = this.texData.get(t),
                  a = i.shape,
                  o = i.dtype;
                return (
                  _e.get("WEBGL_NUM_MB_BEFORE_PAGING") <
                    Number.POSITIVE_INFINITY && this.lruDataGPU.push(t),
                  (this.numBytesInGPU += this.computeBytes(a, o)),
                  this.textureManager.acquireTexture(e, n, r)
                );
              }),
              (t.prototype.computeBytes = function(t, e) {
                return N(t) * W(e);
              }),
              t
            );
          })();
        function Xc(t, e) {
          if ("float32" === e || "complex64" === e) return t;
          if ("int32" === e || "bool" === e) {
            for (
              var n =
                  "int32" === e
                    ? new Int32Array(t.length)
                    : new Uint8Array(t.length),
                r = 0;
              r < n.length;
              ++r
            )
              n[r] = Math.round(t[r]);
            return n;
          }
          throw new Error("Unknown dtype " + e);
        }
        function Jc(t) {
          return t instanceof Float32Array ? t : new Float32Array(t);
        }
        function Yc(t) {
          var e = un(t, "x", "neg");
          return _e.engine.runKernel(
            function(t) {
              return t.neg(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.neg();
                }
              };
            }
          );
        }
        function Qc(t) {
          var e = un(t, "x", "ceil");
          return _e.engine.runKernel(
            function(t) {
              return t.ceil(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return Ln(t);
                }
              };
            }
          );
        }
        function Zc(t) {
          var e = un(t, "x", "floor");
          return _e.engine.runKernel(
            function(t) {
              return t.floor(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return Ln(t);
                }
              };
            }
          );
        }
        function tl(t) {
          var e = un(t, "x", "sign");
          return _e.engine.runKernel(
            function(t) {
              return t.sign(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return Ln(t);
                }
              };
            }
          );
        }
        function el(t) {
          var e = un(t, "x", "round");
          return _e.engine.runKernel(
            function(t) {
              return t.round(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return Ln(t);
                }
              };
            }
          );
        }
        function nl(t) {
          var e = un(t, "x", "exp");
          return _e.engine.runKernel(
            function(t, n) {
              return n(t.exp(e));
            },
            { $x: e },
            function(t, e) {
              var n = e[0];
              return {
                $x: function() {
                  return t.mulStrict(n);
                }
              };
            }
          );
        }
        function rl(t) {
          var e = un(t, "x", "expm1");
          return _e.engine.runKernel(
            function(t) {
              return t.expm1(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.mulStrict(e.exp());
                }
              };
            }
          );
        }
        function il(t) {
          var e = un(t, "x", "log");
          return _e.engine.runKernel(
            function(t) {
              return t.log(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.divStrict(e.toFloat());
                }
              };
            }
          );
        }
        function al(t) {
          var e = un(t, "x", "log1p");
          return _e.engine.runKernel(
            function(t) {
              return t.log1p(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.div(e.add(1));
                }
              };
            }
          );
        }
        function ol(t) {
          var e = un(t, "x", "sqrt");
          return _e.engine.runKernel(
            function(t) {
              return t.sqrt(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.div(
                    e
                      .toFloat()
                      .sqrt()
                      .mul(2)
                  );
                }
              };
            }
          );
        }
        function sl(t) {
          var e = un(t, "x", "rsqrt");
          return _e.engine.runKernel(
            function(t) {
              return t.rsqrt(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.div(e.pow(1.5).mul(2)).neg();
                }
              };
            }
          );
        }
        function ul(t) {
          var e = un(t, "x", "square");
          return _e.engine.runKernel(
            function(t) {
              return t.square(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.mul(e.toFloat().mul(2));
                }
              };
            }
          );
        }
        function cl(t) {
          var e = un(t, "x", "reciprocal");
          return _e.engine.runKernel(
            function(t) {
              return t.reciprocal(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.divStrict(e.square().neg());
                }
              };
            }
          );
        }
        function ll(t) {
          var e = un(t, "x", "abs");
          return "complex64" === e.dtype
            ? _e.engine.runKernel(
                function(t) {
                  return t.complexAbs(e);
                },
                { $x: e }
              )
            : _e.engine.runKernel(
                function(t) {
                  return t.abs(e);
                },
                { $x: e },
                function(t) {
                  return {
                    $x: function() {
                      return t.mulStrict(e.toFloat().step(-1));
                    }
                  };
                }
              );
        }
        function fl(t, e, n) {
          var r = un(t, "x", "clipByValue");
          return (
            _(
              e <= n,
              "Error in clip: min (" +
                e +
                ") must be less than or equal to max (" +
                n +
                ")."
            ),
            _e.engine.runKernel(
              function(t) {
                return t.clip(r, e, n);
              },
              { $x: r },
              function(t) {
                return {
                  $x: function() {
                    return t.where(
                      r.greaterEqual(e).logicalAnd(r.lessEqual(n)),
                      Ln(t)
                    );
                  }
                };
              }
            )
          );
        }
        function hl(t) {
          var e = un(t, "x", "sigmoid");
          return _e.engine.runKernel(
            function(t, n) {
              return n(t.sigmoid(e));
            },
            { $x: e },
            function(t, e) {
              var n = e[0];
              return {
                $x: function() {
                  return t.mul(n.mul(xn(1).sub(n)));
                }
              };
            }
          );
        }
        function pl(t) {
          var e = un(t, "x", "logSigmoid");
          return _e.engine.runKernel(
            function(t) {
              return t.softplus(e.neg()).neg();
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.mulStrict(e.neg().sigmoid());
                }
              };
            }
          );
        }
        function dl(t) {
          var e = un(t, "x", "softplus");
          return _e.engine.runKernel(
            function(t) {
              return t.softplus(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.mulStrict(e.sigmoid());
                }
              };
            }
          );
        }
        function ml(t) {
          var e = un(t, "x", "sin");
          return _e.engine.runKernel(
            function(t) {
              return t.sin(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return e
                    .toFloat()
                    .cos()
                    .mulStrict(t);
                }
              };
            }
          );
        }
        function vl(t) {
          var e = un(t, "x", "cos");
          return _e.engine.runKernel(
            function(t) {
              return t.cos(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return e
                    .toFloat()
                    .sin()
                    .neg()
                    .mulStrict(t);
                }
              };
            }
          );
        }
        function yl(t) {
          var e = un(t, "x", "tan");
          return _e.engine.runKernel(
            function(t) {
              return t.tan(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.divStrict(e.cos().square());
                }
              };
            }
          );
        }
        function gl(t) {
          var e = un(t, "x", "asin");
          return _e.engine.runKernel(
            function(t) {
              return t.asin(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.divStrict(
                    xn(1)
                      .sub(e.toFloat().square())
                      .sqrt()
                  );
                }
              };
            }
          );
        }
        function bl(t) {
          var e = un(t, "x", "acos");
          return _e.engine.runKernel(
            function(t) {
              return t.acos(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t
                    .divStrict(
                      xn(1)
                        .sub(e.toFloat().square())
                        .sqrt()
                    )
                    .neg();
                }
              };
            }
          );
        }
        function wl(t) {
          var e = un(t, "x", "atan");
          return _e.engine.runKernel(
            function(t) {
              return t.atan(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.div(
                    e
                      .toFloat()
                      .square()
                      .add(1)
                  );
                }
              };
            }
          );
        }
        function _l(t) {
          var e = un(t, "x", "sinh");
          return _e.engine.runKernel(
            function(t) {
              return t.sinh(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return e
                    .toFloat()
                    .cosh()
                    .mulStrict(t);
                }
              };
            }
          );
        }
        function xl(t) {
          var e = un(t, "x", "cosh");
          return _e.engine.runKernel(
            function(t) {
              return t.cosh(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return e
                    .toFloat()
                    .sinh()
                    .mulStrict(t);
                }
              };
            }
          );
        }
        function El(t) {
          var e = un(t, "x", "tanh");
          return _e.engine.runKernel(
            function(t, n) {
              return n(t.tanh(e));
            },
            { $x: e },
            function(t, e) {
              var n = e[0];
              return {
                $x: function() {
                  return xn(1)
                    .sub(n.square())
                    .mulStrict(t);
                }
              };
            }
          );
        }
        function Sl(t) {
          var e = un(t, "x", "asinh");
          return _e.engine.runKernel(
            function(t) {
              return t.asinh(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.divStrict(
                    xn(1)
                      .add(e.toFloat().square())
                      .sqrt()
                  );
                }
              };
            }
          );
        }
        function Nl(t) {
          var e = un(t, "x", "acosh");
          return _e.engine.runKernel(
            function(t) {
              return t.acosh(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.divStrict(
                    e
                      .toFloat()
                      .square()
                      .sub(1)
                      .sqrt()
                  );
                }
              };
            }
          );
        }
        function Ol(t) {
          var e = un(t, "x", "atanh");
          return _e.engine.runKernel(
            function(t) {
              return t.atanh(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  return t.div(xn(1).sub(e.toFloat().square()));
                }
              };
            }
          );
        }
        function Il(t) {
          var e = un(t, "x", "erf");
          return (
            _(
              "int32" === e.dtype || "float32" === e.dtype,
              "Input dtype must be `int32` or `float32`."
            ),
            "int32" === e.dtype && (e = e.toFloat()),
            _e.engine.runKernel(
              function(t) {
                return t.erf(e);
              },
              { $x: e },
              function(t) {
                return {
                  $x: function() {
                    return t.mul(
                      e
                        .square()
                        .neg()
                        .exp()
                        .mul(2 / Math.sqrt(Math.PI))
                    );
                  }
                };
              }
            )
          );
        }
        function Cl(t, e) {
          void 0 === e && (e = 0);
          var n = un(t, "x", "step");
          return _e.engine.runKernel(
            function(t) {
              return t.step(n, e);
            },
            { $x: n },
            function(t) {
              return {
                $x: function() {
                  return Ln(t);
                }
              };
            }
          );
        }
        _e.get("IS_BROWSER") &&
          _e.registerBackend(
            "webgl",
            function() {
              return new Gc();
            },
            2,
            _t
          );
        var Al = ln({ abs_: ll }),
          kl = ln({ acos_: bl }),
          Pl = ln({ acosh_: Nl }),
          Tl = ln({ asin_: gl }),
          Rl = ln({ asinh_: Sl }),
          Dl = ln({ atan_: wl }),
          Ml = ln({ atanh_: Ol }),
          jl = ln({ ceil_: Qc }),
          Ll = ln({ clipByValue_: fl }),
          Bl = ln({ cos_: vl }),
          Fl = ln({ cosh_: xl }),
          zl = ln({ erf_: Il }),
          Ul = ln({ exp_: nl }),
          Vl = ln({ expm1_: rl }),
          Wl = ln({ floor_: Zc }),
          $l = ln({ log_: il }),
          ql = ln({ log1p_: al }),
          Hl = ln({ logSigmoid_: pl }),
          Kl = ln({ neg_: Yc }),
          Gl = ln({ reciprocal_: cl }),
          Xl = ln({ round_: el }),
          Jl = ln({ rsqrt_: sl }),
          Yl = ln({ sigmoid_: hl }),
          Ql = ln({ sign_: tl }),
          Zl = ln({ sin_: ml }),
          tf = ln({ sinh_: _l }),
          ef = ln({ softplus_: dl }),
          nf = ln({ sqrt_: ol }),
          rf = ln({ square_: ul }),
          af = ln({ step_: Cl }),
          of = ln({ tan_: yl }),
          sf = ln({ tanh_: El });
        function uf(t, e, n, r, i, a) {
          void 0 === a && (a = 0.001);
          var o,
            s,
            u = un(t, "x", "batchNorm"),
            c = un(e, "mean", "batchNorm"),
            l = un(n, "variance", "batchNorm");
          return (
            null != i && (o = un(i, "scale", "batchNorm")),
            null != r && (s = un(r, "offset", "batchNorm")),
            _(
              2 === u.rank,
              "Error in batchNorm3D: x must be rank 3 but got rank " +
                u.rank +
                "."
            ),
            _(
              2 === c.rank || 1 === c.rank,
              "Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank " +
                c.rank +
                "."
            ),
            _(
              2 === l.rank || 1 === l.rank,
              "Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank " +
                l.rank +
                "."
            ),
            null != o &&
              _(
                2 === o.rank || 1 === o.rank,
                "Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank " +
                  o.rank +
                  "."
              ),
            null != s &&
              _(
                2 === s.rank || 1 === s.rank,
                "Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank " +
                  s.rank +
                  "."
              ),
            hf(u, c, l, s, o, a)
          );
        }
        function cf(t, e, n, r, i, a) {
          void 0 === a && (a = 0.001);
          var o,
            s,
            u = un(t, "x", "batchNorm"),
            c = un(e, "mean", "batchNorm"),
            l = un(n, "variance", "batchNorm");
          return (
            null != i && (o = un(i, "scale", "batchNorm")),
            null != r && (s = un(r, "offset", "batchNorm")),
            _(
              3 === u.rank,
              "Error in batchNorm3D: x must be rank 3 but got rank " +
                u.rank +
                "."
            ),
            _(
              3 === c.rank || 1 === c.rank,
              "Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank " +
                c.rank +
                "."
            ),
            _(
              3 === l.rank || 1 === l.rank,
              "Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank " +
                l.rank +
                "."
            ),
            null != o &&
              _(
                3 === o.rank || 1 === o.rank,
                "Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank " +
                  o.rank +
                  "."
              ),
            null != s &&
              _(
                3 === s.rank || 1 === s.rank,
                "Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank " +
                  s.rank +
                  "."
              ),
            hf(u, c, l, s, o, a)
          );
        }
        function lf(t, e, n, r, i, a) {
          void 0 === a && (a = 0.001);
          var o,
            s,
            u = un(t, "x", "batchNorm"),
            c = un(e, "mean", "batchNorm"),
            l = un(n, "variance", "batchNorm");
          return (
            null != i && (o = un(i, "scale", "batchNorm")),
            null != r && (s = un(r, "offset", "batchNorm")),
            _(
              4 === u.rank,
              "Error in batchNorm4D: x must be rank 4 but got rank " +
                u.rank +
                "."
            ),
            _(
              4 === c.rank || 1 === c.rank,
              "Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank " +
                c.rank +
                "."
            ),
            _(
              4 === l.rank || 1 === l.rank,
              "Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank " +
                l.rank +
                "."
            ),
            null != o &&
              _(
                4 === o.rank || 1 === o.rank,
                "Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank " +
                  o.rank +
                  "."
              ),
            null != s &&
              _(
                4 === s.rank || 1 === s.rank,
                "Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank " +
                  s.rank +
                  "."
              ),
            hf(u, c, l, s, o, a)
          );
        }
        function ff(t, e, n, r, i, a) {
          return void 0 === r && (r = 0.001), yf(), hf(t, e, n, a, i, r);
        }
        function hf(t, e, n, r, i, a) {
          void 0 === a && (a = 0.001);
          var o,
            s,
            u,
            c = un(t, "x", "batchNorm"),
            l = un(e, "mean", "batchNorm"),
            f = un(n, "variance", "batchNorm");
          return (
            null != i && (o = un(i, "scale", "batchNorm")),
            null != r && (s = un(r, "offset", "batchNorm")),
            _(
              l.rank === f.rank,
              "Batch normalization gradient requires mean and variance to have equal ranks."
            ),
            _(
              null == s || l.rank === s.rank,
              "Batch normalization gradient requires mean and offset to have equal ranks."
            ),
            _(
              null == o || l.rank === o.rank,
              "Batch normalization gradient requires mean and scale to have equal ranks."
            ),
            (u =
              0 === c.rank || 1 === c.rank
                ? c.as4D(1, 1, 1, c.size)
                : 2 === c.rank
                ? c.as4D(1, 1, c.shape[0], c.shape[1])
                : 3 === c.rank
                ? c.as4D(1, c.shape[0], c.shape[1], c.shape[2])
                : c),
            _e.engine
              .runKernel(
                function(t) {
                  return t.batchNormalization(u, pf(l), pf(f), a, pf(o), pf(s));
                },
                { $x: c, $mean: l, $variance: f, $scale: o, $offset: s },
                function(t) {
                  var e = null == o ? xn(1) : o,
                    n = nr(l.shape, u.shape),
                    r = [];
                  if (1 === l.rank) {
                    for (var i = 0; i < u.shape.length - 1; ++i)
                      r.push(u.shape[i]);
                    r.push(1);
                  }
                  var s = c.sub(l),
                    h = t.mul(e),
                    p = Jl(f.add(xn(a))),
                    d = p
                      .mul(p)
                      .mul(p)
                      .mul(xn(-0.5));
                  return {
                    $x: function() {
                      return 1 === l.rank
                        ? t
                            .mul(zc(p.as4D(1, 1, 1, l.shape[0]), r))
                            .mul(e)
                            .reshape(c.shape)
                        : t
                            .mul(p)
                            .mul(e)
                            .reshape(c.shape);
                    },
                    $mean: function() {
                      var t = p.mul(xn(-1)).mul(h);
                      return 1 === l.rank && (t = t.sum(n)), t.reshape(l.shape);
                    },
                    $variance: function() {
                      var t = d.mul(s).mul(h);
                      return 1 === l.rank && (t = t.sum(n)), t.reshape(l.shape);
                    },
                    $scale: function() {
                      var e = s.mul(p),
                        r = t.mul(e);
                      return 1 === l.rank && (r = r.sum(n)), r.reshape(l.shape);
                    },
                    $offset: function() {
                      var e = t;
                      return 1 === l.rank && (e = e.sum(n)), e.reshape(l.shape);
                    }
                  };
                }
              )
              .reshape(c.shape)
          );
        }
        function pf(t) {
          return null == t
            ? null
            : 0 === t.rank
            ? t.as1D()
            : 1 === t.rank
            ? t
            : 2 === t.rank
            ? t.as4D(1, 1, t.shape[0], t.shape[1])
            : 3 === t.rank
            ? t.as4D(1, t.shape[0], t.shape[1], t.shape[2])
            : t;
        }
        function df(t, e, n, r, i, a) {
          return void 0 === r && (r = 0.001), yf(), uf(t, e, n, a, i, r);
        }
        function mf(t, e, n, r, i, a) {
          return void 0 === r && (r = 0.001), yf(), cf(t, e, n, a, i, r);
        }
        function vf(t, e, n, r, i, a) {
          return void 0 === r && (r = 0.001), yf(), lf(t, e, n, a, i, r);
        }
        function yf() {
          we(
            "tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon"
          );
        }
        var gf = ln({ batchNormalization2d_: df }),
          bf = ln({ batchNormalization3d_: mf }),
          wf = ln({ batchNormalization4d_: vf }),
          _f = ln({ batchNormalization_: ff }),
          xf = ln({ batchNorm_: hf }),
          Ef = ln({ batchNorm2d_: uf }),
          Sf = ln({ batchNorm3d_: cf }),
          Nf = ln({ batchNorm4d_: lf });
        function Of(t, e, n, r, i, a, o) {
          void 0 === o && (o = "channelsLast");
          var s,
            u = Pf(e),
            c = u[0],
            l = u[1];
          if ("channelsLast" === o) s = [c, l, t[3], t[3]];
          else {
            if ("channelsFirst" !== o)
              throw new Error("Unknown dataFormat " + o);
            s = [c, l, t[1], t[1]];
          }
          return If(t, s, n, r, i, a, !1, o);
        }
        function If(t, e, n, r, i, a, o, s) {
          void 0 === o && (o = !1), void 0 === s && (s = "channelsLast");
          var u = [-1, -1, -1, -1],
            c = u[0],
            l = u[1],
            f = u[2],
            h = u[3];
          if ("channelsLast" === s)
            (c = t[0]), (l = t[1]), (f = t[2]), (h = t[3]);
          else {
            if ("channelsFirst" !== s)
              throw new Error("Unknown dataFormat " + s);
            (c = t[0]), (h = t[1]), (l = t[2]), (f = t[3]);
          }
          var p,
            d = e[0],
            m = e[1],
            v = e[3],
            y = Pf(n),
            g = y[0],
            b = y[1],
            w = Pf(r),
            _ = w[0],
            x = w[1],
            E = Rf(d, _),
            S = Rf(m, x),
            N = Df(i, l, f, g, b, E, S, a),
            O = N.padInfo,
            I = N.outHeight,
            C = N.outWidth,
            A = o ? v * h : v;
          return (
            "channelsFirst" === s
              ? (p = [c, A, I, C])
              : "channelsLast" === s && (p = [c, I, C, A]),
            {
              batchSize: c,
              dataFormat: s,
              inHeight: l,
              inWidth: f,
              inChannels: h,
              outHeight: I,
              outWidth: C,
              outChannels: A,
              padInfo: O,
              strideHeight: g,
              strideWidth: b,
              filterHeight: d,
              filterWidth: m,
              effectiveFilterHeight: E,
              effectiveFilterWidth: S,
              dilationHeight: _,
              dilationWidth: x,
              inShape: t,
              outShape: p,
              filterShape: e
            }
          );
        }
        function Cf(t, e, n, r, i, a, o) {
          void 0 === a && (a = !1), void 0 === o && (o = "channelsLast");
          var s = [-1, -1, -1, -1, -1],
            u = s[0],
            c = s[1],
            l = s[2],
            f = s[3],
            h = s[4];
          if ("channelsLast" === o)
            (u = t[0]), (c = t[1]), (l = t[2]), (f = t[3]), (h = t[4]);
          else {
            if ("channelsFirst" !== o)
              throw new Error("Unknown dataFormat " + o);
            (u = t[0]), (h = t[1]), (c = t[2]), (l = t[3]), (f = t[4]);
          }
          var p,
            d = e[0],
            m = e[1],
            v = e[2],
            y = e[4],
            g = Tf(n),
            b = g[0],
            w = g[1],
            _ = g[2],
            x = Tf(r),
            E = x[0],
            S = x[1],
            N = x[2],
            O = Mf(i, c, l, f, b, w, _, Rf(d, E), Rf(m, S), Rf(v, N)),
            I = O.padInfo,
            C = O.outDepth,
            A = O.outHeight,
            k = O.outWidth,
            P = a ? y * h : y;
          return (
            "channelsFirst" === o
              ? (p = [u, P, C, A, k])
              : "channelsLast" === o && (p = [u, C, A, k, P]),
            {
              batchSize: u,
              dataFormat: o,
              inDepth: c,
              inHeight: l,
              inWidth: f,
              inChannels: h,
              outDepth: C,
              outHeight: A,
              outWidth: k,
              outChannels: P,
              padInfo: I,
              strideDepth: b,
              strideHeight: w,
              strideWidth: _,
              filterDepth: d,
              filterHeight: m,
              filterWidth: v,
              dilationDepth: E,
              dilationHeight: S,
              dilationWidth: N,
              inShape: t,
              outShape: p,
              filterShape: e
            }
          );
        }
        function Af(t, e, n, r, i, a) {
          null == i && (i = kf(t, e, r));
          var o = t[0],
            s = t[1],
            u = jf((o - e + 2 * i) / r + 1, a);
          _(
            C(u),
            "The output # of rows (" +
              u +
              ") must be an integer. Change the stride and/or zero pad parameters"
          );
          var c = jf((s - e + 2 * i) / r + 1, a);
          return (
            _(
              C(c),
              "The output # of columns (" +
                c +
                ") must be an integer. Change the stride and/or zero pad parameters"
            ),
            [u, c, n]
          );
        }
        function kf(t, e, n, r) {
          void 0 === r && (r = 1);
          var i = Rf(e, r);
          return Math.floor((t[0] * (n - 1) - n + i) / 2);
        }
        function Pf(t) {
          return "number" == typeof t ? [t, t] : t;
        }
        function Tf(t) {
          return "number" == typeof t ? [t, t, t] : t;
        }
        function Rf(t, e) {
          return e <= 1 ? t : t + (t - 1) * (e - 1);
        }
        function Df(t, e, n, r, i, a, o, s) {
          var u, c, l;
          if ("number" == typeof t) {
            u = {
              top: t,
              bottom: t,
              left: t,
              right: t,
              type: 0 === t ? "VALID" : "NUMBER"
            };
            var f = Af([e, n, 1], a, 1, r, t, s);
            (c = f[0]), (l = f[1]);
          } else if ("same" === t) {
            (c = Math.ceil(e / r)), (l = Math.ceil(n / i));
            var h = Math.max(0, (c - 1) * r + a - e),
              p = Math.max(0, (l - 1) * i + o - n),
              d = Math.floor(h / 2),
              m = h - d,
              v = Math.floor(p / 2);
            u = { top: d, bottom: m, left: v, right: p - v, type: "SAME" };
          } else {
            if ("valid" !== t) throw Error("Unknown padding parameter: " + t);
            (u = { top: 0, bottom: 0, left: 0, right: 0, type: "VALID" }),
              (c = Math.ceil((e - a + 1) / r)),
              (l = Math.ceil((n - o + 1) / i));
          }
          return { padInfo: u, outHeight: c, outWidth: l };
        }
        function Mf(t, e, n, r, i, a, o, s, u, c) {
          var l, f, h, p;
          if ("same" === t) {
            var d = ((f = Math.ceil(e / i)) - 1) * i + s - e,
              m = ((h = Math.ceil(n / a)) - 1) * a + u - n,
              v = ((p = Math.ceil(r / o)) - 1) * o + c - r,
              y = Math.floor(d / 2),
              g = d - y,
              b = Math.floor(m / 2),
              w = m - b,
              _ = Math.floor(v / 2);
            l = {
              top: b,
              bottom: w,
              left: _,
              right: v - _,
              front: y,
              back: g,
              type: "SAME"
            };
          } else {
            if ("valid" !== t) throw Error("Unknown padding parameter: " + t);
            (l = {
              top: 0,
              bottom: 0,
              left: 0,
              right: 0,
              front: 0,
              back: 0,
              type: "VALID"
            }),
              (f = Math.ceil((e - s + 1) / i)),
              (h = Math.ceil((n - u + 1) / a)),
              (p = Math.ceil((r - c + 1) / o));
          }
          return { padInfo: l, outDepth: f, outHeight: h, outWidth: p };
        }
        function jf(t, e) {
          if (!e) return t;
          switch (e) {
            case "round":
              return Math.round(t);
            case "ceil":
              return Math.ceil(t);
            case "floor":
              return Math.floor(t);
            default:
              throw new Error("Unknown roundingMode " + e);
          }
        }
        function Lf(t) {
          var e = Pf(t),
            n = e[0],
            r = e[1];
          return 1 === n && 1 === r;
        }
        function Bf(t, e) {
          return Lf(t) || Lf(e);
        }
        function Ff(t, e, n, r) {
          var i;
          void 0 === n && (n = !1), void 0 === r && (r = !1);
          var a = un(t, "a", "matMul"),
            o = un(e, "b", "matMul");
          (a = (i = Lt(a, o))[0]), (o = i[1]);
          var s = n ? a.shape[a.rank - 2] : a.shape[a.rank - 1],
            u = r ? o.shape[o.rank - 1] : o.shape[o.rank - 2],
            c = n ? a.shape[a.rank - 1] : a.shape[a.rank - 2],
            l = r ? o.shape[o.rank - 2] : o.shape[o.rank - 1],
            f = a.shape.slice(0, -2),
            h = o.shape.slice(0, -2),
            p = N(f),
            d = N(h);
          _(
            a.rank >= 2 && o.rank >= 2 && a.rank === o.rank,
            "Error in matMul: inputs must have the same rank of at least 2, got ranks " +
              a.rank +
              " and " +
              o.rank +
              "."
          ),
            _(
              I(f, h),
              "Error in matMul: outer dimensions (" +
                f +
                ") and (" +
                h +
                ") of Tensors with shapes " +
                a.shape +
                " and " +
                o.shape +
                " must match."
            ),
            _(
              s === u,
              "Error in matMul: inner shapes (" +
                s +
                ") and (" +
                u +
                ") of Tensors with shapes " +
                a.shape +
                " and " +
                o.shape +
                " and transposeA=" +
                n +
                " and transposeB=" +
                r +
                " must match."
            );
          var m = a.shape.slice(0, -2).concat([c, l]),
            v = n ? a.as3D(p, s, c) : a.as3D(p, c, s),
            y = r ? o.as3D(d, l, u) : o.as3D(d, u, l);
          return _e.engine
            .runKernel(
              function(t) {
                return t.batchMatMul(v, y, n, r);
              },
              { $a: v, $b: y },
              function(t) {
                return n || r
                  ? !n && r
                    ? {
                        $a: function() {
                          return t.matMul(y, !1, !1);
                        },
                        $b: function() {
                          return t.matMul(v, !0, !1);
                        }
                      }
                    : n && !r
                    ? {
                        $a: function() {
                          return y.matMul(t, !1, !0);
                        },
                        $b: function() {
                          return v.matMul(t, !1, !1);
                        }
                      }
                    : {
                        $a: function() {
                          return y.matMul(t, !0, !0);
                        },
                        $b: function() {
                          return t.matMul(v, !0, !0);
                        }
                      }
                  : {
                      $a: function() {
                        return t.matMul(y, !1, !0);
                      },
                      $b: function() {
                        return v.matMul(t, !0, !1);
                      }
                    };
              }
            )
            .reshape(m);
        }
        function zf(t, e) {
          var n = un(t, "v1", "outerProduct"),
            r = un(e, "v2", "outerProduct");
          return (
            _(
              1 === n.rank && 1 === r.rank,
              "Error in outerProduct: inputs must be rank 1, but got ranks " +
                n.rank +
                " and " +
                r.rank +
                "."
            ),
            n.as2D(-1, 1).matMul(r.as2D(1, -1))
          );
        }
        function Uf(t, e) {
          var n = un(t, "t1", "dot"),
            r = un(e, "t2", "dot");
          _(
            !((1 !== n.rank && 2 !== n.rank) || (1 !== r.rank && 2 !== r.rank)),
            "Error in dot: inputs must all be rank 1 or 2, but got ranks " +
              n.rank +
              " and " +
              r.rank +
              "."
          );
          var i = 1 === n.rank ? n.size : n.shape[1],
            a = 1 === r.rank ? r.size : r.shape[0];
          return (
            _(
              i === a,
              "Error in dot: inner dimensions of inputs must match, but got " +
                i +
                " and " +
                a +
                "."
            ),
            1 === n.rank && 1 === r.rank
              ? n
                  .as2D(1, -1)
                  .matMul(r.as2D(-1, 1))
                  .asScalar()
              : 1 === n.rank && 2 === r.rank
              ? n
                  .as2D(1, -1)
                  .matMul(r.as2D(r.shape[0], r.shape[1]))
                  .as1D()
              : 2 === n.rank && 1 === r.rank
              ? n.matMul(r.as2D(-1, 1)).as1D()
              : n.matMul(r.as2D(r.shape[0], r.shape[1]))
          );
        }
        var Vf = ln({ matMul_: Ff }),
          Wf = ln({ dot_: Uf }),
          $f = ln({ outerProduct_: zf });
        function qf(t, e, n, r, i, a, o) {
          void 0 === i && (i = "NWC"), void 0 === a && (a = 1);
          var s = un(t, "x", "conv1d"),
            u = un(e, "filter", "conv1d"),
            c = s,
            l = !1;
          2 === s.rank && ((l = !0), (c = s.as3D(1, s.shape[0], s.shape[1]))),
            _(
              3 === c.rank,
              "Error in conv1d: input must be rank 3, but got rank " +
                c.rank +
                "."
            ),
            _(
              3 === u.rank,
              "Error in conv1d: filter must be rank 3, but got rank " +
                u.rank +
                "."
            ),
            null != o &&
              _(
                C(r),
                "Error in conv1d: pad must be an integer when using, dimRoundingMode " +
                  o +
                  " but got pad " +
                  r +
                  "."
              ),
            _(
              c.shape[2] === u.shape[1],
              "Error in conv1d: depth of input (" +
                c.shape[2] +
                ") must match input depth for filter " +
                u.shape[1] +
                "."
            ),
            _(
              Bf(n, a),
              "Error in conv1D: Either stride or dilation must be 1. Got stride " +
                n +
                " and dilation '" +
                a +
                "'"
            ),
            _(
              "NWC" === i,
              "Error in conv1d: got dataFormat of " +
                i +
                " but only NWC is currently supported."
            );
          var f = u.as4D(1, u.shape[0], u.shape[1], u.shape[2]),
            h = c.as4D(c.shape[0], 1, c.shape[1], c.shape[2]),
            p = sh(h, f, [1, n], r, "NHWC", [1, a], o);
          return l
            ? p.as2D(p.shape[2], p.shape[3])
            : p.as3D(p.shape[0], p.shape[2], p.shape[3]);
        }
        function Hf(t, e, n, r, i, a, o) {
          void 0 === i && (i = "NHWC"), void 0 === a && (a = [1, 1]);
          var s = un(t, "x", "conv2d"),
            u = un(e, "filter", "conv2d"),
            c = s,
            l = !1;
          3 === s.rank &&
            ((l = !0), (c = s.as4D(1, s.shape[0], s.shape[1], s.shape[2]))),
            _(
              4 === c.rank,
              "Error in conv2d: input must be rank 4, but got rank " +
                c.rank +
                "."
            ),
            _(
              4 === u.rank,
              "Error in conv2d: filter must be rank 4, but got rank " +
                u.rank +
                "."
            ),
            null != o &&
              _(
                C(r),
                "Error in conv2d: pad must be an integer when using, dimRoundingMode " +
                  o +
                  " but got pad " +
                  r +
                  "."
              ),
            _(
              c.shape[3] === u.shape[2],
              "Error in conv2d: depth of input (" +
                c.shape[3] +
                ") must match input depth for filter " +
                u.shape[2] +
                "."
            ),
            _(
              Bf(n, a),
              "Error in conv2D: Either strides or dilations must be 1. Got strides " +
                n +
                " and dilations '" +
                a +
                "'"
            ),
            _(
              "NHWC" === i,
              "Error in conv2d: got dataFormat of " +
                i +
                " but only NHWC is currently supported."
            );
          var f,
            h = If(c.shape, u.shape, n, a, r, o);
          if (
            1 !== h.filterHeight ||
            1 !== h.filterWidth ||
            1 !== h.dilationHeight ||
            1 !== h.dilationWidth ||
            1 !== h.strideHeight ||
            1 !== h.strideWidth ||
            ("SAME" !== h.padInfo.type && "VALID" !== h.padInfo.type)
          )
            f = _e.engine.runKernel(
              function(t) {
                return t.conv2d(c, u, h);
              },
              { x: c, $filter: u },
              function(t) {
                return (
                  _(
                    Lf(a),
                    "Error in gradient of conv2D: dilation rates greater than 1 are notyet supported in gradients. Got dilations '" +
                      a +
                      "'"
                  ),
                  {
                    x: function() {
                      return Kf(c.shape, t, u, n, r);
                    },
                    $filter: function() {
                      return Gf(c, t, u.shape, n, r);
                    }
                  }
                );
              }
            );
          else {
            var p = c.reshape([-1, h.inChannels]),
              d = u.reshape([h.inChannels, h.outChannels]);
            f = Vf(p, d).reshape(h.outShape);
          }
          return l ? f.as3D(f.shape[1], f.shape[2], f.shape[3]) : f;
        }
        function Kf(t, e, n, r, i, a) {
          _(
            t.length === e.rank,
            "Length of inShape (" +
              t.length +
              ") and rank of dy (" +
              e.rank +
              ") must match"
          );
          var o = t,
            s = e,
            u = !1;
          3 === e.rank &&
            ((u = !0),
            (s = e.as4D(1, e.shape[0], e.shape[1], e.shape[2])),
            (o = [1, t[0], t[1], t[2]]));
          var c = o[3],
            l = s.shape[3];
          _(
            4 === o.length,
            "Error in conv2dDerInput: inShape must be length 4, but got length " +
              o.length +
              "."
          ),
            _(
              4 === s.rank,
              "Error in conv2dDerInput: dy must be rank 4, but got rank " +
                s.rank
            ),
            _(
              4 === n.rank,
              "Error in conv2dDerInput: filter must be rank 4, but got rank " +
                n.rank
            ),
            _(
              c === n.shape[2],
              "Error in conv2dDerInput: depth of input (" +
                c +
                ") must match input depth for filter " +
                n.shape[2] +
                "."
            ),
            _(
              l === n.shape[3],
              "Error in conv2dDerInput: depth of output (" +
                l +
                ") must match output depth for filter " +
                n.shape[3] +
                "."
            ),
            null != a &&
              _(
                C(i),
                "Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode " +
                  a +
                  " but got pad " +
                  i +
                  "."
              );
          var f = If(o, n.shape, r, 1, i, a),
            h = _e.engine.runKernel(
              function(t) {
                return t.conv2dDerInput(s, n, f);
              },
              { dy4D: s, filter: n },
              function(t) {
                return {
                  dy4D: function() {
                    return sh(t, n, r, i, "NHWC", 1, a);
                  },
                  filter: function() {
                    return ch(t, s, n.shape, r, i, a);
                  }
                };
              }
            );
          return u ? h.as3D(h.shape[1], h.shape[2], h.shape[3]) : h;
        }
        function Gf(t, e, n, r, i, a) {
          var o = t;
          3 === t.rank && (o = t.as4D(1, t.shape[0], t.shape[1], t.shape[2]));
          var s = e;
          3 === s.rank && (s = e.as4D(1, e.shape[0], e.shape[1], e.shape[2])),
            _(
              4 === o.rank,
              "Error in conv2dDerFilter: input must be rank 4, but got shape " +
                o.shape +
                "."
            ),
            _(
              4 === s.rank,
              "Error in conv2dDerFilter: dy must be rank 4, but got shape " +
                s.shape +
                "."
            ),
            _(
              4 === n.length,
              "Error in conv2dDerFilter: filterShape must be length 4, but got " +
                n +
                "."
            ),
            _(
              o.shape[3] === n[2],
              "Error in conv2dDerFilter: depth of input " +
                o.shape[3] +
                ") must match input depth in filter (" +
                n[2] +
                "."
            ),
            _(
              s.shape[3] === n[3],
              "Error in conv2dDerFilter: depth of dy (" +
                s.shape[3] +
                ") must match output depth for filter (" +
                n[3] +
                ")."
            ),
            null != a &&
              _(
                C(i),
                "Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode " +
                  a +
                  " but got pad " +
                  i +
                  "."
              );
          var u = If(o.shape, n, r, 1, i, a);
          return _e.engine.runKernel(
            function(t) {
              return t.conv2dDerFilter(o, s, u);
            },
            { x4D: o, dy4D: s }
          );
        }
        function Xf(t, e, n, r, i, a) {
          return Kf(
            n,
            un(t, "x", "conv2dTranspose"),
            un(e, "filter", "conv2dTranspose"),
            r,
            i,
            a
          );
        }
        function Jf(t, e, n, r, i, a, o) {
          void 0 === i && (i = "NHWC"), void 0 === a && (a = [1, 1]);
          var s = un(t, "x", "depthwiseConv2d"),
            u = un(e, "filter", "depthwiseConv2d"),
            c = s,
            l = !1;
          3 === s.rank &&
            ((l = !0), (c = s.as4D(1, s.shape[0], s.shape[1], s.shape[2]))),
            _(
              4 === c.rank,
              "Error in depthwiseConv2d: input must be rank 4, but got rank " +
                c.rank +
                "."
            ),
            _(
              4 === u.rank,
              "Error in depthwiseConv2d: filter must be rank 4, but got rank " +
                u.rank +
                "."
            ),
            _(
              c.shape[3] === u.shape[2],
              "Error in depthwiseConv2d: number of input channels (" +
                c.shape[3] +
                ") must match the inChannels dimension in filter " +
                u.shape[2] +
                "."
            ),
            null == a && (a = [1, 1]),
            _(
              Bf(n, a),
              "Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides " +
                n +
                " and dilations '" +
                a +
                "'"
            ),
            null != o &&
              _(
                C(r),
                "Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode " +
                  o +
                  " but got pad " +
                  r +
                  "."
              );
          var f = If(c.shape, u.shape, n, a, r, o, !0),
            h = _e.engine.runKernel(
              function(t) {
                return t.depthwiseConv2D(c, u, f);
              },
              { x: c, $filter: u },
              function(t) {
                return (
                  _(
                    Lf(a),
                    "Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '" +
                      a +
                      "'"
                  ),
                  {
                    x: function() {
                      return eh(c.shape, t, u, f);
                    },
                    $filter: function() {
                      return nh(c, t, u.shape, f);
                    }
                  }
                );
              }
            );
          return l ? h.as3D(h.shape[1], h.shape[2], h.shape[3]) : h;
        }
        function Yf(t, e, n, r, i, a, o) {
          void 0 === a && (a = [1, 1]), void 0 === o && (o = "NHWC");
          var s = un(t, "x", "separableConv2d"),
            u = un(e, "depthwiseFilter", "separableConv2d"),
            c = un(n, "pointwiseFilter", "separableConv2d"),
            l = s,
            f = !1;
          if (
            (3 === s.rank &&
              ((f = !0), (l = s.as4D(1, s.shape[0], s.shape[1], s.shape[2]))),
            "NCHW" === o)
          )
            throw new Error(
              "separableConv2d currently does not support dataFormat NCHW; only NHWC is supported"
            );
          _(
            4 === l.rank,
            "Error in separableConv2d: input must be rank 4, but got rank " +
              l.rank +
              "."
          ),
            _(
              4 === u.rank,
              "Error in separableConv2d: depthwise filter must be rank 4, but got rank " +
                u.rank +
                "."
            ),
            _(
              4 === c.rank,
              "Error in separableConv2d: pointwise filter must be rank 4, but got rank " +
                u.rank +
                "."
            ),
            _(
              1 === c.shape[0],
              "Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got " +
                c.shape[0] +
                "."
            ),
            _(
              1 === c.shape[1],
              "Error in separableConv2d: the second dimension of pointwise filter  must be 1, but got " +
                c.shape[1] +
                "."
            );
          var h = u.shape[2],
            p = u.shape[3];
          _(
            c.shape[2] === h * p,
            "Error in separableConv2d: the third dimension of pointwise filter must be " +
              h * p +
              ", but got " +
              c.shape[2] +
              "."
          );
          var d = lh(l, u, r, i, o, a),
            m = sh(d, c, 1, "valid", o);
          return f ? m.as3D(m.shape[1], m.shape[2], m.shape[3]) : m;
        }
        function Qf(t) {
          return "number" == typeof t
            ? [t, t, t]
            : 2 === t.length
            ? [t[0], t[1], 1]
            : t;
        }
        function Zf(t) {
          var e = Qf(t),
            n = e[0],
            r = e[1],
            i = e[2];
          return 1 === n && 1 === r && 1 === i;
        }
        function th(t, e) {
          return Zf(t) || Zf(e);
        }
        function eh(t, e, n, r) {
          var i = e,
            a = !1;
          3 === e.rank &&
            ((a = !0), (i = e.as4D(1, e.shape[0], e.shape[1], e.shape[2])));
          var o = _e.engine.runKernel(
            function(t) {
              return t.depthwiseConv2DDerInput(i, n, r);
            },
            { dy4D: i }
          );
          return a ? o.as3D(o.shape[1], o.shape[2], o.shape[3]) : o;
        }
        function nh(t, e, n, r) {
          var i = t;
          3 === t.rank && (i = t.as4D(1, t.shape[0], t.shape[1], t.shape[2]));
          var a = e;
          return (
            3 === a.rank && (a = e.as4D(1, e.shape[0], e.shape[1], e.shape[2])),
            _e.engine.runKernel(
              function(t) {
                return t.depthwiseConv2DDerFilter(i, a, r);
              },
              { x4D: i, dy4D: a }
            )
          );
        }
        function rh(t, e, n, r, i, a) {
          void 0 === i && (i = "NHWC"), void 0 === a && (a = [1, 1, 1]);
          var o = un(t, "x", "conv3d"),
            s = un(e, "filter", "conv3d"),
            u = o,
            c = !1;
          4 === o.rank &&
            ((c = !0),
            (u = o.as5D(1, o.shape[0], o.shape[1], o.shape[2], o.shape[3]))),
            _(
              5 === u.rank,
              "Error in conv3d: input must be rank 5, but got rank " +
                u.rank +
                "."
            ),
            _(
              5 === s.rank,
              "Error in conv3d: filter must be rank 5, but got rank " +
                s.rank +
                "."
            ),
            _(
              u.shape[4] === s.shape[3],
              "Error in conv3d: depth of input (" +
                u.shape[4] +
                ") must match input depth for filter " +
                s.shape[3] +
                "."
            ),
            _(
              th(n, a),
              "Error in conv3D: Either strides or dilations must be 1. Got strides " +
                n +
                " and dilations '" +
                a +
                "'"
            ),
            _(
              "NHWC" === i,
              "Error in conv3d: got dataFormat of " +
                i +
                " but only NHWC is currently supported."
            );
          var l = Cf(u.shape, s.shape, n, a, r),
            f = _e.engine.runKernel(
              function(t) {
                return t.conv3d(u, s, l);
              },
              { x: u, $filter: s },
              function(t) {
                return (
                  _(
                    Zf(a),
                    "Error in gradient of conv3D: dilation rates greater than 1 are notyet supported in gradients. Got dilations '" +
                      a +
                      "'"
                  ),
                  {
                    x: function() {
                      return ih(u.shape, t, s, n, r);
                    },
                    $filter: function() {
                      return ah(u, t, s.shape, n, r);
                    }
                  }
                );
              }
            );
          return c ? f.as4D(f.shape[1], f.shape[2], f.shape[3], f.shape[4]) : f;
        }
        function ih(t, e, n, r, i) {
          _(
            t.length === e.rank,
            "Length of inShape (" +
              t.length +
              ") and rank of dy (" +
              e.rank +
              ") must match"
          );
          var a = t,
            o = e,
            s = !1;
          4 === e.rank &&
            ((s = !0),
            (o = e.as5D(1, e.shape[0], e.shape[1], e.shape[2], e.shape[3])),
            (a = [1, t[0], t[1], t[2], t[3]]));
          var u = a[4],
            c = o.shape[4];
          _(
            5 === a.length,
            "Error in conv3dDerInput: inShape must be length 5, but got length " +
              a.length +
              "."
          ),
            _(
              5 === o.rank,
              "Error in conv3dDerInput: dy must be rank 5, but got rank " +
                o.rank
            ),
            _(
              5 === n.rank,
              "Error in conv3dDerInput: filter must be rank 5, but got rank " +
                n.rank
            ),
            _(
              u === n.shape[3],
              "Error in conv3dDerInput: depth of input (" +
                u +
                ") must match input depth for filter " +
                n.shape[3] +
                "."
            ),
            _(
              c === n.shape[4],
              "Error in conv3dDerInput: depth of output (" +
                c +
                ") must match output depth for filter " +
                n.shape[4] +
                "."
            );
          var l = Cf(a, n.shape, r, 1, i),
            f = _e.engine.runKernel(
              function(t) {
                return t.conv3dDerInput(o, n, l);
              },
              { dy5D: o }
            );
          return s ? f.as4D(f.shape[1], f.shape[2], f.shape[3], f.shape[4]) : f;
        }
        function ah(t, e, n, r, i) {
          var a = t;
          4 === t.rank &&
            (a = t.as5D(1, t.shape[0], t.shape[1], t.shape[2], t.shape[3]));
          var o = e;
          4 === o.rank &&
            (o = e.as5D(1, e.shape[0], e.shape[1], e.shape[2], e.shape[3])),
            _(
              5 === a.rank,
              "Error in conv3dDerFilter: input must be rank 5, but got shape " +
                a.shape +
                "."
            ),
            _(
              5 === o.rank,
              "Error in conv3dDerFilter: dy must be rank 5, but got shape " +
                o.shape +
                "."
            ),
            _(
              5 === n.length,
              "Error in conv3dDerFilter: filterShape must be length 5, but got " +
                n +
                "."
            ),
            _(
              a.shape[4] === n[3],
              "Error in conv3dDerFilter: depth of input " +
                a.shape[4] +
                ") must match input depth in filter (" +
                n[3] +
                "."
            ),
            _(
              o.shape[4] === n[4],
              "Error in conv3dDerFilter: depth of dy (" +
                o.shape[4] +
                ") must match output depth for filter (" +
                n[4] +
                ")."
            );
          var s = Cf(a.shape, n, r, 1, i);
          return _e.engine.runKernel(
            function(t) {
              return t.conv3dDerFilter(a, o, s);
            },
            { x5D: a, dy5D: o }
          );
        }
        var oh = ln({ conv1d_: qf }),
          sh = ln({ conv2d_: Hf }),
          uh = ln({ conv3d_: rh }),
          ch = ln({ conv2dDerFilter_: Gf }),
          lh = ln({ depthwiseConv2d_: Jf }),
          fh = ln({ separableConv2d_: Yf }),
          hh = ln({ conv2dTranspose_: Xf });
        function ph(t) {
          var e = un(t, "x", "reverse");
          return (
            _(
              1 === e.rank,
              "Error in reverse1D: x must be rank 1 but got\n             rank " +
                e.rank +
                "."
            ),
            gh(e, 0)
          );
        }
        function dh(t, e) {
          var n = un(t, "x", "reverse");
          return (
            _(
              2 === n.rank,
              "Error in reverse2D: x must be rank 2 but got\n             rank " +
                n.rank +
                "."
            ),
            gh(n, e)
          );
        }
        function mh(t, e) {
          var n = un(t, "x", "reverse");
          return (
            _(
              3 === n.rank,
              "Error in reverse3D: x must be rank 3 but got\n             rank " +
                n.rank +
                "."
            ),
            gh(n, e)
          );
        }
        function vh(t, e) {
          var n = un(t, "x", "reverse");
          return (
            _(
              4 === n.rank,
              "Error in reverse4D: x must be rank 4 but got\n             rank " +
                n.rank +
                "."
            ),
            gh(n, e)
          );
        }
        function yh(t, e) {
          var n = un(t, "x", "reverse");
          if (0 === n.rank) return n.clone();
          var r = M(e, n.shape);
          return _e.engine
            .runKernel(
              function(t) {
                return t.reverse(n, r);
              },
              { $x: n },
              function(t) {
                return {
                  $x: function() {
                    return t.reverse(r);
                  }
                };
              }
            )
            .reshapeAs(n);
        }
        var gh = ln({ reverse_: yh }),
          bh = ln({ reverse1d_: ph }),
          wh = ln({ reverse2d_: dh }),
          _h = ln({ reverse3d_: mh }),
          xh = ln({ reverse4d_: vh });
        function Eh(t, e, n, r, i, a) {
          var o = un(t, "x", "maxPool"),
            s = o,
            u = !1;
          3 === o.rank &&
            ((u = !0), (s = o.as4D(1, o.shape[0], o.shape[1], o.shape[2]))),
            null == r && (r = [1, 1]),
            _(
              4 === s.rank,
              "Error in maxPool: input must be rank 4 but got rank " +
                s.rank +
                "."
            ),
            _(
              Bf(n, r),
              "Error in maxPool: Either strides or dilations must be 1. Got strides " +
                n +
                " and dilations '" +
                r +
                "'"
            ),
            null != a &&
              _(
                C(i),
                "Error in maxPool: pad must be an integer when using, dimRoundingMode " +
                  a +
                  " but got pad " +
                  i +
                  "."
              );
          var c = Of(s.shape, e, n, r, i, a),
            l = _e.engine.runKernel(
              function(t, e) {
                return e(t.maxPool(s, c));
              },
              { x: s },
              function(t, a) {
                var o = a[0];
                return {
                  x: function() {
                    return Ch(t, s, o, e, n, r, i);
                  }
                };
              }
            );
          return u ? l.as3D(l.shape[1], l.shape[2], l.shape[3]) : l;
        }
        function Sh(t, e, n, r, i) {
          return Eh(t, e, n, 1, r, i);
        }
        function Nh(t, e, n, r, i, a) {
          var o = un(t, "x", "avgPool", "float32");
          null == r && (r = [1, 1]),
            _(
              Bf(n, r),
              "Error in avgPool: Either strides or dilations must be 1. Got strides " +
                n +
                " and dilations '" +
                r +
                "'"
            );
          var s = o,
            u = !1;
          3 === o.rank &&
            ((u = !0), (s = o.as4D(1, o.shape[0], o.shape[1], o.shape[2]))),
            _(
              4 === s.rank,
              "Error in avgPool: x must be rank 4 but got rank " + s.rank + "."
            ),
            null != a &&
              _(
                C(i),
                "Error in avgPool: pad must be an integer when using, dimRoundingMode " +
                  a +
                  " but got pad " +
                  i +
                  "."
              );
          var c = Of(s.shape, e, n, r, i, a),
            l = _e.engine.runKernel(
              function(t) {
                return t.avgPool(s, c);
              },
              { x: s },
              function(t) {
                return {
                  x: function() {
                    return Ah(t, s, e, n, r, i);
                  }
                };
              }
            );
          return (
            (l = l.cast(o.dtype)),
            u ? l.as3D(l.shape[1], l.shape[2], l.shape[3]) : l
          );
        }
        function Oh(t, e, n, r, i) {
          return Nh(t, e, n, 1, r, i);
        }
        function Ih(t, e, n, r, i, a) {
          null == i && (i = [1, 1]),
            null == a && (a = 1),
            0 === r && (r = "valid");
          var o = un(t, "x", "maxPool"),
            s = o,
            u = !1;
          3 === o.rank &&
            ((u = !0), (s = o.as4D(1, o.shape[0], o.shape[1], o.shape[2]))),
            _(
              Bf(a, i),
              "Error in pool: Either strides or dilations must be 1. Got strides " +
                a +
                " and dilations '" +
                i +
                "'"
            );
          var c,
            l = Of(s.shape, e, a, i, r),
            f = [l.dilationHeight, l.dilationWidth];
          c =
            "same" === r
              ? Ph([l.filterHeight, l.filterWidth], f)
              : [[0, 0], [0, 0]];
          var h = 1 === f[0] && 1 === f[1],
            p = kh([l.inHeight, l.inWidth], f, c),
            d = p[0],
            m = p[1],
            v = h ? r : "valid",
            y = h ? s : Lc(s, f, d),
            g = ("avg" === n
              ? function() {
                  return Nh(y, e, a, 1, v);
                }
              : function() {
                  return Eh(y, e, a, 1, v);
                })(),
            b = h ? g : gc(g, f, m);
          return u ? b.as3D(b.shape[1], b.shape[2], b.shape[3]) : b;
        }
        function Ch(t, e, n, r, i, a, o, s) {
          var u = un(t, "dy", "maxPoolBackprop"),
            c = un(e, "input", "maxPoolBackprop"),
            l = un(n, "output", "maxPoolBackprop");
          _(
            c.rank === u.rank,
            "Rank of input (" +
              c.rank +
              ") does not match rank of dy (" +
              u.rank +
              ")"
          ),
            null == a && (a = [1, 1]),
            _(
              Bf(i, a),
              "Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides " +
                i +
                " and dilations '" +
                a +
                "'"
            ),
            _(
              4 === u.rank,
              "Error in maxPoolBackprop: dy must be rank 4 but got rank " +
                u.rank +
                "."
            ),
            _(
              4 === c.rank,
              "Error in maxPoolBackprop: input must be rank 4 but got rank " +
                c.rank +
                "."
            ),
            null != s &&
              _(
                C(o),
                "Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode " +
                  s +
                  " but got pad " +
                  o +
                  "."
              );
          var f = Of(c.shape, r, i, a, o, s);
          return _e.engine.runKernel(
            function(t) {
              return t.maxPoolBackprop(u, c, l, f);
            },
            { $dy: u, $input: c }
          );
        }
        function Ah(t, e, n, r, i, a) {
          var o = un(t, "dy", "avgPoolBackprop"),
            s = un(e, "input", "avgPoolBackprop");
          _(
            s.rank === o.rank,
            "Rank of input (" +
              s.rank +
              ") does not match rank of dy (" +
              o.rank +
              ")"
          ),
            null == i && (i = [1, 1]),
            _(
              Bf(r, i),
              "Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides " +
                r +
                " and dilations '" +
                i +
                "'"
            );
          var u = s,
            c = o,
            l = !1;
          3 === s.rank &&
            ((l = !0),
            (u = s.as4D(1, s.shape[0], s.shape[1], s.shape[2])),
            (c = o.as4D(1, o.shape[0], o.shape[1], o.shape[2]))),
            _(
              4 === c.rank,
              "Error in avgPoolBackprop: dy must be rank 4 but got rank " +
                c.rank +
                "."
            ),
            _(
              4 === u.rank,
              "Error in avgPoolBackprop: input must be rank 4 but got rank " +
                u.rank +
                "."
            );
          var f = Of(u.shape, n, r, i, a),
            h = _e.engine.runKernel(
              function(t) {
                return t.avgPoolBackprop(c, u, f);
              },
              { dy4D: c, input4D: u }
            );
          return l ? h.as3D(h.shape[1], h.shape[2], h.shape[3]) : h;
        }
        function kh(t, e, n) {
          var r = n.map(function(t) {
              return t[0];
            }),
            i = n.map(function(t) {
              return t[1];
            }),
            a = t.concat(r, i),
            o = e.map(function(t, e) {
              return (t - (a[e] % t)) % t;
            }),
            s = i.map(function(t, e) {
              return t + o[e];
            });
          return [
            e.map(function(t, e) {
              return [r[e], s[e]];
            }),
            e.map(function(t, e) {
              return [0, o[e]];
            })
          ];
        }
        function Ph(t, e) {
          var n = t
              .map(function(t, n) {
                return t + (t - 1) * (e[n] - 1);
              })
              .map(function(t) {
                return t - 1;
              }),
            r = n.map(function(t) {
              return Math.floor(t / 2);
            }),
            i = n.map(function(t, e) {
              return t - r[e];
            });
          return n.map(function(t, e) {
            return [r[e], i[e]];
          });
        }
        var Th = ln({ maxPool_: Sh }),
          Rh = ln({ avgPool_: Oh }),
          Dh = ln({ pool_: Ih });
        function Mh(t, e, n) {
          var r = un(t, "x", "slice1d");
          return (
            _(
              1 === r.rank,
              "slice1d expects a rank-1 tensor, but got a rank-" +
                r.rank +
                " tensor"
            ),
            zh(r, [e], [n])
          );
        }
        function jh(t, e, n) {
          var r = un(t, "x", "slice2d");
          return (
            _(
              2 === r.rank,
              "slice2d expects a rank-2 tensor, but got a rank-" +
                r.rank +
                " tensor"
            ),
            zh(r, e, n)
          );
        }
        function Lh(t, e, n) {
          var r = un(t, "x", "slice3d");
          return (
            _(
              3 === r.rank,
              "slice3d expects a rank-3 tensor, but got a rank-" +
                r.rank +
                " tensor"
            ),
            zh(r, e, n)
          );
        }
        function Bh(t, e, n) {
          var r = un(t, "x", "slice4d");
          return (
            _(
              4 === r.rank,
              "slice4d expects a rank-4 tensor, but got a rank-" +
                r.rank +
                " tensor"
            ),
            zh(r, e, n)
          );
        }
        function Fh(t, e, n) {
          var r,
            i,
            a = un(t, "x", "slice");
          if (0 === a.rank) throw new Error("Slicing scalar is not possible");
          (r =
            "number" == typeof e
              ? [e].concat(new Array(a.rank - 1).fill(0))
              : e.length < a.rank
              ? e.concat(new Array(a.rank - e.length).fill(0))
              : e.slice()),
            (i = (i =
              null == n
                ? new Array(a.rank).fill(-1)
                : "number" == typeof n
                ? [n].concat(new Array(a.rank - 1).fill(-1))
                : n.length < a.rank
                ? n.concat(new Array(a.rank - n.length).fill(-1))
                : n).map(function(t, e) {
              return t >= 0
                ? t
                : (_(-1 === t, "Bad value in size"), a.shape[e] - r[e]);
            })),
            Qe(a, r, i);
          var o = a.shape;
          return _e.engine.runKernel(
            function(t) {
              return t.slice(a, r, i);
            },
            { $x: a },
            function(t) {
              for (var e = [], n = 0; n < t.rank; n++)
                e.push([r[n], o[n] - r[n] - i[n]]);
              return {
                $x: function() {
                  return t.pad(e);
                }
              };
            }
          );
        }
        var zh = ln({ slice_: Fh }),
          Uh = ln({ slice1d_: Mh }),
          Vh = ln({ slice2d_: jh }),
          Wh = ln({ slice3d_: Lh }),
          $h = ln({ slice4d_: Bh });
        function qh(t, e, n) {
          void 0 === e && (e = null), void 0 === n && (n = !1);
          var r = un(t, "x", "logSumExp"),
            i = M(e, r.shape),
            a = r.max(i, !0),
            o = r
              .sub(a)
              .exp()
              .sum(i)
              .log(),
            s = a.reshape(o.shape).add(o);
          if (n) {
            var u = je(s.shape, i);
            return s.reshape(u);
          }
          return s;
        }
        function Hh(t, e, n) {
          void 0 === e && (e = null), void 0 === n && (n = !1);
          var r = un(t, "x", "sum");
          "bool" === r.dtype && (r = r.toInt());
          var i = M(e, r.shape);
          return Ee(function(t) {
            var e = Be(i, t.rank),
              r = i,
              a = t;
            null != e && ((a = t.transpose(e)), (r = ze(r.length, t.rank)));
            var o = _e.engine.runKernel(
              function(t) {
                return t.sum(a, r);
              },
              { permutedX: a }
            );
            if (n) {
              var s = je(o.shape, i);
              o = o.reshape(s);
            }
            return {
              value: o,
              gradFunc: function(e) {
                var n = t.shape.slice();
                return (
                  i.forEach(function(t) {
                    n[t] = 1;
                  }),
                  e.reshape(n).mul(An(t.shape, "float32"))
                );
              }
            };
          })(r);
        }
        function Kh(t, e, n) {
          void 0 === e && (e = null), void 0 === n && (n = !1);
          var r = un(t, "x", "prod");
          "bool" === r.dtype && (r = r.toInt());
          var i = M(e, r.shape),
            a = Be(i, r.rank),
            o = i,
            s = r;
          null != a && ((s = r.transpose(a)), (o = ze(o.length, r.rank)));
          var u = _e.engine.runKernel(
            function(t) {
              return t.prod(s, o);
            },
            { permutedX: s }
          );
          if (n) {
            var c = je(u.shape, i);
            u = u.reshape(c);
          }
          return u;
        }
        function Gh(t, e, n) {
          void 0 === e && (e = null), void 0 === n && (n = !1);
          var r = un(t, "x", "mean"),
            i = M(e, r.shape),
            a = N(Me(r.shape, i)[1]);
          return Ee(function(t) {
            var r = xn(a);
            return {
              value: (r.dtype === t.dtype ? t : t.cast(r.dtype))
                .div(r)
                .sum(e, n),
              gradFunc: function(e) {
                var n = t.shape.slice();
                return (
                  i.forEach(function(t) {
                    n[t] = 1;
                  }),
                  e
                    .reshape(n)
                    .mul(An(t.shape, "float32"))
                    .div(r)
                );
              }
            };
          })(r);
        }
        function Xh(t, e, n, r, i) {
          var a = e[0];
          return (
            a.rank < n.rank && (a = a.reshape(je(a.shape, r))),
            t.rank < n.rank && (t = t.reshape(je(t.shape, r))),
            {
              $x: function() {
                var e = t.mul(n.equal(a).cast(t.dtype));
                return null == i ? e : e.transpose(i);
              }
            }
          );
        }
        function Jh(t, e, n) {
          void 0 === e && (e = null), void 0 === n && (n = !1);
          var r = un(t, "x", "min"),
            i = r,
            a = M(e, r.shape),
            o = a,
            s = Be(o, r.rank);
          null != s && ((r = r.transpose(s)), (o = ze(o.length, r.rank)));
          var u = _e.engine.runKernel(
            function(t, e) {
              return e(t.min(r, o));
            },
            { $x: r },
            function(t, e) {
              return Xh(t, e, i, a, s);
            }
          );
          if (n) {
            var c = je(u.shape, a);
            u = u.reshape(c);
          }
          return u;
        }
        function Yh(t, e, n) {
          void 0 === e && (e = null), void 0 === n && (n = !1);
          var r = un(t, "x", "max"),
            i = r,
            a = M(e, r.shape),
            o = a,
            s = Be(o, r.rank);
          null != s && ((r = r.transpose(s)), (o = ze(o.length, r.rank)));
          var u = _e.engine.runKernel(
            function(t, e) {
              return e(t.max(r, o));
            },
            { $x: r },
            function(t, e) {
              return Xh(t, e, i, a, s);
            }
          );
          if (n) {
            var c = je(u.shape, a);
            u = u.reshape(c);
          }
          return u;
        }
        function Qh(t, e) {
          void 0 === e && (e = 0);
          var n = un(t, "x", "argMin");
          null == e && (e = 0);
          var r = M(e, n.shape),
            i = Be(r, n.rank);
          return (
            null != i && ((n = n.transpose(i)), (r = ze(r.length, n.rank))),
            _e.engine.runKernel(
              function(t) {
                return t.argMin(n, r[0]);
              },
              { $x: n },
              function(t) {
                return {
                  $x: function() {
                    return Ln(n);
                  }
                };
              }
            )
          );
        }
        function Zh(t, e) {
          void 0 === e && (e = 0);
          var n = un(t, "x", "argMax");
          null == e && (e = 0);
          var r = M(e, n.shape),
            i = Be(r, n.rank);
          return (
            null != i && ((n = n.transpose(i)), (r = ze(r.length, n.rank))),
            _e.engine.runKernel(
              function(t) {
                return t.argMax(n, r[0]);
              },
              { $x: n },
              function(t) {
                return {
                  $x: function() {
                    return Ln(n);
                  }
                };
              }
            )
          );
        }
        function tp(t, e, n) {
          void 0 === e && (e = null), void 0 === n && (n = !1);
          var r = un(t, "x", "all", "bool"),
            i = M(e, r.shape),
            a = i,
            o = Be(a, r.rank);
          null != o && ((r = r.transpose(o)), (a = ze(a.length, r.rank)));
          var s = _e.engine.runKernel(
            function(t) {
              return t.all(r, a);
            },
            { $x: r }
          );
          if (n) {
            var u = je(s.shape, i);
            return s.reshape(u);
          }
          return s;
        }
        function ep(t, e, n) {
          void 0 === e && (e = null), void 0 === n && (n = !1);
          var r = un(t, "x", "any", "bool"),
            i = M(e, r.shape),
            a = i,
            o = Be(a, r.rank);
          null != o && ((r = r.transpose(o)), (a = ze(a.length, r.rank)));
          var s = _e.engine.runKernel(
            function(t) {
              return t.any(r, a);
            },
            { $x: r }
          );
          if (n) {
            var u = je(s.shape, i);
            return s.reshape(u);
          }
          return s;
        }
        function np(t, e, n) {
          void 0 === e && (e = null), void 0 === n && (n = !1);
          var r = M(e, (t = un(t, "x", "moments")).shape),
            i = t.mean(r, n),
            a = i.shape;
          return (
            n || (a = je(i.shape, r)),
            {
              mean: i,
              variance: t
                .toFloat()
                .sub(i.reshape(a))
                .square()
                .mean(r, n)
            }
          );
        }
        var rp = ln({ all_: tp }),
          ip = ln({ any_: ep }),
          ap = ln({ argMax_: Zh }),
          op = ln({ argMin_: Qh }),
          sp = ln({ logSumExp_: qh }),
          up = ln({ max_: Yh }),
          cp = ln({ mean_: Gh }),
          lp = ln({ min_: Jh }),
          fp = ln({ moments_: np }),
          hp = ln({ sum_: Hh }),
          pp = ln({ prod_: Kh });
        function dp(t, e) {
          var n,
            r = un(t, "a", "notEqual"),
            i = un(e, "b", "notEqual");
          return (
            (n = Lt(r, i)),
            (r = n[0]),
            (i = n[1]),
            rr(r.shape, i.shape),
            _e.engine.runKernel(
              function(t) {
                return t.notEqual(r, i);
              },
              { $a: r, $b: i }
            )
          );
        }
        function mp(t, e) {
          var n = un(t, "a", "notEqualStrict"),
            r = un(e, "b", "notEqualStrict");
          return (
            x(n.shape, r.shape, "Error in notEqualStrict: "), n.notEqual(r)
          );
        }
        function vp(t, e) {
          var n,
            r = un(t, "a", "less"),
            i = un(e, "b", "less");
          return (
            (n = Lt(r, i)),
            (r = n[0]),
            (i = n[1]),
            rr(r.shape, i.shape),
            _e.engine.runKernel(
              function(t) {
                return t.less(r, i);
              },
              { $a: r, $b: i }
            )
          );
        }
        function yp(t, e) {
          var n = un(t, "a", "lessStrict"),
            r = un(e, "b", "lessStrict");
          return x(n.shape, r.shape, "Error in lessStrict: "), n.less(r);
        }
        function gp(t, e) {
          var n,
            r = un(t, "a", "equal"),
            i = un(e, "b", "equal");
          return (
            (n = Lt(r, i)),
            (r = n[0]),
            (i = n[1]),
            rr(r.shape, i.shape),
            _e.engine.runKernel(
              function(t) {
                return t.equal(r, i);
              },
              { $a: r, $b: i }
            )
          );
        }
        function bp(t, e) {
          var n = un(t, "a", "equalStrict"),
            r = un(e, "b", "equalStrict");
          return x(n.shape, r.shape, "Error in equalStrict: "), n.equal(r);
        }
        function wp(t, e) {
          var n,
            r = un(t, "a", "lessEqual"),
            i = un(e, "b", "lessEqual");
          return (
            (n = Lt(r, i)),
            (r = n[0]),
            (i = n[1]),
            rr(r.shape, i.shape),
            _e.engine.runKernel(
              function(t) {
                return t.lessEqual(r, i);
              },
              { $a: r, $b: i }
            )
          );
        }
        function _p(t, e) {
          var n = un(t, "a", "lessEqualStrict"),
            r = un(e, "b", "lessEqualStrict");
          return (
            x(n.shape, r.shape, "Error in lessEqualStrict: "), n.lessEqual(r)
          );
        }
        function xp(t, e) {
          var n,
            r = un(t, "a", "greater"),
            i = un(e, "b", "greater");
          return (
            (n = Lt(r, i)),
            (r = n[0]),
            (i = n[1]),
            rr(r.shape, i.shape),
            _e.engine.runKernel(
              function(t) {
                return t.greater(r, i);
              },
              { $a: r, $b: i }
            )
          );
        }
        function Ep(t, e) {
          var n = un(t, "a", "greaterStrict"),
            r = un(e, "b", "greaterStrict");
          return x(n.shape, r.shape, "Error in greaterStrict: "), n.greater(r);
        }
        function Sp(t, e) {
          var n,
            r = un(t, "a", "greaterEqual"),
            i = un(e, "b", "greaterEqual");
          return (
            (n = Lt(r, i)),
            (r = n[0]),
            (i = n[1]),
            rr(r.shape, i.shape),
            _e.engine.runKernel(
              function(t) {
                return t.greaterEqual(r, i);
              },
              { $a: r, $b: i },
              function(t) {
                return {
                  $a: function() {
                    return Ln(r);
                  },
                  $b: function() {
                    return Ln(i);
                  }
                };
              }
            )
          );
        }
        function Np(t, e) {
          var n = un(t, "a", "greaterEqualStrict"),
            r = un(e, "b", "greaterEqualStrict");
          return (
            x(n.shape, r.shape, "Error in greaterEqualStrict: "),
            n.greaterEqual(r)
          );
        }
        var Op = ln({ equal_: gp }),
          Ip = ln({ equalStrict_: bp }),
          Cp = ln({ greater_: xp }),
          Ap = ln({ greaterEqual_: Sp }),
          kp = ln({ greaterEqualStrict_: Np }),
          Pp = ln({ greaterStrict_: Ep }),
          Tp = ln({ less_: vp }),
          Rp = ln({ lessEqual_: wp }),
          Dp = ln({ lessEqualStrict_: _p }),
          Mp = ln({ lessStrict_: yp }),
          jp = ln({ notEqual_: dp }),
          Lp = ln({ notEqualStrict_: mp });
        function Bp(t, e) {
          var n,
            r = un(t, "a", "add"),
            i = un(e, "b", "add");
          (n = Lt(r, i)), (r = n[0]), (i = n[1]);
          var a = rr(r.shape, i.shape);
          return _e.engine.runKernel(
            function(t) {
              return t.add(r, i);
            },
            { $a: r, $b: i },
            function(t) {
              return {
                $a: function() {
                  var e = t,
                    n = nr(r.shape, a);
                  return n.length > 0 && (e = e.sum(n)), e.reshape(r.shape);
                },
                $b: function() {
                  var e = t,
                    n = nr(i.shape, a);
                  return n.length > 0 && (e = e.sum(n)), e.reshape(i.shape);
                }
              };
            }
          );
        }
        function Fp(t) {
          _(Array.isArray(t), function() {
            return "The argument passed to tf.addN() must be a list of tensors";
          }),
            _(t.length >= 1, function() {
              return (
                "Must pass at least one tensor to tf.addN(), but got " +
                t.length
              );
            });
          var e = t.map(function(t, e) {
              return un(t, "tensors" + e, "addN");
            }),
            n = e[0];
          e.forEach(function(t) {
            if (t.dtype !== n.dtype)
              throw new Error(
                "All tensors passed to tf.addN() must have the same dtype"
              );
          }),
            e.forEach(function(t) {
              if (!I(t.shape, n.shape))
                throw new Error(
                  "All tensors passed to tf.addN() must have the same shape"
                );
            });
          var r = e;
          return _e.engine.runKernel(
            function(t) {
              return t.addN(e);
            },
            r,
            function(t) {
              var n = {};
              return (
                e.forEach(function(e, r) {
                  n[r] = function() {
                    return t.clone();
                  };
                }),
                n
              );
            }
          );
        }
        function zp(t, e) {
          var n = un(t, "a", "addStrict"),
            r = un(e, "b", "addStrict");
          return x(n.shape, r.shape, "Error in addStrict: "), n.add(r);
        }
        function Up(t, e) {
          var n,
            r = un(t, "a", "sub"),
            i = un(e, "b", "sub");
          (n = Lt(r, i)), (r = n[0]), (i = n[1]);
          var a = rr(r.shape, i.shape);
          return _e.engine.runKernel(
            function(t) {
              return t.subtract(r, i);
            },
            { $a: r, $b: i },
            function(t) {
              return {
                $a: function() {
                  var e = t,
                    n = nr(r.shape, a);
                  return n.length > 0 && (e = e.sum(n)), e.reshape(r.shape);
                },
                $b: function() {
                  var e = t,
                    n = nr(i.shape, a);
                  return (
                    n.length > 0 && (e = e.sum(n)), e.neg().reshape(i.shape)
                  );
                }
              };
            }
          );
        }
        function Vp(t, e) {
          var n = un(t, "a", "subStrict"),
            r = un(e, "b", "subStrict");
          return x(n.shape, r.shape, "Error in subStrict: "), n.sub(r);
        }
        function Wp(t, e) {
          var n = un(t, "base", "pow"),
            r = un(e, "exp", "pow"),
            i = rr(n.shape, r.shape);
          return (
            (t = n.cast(Mt(n.dtype, r.dtype))),
            (e = r.cast(Mt(n.dtype, r.dtype))),
            _e.engine.runKernel(
              function(t, e) {
                return e(t.pow(n, r));
              },
              { $base: n, $exp: r },
              function(t, e) {
                var a = e[0];
                return {
                  $base: function() {
                    var e = r.toFloat(),
                      a = t.mul(e.mul(n.pow(e.sub(xn(1))))),
                      o = nr(n.shape, i);
                    return o.length > 0 && (a = a.sum(o)), a.reshape(n.shape);
                  },
                  $exp: function() {
                    var e = n.greater(0),
                      o = n.log().where(e, Ln(n)),
                      s = t.mul(a.mul(o)),
                      u = nr(r.shape, i);
                    return u.length > 0 && (s = s.sum(u)), s.reshape(r.shape);
                  }
                };
              }
            )
          );
        }
        function $p(t, e) {
          return x(t.shape, e.shape, "Error in powStrict: "), t.pow(e);
        }
        function qp(t, e) {
          var n,
            r = un(t, "a", "mul"),
            i = un(e, "b", "mul");
          (n = Lt(r, i)), (r = n[0]), (i = n[1]);
          var a = rr(r.shape, i.shape);
          return _e.engine.runKernel(
            function(t) {
              return t.multiply(r, i);
            },
            { $a: r, $b: i },
            function(t) {
              return {
                $a: function() {
                  var e = t.mul(i.toFloat()),
                    n = nr(r.shape, a);
                  return n.length > 0 ? e.sum(n).reshape(r.shape) : e;
                },
                $b: function() {
                  var e = t.mul(r.toFloat()),
                    n = nr(i.shape, a);
                  return n.length > 0 ? e.sum(n).reshape(i.shape) : e;
                }
              };
            }
          );
        }
        function Hp(t, e) {
          var n = un(t, "a", "mul"),
            r = un(e, "b", "mul");
          return x(n.shape, r.shape, "Error in multiplyStrict: "), n.mul(r);
        }
        function Kp(t, e) {
          var n,
            r,
            i = un(t, "a", "div"),
            a = un(e, "b", "div");
          if (
            ((n = Lt(i, a)),
            (i = n[0]),
            (a = n[1]),
            "int32" === i.dtype && "int32" === a.dtype)
          )
            return fd(i, a);
          r = function(t) {
            return t.realDivide(i, a);
          };
          var o = rr(i.shape, a.shape);
          return _e.engine.runKernel(r, { $a: i, $b: a }, function(t) {
            return {
              $a: function() {
                var e = t.div(a.toFloat()),
                  n = nr(i.shape, o);
                return n.length > 0 ? e.sum(n).reshape(i.shape) : e;
              },
              $b: function() {
                var e = t.mul(i.toFloat()),
                  n = nr(a.shape, o);
                n.length > 0 && (e = e.sum(n).reshape(a.shape));
                var r = a.square();
                return e.div(r.toFloat()).neg();
              }
            };
          });
        }
        function Gp(t, e) {
          var n,
            r = un(t, "a", "floorDiv"),
            i = un(e, "b", "floorDiv");
          (n = Lt(r, i)), (r = n[0]), (i = n[1]);
          var a = rr(r.shape, i.shape);
          return _e.engine.runKernel(
            function(t) {
              return t.floorDiv(r, i);
            },
            { $a: r, $b: i },
            function(t) {
              return {
                $a: function() {
                  var e = t.div(i.toFloat()),
                    n = nr(r.shape, a);
                  return n.length > 0 ? e.sum(n).reshape(r.shape) : e;
                },
                $b: function() {
                  var e = t.mul(r.toFloat()),
                    n = nr(i.shape, a);
                  n.length > 0 && (e = e.sum(n).reshape(i.shape));
                  var o = i.square();
                  return e.div(o.toFloat()).neg();
                }
              };
            }
          );
        }
        function Xp(t, e) {
          var n = un(t, "a", "div"),
            r = un(e, "b", "div");
          return x(n.shape, r.shape, "Error in divideStrict: "), n.div(r);
        }
        function Jp(t, e) {
          var n,
            r = un(t, "a", "mod"),
            i = un(e, "b", "mod");
          (n = Lt(r, i)), (r = n[0]), (i = n[1]);
          var a = rr(r.shape, i.shape);
          return _e.engine.runKernel(
            function(t) {
              return t.mod(r, i);
            },
            { $a: r, $b: i },
            function(t) {
              return {
                $a: function() {
                  var e = nr(r.shape, a);
                  return e.length > 0 ? t.sum(e).reshape(r.shape) : t;
                },
                $b: function() {
                  var e = t.mul(
                      r
                        .div(i)
                        .floor()
                        .neg()
                    ),
                    n = nr(i.shape, a);
                  return n.length > 0 ? e.sum(n).reshape(i.shape) : e;
                }
              };
            }
          );
        }
        function Yp(t, e) {
          var n = un(t, "a", "modStrict"),
            r = un(e, "b", "modStrict");
          return x(n.shape, r.shape, "Error in modStrict: "), n.mod(r);
        }
        function Qp(t, e) {
          var n,
            r = un(t, "a", "minimum"),
            i = un(e, "b", "minimum");
          return (
            (n = Lt(r, i)),
            (r = n[0]),
            (i = n[1]),
            "bool" === r.dtype && ((r = r.toInt()), (i = i.toInt())),
            rr(r.shape, i.shape),
            _e.engine.runKernel(
              function(t) {
                return t.minimum(r, i);
              },
              { $a: r, $b: i },
              function(t) {
                return {
                  $a: function() {
                    return t.mul(r.lessEqual(i).toFloat());
                  },
                  $b: function() {
                    return t.mul(r.greater(i).toFloat());
                  }
                };
              }
            )
          );
        }
        function Zp(t, e) {
          var n = un(t, "a", "minimumStrict"),
            r = un(e, "b", "minimumStrict");
          return x(n.shape, r.shape, "Error in minimumStrict: "), n.minimum(r);
        }
        function td(t, e) {
          var n,
            r = un(t, "a", "maximum"),
            i = un(e, "b", "maximum");
          return (
            (n = Lt(r, i)),
            (r = n[0]),
            (i = n[1]),
            "bool" === r.dtype && ((r = r.toInt()), (i = i.toInt())),
            rr(r.shape, i.shape),
            _e.engine.runKernel(
              function(t) {
                return t.maximum(r, i);
              },
              { $a: r, $b: i },
              function(t) {
                return {
                  $a: function() {
                    return t.mul(r.greaterEqual(i).toFloat());
                  },
                  $b: function() {
                    return t.mul(r.less(i).toFloat());
                  }
                };
              }
            )
          );
        }
        function ed(t, e) {
          var n = un(t, "a", "maximumStrict"),
            r = un(e, "b", "maximumStrict");
          return x(n.shape, r.shape, "Error in maximumStrict: "), n.maximum(r);
        }
        function nd(t, e) {
          var n,
            r = un(t, "a", "squaredDifference"),
            i = un(e, "b", "squaredDifference");
          return (
            (n = Lt(r, i)),
            (r = n[0]),
            (i = n[1]),
            rr(r.shape, i.shape),
            _e.engine.runKernel(
              function(t) {
                return t.squaredDifference(r, i);
              },
              { $a: r, $b: i },
              function(t) {
                var e = xn(2);
                return {
                  $a: function() {
                    return t.mul(r.sub(i).mul(e));
                  },
                  $b: function() {
                    return t.mul(i.sub(r).mul(e));
                  }
                };
              }
            )
          );
        }
        function rd(t, e) {
          var n = un(t, "a", "squaredDifferenceStrict"),
            r = un(e, "b", "squaredDifferenceStrict");
          return (
            x(n.shape, r.shape, "Error in squaredDifferenceStrict: "),
            n.squaredDifference(r)
          );
        }
        function id(t, e) {
          var n,
            r = un(t, "a", "atan2"),
            i = un(e, "b", "atan2");
          (n = Lt(r, i)), (r = n[0]), (i = n[1]);
          var a = rr(r.shape, i.shape);
          return _e.engine.runKernel(
            function(t) {
              return t.atan2(r, i);
            },
            { $a: r, $b: i },
            function(t) {
              return {
                $a: function() {
                  var e = ad(r.square(), i.square()),
                    n = t.mul(i.div(e)),
                    o = nr(r.shape, a);
                  return o.length > 0 && (n = n.sum(o)), n.reshape(r.shape);
                },
                $b: function() {
                  var e = ad(r.square(), i.square()),
                    n = Kl(t.mul(r.div(e))),
                    o = nr(i.shape, a);
                  return o.length > 0 && (n = n.sum(o)), n.reshape(i.shape);
                }
              };
            }
          );
        }
        var ad = ln({ add_: Bp }),
          od = ln({ addN_: Fp }),
          sd = ln({ addStrict_: zp }),
          ud = ln({ atan2_: id }),
          cd = ln({ div_: Kp }),
          ld = ln({ divStrict_: Xp }),
          fd = ln({ floorDiv_: Gp }),
          hd = ln({ maximum_: td }),
          pd = ln({ maximumStrict_: ed }),
          dd = ln({ minimum_: Qp }),
          md = ln({ minimumStrict_: Zp }),
          vd = ln({ mod_: Jp }),
          yd = ln({ modStrict_: Yp }),
          gd = ln({ mul_: qp }),
          bd = ln({ mulStrict_: Hp }),
          wd = ln({ pow_: Wp }),
          _d = ln({ powStrict_: $p }),
          xd = ln({ squaredDifference_: nd }),
          Ed = ln({ squaredDifferenceStrict_: rd }),
          Sd = ln({ sub_: Up }),
          Nd = ln({ subStrict_: Vp });
        function Od(t) {
          var e = un(t, "x", "logicalNot", "bool");
          return _e.engine.runKernel(
            function(t) {
              return t.logicalNot(e);
            },
            { $x: e }
          );
        }
        function Id(t, e) {
          var n = un(t, "a", "logicalAnd", "bool"),
            r = un(e, "b", "logicalAnd", "bool");
          return (
            rr(n.shape, r.shape),
            _e.engine.runKernel(
              function(t) {
                return t.logicalAnd(n, r);
              },
              { $a: n, $b: r }
            )
          );
        }
        function Cd(t, e) {
          var n = un(t, "a", "logicalOr", "bool"),
            r = un(e, "b", "logicalOr", "bool");
          return (
            rr(n.shape, r.shape),
            _e.engine.runKernel(
              function(t) {
                return t.logicalOr(n, r);
              },
              { $a: n, $b: r }
            )
          );
        }
        function Ad(t, e) {
          var n = un(t, "a", "logicalXor", "bool"),
            r = un(e, "b", "logicalXor", "bool");
          return (
            rr(n.shape, r.shape), Dd(t, e).logicalAnd(Td(t, e).logicalNot())
          );
        }
        function kd(t, e, n) {
          var r = un(e, "a", "where"),
            i = un(n, "b", "where"),
            a = un(t, "condition", "where", "bool");
          return (
            x(r.shape, i.shape, "Error in where: "),
            1 === a.rank
              ? _(
                  a.shape[0] === r.shape[0],
                  "The first dimension of `a` must match the size of `condition`."
                )
              : x(a.shape, i.shape, "Error in where: "),
            _e.engine.runKernel(
              function(t) {
                return t.select(a, r, i);
              },
              { $condition: a, $a: r, $b: i },
              function(t) {
                return {
                  $condition: function() {
                    return Ln(a).toFloat();
                  },
                  $a: function() {
                    return t.mul(a.cast(t.dtype));
                  },
                  $b: function() {
                    return t.mul(a.logicalNot().cast(t.dtype));
                  }
                };
              }
            )
          );
        }
        function Pd(t) {
          return u(this, void 0, void 0, function() {
            var e, n, r;
            return c(this, function(i) {
              switch (i.label) {
                case 0:
                  return [
                    4,
                    (e = un(t, "condition", "whereAsync", "bool")).data()
                  ];
                case 1:
                  return (
                    (n = i.sent()),
                    (r = $c(e.shape, n)),
                    t !== e && e.dispose(),
                    [2, r]
                  );
              }
            });
          });
        }
        var Td = ln({ logicalAnd_: Id }),
          Rd = ln({ logicalNot_: Od }),
          Dd = ln({ logicalOr_: Cd }),
          Md = ln({ logicalXor_: Ad }),
          jd = ln({ where_: kd }),
          Ld = Pd;
        function Bd(t) {
          var e = un(t, "x", "relu");
          return "bool" === e.dtype
            ? e.toInt()
            : _e.engine.runKernel(
                function(t) {
                  return t.relu(e);
                },
                { $x: e },
                function(t) {
                  var n = e.step();
                  return {
                    $x: function() {
                      return t.mulStrict(n.toFloat());
                    }
                  };
                }
              );
        }
        function Fd(t) {
          var e = un(t, "x", "elu");
          return _e.engine.runKernel(
            function(t, n) {
              return n(t.elu(e));
            },
            { $x: e },
            function(t, e) {
              var n = e[0];
              return {
                $x: function() {
                  return _e.engine.runKernel(
                    function(e) {
                      return e.eluDer(t, n);
                    },
                    { dy: t, y: n }
                  );
                }
              };
            }
          );
        }
        function zd(t) {
          var e = un(t, "x", "selu");
          return _e.engine.runKernel(
            function(t) {
              return t.selu(e);
            },
            { $x: e },
            function(t) {
              return {
                $x: function() {
                  var n = e.greater(xn(0)),
                    r = xn(Ss),
                    i = xn(Ns),
                    a = t.mul(i),
                    o = t.mul(r).mul(e.toFloat().exp());
                  return jd(n, a, o);
                }
              };
            }
          );
        }
        function Ud(t, e) {
          void 0 === e && (e = 0.2);
          var n = un(t, "x", "leakyRelu");
          return hd(xn(e).mul(n), n);
        }
        function Vd(t, e) {
          var n = un(t, "x", "prelu"),
            r = un(e, "alpha", "prelu");
          return _e.engine.runKernel(
            function(t) {
              return t.prelu(n, r);
            },
            { $x: n, $alpha: r },
            function(t) {
              var e = n.greater(0);
              return {
                $x: function() {
                  return jd(e, t, t.mul(r));
                },
                $alpha: function() {
                  var i = jd(e, Ln(t), t.mul(n)),
                    a = nr(r.shape, t.shape);
                  return a.length > 0 && (i = i.sum(a)), i.reshape(r.shape);
                }
              };
            }
          );
        }
        var Wd = ln({ elu_: Fd }),
          $d = ln({ leakyRelu_: Ud }),
          qd = ln({ prelu_: Vd }),
          Hd = ln({ relu_: Bd }),
          Kd = ln({ selu_: zd });
        function Gd(t, e) {
          var n = un(t, "x", "transpose");
          return (
            null == e &&
              (e = n.shape
                .map(function(t, e) {
                  return e;
                })
                .reverse()),
            _(
              n.rank === e.length,
              "Error in transpose: rank of input " +
                n.rank +
                " must match length of perm " +
                e +
                "."
            ),
            e.forEach(function(t) {
              _(
                t >= 0 && t < n.rank,
                "All entries in 'perm' must be between 0 and " +
                  (n.rank - 1) +
                  " but got " +
                  e
              );
            }),
            n.rank <= 1
              ? n.clone()
              : _e.engine.runKernel(
                  function(t) {
                    return t.transpose(n, e);
                  },
                  { $x: n },
                  function(t) {
                    var n = Fe(e);
                    return {
                      $x: function() {
                        return t.transpose(n);
                      }
                    };
                  }
                )
          );
        }
        var Xd = ln({ transpose_: Gd });
        function Jd(t, e, n, r, i) {
          void 0 === e && (e = 5),
            void 0 === n && (n = 1),
            void 0 === r && (r = 1),
            void 0 === i && (i = 0.5);
          var a = un(t, "x", "localResponseNormalization");
          _(
            4 === a.rank || 3 === a.rank,
            "Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank " +
              a.rank +
              "."
          ),
            _(
              C(e),
              "Error in localResponseNormalization: depthRadius must be an integer\n                     but got depthRadius " +
                e +
                "."
            );
          var o = a,
            s = !1;
          3 === a.rank &&
            ((s = !0), (o = a.as4D(1, a.shape[0], a.shape[1], a.shape[2])));
          var u = _e.engine.runKernel(
            function(t, a) {
              return a(t.localResponseNormalization4D(o, e, n, r, i));
            },
            { x4D: o },
            function(t, a) {
              var s = a[0];
              return {
                x4D: function() {
                  return _e.engine.runKernel(function(a) {
                    return a.LRNGrad(t, o, s, e, n, r, i);
                  }, {});
                }
              };
            }
          );
          return s ? u.as3D(u.shape[1], u.shape[2], u.shape[3]) : u;
        }
        var Yd = ln({ localResponseNormalization_: Jd });
        function Qd(t, e, n, r) {
          void 0 === e && (e = "euclidean"),
            void 0 === n && (n = null),
            void 0 === r && (r = !1);
          var i = Zd((t = un(t, "x", "norm")), e, n),
            a = i.shape;
          if (r) {
            var o = M(n, t.shape);
            a = je(i.shape, o);
          }
          return i.reshape(a);
        }
        function Zd(t, e, n) {
          if ((void 0 === n && (n = null), 0 === t.rank)) return t.abs();
          if (1 !== t.rank && null === n) return Zd(t.reshape([-1]), e, n);
          if (
            1 === t.rank ||
            "number" == typeof n ||
            (Array.isArray(n) && 1 === n.length)
          ) {
            if (1 === e) return t.abs().sum(n);
            if (e === 1 / 0) return t.abs().max(n);
            if (e === -1 / 0) return t.abs().min(n);
            if ("euclidean" === e || 2 === e)
              return t
                .abs()
                .pow(xn(2, "int32"))
                .sum(n)
                .sqrt();
            throw new Error("Error in norm: invalid ord value: " + e);
          }
          if (Array.isArray(n) && 2 === n.length) {
            if (1 === e)
              return t
                .abs()
                .sum(n[0])
                .max(n[1] - 1);
            if (e === 1 / 0)
              return t
                .abs()
                .sum(n[1])
                .max(n[0]);
            if (e === -1 / 0)
              return t
                .abs()
                .sum(n[1])
                .min(n[0]);
            if ("fro" === e || "euclidean" === e)
              return t
                .square()
                .sum(n)
                .sqrt();
            throw new Error("Error in norm: invalid ord value: " + e);
          }
          throw new Error("Error in norm: invalid axis: " + n);
        }
        var tm = ln({ norm_: Qd });
        function em(t, e, n) {
          var r = un(t, "x", "unsortedSegmentSum"),
            i = un(e, "segmentIds", "unsortedSegmentSum", "int32");
          return (
            _(C(n), "numSegments must be of dtype int"),
            _e.engine.runKernel(
              function(t) {
                return t.unsortedSegmentSum(r, i, n);
              },
              { $x: r },
              function(t) {
                return {
                  $x: function() {
                    return am(t, i);
                  }
                };
              }
            )
          );
        }
        function nm(t, e, n) {
          void 0 === n && (n = 0);
          var r = un(t, "x", "gather"),
            i = un(e, "indices", "gather", "int32");
          n = M(n, r.shape)[0];
          var a = Ye(r, i, n);
          return _e.engine
            .runKernel(
              function(t) {
                return t.gather(r, i.flatten(), n);
              },
              { $x: r },
              function(t) {
                return {
                  $x: function() {
                    var e = r.shape,
                      a = i.size,
                      o = e.slice(0, n),
                      s = o.length,
                      u = e.slice(n, e.length).slice(1),
                      c = u.length,
                      l = rm(0, s),
                      f = rm(s + 1, s + 1 + c),
                      h = im([o, [a], u]),
                      p = t.reshape(h),
                      d = i.reshape([a]),
                      m = im([[s], l, f]),
                      v = p.transpose(m),
                      y = sm(v, d, r.shape[n]),
                      g = Fe(m);
                    return y.transpose(g);
                  }
                };
              }
            )
            .reshape(a.outputShape);
        }
        function rm(t, e) {
          for (var n = [], r = t; r < e; ++r) n.push(r);
          return n;
        }
        function im(t) {
          for (var e = [], n = 0; n < t.length; ++n)
            for (var r = 0; r < t[n].length; ++r) e.push(t[n][r]);
          return e;
        }
        function am(t, e) {
          for (
            var n = hd(e, Ln(e)),
              r = om(t, n),
              i = Ap(e, xn(0, "int32")),
              a = r.rank - i.rank,
              o = 0;
            o < a;
            ++o
          )
            i = Ec(i, o + 1);
          i = Td(i, An(r.shape, "bool"));
          var s = Ln(r);
          return jd(i, r, s);
        }
        var om = ln({ gather_: nm }),
          sm = ln({ unsortedSegmentSum_: em });
        function um(t, e, n, r) {
          for (
            var i = un(e, "data", "multiRNNCell"),
              a = cn(n, "c", "multiRNNCell"),
              o = cn(r, "h", "multiRNNCell"),
              s = i,
              u = [],
              c = 0;
            c < t.length;
            c++
          ) {
            var l = t[c](s, a[c], o[c]);
            u.push(l[0]), u.push(l[1]), (s = l[1]);
          }
          var f = [],
            h = [];
          for (c = 0; c < u.length; c += 2) f.push(u[c]), h.push(u[c + 1]);
          return [f, h];
        }
        function cm(t, e, n, r, i, a) {
          var o = un(t, "forgetBias", "basicLSTMCell"),
            s = un(e, "lstmKernel", "basicLSTMCell"),
            u = un(n, "lstmBias", "basicLSTMCell"),
            c = un(r, "data", "basicLSTMCell"),
            l = un(i, "c", "basicLSTMCell"),
            f = un(a, "h", "basicLSTMCell"),
            h = c
              .concat(f, 1)
              .matMul(s)
              .add(u),
            p = h.shape[0],
            d = h.shape[1] / 4,
            m = [p, d],
            v = h.slice([0, 0], m),
            y = h.slice([0, d], m),
            g = h.slice([0, 2 * d], m),
            b = h.slice([0, 3 * d], m),
            w = v
              .sigmoid()
              .mulStrict(y.tanh())
              .addStrict(l.mulStrict(o.add(g).sigmoid()));
          return [w, w.tanh().mulStrict(b.sigmoid())];
        }
        var lm = ln({ basicLSTMCell_: cm }),
          fm = ln({ multiRNNCell_: um });
        function hm(t, e, n, r, i) {
          void 0 === i && (i = !0);
          var a = un(t, "v", "movingAverage"),
            o = un(e, "x", "movingAverage"),
            s = un(n, "decay", "movingAverage");
          Bt(a, o), _(I(a.shape, o.shape), "Shape mismatch in v and x");
          var u = xn(1),
            c = u.sub(s),
            l = o.sub(a).mul(c);
          if (i) {
            _(null != r, "When using zeroDebias: true, step is required.");
            var f = un(r, "step", "movingAverage");
            l = l.div(u.sub(wd(s, f)));
          }
          return a.add(l);
        }
        var pm = ln({ movingAverage_: hm });
        function dm(t, e, n, r, i, a, o, s, u) {
          if (
            (void 0 === i && (i = 0),
            void 0 === a && (a = 0),
            void 0 === o && (o = 0),
            void 0 === s && (s = 0),
            void 0 === u && (u = 0),
            0 !== o)
          )
            throw new Error("ellipsis mask is not yet supported");
          if (0 !== s) throw new Error("new axis mask is not yet supported");
          var c = un(t, "x", "stridedSlice");
          if (
            r.every(function(t) {
              return 1 === t;
            })
          ) {
            var l = Ze(c.shape, e, n, r, i, a, o, s, u),
              f = l[0],
              h = l[1],
              p = l[2],
              d = h.filter(function(t, e) {
                return -1 === p.indexOf(e);
              });
            return zh(c, f, h).reshape(d);
          }
          return _e.engine.runKernel(
            function(t) {
              return t.stridedSlice(c, e, n, r, i, a, o, s, u);
            },
            { $x: c }
          );
        }
        var mm = ln({ stridedSlice_: dm });
        function vm(t, e, n) {
          void 0 === e && (e = 1), void 0 === n && (n = !0);
          var r = un(t, "x", "topk");
          if (0 === r.rank)
            throw new Error(
              "topk() expects the input to be of rank 1 or higher"
            );
          var i = r.shape[r.shape.length - 1];
          if (e > i)
            throw new Error(
              "'k' passed to topk() must be <= the last dimension (" +
                i +
                ") but got " +
                e
            );
          var a = _e.engine.runKernel(
            function(t) {
              return t.topk(r, e, n);
            },
            { $x: r }
          );
          return { values: a[0], indices: a[1] };
        }
        var ym = ln({ topk_: vm });
        function gm(t, e, n) {
          var r = un(t, "indices", "scatterND", "int32"),
            i = un(e, "updates", "scatterND");
          return (
            Ke(i, r, n),
            _e.engine.runKernel(
              function(t) {
                return t.scatterND(r, i, n);
              },
              { $indices: r, $updates: i }
            )
          );
        }
        var bm = ln({ scatterND_: gm });
        function wm(t) {
          _(
            "complex64" === t.dtype,
            "The dtype for tf.spectral.fft() must be complex64 but got " +
              t.dtype +
              "."
          );
          var e = t.shape[t.shape.length - 1],
            n = t.size / e,
            r = t.as2D(n, e);
          return _e.engine
            .runKernel(
              function(t) {
                return t.fft(r);
              },
              { input: t }
            )
            .reshape(t.shape);
        }
        function _m(t) {
          _(
            "complex64" === t.dtype,
            "The dtype for tf.spectral.ifft() must be complex64 but got " +
              t.dtype +
              "."
          );
          var e = t.shape[t.shape.length - 1],
            n = t.size / e,
            r = t.as2D(n, e);
          return _e.engine
            .runKernel(
              function(t) {
                return t.ifft(r);
              },
              { input: t }
            )
            .reshape(t.shape);
        }
        function xm(t) {
          _(
            "float32" === t.dtype,
            "The dtype for rfft() must be real value but\n    got " + t.dtype
          );
          var e = t.shape[t.shape.length - 1],
            n = t.size / e,
            r = t.zerosLike(),
            i = gn(t, r).as2D(n, e),
            a = Sm(i),
            o = Math.floor(e / 2) + 1,
            s = bn(a),
            u = wn(a),
            c = s.split([o, e - o], s.shape.length - 1),
            l = u.split([o, e - o], u.shape.length - 1),
            f = t.shape.slice();
          return (f[t.shape.length - 1] = o), gn(c[0], l[0]).reshape(f);
        }
        function Em(t) {
          var e = t.shape[t.shape.length - 1],
            n = t.size / e;
          if (e <= 2) {
            var r = t.as2D(n, e),
              i = Nm(r);
            return bn(i);
          }
          var a = [n, 2 * (e - 1)],
            o = bn(t).as2D(n, e),
            s = wn(t).as2D(n, e),
            u = o.slice([0, 1], [n, e - 2]).reverse(1),
            c = s
              .slice([0, 1], [n, e - 2])
              .reverse(1)
              .mul(xn(-1)),
            l = o.concat(u, 1),
            f = s.concat(c, 1);
          return (r = gn(l, f).as2D(a[0], a[1])), (i = Nm(r)), bn(i);
        }
        var Sm = ln({ fft_: wm }),
          Nm = ln({ ifft_: _m }),
          Om = ln({ rfft_: xm }),
          Im = ln({ irfft_: Em }),
          Cm = Object.freeze({ fft: Sm, ifft: Nm, rfft: Om, irfft: Im });
        function Am(t, e, n, r) {
          if ("int32" !== t.dtype)
            throw new Error(
              "tf.sparseToDense() expects the indices to be int32 type, but the dtype was " +
                t.dtype +
                "."
            );
          if (t.rank > 2)
            throw new Error(
              "sparseIndices should be a scalar, vector, or matrix, but got shape " +
                t.shape +
                "."
            );
          var i = t.rank > 0 ? t.shape[0] : 1,
            a = t.rank > 1 ? t.shape[1] : 1;
          if (n.length !== a)
            throw new Error(
              "outputShape has incorrect number of elements:, " +
                n.length +
                ", should be: " +
                a +
                "."
            );
          var o = e.size;
          if (0 !== e.rank && (1 !== e.rank || o !== i))
            throw new Error(
              "sparseValues has incorrect shape " +
                e.shape +
                ", should be [] or [" +
                i +
                "]"
            );
          if (e.dtype !== r.dtype)
            throw new Error(
              "sparseValues.dtype must match defaultValues.dtype"
            );
        }
        function km(t, e, n, r) {
          var i = un(t, "sparseIndices", "sparseToDense", "int32"),
            a = un(e, "sparseValues", "sparseToDense"),
            o = un(r, "defaultValue", "sparseToDense", a.dtype);
          return (
            Am(i, a, n, o),
            _e.engine.runKernel(
              function(t) {
                return t.sparseToDense(i, a, n, o);
              },
              { $sparseIndices: i, $sparseValues: a, $defaultValue: o }
            )
          );
        }
        var Pm = ln({ sparseToDense_: km });
        function Tm(t, e) {
          var n = un(e, "indices", "gatherND", "int32"),
            r = un(t, "x", "gatherND");
          return _e.engine.runKernel(
            function(t) {
              return t.gatherND(r, n);
            },
            { $x: r, $indices: n }
          );
        }
        var Rm,
          Dm = ln({ gatherND_: Tm });
        function Mm(t, e, n) {
          void 0 === n && (n = Rm.SUM_BY_NONZERO_WEIGHTS);
          var r = un(t, "losses", "computeWeightedLoss"),
            i = null;
          null != e && (i = un(e, "weights", "computeWeightedLoss"));
          var a = null == i ? r : r.mul(i);
          if (n === Rm.NONE) return a;
          if (n === Rm.SUM) return a.sum();
          if (n === Rm.MEAN) {
            if (null == i) return a.mean();
            var o = N(r.shape) / N(i.shape),
              s = a.sum().div(i.sum());
            return o > 1 ? s.div(xn(o)) : s;
          }
          if (n === Rm.SUM_BY_NONZERO_WEIGHTS) {
            if (null == i) return a.sum().div(xn(r.size));
            var u = i
              .mul(An(r.shape))
              .notEqual(xn(0))
              .sum()
              .toFloat();
            return a.sum().div(u);
          }
          throw Error("Unknown reduction: " + n);
        }
        function jm(t, e, n, r) {
          void 0 === r && (r = Rm.SUM_BY_NONZERO_WEIGHTS);
          var i = un(t, "labels", "absoluteDifference"),
            a = un(e, "predictions", "absoluteDifference"),
            o = null;
          null != n && (o = un(n, "weights", "absoluteDifference")),
            x(i.shape, a.shape, "Error in absoluteDifference: ");
          var s = i.sub(a).abs();
          return Km(s, o, r);
        }
        function Lm(t, e, n, r) {
          void 0 === r && (r = Rm.SUM_BY_NONZERO_WEIGHTS);
          var i = un(t, "labels", "meanSquaredError"),
            a = un(e, "predictions", "meanSquaredError"),
            o = null;
          null != n && (o = un(n, "weights", "meanSquaredError")),
            x(i.shape, a.shape, "Error in meanSquaredError: ");
          var s = i.squaredDifference(a);
          return Km(s, o, r);
        }
        function Bm(t, e, n, r, i) {
          void 0 === i && (i = Rm.SUM_BY_NONZERO_WEIGHTS);
          var a = un(t, "labels", "cosineDistance"),
            o = un(e, "predictions", "cosineDistance"),
            s = null;
          null != r && (s = un(r, "weights", "cosineDistance")),
            x(a.shape, o.shape, "Error in cosineDistance: ");
          var u = xn(1).sub(a.mul(o).sum(n, !0));
          return Km(u, s, i);
        }
        function Fm(t, e, n, r) {
          void 0 === r && (r = Rm.SUM_BY_NONZERO_WEIGHTS);
          var i = un(t, "labels", "hingeLoss"),
            a = un(e, "predictions", "hingeLoss"),
            o = null;
          null != n && (o = un(n, "weights", "hingeLoss")),
            x(i.shape, a.shape, "Error in hingeLoss: ");
          var s = xn(1);
          i = xn(2)
            .mul(i)
            .sub(s);
          var u = s.sub(i.mul(a)).relu();
          return Km(u, o, r);
        }
        function zm(t, e, n, r, i) {
          void 0 === r && (r = 1e-7),
            void 0 === i && (i = Rm.SUM_BY_NONZERO_WEIGHTS);
          var a = un(t, "labels", "logLoss"),
            o = un(e, "predictions", "logLoss"),
            s = null;
          null != n && (s = un(n, "weights", "logLoss")),
            x(a.shape, o.shape, "Error in logLoss: ");
          var u = xn(1),
            c = xn(r),
            l = a
              .mul(o.add(c).log())
              .neg()
              .sub(
                u.sub(a).mul(
                  u
                    .sub(o)
                    .add(c)
                    .log()
                )
              );
          return Km(l, s, i);
        }
        function Um(t, e) {
          var n = un(t, "labels", "sigmoidCrossEntropyWithLogits"),
            r = un(e, "logits", "sigmoidCrossEntropyWithLogits");
          x(n.shape, r.shape, "Error in sigmoidCrossEntropyWithLogits: ");
          var i = r.relu(),
            a = r.mul(n),
            o = r
              .abs()
              .neg()
              .exp()
              .log1p();
          return i.sub(a).add(o);
        }
        function Vm(t, e, n, r, i) {
          void 0 === r && (r = 0),
            void 0 === i && (i = Rm.SUM_BY_NONZERO_WEIGHTS);
          var a = un(t, "multiClassLabels", "sigmoidCrossEntropy"),
            o = un(e, "logits", "sigmoidCrossEntropy"),
            s = null;
          if (
            (null != n && (s = un(n, "weights", "sigmoidCrossEntropy")),
            x(a.shape, o.shape, "Error in sigmoidCrossEntropy: "),
            r > 0)
          ) {
            var u = xn(r),
              c = xn(1),
              l = xn(0.5);
            a = a.mul(c.sub(u)).add(l.mul(u));
          }
          var f = Um(a, o);
          return Km(f, s, i);
        }
        function Wm(t, e, n, r, i) {
          void 0 === r && (r = 1),
            void 0 === i && (i = Rm.SUM_BY_NONZERO_WEIGHTS);
          var a = un(t, "labels", "huberLoss"),
            o = un(e, "predictions", "huberLoss"),
            s = null;
          null != n && (s = un(n, "weights", "huberLoss")),
            x(a.shape, o.shape, "Error in huberLoss: ");
          var u = xn(r),
            c = o.sub(a).abs(),
            l = dd(c, u),
            f = c.sub(l),
            h = xn(0.5)
              .mul(l.square())
              .add(u.mul(f));
          return Km(h, s, i);
        }
        function $m(t, e, n) {
          if (
            (void 0 === n && (n = -1),
            -1 === n && (n = e.rank - 1),
            n !== e.rank - 1)
          )
            throw Error(
              "Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank " +
                e.rank +
                " and dim was " +
                n
            );
          return Ee(function(t, e) {
            var r = e.logSumExp([n], !0),
              i = e.toFloat().sub(r);
            return {
              value: i
                .mul(t)
                .neg()
                .sum([n]),
              gradFunc: function(e) {
                var r = je(e.shape, [n]);
                return [
                  e.reshape(r).mul(t.toFloat().sub(i.exp())),
                  e.reshape(r).mul(i.exp().sub(t.toFloat()))
                ];
              }
            };
          })(t, e);
        }
        function qm(t, e, n, r, i) {
          void 0 === r && (r = 0),
            void 0 === i && (i = Rm.SUM_BY_NONZERO_WEIGHTS);
          var a = un(t, "onehotLabels", "softmaxCrossEntropy"),
            o = un(e, "logits", "softmaxCrossEntropy"),
            s = null;
          if (
            (null != n && (s = un(n, "weights", "softmaxCrossEntropy")),
            x(a.shape, o.shape, "Error in softmaxCrossEntropy: "),
            r > 0)
          ) {
            var u = xn(r),
              c = xn(1),
              l = xn(a.shape[1]);
            a = a.mul(c.sub(u)).add(u.div(l));
          }
          var f = $m(a, o);
          return Km(f, s, i);
        }
        !(function(t) {
          (t[(t.NONE = 0)] = "NONE"),
            (t[(t.MEAN = 1)] = "MEAN"),
            (t[(t.SUM = 2)] = "SUM"),
            (t[(t.SUM_BY_NONZERO_WEIGHTS = 3)] = "SUM_BY_NONZERO_WEIGHTS");
        })(Rm || (Rm = {}));
        var Hm = ln({ absoluteDifference_: jm }),
          Km = ln({ computeWeightedLoss_: Mm }),
          Gm = ln({ cosineDistance_: Bm }),
          Xm = ln({ hingeLoss_: Fm }),
          Jm = ln({ huberLoss_: Wm }),
          Ym = ln({ logLoss_: zm }),
          Qm = ln({ meanSquaredError_: Lm }),
          Zm = ln({ sigmoidCrossEntropy_: Vm }),
          tv = ln({ softmaxCrossEntropy_: qm }),
          ev = Object.freeze({
            get Reduction() {
              return Rm;
            },
            absoluteDifference: Hm,
            computeWeightedLoss: Km,
            cosineDistance: Gm,
            hingeLoss: Xm,
            huberLoss: Jm,
            logLoss: Ym,
            meanSquaredError: Qm,
            sigmoidCrossEntropy: Zm,
            softmaxCrossEntropy: tv
          });
        function nv(t) {
          var e;
          if (Array.isArray(t)) {
            (e = !1),
              _(
                null != t && t.length > 0,
                "Gram-Schmidt process: input must not be null, undefined, or empty"
              );
            for (var n = t[0].shape[0], r = 1; r < t.length; ++r)
              _(
                t[r].shape[0] === n,
                "Gram-Schmidt: Non-unique lengths found in the input vectors: (" +
                  t[r].shape[0] +
                  " vs. " +
                  n +
                  ")"
              );
          } else
            (e = !0),
              (t = Pu(t, t.shape[0], 0).map(function(t) {
                return Bc(t, [0]);
              }));
          _(
            t.length <= t[0].shape[0],
            "Gram-Schmidt: Number of vectors (" +
              t.length +
              ") exceeds number of dimensions (" +
              t[0].shape[0] +
              ")."
          );
          var i = [],
            a = t,
            o = function(t) {
              i.push(
                _e.engine.tidy(function() {
                  var e = a[t];
                  if (t > 0)
                    for (var n = 0; n < t; ++n) {
                      var r = hp(i[n].mulStrict(e)).mul(i[n]);
                      e = e.sub(r);
                    }
                  return e.div(tm(e, "euclidean"));
                })
              );
            };
          for (r = 0; r < t.length; ++r) o(r);
          return e ? Fc(i, 0) : i;
        }
        function rv(t, e) {
          if ((void 0 === e && (e = !1), t.rank < 2))
            throw new Error(
              "qr() requires input tensor to have a rank >= 2, but got rank " +
                t.rank
            );
          if (2 === t.rank) return iv(t, e);
          var n = t.shape.slice(0, t.shape.length - 2).reduce(function(t, e) {
              return t * e;
            }),
            r = [],
            i = [];
          return (
            Vc(
              t.reshape([
                n,
                t.shape[t.shape.length - 2],
                t.shape[t.shape.length - 1]
              ]),
              0
            ).forEach(function(t) {
              var n = iv(t, e),
                a = n[0],
                o = n[1];
              r.push(a), i.push(o);
            }),
            [Fc(r, 0).reshape(t.shape), Fc(i, 0).reshape(t.shape)]
          );
        }
        function iv(t, e) {
          return (
            void 0 === e && (e = !1),
            _e.engine.tidy(function() {
              if (2 !== t.shape.length)
                throw new Error(
                  "qr2d() requires a 2D Tensor, but got a " +
                    t.shape.length +
                    "D Tensor."
                );
              for (
                var n = t.shape[0],
                  r = t.shape[1],
                  i = Sc(n),
                  a = t.clone(),
                  o = Sn([[1]], [1, 1]),
                  s = o.clone(),
                  u = n >= r ? r : n,
                  c = function(t) {
                    var e,
                      u = a,
                      c = s,
                      l = i;
                    (e = _e.engine.tidy(function() {
                      var e = a.slice([t, t], [n - t, 1]),
                        u = e.norm(),
                        c = a.slice([t, t], [1, 1]),
                        l = c.sign().neg(),
                        f = c.sub(l.mul(u)),
                        h = e.div(f);
                      s =
                        1 === h.shape[0]
                          ? o.clone()
                          : o.concat(
                              h.slice([1, 0], [h.shape[0] - 1, h.shape[1]]),
                              0
                            );
                      var p = l
                          .matMul(f)
                          .div(u)
                          .neg(),
                        d = a.slice([t, 0], [n - t, r]),
                        m = p.mul(s);
                      a =
                        0 === t
                          ? d.sub(m.matMul(s.transpose().matMul(d)))
                          : a
                              .slice([0, 0], [t, r])
                              .concat(
                                d.sub(m.matMul(s.transpose().matMul(d))),
                                0
                              );
                      var v = i.slice([0, t], [n, i.shape[1] - t]);
                      return (
                        (i =
                          0 === t
                            ? v.sub(v.matMul(s).matMul(m.transpose()))
                            : i
                                .slice([0, 0], [n, t])
                                .concat(
                                  v.sub(v.matMul(s).matMul(m.transpose())),
                                  1
                                )),
                        [s, a, i]
                      );
                    })),
                      (s = e[0]),
                      (a = e[1]),
                      (i = e[2]),
                      Oe([u, c, l]);
                  },
                  l = 0;
                l < u;
                ++l
              )
                c(l);
              return (
                !e &&
                  n > r &&
                  ((i = i.slice([0, 0], [n, r])),
                  (a = a.slice([0, 0], [r, r]))),
                [i, a]
              );
            })
          );
        }
        var av = ln({ gramSchmidt_: nv }),
          ov = ln({ qr_: rv }),
          sv = Object.freeze({ gramSchmidt: av, qr: ov });
        function uv(t, e, n) {
          void 0 === n && (n = !1);
          var r = un(t, "images", "resizeBilinear");
          _(
            3 === r.rank || 4 === r.rank,
            "Error in resizeBilinear: x must be rank 3 or 4, but got rank " +
              r.rank +
              "."
          ),
            _(
              2 === e.length,
              "Error in resizeBilinear: new shape must 2D, but got shape " +
                e +
                "."
            );
          var i = r,
            a = !1;
          3 === r.rank &&
            ((a = !0), (i = r.as4D(1, r.shape[0], r.shape[1], r.shape[2])));
          var o = e[0],
            s = e[1],
            u = _e.engine.runKernel(
              function(t, e) {
                return t.resizeBilinear(i, o, s, n);
              },
              { batchImages: i },
              function(t, e) {
                return {
                  batchImages: function() {
                    return _e.engine.runKernel(function(e) {
                      return e.resizeBilinearBackprop(t, i, n);
                    }, {});
                  }
                };
              }
            );
          return a ? u.as3D(u.shape[1], u.shape[2], u.shape[3]) : u;
        }
        function cv(t, e, n) {
          void 0 === n && (n = !1);
          var r = un(t, "images", "resizeNearestNeighbor");
          _(
            3 === r.rank || 4 === r.rank,
            "Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank " +
              r.rank +
              "."
          ),
            _(
              2 === e.length,
              "Error in resizeNearestNeighbor: new shape must 2D, but got shape " +
                e +
                "."
            ),
            _(
              "float32" === r.dtype || "int32" === r.dtype,
              "`images` must have `int32` or `float32` as dtype"
            );
          var i = r,
            a = !1;
          3 === r.rank &&
            ((a = !0), (i = r.as4D(1, r.shape[0], r.shape[1], r.shape[2])));
          var o = e[0],
            s = e[1],
            u = _e.engine.runKernel(
              function(t, e) {
                return t.resizeNearestNeighbor(i, o, s, n);
              },
              { batchImages: i },
              function(t, e) {
                return {
                  batchImages: function() {
                    return _e.engine.runKernel(function(e) {
                      return e.resizeNearestNeighborBackprop(t, i, n);
                    }, {});
                  }
                };
              }
            );
          return a ? u.as3D(u.shape[1], u.shape[2], u.shape[3]) : u;
        }
        function lv(t, e, n, r, i) {
          void 0 === r && (r = 0.5),
            void 0 === i && (i = Number.NEGATIVE_INFINITY);
          var a = un(t, "boxes", "nonMaxSuppression"),
            o = un(e, "scores", "nonMaxSuppression"),
            s = hv(a, o, n, r, i);
          return (
            (n = s.maxOutputSize),
            (r = s.iouThreshold),
            (i = s.scoreThreshold),
            _e.engine.runKernel(
              function(t) {
                return t.nonMaxSuppression(a, o, n, r, i);
              },
              { $boxes: a }
            )
          );
        }
        function fv(t, e, n, r, i) {
          return (
            void 0 === r && (r = 0.5),
            void 0 === i && (i = Number.NEGATIVE_INFINITY),
            u(this, void 0, void 0, function() {
              var a, o, s, u, l, f;
              return c(this, function(c) {
                switch (c.label) {
                  case 0:
                    return (
                      (a = un(t, "boxes", "nonMaxSuppressionAsync")),
                      (o = un(e, "scores", "nonMaxSuppressionAsync")),
                      (s = hv(a, o, n, r, i)),
                      (n = s.maxOutputSize),
                      (r = s.iouThreshold),
                      (i = s.scoreThreshold),
                      [4, a.data()]
                    );
                  case 1:
                    return (u = c.sent()), [4, o.data()];
                  case 2:
                    return (
                      (l = c.sent()),
                      (f = Xn(u, l, n, r, i)),
                      a !== t && a.dispose(),
                      o !== e && o.dispose(),
                      [2, f]
                    );
                }
              });
            })
          );
        }
        function hv(t, e, n, r, i) {
          null == r && (r = 0.5), null == i && (i = Number.NEGATIVE_INFINITY);
          var a = t.shape[0];
          return (
            (n = Math.min(n, a)),
            _(
              0 <= r && r <= 1,
              "iouThreshold must be in [0, 1], but was '" + r + "'"
            ),
            _(
              2 === t.rank,
              "boxes must be a 2D tensor, but was of rank '" + t.rank + "'"
            ),
            _(
              4 === t.shape[1],
              "boxes must have 4 columns, but 2nd dimension was " + t.shape[1]
            ),
            _(1 === e.rank, "scores must be a 1D tensor"),
            _(
              e.shape[0] === a,
              "scores has incompatible shape with boxes. Expected " +
                a +
                ", but was " +
                e.shape[0]
            ),
            { maxOutputSize: n, iouThreshold: r, scoreThreshold: i }
          );
        }
        function pv(t, e, n, r, i, a) {
          var o = un(t, "image", "cropAndResize", "float32"),
            s = un(e, "boxes", "cropAndResize", "float32"),
            u = un(n, "boxInd", "cropAndResize", "int32");
          (i = i || "bilinear"), (a = a || 0);
          var c = s.shape[0];
          return (
            _(
              4 === o.rank,
              "Error in cropAndResize: image must be rank 4,but got rank " +
                o.rank +
                "."
            ),
            _(
              2 === s.rank && 4 === s.shape[1],
              "Error in cropAndResize: boxes must be have size [" +
                c +
                ",4] but had shape " +
                s.shape +
                "."
            ),
            _(
              1 === u.rank && u.shape[0] === c,
              "Error in cropAndResize: boxInd must be have size [" +
                c +
                "] but had shape " +
                s.shape +
                "."
            ),
            _(
              2 === r.length,
              "Error in cropAndResize: cropSize must be of length 2, but got length " +
                r.length +
                "."
            ),
            _(
              r[0] >= 1 && r[1] >= 1,
              "cropSize must be atleast [1,1], but was " + r
            ),
            _(
              "bilinear" === i || "nearest" === i,
              "method must be bilinear or nearest, but was " + i
            ),
            _e.engine.runKernel(
              function(t, e) {
                return t.cropAndResize(o, s, u, r, i, a);
              },
              { $image: o, $boxes: s }
            )
          );
        }
        var dv = ln({ resizeBilinear_: uv }),
          mv = ln({ resizeNearestNeighbor_: cv }),
          vv = ln({ nonMaxSuppression_: lv }),
          yv = fv,
          gv = ln({ cropAndResize_: pv }),
          bv = Object.freeze({
            resizeBilinear: dv,
            resizeNearestNeighbor: mv,
            nonMaxSuppression: vv,
            nonMaxSuppressionAsync: yv,
            cropAndResize: gv
          });
        function wv(t, e, n, r, i, a) {
          var o;
          void 0 === n && (n = !1),
            void 0 === r && (r = !1),
            void 0 === a && (a = "linear");
          var s = un(t, "a", "fused matMul"),
            u = un(e, "b", "fused matMul");
          (s = (o = Lt(s, u))[0]), (u = o[1]);
          var c = n ? s.shape[s.rank - 2] : s.shape[s.rank - 1],
            l = r ? u.shape[u.rank - 1] : u.shape[u.rank - 2],
            f = n ? s.shape[s.rank - 1] : s.shape[s.rank - 2],
            h = r ? u.shape[u.rank - 2] : u.shape[u.rank - 1],
            p = s.shape.slice(0, -2),
            d = u.shape.slice(0, -2),
            m = N(p),
            v = N(d);
          _(
            s.rank >= 2 && u.rank >= 2 && s.rank === u.rank,
            "Error in fused matMul: inputs must have the same rank of at least 2, got ranks " +
              s.rank +
              " and " +
              u.rank +
              "."
          ),
            _(
              I(p, d),
              "Error in fused matMul: outer dimensions (" +
                p +
                ") and (" +
                d +
                ") of Tensors with shapes " +
                s.shape +
                " and " +
                u.shape +
                " must match."
            ),
            _(
              c === l,
              "Error in fused matMul: inner shapes (" +
                c +
                ") and (" +
                l +
                ") of Tensors with shapes " +
                s.shape +
                " and " +
                u.shape +
                " and transposeA=" +
                n +
                " and transposeB=" +
                r +
                " must match."
            );
          var y,
            g = s.shape.slice(0, -2).concat([f, h]),
            b = n ? s.as3D(m, c, f) : s.as3D(m, f, c),
            w = r ? u.as3D(v, h, l) : u.as3D(v, l, h);
          null != i &&
            ((y = Lt((y = un(i, "bias", "fused matMul")), s)[0]),
            rr(g, y.shape));
          var x = { $a: b, $b: w };
          return (
            null != i && (x.$bias = y),
            _e.engine
              .runKernel(
                function(t, e) {
                  return e(t.fusedBatchMatMul(b, w, n, r, y, a));
                },
                x,
                function(t, e) {
                  var o,
                    s = e[0];
                  if (null == a || "linear" === a) o = t;
                  else {
                    if ("relu" !== a)
                      throw new Error(
                        "Gradient for activation " +
                          a +
                          " has not been implemented yet."
                      );
                    o = t.mul(s.step());
                  }
                  var u = {};
                  return (
                    null != i &&
                      (u = {
                        $bias: function() {
                          var t = o,
                            e = nr(y.shape, g);
                          return (
                            e.length > 0 && (t = t.sum(e)), t.reshape(y.shape)
                          );
                        }
                      }),
                    n || r
                      ? !n && r
                        ? Object.assign(
                            {
                              $a: function() {
                                return o.matMul(w, !1, !1);
                              },
                              $b: function() {
                                return o.matMul(b, !0, !1);
                              }
                            },
                            u
                          )
                        : n && !r
                        ? Object.assign(
                            {
                              $a: function() {
                                return w.matMul(o, !1, !0);
                              },
                              $b: function() {
                                return b.matMul(o, !1, !1);
                              }
                            },
                            u
                          )
                        : Object.assign(
                            {
                              $a: function() {
                                return w.matMul(o, !0, !0);
                              },
                              $b: function() {
                                return o.matMul(b, !0, !0);
                              }
                            },
                            u
                          )
                      : Object.assign(
                          {
                            $a: function() {
                              return o.matMul(w, !1, !0);
                            },
                            $b: function() {
                              return b.matMul(o, !0, !1);
                            }
                          },
                          u
                        )
                  );
                }
              )
              .reshape(g)
          );
        }
        var _v = ln({ matMul_: wv }),
          xv = Object.freeze({ matMul: _v }),
          Ev = Object.freeze({
            image: bv,
            linalg: sv,
            losses: ev,
            spectral: Cm,
            fused: xv,
            op: ln,
            batchNormalization2d: gf,
            batchNormalization3d: bf,
            batchNormalization4d: wf,
            batchNormalization: _f,
            batchNorm: xf,
            batchNorm2d: Ef,
            batchNorm3d: Sf,
            batchNorm4d: Nf,
            complex: gn,
            real: bn,
            imag: wn,
            concat: Ou,
            concat1d: Iu,
            concat2d: Cu,
            concat3d: Au,
            concat4d: ku,
            split: Pu,
            conv1d: oh,
            conv2d: sh,
            conv3d: uh,
            conv2dDerFilter: ch,
            depthwiseConv2d: lh,
            separableConv2d: fh,
            conv2dTranspose: hh,
            matMul: Vf,
            dot: Wf,
            outerProduct: $f,
            reverse: gh,
            reverse1d: bh,
            reverse2d: wh,
            reverse3d: _h,
            reverse4d: xh,
            maxPool: Th,
            avgPool: Rh,
            pool: Dh,
            slice: zh,
            slice1d: Uh,
            slice2d: Vh,
            slice3d: Wh,
            slice4d: $h,
            abs: Al,
            acos: kl,
            acosh: Pl,
            asin: Tl,
            asinh: Rl,
            atan: Dl,
            atanh: Ml,
            ceil: jl,
            clipByValue: Ll,
            cos: Bl,
            cosh: Fl,
            erf: zl,
            exp: Ul,
            expm1: Vl,
            floor: Wl,
            log: $l,
            log1p: ql,
            logSigmoid: Hl,
            neg: Kl,
            reciprocal: Gl,
            round: Xl,
            rsqrt: Jl,
            sigmoid: Yl,
            sign: Ql,
            sin: Zl,
            sinh: tf,
            softplus: ef,
            sqrt: nf,
            square: rf,
            step: af,
            tan: of,
            tanh: sf,
            all: rp,
            any: ip,
            argMax: ap,
            argMin: op,
            logSumExp: sp,
            max: up,
            mean: cp,
            min: lp,
            moments: fp,
            sum: hp,
            prod: pp,
            equal: Op,
            equalStrict: Ip,
            greater: Cp,
            greaterEqual: Ap,
            greaterEqualStrict: kp,
            greaterStrict: Pp,
            less: Tp,
            lessEqual: Rp,
            lessEqualStrict: Dp,
            lessStrict: Mp,
            notEqual: jp,
            notEqualStrict: Lp,
            add: ad,
            addN: od,
            addStrict: sd,
            atan2: ud,
            div: cd,
            divStrict: ld,
            floorDiv: fd,
            maximum: hd,
            maximumStrict: pd,
            minimum: dd,
            minimumStrict: md,
            mod: vd,
            modStrict: yd,
            mul: gd,
            mulStrict: bd,
            pow: wd,
            powStrict: _d,
            squaredDifference: xd,
            squaredDifferenceStrict: Ed,
            sub: Sd,
            subStrict: Nd,
            elu: Wd,
            leakyRelu: $d,
            prelu: qd,
            relu: Hd,
            selu: Kd,
            logicalAnd: Td,
            logicalNot: Rd,
            logicalOr: Dd,
            logicalXor: Md,
            where: jd,
            whereAsync: Ld,
            buffer: vc,
            toPixels: Qu,
            print: yc,
            batchToSpaceND: gc,
            cast: bc,
            clone: wc,
            cumsum: _c,
            depthToSpace: xc,
            expandDims: Ec,
            eye: Sc,
            fromPixels: Nc,
            multinomial: Oc,
            oneHot: Ic,
            pad: Cc,
            pad1d: Ac,
            pad2d: kc,
            pad3d: Pc,
            pad4d: Tc,
            rand: Rc,
            randomNormal: Dc,
            randomUniform: Mc,
            reshape: jc,
            spaceToBatchND: Lc,
            squeeze: Bc,
            stack: Fc,
            tile: zc,
            truncatedNormal: Uc,
            unstack: Vc,
            setdiff1dAsync: Wc,
            fill: Pn,
            linspace: Dn,
            ones: An,
            range: Mn,
            scalar: xn,
            tensor: _n,
            tensor1d: En,
            tensor2d: Sn,
            tensor3d: Nn,
            tensor4d: On,
            tensor5d: In,
            tensor6d: Cn,
            zeros: kn,
            onesLike: jn,
            zerosLike: Ln,
            transpose: Xd,
            softmax: pn,
            logSoftmax: dn,
            localResponseNormalization: Yd,
            norm: tm,
            gather: om,
            unsortedSegmentSum: sm,
            basicLSTMCell: lm,
            multiRNNCell: fm,
            movingAverage: pm,
            stridedSlice: mm,
            topk: ym,
            scatterND: bm,
            fft: Sm,
            ifft: Nm,
            rfft: Om,
            irfft: Im,
            sparseToDense: Pm,
            gatherND: Dm
          });
        function Sv(t, e, n) {
          if ("linear" === e) return t.linear(n);
          if ("relu" === e) return t.relu(n);
          throw new Error(
            "Activation " + e + " has not been implemented for the CPU backend."
          );
        }
        var Nv = (function() {
          function t() {
            (this.blockSize = 48),
              (this.firstUse = !0),
              _e.get("IS_BROWSER") &&
                (this.fromPixels2DContext = document
                  .createElement("canvas")
                  .getContext("2d"));
          }
          return (
            (t.prototype.setDataMover = function(t) {
              this.data = new Bn(t);
            }),
            (t.prototype.register = function(t, e, n) {
              if (
                (this.firstUse &&
                  ((this.firstUse = !1),
                  _e.get("IS_NODE") &&
                    Ie(
                      "\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================\n"
                    )),
                this.data.has(t))
              )
                throw new Error("Data buffer is already registered");
              this.data.set(t, { dtype: n });
            }),
            (t.prototype.write = function(t, e) {
              if (null == e)
                throw new Error(
                  "MathBackendCPU.write(): values can not be null"
                );
              this.data.get(t).values = e;
            }),
            (t.prototype.fromPixels = function(t, e) {
              if (null == t)
                throw new Error(
                  "pixels passed to tf.browser.fromPixels() can not be null"
                );
              var n, r;
              if (_e.get("IS_NODE") && null == t.getContext)
                throw new Error(
                  "When running in node, pixels must be an HTMLCanvasElement like the one returned by the `canvas` npm package"
                );
              if (null != t.getContext)
                n = t.getContext("2d").getImageData(0, 0, t.width, t.height)
                  .data;
              else if (t instanceof ImageData) n = t.data;
              else {
                if (
                  !(
                    t instanceof HTMLImageElement ||
                    t instanceof HTMLVideoElement
                  )
                )
                  throw new Error(
                    "pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement or ImageData, but was " +
                      t.constructor.name
                  );
                if (null == this.fromPixels2DContext)
                  throw new Error(
                    "Can't read pixels from HTMLImageElement outside the browser."
                  );
                (this.fromPixels2DContext.canvas.width = t.width),
                  (this.fromPixels2DContext.canvas.height = t.height),
                  this.fromPixels2DContext.drawImage(
                    t,
                    0,
                    0,
                    t.width,
                    t.height
                  ),
                  (n = this.fromPixels2DContext.getImageData(
                    0,
                    0,
                    t.width,
                    t.height
                  ).data);
              }
              if (4 === e) r = new Int32Array(n);
              else {
                var i = t.width * t.height;
                r = new Int32Array(i * e);
                for (var a = 0; a < i; a++)
                  for (var o = 0; o < e; ++o) r[a * e + o] = n[4 * a + o];
              }
              return Nn(r, [t.height, t.width, e], "int32");
            }),
            (t.prototype.read = function(t) {
              return u(this, void 0, void 0, function() {
                return c(this, function(e) {
                  return [2, this.readSync(t)];
                });
              });
            }),
            (t.prototype.readSync = function(t) {
              var e = this.data.get(t),
                n = e.dtype,
                r = e.complexTensors;
              return "complex64" === n
                ? Un(r.real.dataSync(), r.imag.dataSync())
                : this.data.get(t).values;
            }),
            (t.prototype.disposeData = function(t) {
              if (this.data.has(t)) {
                var e = this.data.get(t).complexTensors;
                null != e && (e.real.dispose(), e.imag.dispose()),
                  this.data.delete(t);
              }
            }),
            (t.prototype.time = function(t) {
              return u(this, void 0, void 0, function() {
                var e;
                return c(this, function(n) {
                  return (e = it()), t(), [2, { kernelMs: it() - e }];
                });
              });
            }),
            (t.prototype.memory = function() {
              return {
                unreliable: !0,
                reasons: [
                  "The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."
                ]
              };
            }),
            (t.prototype.complex = function(t, e) {
              var n = St.make(t.shape, {}, "complex64");
              return (
                (this.data.get(n.dataId).complexTensors = {
                  real: _e.engine.keep(t.clone()),
                  imag: _e.engine.keep(e.clone())
                }),
                n
              );
            }),
            (t.prototype.real = function(t) {
              return this.data.get(t.dataId).complexTensors.real.clone();
            }),
            (t.prototype.imag = function(t) {
              return this.data.get(t.dataId).complexTensors.imag.clone();
            }),
            (t.prototype.assertNotComplex = function(t, e) {
              Array.isArray(t) || (t = [t]),
                t.forEach(function(t) {
                  null != t &&
                    _(
                      "complex64" !== t.dtype,
                      e + " does not support complex64 tensors."
                    );
                });
            }),
            (t.prototype.slice = function(t, e, n) {
              if ((this.assertNotComplex(t, "slice"), nn(t.shape, e, n))) {
                var r = rn(e, t.strides),
                  i = N(n);
                return _n(t.dataSync().subarray(r, r + i), n, t.dtype);
              }
              for (
                var a = vc(n, t.dtype), o = t.bufferSync(), s = 0;
                s < a.size;
                ++s
              ) {
                var u = a.indexToLoc(s).map(function(t, n) {
                  return t + e[n];
                });
                a.values[s] = o.get.apply(o, u);
              }
              return a.toTensor();
            }),
            (t.prototype.stridedSlice = function(t, e, n, r, i, a, o, s, u) {
              this.assertNotComplex(t, "stridedSlice");
              var c = Ze(t.shape, e, n, r, i, a, o, s, u),
                l = c[0],
                f = c[1],
                h = c[2],
                p = f.filter(function(t, e) {
                  return -1 === h.indexOf(e);
                });
              if (
                p.some(function(t) {
                  return 0 === t;
                })
              )
                return _n([], p);
              for (
                var d = vc(f, t.dtype), m = t.bufferSync(), v = 0;
                v < d.size;
                v++
              ) {
                for (
                  var y = d.indexToLoc(v), g = new Array(y.length), b = 0;
                  b < g.length;
                  b++
                )
                  g[b] = y[b] * r[b] + l[b];
                d.set.apply(d, [m.get.apply(m, g)].concat(y));
              }
              return d.toTensor().reshape(p);
            }),
            (t.prototype.unstack = function(t, e) {
              for (
                var n = t.shape[e], r = new Array(t.rank - 1), i = 0, a = 0;
                a < t.rank;
                a++
              )
                a !== e && (r[i++] = t.shape[a]);
              var o = new Array(t.rank).fill(0),
                s = t.shape.slice();
              s[e] = 1;
              var u = new Array(n);
              for (a = 0; a < u.length; a++)
                (o[e] = a), (u[a] = this.slice(t, o, s).reshape(r));
              return u;
            }),
            (t.prototype.reverse = function(t, e) {
              this.assertNotComplex(t, "reverse");
              for (
                var n = vc(t.shape, t.dtype),
                  r = t.bufferSync(),
                  i = function(i) {
                    var a = n.indexToLoc(i),
                      o = a.slice();
                    e.forEach(function(e) {
                      return (o[e] = t.shape[e] - 1 - o[e]);
                    }),
                      n.set.apply(n, [r.get.apply(r, o)].concat(a));
                  },
                  a = 0;
                a < n.size;
                a++
              )
                i(a);
              return n.toTensor();
            }),
            (t.prototype.concat = function(t, e) {
              this.assertNotComplex(t, "concat");
              var n = t.map(function(t) {
                  var n = N(t.shape.slice(e));
                  return t.as2D(-1, n);
                }),
                r = Ve(
                  n.map(function(t) {
                    return t.shape;
                  }),
                  1
                ),
                i = vc(r, t[0].dtype).values;
              if (1 === n[0].shape[0]) {
                var a = 0;
                n.forEach(function(t) {
                  i.set(t.dataSync(), a), (a += t.size);
                });
              } else {
                var o = 0;
                n.forEach(function(t) {
                  for (var e = t.dataSync(), n = 0, a = 0; a < t.shape[0]; ++a)
                    for (var s = a * r[1] + o, u = 0; u < t.shape[1]; ++u)
                      i[s + u] = e[n++];
                  o += t.shape[1];
                });
              }
              var s = Ve(
                t.map(function(t) {
                  return t.shape;
                }),
                e
              );
              return _n(i, s, t[0].dtype);
            }),
            (t.prototype.neg = function(t) {
              return this.assertNotComplex(t, "neg"), this.multiply(xn(-1), t);
            }),
            (t.prototype.add = function(t, e) {
              return "complex64" === t.dtype || "complex64" === e.dtype
                ? this.broadcastedBinaryComplexOp(
                    t.cast("complex64"),
                    e.cast("complex64"),
                    function(t, e, n, r) {
                      return { real: t + n, imag: e + r };
                    }
                  )
                : this.broadcastedBinaryOp(t, e, Mt(t.dtype, e.dtype), function(
                    t,
                    e
                  ) {
                    return t + e;
                  });
            }),
            (t.prototype.addN = function(t) {
              this.assertNotComplex(t, "addN");
              for (
                var e = t.map(function(t) {
                    return t.dataSync();
                  }),
                  n = vc(t[0].shape, t[0].dtype),
                  r = n.values,
                  i = 0;
                i < t.length;
                i++
              )
                for (var a = e[i], o = 0; o < r.length; o++) r[o] += a[o];
              return n.toTensor();
            }),
            (t.prototype.subtract = function(t, e) {
              return "complex64" === t.dtype || "complex64" === e.dtype
                ? this.broadcastedBinaryComplexOp(
                    t.cast("complex64"),
                    e.cast("complex64"),
                    function(t, e, n, r) {
                      return { real: t - n, imag: e - r };
                    }
                  )
                : this.broadcastedBinaryOp(t, e, Mt(t.dtype, e.dtype), function(
                    t,
                    e
                  ) {
                    return t - e;
                  });
            }),
            (t.prototype.pow = function(t, e) {
              return (
                this.assertNotComplex([t, e], "pow"),
                this.broadcastedBinaryOp(t, e, t.dtype, function(t, e) {
                  return Math.pow(t, e);
                })
              );
            }),
            (t.prototype.batchMatMul = function(t, e, n, r) {
              this.assertNotComplex([t, e], "matMul");
              for (
                var i = n ? t.shape[1] : t.shape[2],
                  a = n ? t.shape[2] : t.shape[1],
                  o = r ? e.shape[1] : e.shape[2],
                  s = t.shape[0],
                  u = t.dataSync(),
                  c = e.dataSync(),
                  l = n
                    ? [t.strides[0], 1, t.strides[1]]
                    : [t.strides[0], t.strides[1], 1],
                  f = l[0],
                  h = l[1],
                  p = l[2],
                  d = r
                    ? [1, e.strides[1], e.strides[0]]
                    : [e.strides[1], 1, e.strides[0]],
                  m = d[0],
                  v = d[1],
                  y = d[2],
                  g = a * o,
                  b = vc([s, a, o], t.dtype),
                  w = b.values,
                  _ = this.blockSize,
                  x = 0;
                x < s;
                x++
              )
                for (var E = 0; E < a; E += _)
                  for (var S = 0; S < o; S += _)
                    for (var N = 0; N < i; N += _)
                      for (
                        var O = Math.min(E + _, a),
                          I = Math.min(S + _, o),
                          C = Math.min(N + _, i),
                          A = E;
                        A < O;
                        A++
                      )
                        for (var k = S; k < I; k++) {
                          for (var P = 0, T = N; T < C; T++)
                            P +=
                              u[x * f + A * h + T * p] *
                              c[T * m + k * v + x * y];
                          w[x * g + (A * o + k)] += P;
                        }
              return b.toTensor();
            }),
            (t.prototype.fusedBatchMatMul = function(t, e, n, r, i, a) {
              var o = this.batchMatMul(t, e, n, r);
              return i && (o = this.add(o, i)), a && (o = Sv(this, a, o)), o;
            }),
            (t.prototype.multiply = function(t, e) {
              return "complex64" === t.dtype || "complex64" === e.dtype
                ? this.broadcastedBinaryComplexOp(
                    t.cast("complex64"),
                    e.cast("complex64"),
                    function(t, e, n, r) {
                      return { real: t * n - e * r, imag: t * r + e * n };
                    }
                  )
                : this.broadcastedBinaryOp(t, e, Mt(t.dtype, e.dtype), function(
                    t,
                    e
                  ) {
                    return t * e;
                  });
            }),
            (t.prototype.realDivide = function(t, e) {
              return (
                this.assertNotComplex([t, e], "realDivide"),
                this.broadcastedBinaryOp(t, e, "float32", function(t, e) {
                  return t / e;
                })
              );
            }),
            (t.prototype.floorDiv = function(t, e) {
              return (
                this.assertNotComplex([t, e], "floorDiv"),
                this.broadcastedBinaryOp(t, e, "int32", function(t, e) {
                  return Math.floor(t / e);
                })
              );
            }),
            (t.prototype.sum = function(t, e) {
              this.assertNotComplex(t, "sum"), Le("sum", e, t.rank);
              for (
                var n = Me(t.shape, e),
                  r = n[0],
                  i = n[1],
                  a = kn(r, Mt(t.dtype, "int32")),
                  o = N(i),
                  s = a.dataSync(),
                  u = t.dataSync(),
                  c = 0;
                c < s.length;
                ++c
              ) {
                for (var l = c * o, f = 0, h = 0; h < o; ++h) f += u[l + h];
                s[c] = f;
              }
              return a;
            }),
            (t.prototype.prod = function(t, e) {
              this.assertNotComplex(t, "sum");
              for (
                var n = Me(t.shape, e),
                  r = n[0],
                  i = n[1],
                  a = kn(r, Mt(t.dtype, "int32")),
                  o = N(i),
                  s = a.dataSync(),
                  u = t.dataSync(),
                  c = 0;
                c < s.length;
                ++c
              ) {
                for (var l = c * o, f = 1, h = 0; h < o; ++h) f *= u[l + h];
                s[c] = f;
              }
              return a;
            }),
            (t.prototype.unsortedSegmentSum = function(t, e, n) {
              this.assertNotComplex(t, "unsortedSegmentSum");
              for (var r = [], i = t.rank - e.rank, a = 0; a < i; ++a)
                e = e.expandDims(a + 1);
              for (a = 0; a < n; ++a) {
                var o = xn(a, "int32"),
                  s = Op(o, e)
                    .asType("float32")
                    .mul(t)
                    .sum(0);
                r.push(s);
              }
              return Fc(r);
            }),
            (t.prototype.argMin = function(t, e) {
              this.assertNotComplex(t, "argMin");
              var n = [e];
              Le("argMin", n, t.rank);
              for (
                var r = Me(t.shape, n),
                  i = r[0],
                  a = r[1],
                  o = kn(i, "int32"),
                  s = N(a),
                  u = o.dataSync(),
                  c = t.dataSync(),
                  l = 0;
                l < u.length;
                ++l
              ) {
                for (var f = l * s, h = c[f], p = 0, d = 0; d < s; ++d) {
                  var m = c[f + d];
                  m < h && ((h = m), (p = d));
                }
                u[l] = p;
              }
              return o;
            }),
            (t.prototype.argMax = function(t, e) {
              this.assertNotComplex(t, "argMax");
              var n = [e];
              Le("argMax", n, t.rank);
              for (
                var r = Me(t.shape, n),
                  i = r[0],
                  a = r[1],
                  o = kn(i, "int32"),
                  s = N(a),
                  u = o.dataSync(),
                  c = t.dataSync(),
                  l = 0;
                l < u.length;
                ++l
              ) {
                for (var f = l * s, h = c[f], p = 0, d = 0; d < s; ++d) {
                  var m = c[f + d];
                  m > h && ((h = m), (p = d));
                }
                u[l] = p;
              }
              return o;
            }),
            (t.prototype.cumsum = function(t, e, n, r) {
              if ((this.assertNotComplex(t, "cumsum"), e !== t.rank - 1))
                throw new Error(
                  "backend.cumsum in CPU expects an inner-most axis=" +
                    (t.rank - 1) +
                    " but got axis=" +
                    e
                );
              for (
                var i = Mt(t.dtype, "int32"),
                  a = kn(t.shape, i),
                  o = a.dataSync(),
                  s = t.dataSync(),
                  u = t.shape[t.rank - 1],
                  c = r
                    ? function(t, e) {
                        return t + u - e - 1;
                      }
                    : function(t, e) {
                        return t + e;
                      },
                  l = 0;
                l < s.length;
                l += u
              )
                for (var f = 0; f < u; f++) {
                  var h = c(l, f);
                  if (0 === f) o[h] = n ? 0 : s[h];
                  else {
                    var p = c(l, f - 1);
                    o[h] = n ? s[p] + o[p] : s[h] + o[p];
                  }
                }
              return a;
            }),
            (t.prototype.equal = function(t, e) {
              return (
                this.assertNotComplex([t, e], "equal"),
                this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                  return t === e ? 1 : 0;
                })
              );
            }),
            (t.prototype.notEqual = function(t, e) {
              return (
                this.assertNotComplex([t, e], "notEqual"),
                this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                  return t !== e ? 1 : 0;
                })
              );
            }),
            (t.prototype.less = function(t, e) {
              return (
                this.assertNotComplex([t, e], "less"),
                this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                  return t < e ? 1 : 0;
                })
              );
            }),
            (t.prototype.lessEqual = function(t, e) {
              return (
                this.assertNotComplex([t, e], "lessEqual"),
                this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                  return t <= e ? 1 : 0;
                })
              );
            }),
            (t.prototype.greater = function(t, e) {
              return (
                this.assertNotComplex([t, e], "greater"),
                this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                  return t > e ? 1 : 0;
                })
              );
            }),
            (t.prototype.greaterEqual = function(t, e) {
              return (
                this.assertNotComplex([t, e], "greaterEqual"),
                this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                  return t >= e ? 1 : 0;
                })
              );
            }),
            (t.prototype.logicalNot = function(t) {
              this.assertNotComplex(t, "logicalNot");
              for (
                var e = t.dataSync(), n = new Uint8Array(e.length), r = 0;
                r < e.length;
                ++r
              )
                n[r] = e[r] ? 0 : 1;
              return St.make(t.shape, { values: n }, "bool");
            }),
            (t.prototype.logicalAnd = function(t, e) {
              return (
                this.assertNotComplex([t, e], "logicalAnd"),
                this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                  return t && e;
                })
              );
            }),
            (t.prototype.logicalOr = function(t, e) {
              return (
                this.assertNotComplex([t, e], "logicalOr"),
                this.broadcastedBinaryOp(t, e, "bool", function(t, e) {
                  return t || e;
                })
              );
            }),
            (t.prototype.select = function(t, e, n) {
              this.assertNotComplex([t, e, n], "select");
              for (
                var r = t.dataSync(),
                  i = e.dataSync(),
                  a = n.dataSync(),
                  o = kn(e.shape, Mt(e.dtype, n.dtype)),
                  s = o.dataSync(),
                  u = 0,
                  c =
                    0 === t.rank || t.rank > 1 || 1 === e.rank ? 1 : e.shape[1],
                  l = 0;
                l < r.length;
                l++
              )
                for (var f = 0; f < c; f++)
                  1 === r[l] ? (s[u++] = i[l]) : (s[u++] = a[l]);
              return o;
            }),
            (t.prototype.where = function(t) {
              this.assertNotComplex([t], "where");
              var e = t.dataSync();
              return $c(t.shape, e);
            }),
            (t.prototype.topk = function(t, e, n) {
              return (
                this.assertNotComplex(t, "topk"),
                Qn(t.dataSync(), t.shape, t.dtype, e, n)
              );
            }),
            (t.prototype.min = function(t, e) {
              this.assertNotComplex(t, "min"), Le("min", e, t.rank);
              for (
                var n = Me(t.shape, e),
                  r = n[0],
                  i = n[1],
                  a = kn(r, t.dtype),
                  o = N(i),
                  s = a.dataSync(),
                  u = t.dataSync(),
                  c = 0;
                c < s.length;
                ++c
              ) {
                for (var l = c * o, f = u[l], h = 0; h < o; ++h) {
                  var p = u[l + h];
                  p < f && (f = p);
                }
                s[c] = f;
              }
              return a;
            }),
            (t.prototype.minimum = function(t, e) {
              return (
                this.assertNotComplex([t, e], "minimum"),
                this.broadcastedBinaryOp(t, e, t.dtype, function(t, e) {
                  return Math.min(t, e);
                })
              );
            }),
            (t.prototype.mod = function(t, e) {
              return (
                this.assertNotComplex([t, e], "mod"),
                this.broadcastedBinaryOp(t, e, t.dtype, function(t, e) {
                  var n = t % e;
                  return (t < 0 && e < 0) || (t >= 0 && e >= 0)
                    ? n
                    : (n + e) % e;
                })
              );
            }),
            (t.prototype.max = function(t, e) {
              this.assertNotComplex(t, "max"), Le("max", e, t.rank);
              for (
                var n = Me(t.shape, e),
                  r = n[0],
                  i = n[1],
                  a = kn(r, t.dtype),
                  o = N(i),
                  s = a.dataSync(),
                  u = t.dataSync(),
                  c = 0;
                c < s.length;
                ++c
              ) {
                for (var l = c * o, f = u[l], h = 0; h < o; ++h) {
                  var p = u[l + h];
                  p > f && (f = p);
                }
                s[c] = f;
              }
              return a;
            }),
            (t.prototype.maximum = function(t, e) {
              return (
                this.assertNotComplex([t, e], "maximum"),
                this.broadcastedBinaryOp(t, e, t.dtype, function(t, e) {
                  return Math.max(t, e);
                })
              );
            }),
            (t.prototype.all = function(t, e) {
              this.assertNotComplex(t, "all"), Le("all", e, t.rank);
              for (
                var n = Me(t.shape, e),
                  r = n[0],
                  i = n[1],
                  a = kn(r, t.dtype),
                  o = N(i),
                  s = a.dataSync(),
                  u = t.dataSync(),
                  c = 0;
                c < s.length;
                ++c
              ) {
                for (var l = c * o, f = u[l], h = 0; h < o; ++h) {
                  var p = u[l + h];
                  f = f && p;
                }
                s[c] = f;
              }
              return a;
            }),
            (t.prototype.any = function(t, e) {
              this.assertNotComplex(t, "any"), Le("any", e, t.rank);
              for (
                var n = Me(t.shape, e),
                  r = n[0],
                  i = n[1],
                  a = kn(r, t.dtype),
                  o = N(i),
                  s = a.dataSync(),
                  u = t.dataSync(),
                  c = 0;
                c < s.length;
                ++c
              ) {
                for (var l = c * o, f = u[l], h = 0; h < o; ++h) {
                  var p = u[l + h];
                  f = f || p;
                }
                s[c] = f;
              }
              return a;
            }),
            (t.prototype.squaredDifference = function(t, e) {
              return (
                this.assertNotComplex([t, e], "squaredDifference"),
                this.broadcastedBinaryOp(t, e, t.dtype, function(t, e) {
                  var n = t - e;
                  return n * n;
                })
              );
            }),
            (t.prototype.ceil = function(t) {
              this.assertNotComplex(t, "ceil");
              for (
                var e = t.dataSync(), n = new Float32Array(e.length), r = 0;
                r < e.length;
                ++r
              )
                n[r] = Math.ceil(e[r]);
              return St.make(t.shape, { values: n });
            }),
            (t.prototype.floor = function(t) {
              this.assertNotComplex(t, "floor");
              for (
                var e = t.dataSync(), n = new Float32Array(e.length), r = 0;
                r < e.length;
                ++r
              )
                n[r] = Math.floor(e[r]);
              return St.make(t.shape, { values: n });
            }),
            (t.prototype.sign = function(t) {
              this.assertNotComplex(t, "x");
              for (
                var e = t.dataSync(), n = new Float32Array(e.length), r = 0;
                r < e.length;
                ++r
              )
                e[r] < 0 ? (n[r] = -1) : e[r] > 0 ? (n[r] = 1) : (n[r] = 0);
              return St.make(t.shape, { values: n });
            }),
            (t.prototype.round = function(t) {
              this.assertNotComplex(t, "round");
              for (
                var e = t.dataSync(), n = new Float32Array(e.length), r = 0;
                r < e.length;
                ++r
              ) {
                var i = Math.floor(e[r]);
                e[r] - i < 0.5
                  ? (n[r] = Math.floor(e[r]))
                  : e[r] - i > 0.5
                  ? (n[r] = Math.ceil(e[r]))
                  : (n[r] = i % 2 == 0 ? i : i + 1);
              }
              return St.make(t.shape, { values: n });
            }),
            (t.prototype.exp = function(t) {
              this.assertNotComplex(t, "exp");
              for (
                var e = t.dataSync(), n = new Float32Array(e.length), r = 0;
                r < e.length;
                ++r
              )
                n[r] = Math.exp(e[r]);
              return St.make(t.shape, { values: n });
            }),
            (t.prototype.expm1 = function(t) {
              this.assertNotComplex(t, "expm1");
              for (
                var e = t.dataSync(), n = new Float32Array(e.length), r = 0;
                r < e.length;
                ++r
              )
                n[r] = Math.expm1(e[r]);
              return St.make(t.shape, { values: n });
            }),
            (t.prototype.log = function(t) {
              this.assertNotComplex(t, "log");
              for (
                var e = t.dataSync(), n = new Float32Array(e.length), r = 0;
                r < e.length;
                ++r
              ) {
                var i = e[r];
                n[r] = Math.log(i);
              }
              return St.make(t.shape, { values: n });
            }),
            (t.prototype.log1p = function(t) {
              this.assertNotComplex(t, "log1p");
              for (
                var e = t.dataSync(), n = new Float32Array(e.length), r = 0;
                r < e.length;
                ++r
              ) {
                var i = e[r];
                n[r] = Math.log1p(i);
              }
              return St.make(t.shape, { values: n });
            }),
            (t.prototype.sqrt = function(t) {
              this.assertNotComplex(t, "sqrt");
              for (
                var e = t.dataSync(), n = new Float32Array(e.length), r = 0;
                r < e.length;
                ++r
              ) {
                var i = e[r];
                n[r] = Math.sqrt(i);
              }
              return St.make(t.shape, { values: n });
            }),
            (t.prototype.rsqrt = function(t) {
              this.assertNotComplex(t, "rsqrt");
              for (
                var e = t.dataSync(), n = new Float32Array(e.length), r = 0;
                r < e.length;
                ++r
              ) {
                var i = e[r];
                n[r] = 1 / Math.sqrt(i);
              }
              return St.make(t.shape, { values: n });
            }),
            (t.prototype.square = function(t) {
              this.assertNotComplex(t, "square");
              for (
                var e = t.dataSync(), n = new Float32Array(e.length), r = 0;
                r < e.length;
                ++r
              ) {
                var i = e[r];
                n[r] = i * i;
              }
              return St.make(t.shape, { values: n });
            }),
            (t.prototype.reciprocal = function(t) {
              this.assertNotComplex(t, "reciprocal");
              for (
                var e = t.dataSync(), n = new Float32Array(e.length), r = 0;
                r < e.length;
                ++r
              )
                n[r] = 1 / e[r];
              return St.make(t.shape, { values: n });
            }),
            (t.prototype.linear = function(t) {
              return t;
            }),
            (t.prototype.relu = function(t) {
              this.assertNotComplex(t, "relu");
              for (
                var e = kn(t.shape, t.dtype),
                  n = e.dataSync(),
                  r = t.dataSync(),
                  i = 0;
                i < r.length;
                ++i
              )
                n[i] = Math.max(0, r[i]);
              return e;
            }),
            (t.prototype.prelu = function(t, e) {
              return (
                this.assertNotComplex([t, e], "prelu"),
                this.broadcastedBinaryOp(t, e, t.dtype, function(t, e) {
                  return t < 0 ? e * t : t;
                })
              );
            }),
            (t.prototype.elu = function(t) {
              this.assertNotComplex(t, "elu");
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              ) {
                var i = n[r];
                e[r] = i >= 0 ? i : Math.exp(i) - 1;
              }
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.eluDer = function(t, e) {
              this.assertNotComplex([t, e], "eluDer");
              for (
                var n = new Float32Array(e.size),
                  r = e.dataSync(),
                  i = t.dataSync(),
                  a = 0;
                a < r.length;
                ++a
              ) {
                var o = r[a];
                n[a] = o >= 1 ? i[a] : i[a] * (o + 1);
              }
              return St.make(e.shape, { values: n });
            }),
            (t.prototype.selu = function(t) {
              this.assertNotComplex(t, "selu");
              for (
                var e = Ss,
                  n = Ns,
                  r = new Float32Array(t.size),
                  i = t.dataSync(),
                  a = 0;
                a < i.length;
                ++a
              ) {
                var o = i[a];
                r[a] = o >= 0 ? n * o : e * (Math.exp(o) - 1);
              }
              return St.make(t.shape, { values: r });
            }),
            (t.prototype.clip = function(t, e, n) {
              this.assertNotComplex(t, "clip");
              for (
                var r = new Float32Array(t.size), i = t.dataSync(), a = 0;
                a < i.length;
                ++a
              ) {
                var o = i[a];
                r[a] = o > n ? n : o < e ? e : o;
              }
              return St.make(t.shape, { values: r });
            }),
            (t.prototype.abs = function(t) {
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = Math.abs(n[r]);
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.complexAbs = function(t) {
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < t.size;
                ++r
              ) {
                var i = n[2 * r],
                  a = n[2 * r + 1];
                e[r] = Math.hypot(i, a);
              }
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.int = function(t) {
              this.assertNotComplex(t, "int");
              for (
                var e = new Int32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = n[r];
              return St.make(t.shape, { values: e }, "int32");
            }),
            (t.prototype.sigmoid = function(t) {
              this.assertNotComplex(t, "sigmoid");
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = 1 / (1 + Math.exp(-n[r]));
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.softplus = function(t) {
              this.assertNotComplex(t, "softplus");
              for (
                var e = Math.log(1.1920928955078125e-7) + 2,
                  n = new Float32Array(t.size),
                  r = t.dataSync(),
                  i = 0;
                i < r.length;
                ++i
              ) {
                var a = r[i] > -e,
                  o = r[i] < e,
                  s = Math.exp(r[i]),
                  u = void 0;
                (u = o ? s : a ? r[i] : Math.log(1 + s)), (n[i] = u);
              }
              return St.make(t.shape, { values: n });
            }),
            (t.prototype.sin = function(t) {
              this.assertNotComplex(t, "sin");
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = Math.sin(n[r]);
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.cos = function(t) {
              this.assertNotComplex(t, "cos");
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = Math.cos(n[r]);
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.tan = function(t) {
              this.assertNotComplex(t, "tan");
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = Math.tan(n[r]);
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.asin = function(t) {
              this.assertNotComplex(t, "asin");
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = Math.asin(n[r]);
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.acos = function(t) {
              this.assertNotComplex(t, "acos");
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = Math.acos(n[r]);
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.atan = function(t) {
              this.assertNotComplex(t, "atan");
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = Math.atan(n[r]);
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.atan2 = function(t, e) {
              return (
                this.assertNotComplex([t, e], "atan2"),
                this.broadcastedBinaryOp(t, e, t.dtype, function(t, e) {
                  return Math.atan2(t, e);
                })
              );
            }),
            (t.prototype.sinh = function(t) {
              this.assertNotComplex(t, "sinh");
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = Math.sinh(n[r]);
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.cosh = function(t) {
              this.assertNotComplex(t, "cosh");
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = Math.cosh(n[r]);
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.tanh = function(t) {
              this.assertNotComplex(t, "tanh");
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = A(n[r]);
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.asinh = function(t) {
              this.assertNotComplex(t, "asinh");
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = Math.asinh(n[r]);
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.acosh = function(t) {
              this.assertNotComplex(t, "acosh");
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = Math.acosh(n[r]);
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.atanh = function(t) {
              this.assertNotComplex(t, "atanh");
              for (
                var e = new Float32Array(t.size), n = t.dataSync(), r = 0;
                r < n.length;
                ++r
              )
                e[r] = Math.atanh(n[r]);
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.erf = function(t) {
              this.assertNotComplex(t, "erf");
              for (
                var e = new Float32Array(t.size),
                  n = t.dataSync(),
                  r = gs,
                  i = bs,
                  a = ws,
                  o = _s,
                  s = xs,
                  u = Es,
                  c = 0;
                c < n.length;
                ++c
              ) {
                var l = n[c],
                  f = 1 / (1 + r * l);
                e[c] =
                  1 -
                  ((((u * f + s) * f + o) * f + a) * f + i) *
                    f *
                    Math.exp(-l * l);
              }
              return St.make(t.shape, { values: e });
            }),
            (t.prototype.step = function(t, e) {
              void 0 === e && (e = 0), this.assertNotComplex(t, "step");
              for (
                var n = new Float32Array(t.size), r = t.dataSync(), i = 0;
                i < r.length;
                ++i
              ) {
                var a = r[i];
                isNaN(a) ? (n[i] = NaN) : (n[i] = a > 0 ? 1 : e);
              }
              return St.make(t.shape, { values: n });
            }),
            (t.prototype.conv2d = function(t, e, n) {
              this.assertNotComplex([t, e], "conv2d");
              for (
                var r = n.filterHeight,
                  i = n.filterWidth,
                  a = n.dilationHeight,
                  o = n.dilationWidth,
                  s = n.padInfo.left,
                  u = n.padInfo.top,
                  c = vc(n.outShape, t.dtype),
                  l = t.dataSync(),
                  f = e.dataSync(),
                  h = c.values,
                  p = 0;
                p < n.batchSize;
                ++p
              )
                for (
                  var d = p * t.strides[0], m = p * c.strides[0], v = 0;
                  v < n.outHeight;
                  ++v
                )
                  for (
                    var y = m + v * c.strides[1],
                      g = v * n.strideHeight - s,
                      b = 0;
                    b < r;
                    b++
                  ) {
                    var w = g + b * a;
                    if (!(w < 0 || w >= n.inHeight))
                      for (
                        var _ = b * e.strides[0],
                          x = d + w * t.strides[1],
                          E = 0;
                        E < n.outWidth;
                        ++E
                      )
                        for (
                          var S = y + E * n.outChannels,
                            N = E * n.strideWidth - u,
                            O = 0;
                          O < i;
                          O++
                        ) {
                          var I = N + O * o;
                          if (!(I < 0 || I >= n.inWidth))
                            for (
                              var C = _ + O * e.strides[1],
                                A = x + I * n.inChannels,
                                k = C,
                                P = 0;
                              P < n.inChannels;
                              ++P
                            ) {
                              for (
                                var T = l[A + P], R = 0;
                                R < n.outChannels;
                                ++R
                              )
                                h[S + R] += T * f[k + R];
                              k += n.outChannels;
                            }
                        }
                  }
              return c.toTensor();
            }),
            (t.prototype.conv3d = function(t, e, n) {
              for (
                var r = n.filterDepth,
                  i = n.filterHeight,
                  a = n.filterWidth,
                  o = n.dilationDepth,
                  s = n.dilationHeight,
                  u = n.dilationWidth,
                  c = n.padInfo.front,
                  l = n.padInfo.left,
                  f = n.padInfo.top,
                  h = vc(n.outShape, t.dtype),
                  p = t.dataSync(),
                  d = e.dataSync(),
                  m = h.values,
                  v = 0;
                v < n.batchSize;
                ++v
              )
                for (
                  var y = v * t.strides[0], g = v * h.strides[0], b = 0;
                  b < n.outDepth;
                  ++b
                )
                  for (
                    var w = g + b * h.strides[1],
                      _ = b * n.strideDepth - c,
                      x = 0;
                    x < r;
                    x++
                  ) {
                    var E = _ + x * o;
                    if (!(E < 0 || E >= n.inDepth))
                      for (
                        var S = x * e.strides[0],
                          N = y + E * t.strides[1],
                          O = 0;
                        O < n.outHeight;
                        ++O
                      )
                        for (
                          var I = w + O * h.strides[2],
                            C = O * n.strideHeight - f,
                            A = 0;
                          A < i;
                          A++
                        ) {
                          var k = C + A * s;
                          if (!(k < 0 || k >= n.inHeight))
                            for (
                              var P = S + A * e.strides[1],
                                T = N + k * t.strides[2],
                                R = 0;
                              R < n.outWidth;
                              ++R
                            )
                              for (
                                var D = I + R * n.outChannels,
                                  M = R * n.strideWidth - l,
                                  j = 0;
                                j < a;
                                j++
                              ) {
                                var L = M + j * u;
                                if (!(L < 0 || L >= n.inWidth))
                                  for (
                                    var B = P + j * e.strides[2],
                                      F = T + L * n.inChannels,
                                      z = B,
                                      U = 0;
                                    U < n.inChannels;
                                    ++U
                                  ) {
                                    for (
                                      var V = p[F + U], W = 0;
                                      W < n.outChannels;
                                      ++W
                                    )
                                      m[D + W] += V * d[z + W];
                                    z += n.outChannels;
                                  }
                              }
                        }
                  }
              return h.toTensor();
            }),
            (t.prototype.conv2dDerInput = function(t, e, n) {
              this.assertNotComplex([t, e], "conv2dDerInput");
              for (
                var r = vc(n.inShape, "float32"),
                  i = r.values,
                  a = r.strides,
                  o = a[0],
                  s = a[1],
                  u = a[2],
                  c = t.dataSync(),
                  l = t.strides,
                  f = l[0],
                  h = l[1],
                  p = l[2],
                  d = e.dataSync(),
                  m = e.strides,
                  v = m[0],
                  y = m[1],
                  g = m[2],
                  b = n.batchSize,
                  w = n.filterHeight,
                  _ = n.filterWidth,
                  x = n.inChannels,
                  E = n.inHeight,
                  S = n.inWidth,
                  N = n.outChannels,
                  O = n.outHeight,
                  I = n.outWidth,
                  C = n.strideHeight,
                  A = n.strideWidth,
                  k = w - 1 - n.padInfo.top,
                  P = _ - 1 - n.padInfo.left,
                  T = 0;
                T < b;
                ++T
              )
                for (var R = 0; R < x; ++R)
                  for (var D = 0; D < E; ++D)
                    for (
                      var M = D - k,
                        j = Math.max(0, Math.ceil(M / C)),
                        L = Math.min(O, (w + M) / C),
                        B = 0;
                      B < S;
                      ++B
                    ) {
                      for (
                        var F = B - P,
                          z = Math.max(0, Math.ceil(F / A)),
                          U = Math.min(I, (_ + F) / A),
                          V = 0,
                          W = j;
                        W < L;
                        ++W
                      )
                        for (var $ = W * C - M, q = z; q < U; ++q)
                          for (
                            var H = f * T + h * W + p * q,
                              K =
                                v * (w - 1 - $) +
                                y * (_ - 1 - (q * A - F)) +
                                g * R,
                              G = 0;
                            G < N;
                            ++G
                          )
                            V += c[H + G] * d[K + G];
                      i[o * T + s * D + u * B + R] = V;
                    }
              return r.toTensor();
            }),
            (t.prototype.conv3dDerInput = function(t, e, n) {
              for (
                var r = vc(n.inShape, "float32"),
                  i = r.values,
                  a = r.strides,
                  o = a[0],
                  s = a[1],
                  u = a[2],
                  c = a[3],
                  l = t.dataSync(),
                  f = t.strides,
                  h = f[0],
                  p = f[1],
                  d = f[2],
                  m = f[3],
                  v = e.dataSync(),
                  y = e.strides,
                  g = y[0],
                  b = y[1],
                  w = y[2],
                  _ = y[3],
                  x = n.batchSize,
                  E = n.filterDepth,
                  S = n.filterHeight,
                  N = n.filterWidth,
                  O = n.inChannels,
                  I = n.inDepth,
                  C = n.inHeight,
                  A = n.inWidth,
                  k = n.outChannels,
                  P = n.outDepth,
                  T = n.outHeight,
                  R = n.outWidth,
                  D = n.strideDepth,
                  M = n.strideHeight,
                  j = n.strideWidth,
                  L = E - 1 - n.padInfo.front,
                  B = S - 1 - n.padInfo.top,
                  F = N - 1 - n.padInfo.left,
                  z = 0;
                z < x;
                ++z
              )
                for (var U = 0; U < O; ++U)
                  for (var V = 0; V < I; ++V)
                    for (
                      var W = V - L,
                        $ = Math.max(0, Math.ceil(W / D)),
                        q = Math.min(P, (E + W) / D),
                        H = 0;
                      H < C;
                      ++H
                    )
                      for (
                        var K = H - B,
                          G = Math.max(0, Math.ceil(K / M)),
                          X = Math.min(T, (S + K) / M),
                          J = 0;
                        J < A;
                        ++J
                      ) {
                        for (
                          var Y = J - F,
                            Q = Math.max(0, Math.ceil(Y / j)),
                            Z = Math.min(R, (N + Y) / j),
                            tt = 0,
                            et = $;
                          et < q;
                          ++et
                        )
                          for (var nt = et * D - W, rt = G; rt < X; ++rt)
                            for (var it = rt * M - K, at = Q; at < Z; ++at)
                              for (
                                var ot = h * z + p * et + d * rt + m * at,
                                  st =
                                    g * (E - 1 - nt) +
                                    b * (S - 1 - it) +
                                    w * (N - 1 - (at * j - Y)) +
                                    _ * U,
                                  ut = 0;
                                ut < k;
                                ++ut
                              )
                                tt += l[ot + ut] * v[st + ut];
                        i[o * z + s * V + u * H + c * J + U] = tt;
                      }
              return r.toTensor();
            }),
            (t.prototype.conv2dDerFilter = function(t, e, n) {
              this.assertNotComplex([t, e], "conv2dDerFilter");
              for (
                var r = n.strideHeight,
                  i = n.strideWidth,
                  a = n.filterHeight,
                  o = n.filterWidth,
                  s = vc(n.filterShape, "float32"),
                  u = n.padInfo.left,
                  c = n.padInfo.top,
                  l = t.bufferSync(),
                  f = e.bufferSync(),
                  h = 0;
                h < a;
                ++h
              )
                for (
                  var p = Math.max(0, Math.ceil((c - h) / r)),
                    d = Math.min(n.outHeight, (n.inHeight + c - h) / r),
                    m = 0;
                  m < o;
                  ++m
                )
                  for (
                    var v = Math.max(0, Math.ceil((u - m) / i)),
                      y = Math.min(n.outWidth, (n.inWidth + u - m) / i),
                      g = 0;
                    g < n.inChannels;
                    ++g
                  )
                    for (var b = 0; b < n.outChannels; ++b) {
                      for (var w = 0, _ = 0; _ < n.batchSize; ++_)
                        for (var x = p; x < d; ++x)
                          for (var E = h + x * r - c, S = v; S < y; ++S) {
                            var N = m + S * i - u;
                            w += l.get(_, E, N, g) * f.get(_, x, S, b);
                          }
                      s.set(w, h, m, g, b);
                    }
              return s.toTensor();
            }),
            (t.prototype.conv3dDerFilter = function(t, e, n) {
              for (
                var r = n.strideDepth,
                  i = n.strideHeight,
                  a = n.strideWidth,
                  o = n.filterDepth,
                  s = n.filterHeight,
                  u = n.filterWidth,
                  c = vc(n.filterShape, "float32"),
                  l = c.values,
                  f = c.strides,
                  h = f[0],
                  p = f[1],
                  d = f[2],
                  m = f[3],
                  v = e.dataSync(),
                  y = e.strides,
                  g = y[0],
                  b = y[1],
                  w = y[2],
                  _ = y[3],
                  x = t.dataSync(),
                  E = t.strides,
                  S = E[0],
                  N = E[1],
                  O = E[2],
                  I = E[3],
                  C = n.padInfo.front,
                  A = n.padInfo.left,
                  k = n.padInfo.top,
                  P = 0;
                P < o;
                ++P
              )
                for (
                  var T = Math.max(0, Math.ceil((C - P) / r)),
                    R = Math.min(n.outDepth, (n.inDepth + C - P) / r),
                    D = P * h,
                    M = 0;
                  M < s;
                  ++M
                )
                  for (
                    var j = Math.max(0, Math.ceil((k - M) / i)),
                      L = Math.min(n.outHeight, (n.inHeight + k - M) / i),
                      B = M * p + D,
                      F = 0;
                    F < u;
                    ++F
                  )
                    for (
                      var z = Math.max(0, Math.ceil((A - F) / a)),
                        U = Math.min(n.outWidth, (n.inWidth + A - F) / a),
                        V = F * d + B,
                        W = 0;
                      W < n.inChannels;
                      ++W
                    )
                      for (var $ = W * m + V, q = 0; q < n.outChannels; ++q) {
                        for (var H = 0, K = 0; K < n.batchSize; ++K)
                          for (var G = K * S, X = K * g, J = T; J < R; ++J)
                            for (
                              var Y = (P + J * r - C) * N + G,
                                Q = J * b + X,
                                Z = j;
                              Z < L;
                              ++Z
                            )
                              for (
                                var tt = (M + Z * i - k) * O + Y,
                                  et = Z * w + Q,
                                  nt = z;
                                nt < U;
                                ++nt
                              ) {
                                var rt = nt * _ + et;
                                H +=
                                  x[(F + nt * a - A) * I + tt + W] * v[rt + q];
                              }
                        l[$ + q] = H;
                      }
              return c.toTensor();
            }),
            (t.prototype.depthwiseConv2D = function(t, e, n) {
              this.assertNotComplex([t, e], "depthwiseConv2D");
              for (
                var r = n.filterHeight,
                  i = n.filterWidth,
                  a = n.dilationHeight,
                  o = n.dilationWidth,
                  s = n.padInfo.left,
                  u = n.padInfo.top,
                  c = n.outChannels / n.inChannels,
                  l = vc(n.outShape, t.dtype),
                  f = t.dataSync(),
                  h = e.dataSync(),
                  p = l.values,
                  d = 0;
                d < n.batchSize;
                ++d
              )
                for (
                  var m = d * t.strides[0], v = d * l.strides[0], y = 0;
                  y < n.outHeight;
                  ++y
                )
                  for (
                    var g = v + y * l.strides[1],
                      b = y * n.strideHeight - s,
                      w = 0;
                    w < r;
                    ++w
                  ) {
                    var _ = b + w * a;
                    if (!(_ < 0 || _ >= n.inHeight))
                      for (
                        var x = w * e.strides[0],
                          E = m + _ * t.strides[1],
                          S = 0;
                        S < n.outWidth;
                        ++S
                      )
                        for (
                          var N = g + S * l.strides[2],
                            O = S * n.strideWidth - u,
                            I = 0;
                          I < i;
                          ++I
                        ) {
                          var C = O + I * o;
                          if (!(C < 0 || C >= n.inWidth))
                            for (
                              var A = x + I * e.strides[1],
                                k = E + C * n.inChannels,
                                P = N,
                                T = A,
                                R = 0;
                              R < n.inChannels;
                              ++R
                            ) {
                              for (var D = f[k + R], M = 0; M < c; ++M)
                                p[P + M] += D * h[T + M];
                              (P += c), (T += c);
                            }
                        }
                  }
              return l.toTensor();
            }),
            (t.prototype.depthwiseConv2DDerInput = function(t, e, n) {
              this.assertNotComplex([t, e], "depthwiseConv2DDerInput");
              for (
                var r = vc(n.inShape, "float32"),
                  i = r.values,
                  a = r.strides,
                  o = a[0],
                  s = a[1],
                  u = a[2],
                  c = t.dataSync(),
                  l = t.strides,
                  f = l[0],
                  h = l[1],
                  p = l[2],
                  d = e.dataSync(),
                  m = e.strides,
                  v = m[0],
                  y = m[1],
                  g = m[2],
                  b = n.batchSize,
                  w = n.filterHeight,
                  _ = n.filterWidth,
                  x = n.inChannels,
                  E = n.inHeight,
                  S = n.inWidth,
                  N = n.outChannels,
                  O = n.outHeight,
                  I = n.outWidth,
                  C = n.strideHeight,
                  A = n.strideWidth,
                  k = w - 1 - n.padInfo.top,
                  P = _ - 1 - n.padInfo.left,
                  T = N / x,
                  R = 0;
                R < b;
                ++R
              )
                for (var D = 0; D < x; ++D)
                  for (var M = 0; M < E; ++M)
                    for (
                      var j = M - k,
                        L = Math.max(0, Math.ceil(j / C)),
                        B = Math.min(O, (w + j) / C),
                        F = 0;
                      F < S;
                      ++F
                    ) {
                      for (
                        var z = F - P,
                          U = Math.max(0, Math.ceil(z / A)),
                          V = Math.min(I, (_ + z) / A),
                          W = 0,
                          $ = L;
                        $ < B;
                        ++$
                      )
                        for (var q = $ * C - j, H = U; H < V; ++H)
                          for (
                            var K = f * R + h * $ + p * H,
                              G =
                                v * (w - 1 - q) +
                                y * (_ - 1 - (H * A - z)) +
                                g * D,
                              X = 0;
                            X < T;
                            ++X
                          )
                            W += c[K + (D * T + X)] * d[G + X];
                      i[o * R + s * M + u * F + D] = W;
                    }
              return r.toTensor();
            }),
            (t.prototype.depthwiseConv2DDerFilter = function(t, e, n) {
              this.assertNotComplex([t, e], "depthwiseConv2DDerFilter");
              for (
                var r = n.strideHeight,
                  i = n.strideWidth,
                  a = n.filterHeight,
                  o = n.filterWidth,
                  s = vc(n.filterShape, "float32"),
                  u = n.padInfo.left,
                  c = n.padInfo.top,
                  l = n.outChannels / n.inChannels,
                  f = t.bufferSync(),
                  h = e.bufferSync(),
                  p = 0;
                p < a;
                ++p
              )
                for (
                  var d = Math.max(0, Math.ceil((c - p) / r)),
                    m = Math.min(n.outHeight, (n.inHeight + c - p) / r),
                    v = 0;
                  v < o;
                  ++v
                )
                  for (
                    var y = Math.max(0, Math.ceil((u - v) / i)),
                      g = Math.min(n.outWidth, (n.inWidth + u - v) / i),
                      b = 0;
                    b < n.outChannels;
                    ++b
                  ) {
                    for (
                      var w = Math.trunc(b / l), _ = b % l, x = 0, E = 0;
                      E < n.batchSize;
                      ++E
                    )
                      for (var S = d; S < m; ++S)
                        for (var N = p + S * r - c, O = y; O < g; ++O) {
                          var I = v + O * i - u;
                          x += f.get(E, N, I, w) * h.get(E, S, O, b);
                        }
                    s.set(x, p, v, w, _);
                  }
              return s.toTensor();
            }),
            (t.prototype.tile = function(t, e) {
              this.assertNotComplex(t, "tile");
              for (var n = new Array(t.rank), r = 0; r < n.length; r++)
                n[r] = t.shape[r] * e[r];
              var i = vc(n, t.dtype),
                a = t.bufferSync();
              for (r = 0; r < i.values.length; ++r) {
                for (
                  var o = i.indexToLoc(r), s = new Array(t.rank), u = 0;
                  u < s.length;
                  u++
                )
                  s[u] = o[u] % t.shape[u];
                var c = a.locToIndex(s);
                i.values[r] = a.values[c];
              }
              return i.toTensor();
            }),
            (t.prototype.pad = function(t, e, n) {
              this.assertNotComplex(t, "pad");
              var r = e.map(function(e, n) {
                  return e[0] + t.shape[n] + e[1];
                }),
                i = e.map(function(t) {
                  return t[0];
                }),
                a = t.bufferSync(),
                o = vc(r, t.dtype);
              0 !== n && o.values.fill(n);
              for (var s = 0; s < t.size; s++) {
                var u = a.indexToLoc(s),
                  c = u.map(function(t, e) {
                    return t + i[e];
                  });
                o.set.apply(o, [a.get.apply(a, u)].concat(c));
              }
              return o.toTensor();
            }),
            (t.prototype.transpose = function(t, e) {
              this.assertNotComplex(t, "transpose");
              for (var n = new Array(t.rank), r = 0; r < n.length; r++)
                n[r] = t.shape[e[r]];
              var i = t.dataSync(),
                a = vc(n, t.dtype),
                o = t.bufferSync();
              for (r = 0; r < t.size; ++r) {
                for (
                  var s = o.indexToLoc(r), u = new Array(s.length), c = 0;
                  c < u.length;
                  c++
                )
                  u[c] = s[e[c]];
                var l = a.locToIndex(u);
                a.values[l] = i[r];
              }
              return a.toTensor();
            }),
            (t.prototype.gather = function(t, e, n) {
              this.assertNotComplex([t, e], "gather");
              var r = t.shape.slice(),
                i = e.dataSync();
              r[n] = i.length;
              for (
                var a = vc(r, t.dtype), o = t.bufferSync(), s = 0;
                s < a.size;
                ++s
              ) {
                var u = a.indexToLoc(s),
                  c = u.slice();
                c[n] = i[u[n]];
                var l = o.locToIndex(c);
                a.values[s] = o.values[l];
              }
              return a.toTensor();
            }),
            (t.prototype.batchToSpaceND = function(t, e, n) {
              this.assertNotComplex([t], "batchToSpaceND");
              var r = e.reduce(function(t, e) {
                  return t * e;
                }),
                i = Ce(t.shape, e, r),
                a = Ae(i.length, e.length),
                o = ke(t.shape, e, r),
                s = Pe(n, e.length),
                u = Te(o, n, e.length);
              return t
                .reshape(i)
                .transpose(a)
                .reshape(o)
                .slice(s, u);
            }),
            (t.prototype.spaceToBatchND = function(t, e, n) {
              this.assertNotComplex([t], "spaceToBatchND");
              var r = e.reduce(function(t, e) {
                  return t * e;
                }),
                i = [[0, 0]];
              i.push.apply(i, n);
              for (var a = 1 + e.length; a < t.shape.length; ++a)
                i.push([0, 0]);
              var o = t.pad(i),
                s = Ce(o.shape, e, r, !1),
                u = Ae(s.length, e.length, !1),
                c = ke(o.shape, e, r, !1);
              return o
                .reshape(s)
                .transpose(u)
                .reshape(c);
            }),
            (t.prototype.pool = function(t, e, n) {
              this.assertNotComplex(t, "pool");
              for (
                var r = e.strideHeight,
                  i = e.strideWidth,
                  a = e.dilationHeight,
                  o = e.dilationWidth,
                  s = e.effectiveFilterHeight,
                  u = e.effectiveFilterWidth,
                  c = e.padInfo.top,
                  l = e.padInfo.left,
                  f =
                    "max" === n
                      ? Number.NEGATIVE_INFINITY
                      : Number.POSITIVE_INFINITY,
                  h = t.dataSync(),
                  p = vc(e.outShape, t.dtype),
                  d = p.values,
                  m = e.outShape[1] * e.outShape[2] * e.outShape[3],
                  v = e.outShape[2] * e.outShape[3],
                  y = e.outShape[3],
                  g = 0;
                g < e.batchSize;
                ++g
              )
                for (
                  var b = g * m, w = g * t.strides[0], _ = 0;
                  _ < e.inChannels;
                  ++_
                )
                  for (var x = 0; x < e.outHeight; ++x)
                    for (
                      var E = x * r - c,
                        S = Math.max(0, E),
                        N = Math.min(e.inHeight, s + E),
                        O = b + x * v,
                        I = 0;
                      I < e.outWidth;
                      ++I
                    ) {
                      for (
                        var C = I * i - l,
                          A = Math.max(0, C),
                          k = Math.min(e.inWidth, u + C),
                          P = f,
                          T = 0,
                          R = 0,
                          D = S;
                        D < N;
                        D += a
                      ) {
                        for (
                          var M = w + D * t.strides[1], j = A;
                          j < k;
                          j += o
                        ) {
                          var L = h[M + j * t.strides[2] + _];
                          "max" === n && L > P
                            ? (P = L)
                            : "avg" === n && ((T += L), R++);
                        }
                        if (isNaN(P)) break;
                      }
                      d[O + I * y + _] = "avg" === n ? T / R : P;
                    }
              return p.toTensor();
            }),
            (t.prototype.maxPool = function(t, e) {
              return this.pool(t, e, "max");
            }),
            (t.prototype.maxPoolPositions = function(t, e) {
              for (
                var n = vc(e.outShape, "int32"),
                  r = e.strideHeight,
                  i = e.strideWidth,
                  a = e.dilationHeight,
                  o = e.dilationWidth,
                  s = e.effectiveFilterHeight,
                  u = e.effectiveFilterWidth,
                  c = e.padInfo.top,
                  l = e.padInfo.left,
                  f = t.bufferSync(),
                  h = 0;
                h < e.batchSize;
                ++h
              )
                for (var p = 0; p < e.inChannels; ++p)
                  for (var d = 0; d < e.outHeight; ++d) {
                    for (var m = d * r - c, v = m; v < 0; ) v += a;
                    for (
                      var y = Math.min(e.inHeight, s + m), g = 0;
                      g < e.outWidth;
                      ++g
                    ) {
                      for (var b = g * i - l, w = b; w < 0; ) w += o;
                      for (
                        var _ = Math.min(e.inWidth, u + b),
                          x = Number.NEGATIVE_INFINITY,
                          E = -1,
                          S = v;
                        S < y;
                        S += a
                      )
                        for (var N = S - m, O = w; O < _; O += o) {
                          var I = O - b,
                            C = f.get(h, S, O, p);
                          C > x && ((x = C), (E = N * u + I));
                        }
                      n.set(E, h, d, g, p);
                    }
                  }
              return n.toTensor();
            }),
            (t.prototype.maxPoolBackprop = function(t, e, n, r) {
              this.assertNotComplex([e, n], "maxPoolBackprop");
              for (
                var i = this.maxPoolPositions(e, r),
                  a = r.strideHeight,
                  o = r.strideWidth,
                  s = r.dilationHeight,
                  u = r.dilationWidth,
                  c = r.effectiveFilterHeight,
                  l = r.effectiveFilterWidth,
                  f = l - 1 - r.padInfo.left,
                  h = c - 1 - r.padInfo.top,
                  p = vc(e.shape, "float32"),
                  d = i.bufferSync(),
                  m = t.bufferSync(),
                  v = 0;
                v < r.batchSize;
                ++v
              )
                for (var y = 0; y < r.inChannels; ++y)
                  for (var g = 0; g < r.inHeight; ++g)
                    for (var b = 0; b < r.inWidth; ++b) {
                      for (
                        var w = g - h, _ = b - f, x = 0, E = 0;
                        E < c;
                        E += s
                      ) {
                        var S = (w + E) / a;
                        if (!(S < 0 || S >= r.outHeight || Math.floor(S) !== S))
                          for (var N = 0; N < l; N += u) {
                            var O = (_ + N) / o;
                            if (
                              !(O < 0 || O >= r.outWidth || Math.floor(O) !== O)
                            ) {
                              var I =
                                c * l - 1 - d.get(v, S, O, y) === E * l + N
                                  ? 1
                                  : 0;
                              0 !== I && (x += m.get(v, S, O, y) * I);
                            }
                          }
                      }
                      p.set(x, v, g, b, y);
                    }
              return p.toTensor();
            }),
            (t.prototype.avgPoolBackprop = function(t, e, n) {
              this.assertNotComplex([t, e], "avgPoolBackprop");
              for (
                var r = n.strideHeight,
                  i = n.strideWidth,
                  a = n.filterHeight,
                  o = n.filterWidth,
                  s = n.dilationHeight,
                  u = n.dilationWidth,
                  c = n.effectiveFilterHeight,
                  l = n.effectiveFilterWidth,
                  f = l - 1 - n.padInfo.left,
                  h = c - 1 - n.padInfo.top,
                  p = vc(e.shape, "float32"),
                  d = 1 / (a * o),
                  m = t.bufferSync(),
                  v = 0;
                v < n.batchSize;
                ++v
              )
                for (var y = 0; y < n.inChannels; ++y)
                  for (var g = 0; g < n.inHeight; ++g)
                    for (var b = 0; b < n.inWidth; ++b) {
                      for (
                        var w = g - h, _ = b - f, x = 0, E = 0;
                        E < c;
                        E += s
                      ) {
                        var S = (w + E) / r;
                        if (!(S < 0 || S >= n.outHeight || Math.floor(S) !== S))
                          for (var N = 0; N < l; N += u) {
                            var O = (_ + N) / i;
                            O < 0 ||
                              O >= n.outWidth ||
                              Math.floor(O) !== O ||
                              (x += m.get(v, S, O, y));
                          }
                      }
                      p.set(x * d, v, g, b, y);
                    }
              return p.toTensor();
            }),
            (t.prototype.cast = function(t, e) {
              return Fn(t, e, this);
            }),
            (t.prototype.reshape = function(t, e) {
              return zn(t, e);
            }),
            (t.prototype.avgPool = function(t, e) {
              return (
                this.assertNotComplex(t, "avgPool"),
                this.pool(t, e, "avg").toFloat()
              );
            }),
            (t.prototype.resizeBilinear = function(t, e, n, r) {
              this.assertNotComplex(t, "resizeBilinear");
              for (
                var i = t.shape,
                  a = i[0],
                  o = i[1],
                  s = i[2],
                  u = i[3],
                  c = t.dataSync(),
                  l = new Float32Array(N([a, e, n, u])),
                  f = [r && e > 1 ? o - 1 : o, r && n > 1 ? s - 1 : s],
                  h = [r && e > 1 ? e - 1 : e, r && n > 1 ? n - 1 : n],
                  p = 0,
                  d = f[0] / h[0],
                  m = f[1] / h[1],
                  v = 0;
                v < a;
                v++
              )
                for (var y = 0; y < e; y++)
                  for (
                    var g = d * y,
                      b = Math.floor(g),
                      w = g - b,
                      _ = Math.min(o - 1, Math.ceil(g)),
                      x = v * t.strides[0] + b * t.strides[1],
                      E = v * t.strides[0] + _ * t.strides[1],
                      S = 0;
                    S < n;
                    S++
                  )
                    for (
                      var O = m * S,
                        I = Math.floor(O),
                        C = O - I,
                        A = Math.min(s - 1, Math.ceil(O)),
                        k = x + I * t.strides[2],
                        P = E + I * t.strides[2],
                        T = x + +A * t.strides[2],
                        R = E + A * t.strides[2],
                        D = 0;
                      D < u;
                      D++
                    ) {
                      var M = c[k + D],
                        j = c[P + D],
                        L = M + (c[T + D] - M) * C,
                        B = L + (j + (c[R + D] - j) * C - L) * w;
                      l[p++] = B;
                    }
              return _n(l, [a, e, n, u]);
            }),
            (t.prototype.resizeBilinearBackprop = function(t, e, n) {
              this.assertNotComplex([t, e], "resizeBilinearBackprop");
              for (
                var r = e.shape,
                  i = r[0],
                  a = r[1],
                  o = r[2],
                  s = r[3],
                  u = t.shape,
                  c = u[1],
                  l = u[2],
                  f = new Float32Array(i * a * o * s),
                  h = [n && c > 1 ? a - 1 : a, n && l > 1 ? o - 1 : o],
                  p = [n && c > 1 ? c - 1 : c, n && l > 1 ? l - 1 : l],
                  d = h[0] / p[0],
                  m = h[1] / p[1],
                  v = t.dataSync(),
                  y = 0,
                  g = 0;
                g < i;
                g++
              )
                for (var b = g * e.strides[0], w = 0; w < c; w++)
                  for (
                    var _ = w * d,
                      x = Math.floor(_),
                      E = Math.min(Math.ceil(_), a - 1),
                      S = b + x * e.strides[1],
                      N = b + E * e.strides[1],
                      O = _ - x,
                      I = 1 - O,
                      C = 0;
                    C < l;
                    C++
                  )
                    for (
                      var A = C * m,
                        k = Math.floor(A),
                        P = Math.min(Math.ceil(A), o - 1),
                        T = A - k,
                        R = 1 - T,
                        D = S + k * e.strides[2],
                        M = S + P * e.strides[2],
                        j = N + k * e.strides[2],
                        L = N + P * e.strides[2],
                        B = I * R,
                        F = I * T,
                        z = O * R,
                        U = O * T,
                        V = 0;
                      V < s;
                      V++
                    ) {
                      var W = v[y++];
                      (f[D + V] += W * B),
                        (f[M + V] += W * F),
                        (f[j + V] += W * z),
                        (f[L + V] += W * U);
                    }
              return On(f, [i, o, a, s], e.dtype);
            }),
            (t.prototype.resizeNearestNeighbor = function(t, e, n, r) {
              this.assertNotComplex(t, "resizeNearestNeighbor");
              for (
                var i = t.shape,
                  a = i[0],
                  o = i[1],
                  s = i[2],
                  u = i[3],
                  c = t.dataSync(),
                  l = new Float32Array(a * e * n * u),
                  f = [r && e > 1 ? o - 1 : o, r && n > 1 ? s - 1 : s],
                  h = [r && e > 1 ? e - 1 : e, r && n > 1 ? n - 1 : n],
                  p = f[0] / h[0],
                  d = f[1] / h[1],
                  m = 0,
                  v = 0;
                v < a;
                v++
              )
                for (var y = v * t.strides[0], g = 0; g < e; g++)
                  for (
                    var b = p * g,
                      w =
                        y +
                        Math.min(o - 1, r ? Math.round(b) : Math.floor(b)) *
                          t.strides[1],
                      _ = 0;
                    _ < n;
                    _++
                  )
                    for (
                      var x = d * _,
                        E =
                          w +
                          Math.min(s - 1, r ? Math.round(x) : Math.floor(x)) *
                            t.strides[2],
                        S = 0;
                      S < u;
                      S++
                    ) {
                      var N = c[E + S];
                      l[m++] = N;
                    }
              return _n(l, [a, e, n, u], t.dtype);
            }),
            (t.prototype.resizeNearestNeighborBackprop = function(t, e, n) {
              this.assertNotComplex([t, e], "resizeNearestNeighborBackprop");
              for (
                var r = e.shape,
                  i = r[0],
                  a = r[1],
                  o = r[2],
                  s = r[3],
                  u = t.shape,
                  c = u[1],
                  l = u[2],
                  f = new Float32Array(i * a * o * s),
                  h = t.dataSync(),
                  p = [n && c > 1 ? a - 1 : a, n && l > 1 ? o - 1 : o],
                  d = [n && c > 1 ? c - 1 : c, n && l > 1 ? l - 1 : l],
                  m = p[0] / d[0],
                  v = p[1] / d[1],
                  y = 1 / m,
                  g = 1 / v,
                  b = 2 * Math.ceil(y) + 2,
                  w = 2 * Math.ceil(g) + 2,
                  _ = 0;
                _ < i;
                _++
              )
                for (var x = _ * e.strides[0], E = 0; E < a; E++)
                  for (
                    var S = x + E * e.strides[1],
                      N = Math.floor(E * y),
                      O = Math.floor(N - b / 2),
                      I = 0;
                    I < o;
                    I++
                  )
                    for (
                      var C = S + I * e.strides[2],
                        A = Math.floor(I * g),
                        k = Math.floor(A - w / 2),
                        P = 0;
                      P < s;
                      P++
                    ) {
                      for (var T = 0, R = 0; R < b; R++) {
                        var D = R + O;
                        if (!(D < 0 || D >= c)) {
                          var M = x + D * t.strides[1],
                            j = D * m;
                          if (
                            E ===
                            Math.min(a - 1, n ? Math.round(j) : Math.floor(j))
                          )
                            for (var L = 0; L < w; L++) {
                              var B = L + k;
                              if (!(B < 0 || B >= l)) {
                                var F = M + B * t.strides[2],
                                  z = B * v;
                                I ===
                                  Math.min(
                                    o - 1,
                                    n ? Math.round(z) : Math.floor(z)
                                  ) && (T += h[F + P]);
                              }
                            }
                        }
                      }
                      f[C + P] = T;
                    }
              return On(f, e.shape, e.dtype);
            }),
            (t.prototype.batchNormalization = function(t, e, n, r, i, a) {
              this.assertNotComplex([t, e, n, i, a], "batchNorm");
              for (
                var o = t.dataSync(),
                  s = e.dataSync(),
                  u = n.dataSync(),
                  c = i ? i.dataSync() : new Float32Array([1]),
                  l = a ? a.dataSync() : new Float32Array([0]),
                  f = new Float32Array(o.length),
                  h = l.length,
                  p = c.length,
                  d = u.length,
                  m = s.length,
                  v = 0,
                  y = 0,
                  g = 0,
                  b = 0,
                  w = 0;
                w < o.length;
                ++w
              )
                (f[w] =
                  l[v++] + ((o[w] - s[y++]) * c[g++]) / Math.sqrt(u[b++] + r)),
                  v >= h && (v = 0),
                  y >= m && (y = 0),
                  g >= p && (g = 0),
                  b >= d && (b = 0);
              return On(f, t.shape);
            }),
            (t.prototype.localResponseNormalization4D = function(
              t,
              e,
              n,
              r,
              i
            ) {
              this.assertNotComplex(t, "localResponseNormalization4D");
              var a = t.shape[3],
                o = a - 1,
                s = t.dataSync(),
                u = N(t.shape),
                c = new Float32Array(u);
              function l(t) {
                for (
                  var n = t % a,
                    r = t - n + Math.max(0, n - e),
                    i = t - n + Math.min(n + e, o),
                    u = 0;
                  r <= i;
                  r++
                ) {
                  var c = s[r];
                  u += c * c;
                }
                return u;
              }
              for (var f = 0; f < u; f++) {
                var h = l(f),
                  p = s[f] * Math.pow(n + r * h, -i);
                c[f] = p;
              }
              return On(c, t.shape);
            }),
            (t.prototype.LRNGrad = function(t, e, n, r, i, a, o) {
              this.assertNotComplex(t, "LRNGrad");
              for (
                var s = t.shape[3],
                  u = t.dataSync(),
                  c = e.dataSync(),
                  l = n.dataSync(),
                  f = new Float32Array(N(t.shape)),
                  h = N(t.shape),
                  p = 0;
                p < h;
                p++
              ) {
                for (
                  var d = p % s,
                    m = p - d + Math.max(0, d - r),
                    v = p - d + Math.min(s, d + r + 1),
                    y = 0,
                    g = m;
                  g < v;
                  g++
                )
                  y += Math.pow(c[g], 2);
                for (y = a * y + i, g = m; g < v; g++) {
                  var b = (-2 * a * o * c[g] * l[p]) / y;
                  p === g && (b += Math.pow(y, -o)), (b *= u[p]), (f[g] += b);
                }
              }
              return On(f, t.shape);
            }),
            (t.prototype.multinomial = function(t, e, n, r) {
              this.assertNotComplex(t, "multinomial");
              for (
                var i = e ? t : pn(t),
                  a = i.shape[0],
                  o = i.shape[1],
                  s = kn([a, n], "int32"),
                  u = s.dataSync(),
                  c = i.dataSync(),
                  l = 0;
                l < a;
                ++l
              ) {
                var f = l * o,
                  h = new Float32Array(o - 1);
                h[0] = c[f];
                for (var p = 1; p < h.length; ++p) h[p] = h[p - 1] + c[f + p];
                for (var d = Uu(r.toString()), m = l * n, v = 0; v < n; ++v) {
                  var y = d();
                  u[m + v] = h.length;
                  for (var g = 0; g < h.length; g++)
                    if (y < h[g]) {
                      u[m + v] = g;
                      break;
                    }
                }
              }
              return s;
            }),
            (t.prototype.oneHot = function(t, e, n, r) {
              this.assertNotComplex(t, "oneHot");
              var i = new Float32Array(t.size * e);
              i.fill(r);
              for (var a = t.dataSync(), o = 0; o < t.size; ++o)
                a[o] >= 0 && a[o] < e && (i[o * e + a[o]] = n);
              return Sn(i, [t.size, e], "int32");
            }),
            (t.prototype.nonMaxSuppression = function(t, e, n, r, i) {
              return (
                this.assertNotComplex(t, "nonMaxSuppression"),
                Xn(t.dataSync(), e.dataSync(), n, r, i)
              );
            }),
            (t.prototype.fft = function(t) {
              return this.fftBatch(t, !1);
            }),
            (t.prototype.ifft = function(t) {
              return this.fftBatch(t, !0);
            }),
            (t.prototype.fftBatch = function(t, e) {
              for (
                var n = t.shape[0],
                  r = t.shape[1],
                  i = vc(t.shape, "float32"),
                  a = vc(t.shape, "float32"),
                  o = bn(t).as2D(n, r),
                  s = wn(t).as2D(n, r),
                  u = 0;
                u < n;
                u++
              )
                for (
                  var c = o.slice([u, 0], [1, r]),
                    l = s.slice([u, 0], [1, r]),
                    f = gn(c, l),
                    h = this.fftImpl(f, e).dataSync(),
                    p = 0;
                  p < r;
                  p++
                ) {
                  var d = qn(h, p);
                  (i.values[u * r + p] = d.real),
                    (a.values[u * r + p] = d.imag);
                }
              return gn(i.toTensor(), a.toTensor()).as2D(n, r);
            }),
            (t.prototype.fftImpl = function(t, e) {
              var n = t.as1D(),
                r = n.size;
              if (this.isExponentOf2(r)) {
                var i = this.fftRadix2(n, r, e).as2D(t.shape[0], t.shape[1]);
                return e && (i = gn(bn(i).div(xn(r)), wn(i).div(xn(r)))), i;
              }
              var a = t.dataSync(),
                o = Vn(this.fourierTransformByMatmul(a, r, e));
              return gn(o.real, o.imag).as2D(t.shape[0], t.shape[1]);
            }),
            (t.prototype.isExponentOf2 = function(t) {
              return 0 == (t & (t - 1));
            }),
            (t.prototype.fftRadix2 = function(t, e, n) {
              if (1 === e) return t;
              var r = t.dataSync(),
                i = e / 2,
                a = Wn(r),
                o = gn(a.real, a.imag).as1D(),
                s = $n(r),
                u = gn(s.real, s.imag).as1D();
              (o = this.fftRadix2(o, i, n)), (u = this.fftRadix2(u, i, n));
              var c = Kn(e, n),
                l = gn(c.real, c.imag).mul(u),
                f = o.add(l),
                h = o.sub(l),
                p = bn(f).concat(bn(h)),
                d = wn(f).concat(wn(h));
              return gn(p, d).as1D();
            }),
            (t.prototype.fourierTransformByMatmul = function(t, e, n) {
              for (var r = new Float32Array(2 * e), i = 0; i < e; i++) {
                for (var a = 0, o = 0, s = 0; s < e; s++) {
                  var u = Gn(i * s, e, n),
                    c = qn(t, s);
                  (a += c.real * u.real - c.imag * u.imag),
                    (o += c.real * u.imag + c.imag * u.real);
                }
                n && ((a /= e), (o /= e)), Hn(r, a, o, i);
              }
              return r;
            }),
            (t.prototype.depthToSpace = function(t, e, n) {
              _(
                "NHWC" === n,
                "Only NHWC dataFormat supported on CPU for depthToSpace. Got " +
                  n
              ),
                _(
                  e > 1,
                  "blockSize should be > 1 for depthToSpace, but was: " + e
                );
              for (
                var r = t.shape[0],
                  i = t.shape[1],
                  a = t.shape[2],
                  o = t.shape[3],
                  s = i * e,
                  u = a * e,
                  c = o / (e * e),
                  l = t.dataSync(),
                  f = new Float32Array(r * s * u * c),
                  h = 0,
                  p = 0;
                p < r;
                ++p
              )
                for (var d = 0; d < s; ++d)
                  for (var m = Math.floor(d / e), v = d % e, y = 0; y < u; ++y)
                    for (
                      var g = Math.floor(y / e),
                        b = (v * e + (y % e)) * c,
                        w = 0;
                      w < c;
                      ++w
                    ) {
                      var x = w + b + o * (g + a * (m + i * p));
                      f[h++] = l[x];
                    }
              return On(f, [r, s, u, c]);
            }),
            (t.prototype.broadcastedBinaryOp = function(t, e, n, r) {
              var i = rr(t.shape, e.shape),
                a = vc(i, n),
                o = t.dataSync(),
                s = e.dataSync(),
                u = er(t.shape, i),
                c = er(e.shape, i),
                l = a.values;
              if (u.length + c.length === 0)
                for (var f = 0; f < l.length; ++f)
                  l[f] = r(o[f % o.length], s[f % s.length]);
              else {
                var h = t.bufferSync(),
                  p = e.bufferSync(),
                  d = function(n) {
                    var i = a.indexToLoc(n),
                      f = i.slice(-t.rank);
                    u.forEach(function(t) {
                      return (f[t] = 0);
                    });
                    var d = h.locToIndex(f),
                      m = i.slice(-e.rank);
                    c.forEach(function(t) {
                      return (m[t] = 0);
                    });
                    var v = p.locToIndex(m);
                    l[n] = r(o[d], s[v]);
                  };
                for (f = 0; f < l.length; ++f) d(f);
              }
              return a.toTensor();
            }),
            (t.prototype.broadcastedBinaryComplexOp = function(t, e, n) {
              var r = rr(t.shape, e.shape),
                i = vc(r, "float32"),
                a = vc(r, "float32"),
                o = t.dataSync(),
                s = e.dataSync(),
                u = er(t.shape, r),
                c = er(e.shape, r),
                l = i.values,
                f = a.values;
              if (u.length + c.length === 0)
                for (var h = 0; h < l.length; h++) {
                  var p = h % o.length,
                    d = h % s.length,
                    m = n(o[2 * p], o[2 * p + 1], s[2 * d], s[2 * d + 1]);
                  (l[h] = m.real), (f[h] = m.imag);
                }
              else {
                var v = this.data
                    .get(t.dataId)
                    .complexTensors.real.bufferSync(),
                  y = this.data.get(e.dataId).complexTensors.real.bufferSync(),
                  g = function(r) {
                    var a = i.indexToLoc(r),
                      h = a.slice(-t.rank);
                    u.forEach(function(t) {
                      return (h[t] = 0);
                    });
                    var p = v.locToIndex(h),
                      d = a.slice(-e.rank);
                    c.forEach(function(t) {
                      return (d[t] = 0);
                    });
                    var m = y.locToIndex(d),
                      g = n(o[2 * p], o[2 * p + 1], s[2 * m], s[2 * m + 1]);
                    (l[r] = g.real), (f[r] = g.imag);
                  };
                for (h = 0; h < l.length; h++) g(h);
              }
              return this.complex(i.toTensor(), a.toTensor());
            }),
            (t.prototype.split = function(t, e, n) {
              return Yn(t, e, n);
            }),
            (t.prototype.dispose = function() {}),
            (t.prototype.floatPrecision = function() {
              return 32;
            }),
            (t.prototype.cropAndResize = function(t, e, n, r, i, a) {
              for (
                var o = t.shape,
                  s = o[0],
                  u = o[1],
                  c = o[2],
                  l = o[3],
                  f = e.shape[0],
                  h = r[0],
                  p = r[1],
                  d = vc([f, h, p, l], t.dtype),
                  m = e.dataSync(),
                  v = n.dataSync(),
                  y = t.dataSync(),
                  g = t.strides,
                  b = d.strides,
                  w = 0;
                w < f;
                w++
              ) {
                var _ = 4 * w,
                  x = m[_],
                  E = m[_ + 1],
                  S = m[_ + 2],
                  N = m[_ + 3],
                  O = v[w];
                if (!(O >= s))
                  for (
                    var I = h > 1 ? ((S - x) * (u - 1)) / (h - 1) : 0,
                      C = p > 1 ? ((N - E) * (c - 1)) / (p - 1) : 0,
                      A = 0;
                    A < h;
                    A++
                  ) {
                    var k =
                      h > 1 ? x * (u - 1) + A * I : 0.5 * (x + S) * (u - 1);
                    if (k < 0 || k > u - 1)
                      for (var P = 0; P < p; P++)
                        for (var T = 0; T < l; T++) {
                          var R = T + P * b[2] + A * b[1] + w * b[0];
                          d.values[R] = a;
                        }
                    else if ("bilinear" === i) {
                      var D = Math.floor(k),
                        M = Math.ceil(k),
                        j = k - D;
                      for (P = 0; P < p; P++)
                        if (
                          (q =
                            p > 1
                              ? E * (c - 1) + P * C
                              : 0.5 * (E + N) * (c - 1)) < 0 ||
                          q > c - 1
                        )
                          for (T = 0; T < l; T++)
                            (R = T + P * b[2] + A * b[1] + w * b[0]),
                              (d.values[R] = a);
                        else {
                          var L = Math.floor(q),
                            B = Math.ceil(q),
                            F = q - L;
                          for (T = 0; T < l; T++) {
                            var z = y[(R = T + L * g[2] + D * g[1] + O * g[0])],
                              U = y[(R = T + B * g[2] + D * g[1] + O * g[0])],
                              V = y[(R = T + L * g[2] + M * g[1] + O * g[0])],
                              W = z + (U - z) * F,
                              $ =
                                V +
                                (y[(R = T + B * g[2] + M * g[1] + O * g[0])] -
                                  V) *
                                  F;
                            (R = T + P * b[2] + A * b[1] + w * b[0]),
                              (d.values[R] = W + ($ - W) * j);
                          }
                        }
                    } else
                      for (P = 0; P < p; ++P) {
                        var q;
                        if (
                          (q =
                            p > 1
                              ? E * (c - 1) + P * C
                              : 0.5 * (E + N) * (c - 1)) < 0 ||
                          q > c - 1
                        )
                          for (T = 0; T < l; T++)
                            (R = T + P * b[2] + A * b[1] + w * b[0]),
                              (d.values[R] = a);
                        else {
                          var H = Math.round(q),
                            K = Math.round(k);
                          for (T = 0; T < l; T++) {
                            var G = T + H * g[2] + K * g[1] + O * g[0],
                              X = T + P * b[2] + A * b[1] + w * b[0];
                            d.values[X] = y[G];
                          }
                        }
                      }
                  }
              }
              return d.toTensor();
            }),
            (t.prototype.sparseToDense = function(t, e, n, r) {
              var i = Ge(e, t, n),
                a = i.sliceRank,
                o = i.numUpdates,
                s = i.sliceSize,
                u = i.strides,
                c = i.outputSize;
              return this.scatter(t, e, n, c, s, o, a, u, r, !1);
            }),
            (t.prototype.gatherND = function(t, e) {
              var n = e.shape,
                r = n[n.length - 1],
                i = We(t, e),
                a = i[0],
                o = i[1],
                s = i[2],
                u = i[3];
              if (0 === o) return _n([], a, t.dtype);
              for (
                var c = new yt([o, s], t.dtype),
                  l = e.dataSync(),
                  f = t.dataSync(),
                  h = 0;
                h < o;
                h++
              ) {
                for (var p = [], d = 0, m = 0; m < r; m++) {
                  var v = l[h * r + m];
                  (d += v * u[m]), p.push(v);
                }
                if (d < 0 || d >= t.size / s)
                  throw new Error(
                    "Invalid indices: " + p + " does not index into " + t.shape
                  );
                for (var y = 0; y < s; y++) c.values[h * s + y] = f[d * s + y];
              }
              return c.toTensor().reshape(a);
            }),
            (t.prototype.scatterND = function(t, e, n) {
              var r = Ge(e, t, n),
                i = r.sliceRank,
                a = r.numUpdates,
                o = r.sliceSize,
                s = r.strides,
                u = r.outputSize,
                c = xn(0);
              return this.scatter(t, e, n, u, o, a, i, s, c, !0);
            }),
            (t.prototype.scatter = function(t, e, n, r, i, a, o, s, u, c) {
              var l = [r / i, i],
                f = t.dataSync(),
                h = e.dataSync();
              if (0 === r) return _n([], n, e.dtype);
              var p = new yt(l, e.dtype);
              p.values.fill(u.dataSync()[0]);
              for (var d = 0; d < a; d++) {
                for (var m = [], v = 0, y = 0; y < o; y++) {
                  var g = f[d * o + y];
                  m.push(g), (v += g * s[y]);
                }
                if (v < 0 || v >= r / i)
                  throw new Error(
                    "Invalid indices: " + m + " does not index into " + n
                  );
                for (var b = 0; b < i; b++)
                  c
                    ? (p.values[v * i + b] += h[d * i + b])
                    : (p.values[v * i + b] =
                        0 === e.rank ? h[0] : h[d * i + b]);
              }
              return p.toTensor().reshape(n);
            }),
            t
          );
        })();
        _e.registerBackend(
          "cpu",
          function() {
            return new Nv();
          },
          1,
          _t
        );
        var Ov =
          "undefined" != typeof requestAnimationFrame
            ? requestAnimationFrame
            : setImmediate;
        function Iv() {
          return new Promise(function(t) {
            return Ov(function() {
              return t();
            });
          });
        }
        var Cv = { float32: 4, int32: 4, uint16: 2, uint8: 1, bool: 1 };
        function Av(t) {
          return u(this, void 0, void 0, function() {
            var e, n, r, i;
            return c(this, function(a) {
              switch (a.label) {
                case 0:
                  for (r in ((e = []), (n = []), t)) {
                    if (
                      "float32" !== (i = t[r]).dtype &&
                      "int32" !== i.dtype &&
                      "bool" !== i.dtype
                    )
                      throw new Error(
                        "Unsupported dtype in weight '" + r + "': " + i.dtype
                      );
                    e.push({ name: r, shape: i.shape, dtype: i.dtype }),
                      n.push(i.data());
                  }
                  return [4, Promise.all(n)];
                case 1:
                  return [2, { data: Pv(a.sent()), specs: e }];
              }
            });
          });
        }
        function kv(t, e) {
          for (
            var n = {},
              r = 0,
              i = function(e) {
                var i = e.name,
                  a = e.dtype,
                  o = e.shape,
                  s = N(o),
                  u = void 0;
                if (("quantization" in e)) {
                  var c = e.quantization;
                  if ("uint8" !== c.dtype && "uint16" !== c.dtype)
                    throw new Error(
                      "Weight " +
                        e.name +
                        " has unknown quantization dtype " +
                        c.dtype +
                        ". Supported quantization dtypes are: 'uint8' and 'uint16'."
                    );
                  var l = Cv[c.dtype],
                    f = t.slice(r, r + s * l),
                    h =
                      "uint8" === c.dtype
                        ? new Uint8Array(f)
                        : new Uint16Array(f);
                  if ("float32" === a)
                    u = Float32Array.from(h, function(t) {
                      return t * c.scale + c.min;
                    });
                  else {
                    if ("int32" !== a)
                      throw new Error(
                        "Unsupported dtype in weight '" + i + "': " + a
                      );
                    u = Int32Array.from(h, function(t) {
                      return Math.round(t * c.scale + c.min);
                    });
                  }
                  r += s * l;
                } else {
                  var p = Cv[a];
                  if (((f = t.slice(r, r + s * p)), "float32" === a))
                    u = new Float32Array(f);
                  else if ("int32" === a) u = new Int32Array(f);
                  else {
                    if ("bool" !== a)
                      throw new Error(
                        "Unsupported dtype in weight '" + i + "': " + a
                      );
                    u = new Uint8Array(f);
                  }
                  r += s * p;
                }
                var d = void 0;
                if ("float32" === a) d = _n(u, o, "float32");
                else if ("int32" === a) d = _n(u, o, "int32");
                else {
                  if ("bool" !== a)
                    throw new Error(
                      "Unsupported dtype in weight '" + i + "': " + a
                    );
                  d = _n(u, o, "bool");
                }
                n[i] = d;
              },
              a = 0,
              o = e;
            a < o.length;
            a++
          )
            i(o[a]);
          return n;
        }
        function Pv(t) {
          if (null === t)
            throw new Error("Invalid input value: " + JSON.stringify(t));
          var e = 0,
            n = [];
          t.forEach(function(t) {
            if (
              ((e += t.byteLength),
              n.push(
                t.byteLength === t.buffer.byteLength ? t : new t.constructor(t)
              ),
              !(
                t instanceof Float32Array ||
                t instanceof Int32Array ||
                t instanceof Uint8Array
              ))
            )
              throw new Error(
                "Unsupported TypedArray subtype: " + t.constructor.name
              );
          });
          var r = new Uint8Array(e),
            i = 0;
          return (
            n.forEach(function(t) {
              r.set(new Uint8Array(t.buffer), i), (i += t.byteLength);
            }),
            r.buffer
          );
        }
        var Tv =
          "undefined" != typeof i &&
          ("undefined" == typeof Blob ||
            "undefined" == typeof atob ||
            "undefined" == typeof btoa);
        function Rv(t) {
          return Tv ? i.byteLength(t) : new Blob([t]).size;
        }
        function Dv(t) {
          return Tv
            ? i.from(t).toString("base64")
            : btoa(String.fromCharCode.apply(null, new Uint8Array(t)));
        }
        function Mv(t) {
          if (Tv) {
            var e = i.from(t, "base64");
            return e.buffer.slice(e.byteOffset, e.byteOffset + e.byteLength);
          }
          for (
            var n = atob(t), r = new Uint8Array(n.length), a = 0;
            a < n.length;
            ++a
          )
            r.set([n.charCodeAt(a)], a);
          return r.buffer;
        }
        function jv(t) {
          var e = 0;
          t.forEach(function(t) {
            e += t.byteLength;
          });
          var n = new Uint8Array(e),
            r = 0;
          return (
            t.forEach(function(t) {
              n.set(new Uint8Array(t), r), (r += t.byteLength);
            }),
            n.buffer
          );
        }
        function Lv(t) {
          for (t = t.trim(); t.endsWith("/"); ) t = t.slice(0, t.length - 1);
          var e = t.split("/");
          return e[e.length - 1];
        }
        function Bv(t) {
          if (t.modelTopology instanceof ArrayBuffer)
            throw new Error(
              "Expected JSON model topology, received ArrayBuffer."
            );
          return {
            dateSaved: new Date(),
            modelTopologyType: "JSON",
            modelTopologyBytes:
              null == t.modelTopology ? 0 : Rv(JSON.stringify(t.modelTopology)),
            weightSpecsBytes:
              null == t.weightSpecs ? 0 : Rv(JSON.stringify(t.weightSpecs)),
            weightDataBytes: null == t.weightData ? 0 : t.weightData.byteLength
          };
        }
        var Fv = (function() {
            function t() {
              (this.saveRouters = []), (this.loadRouters = []);
            }
            return (
              (t.getInstance = function() {
                return null == t.instance && (t.instance = new t()), t.instance;
              }),
              (t.registerSaveRouter = function(e) {
                t.getInstance().saveRouters.push(e);
              }),
              (t.registerLoadRouter = function(e) {
                t.getInstance().loadRouters.push(e);
              }),
              (t.getSaveHandlers = function(e) {
                return t.getHandlers(e, "save");
              }),
              (t.getLoadHandlers = function(e, n) {
                return t.getHandlers(e, "load", n);
              }),
              (t.getHandlers = function(t, e, n) {
                var r = [];
                return (
                  ("load" === e
                    ? this.getInstance().loadRouters
                    : this.getInstance().saveRouters
                  ).forEach(function(e) {
                    var i = e(t, n);
                    null !== i && r.push(i);
                  }),
                  r
                );
              }),
              t
            );
          })(),
          zv = function(t) {
            return Fv.registerSaveRouter(t);
          },
          Uv = function(t) {
            return Fv.registerLoadRouter(t);
          },
          Vv = function(t) {
            return Fv.getSaveHandlers(t);
          },
          Wv = function(t, e) {
            return Fv.getLoadHandlers(t);
          },
          $v = "://",
          qv = (function() {
            function t() {
              this.managers = {};
            }
            return (
              (t.getInstance = function() {
                return null == t.instance && (t.instance = new t()), t.instance;
              }),
              (t.registerManager = function(e, n) {
                _(null != e, "scheme must not be undefined or null."),
                  e.endsWith($v) && (e = e.slice(0, e.indexOf($v))),
                  _(e.length > 0, "scheme must not be an empty string.");
                var r = t.getInstance();
                _(
                  null == r.managers[e],
                  "A model store manager is already registered for scheme '" +
                    e +
                    "'."
                ),
                  (r.managers[e] = n);
              }),
              (t.getManager = function(t) {
                var e = this.getInstance().managers[t];
                if (null == e)
                  throw new Error(
                    "Cannot find model manager for scheme '" + t + "'"
                  );
                return e;
              }),
              (t.getSchemes = function() {
                return Object.keys(this.getInstance().managers);
              }),
              t
            );
          })();
        function Hv(t) {
          if (-1 === t.indexOf($v))
            throw new Error(
              "The url string provided does not contain a scheme. Supported schemes are: " +
                qv.getSchemes().join(",")
            );
          return { scheme: t.split($v)[0], path: t.split($v)[1] };
        }
        function Kv(t, e, n) {
          return (
            void 0 === n && (n = !1),
            u(this, void 0, void 0, function() {
              var r, i, a, o, s, u, l, f, h;
              return c(this, function(c) {
                switch (c.label) {
                  case 0:
                    return (
                      _(
                        t !== e,
                        "Old path and new path are the same: '" + t + "'"
                      ),
                      _(
                        (r = Fv.getLoadHandlers(t)).length > 0,
                        "Copying failed because no load handler is found for source URL " +
                          t +
                          "."
                      ),
                      _(
                        r.length < 2,
                        "Copying failed because more than one (" +
                          r.length +
                          ") load handlers for source URL " +
                          t +
                          "."
                      ),
                      (i = r[0]),
                      _(
                        (a = Fv.getSaveHandlers(e)).length > 0,
                        "Copying failed because no save handler is found for destination URL " +
                          e +
                          "."
                      ),
                      _(
                        a.length < 2,
                        "Copying failed because more than one (" +
                          r.length +
                          ") save handlers for destination URL " +
                          e +
                          "."
                      ),
                      (o = a[0]),
                      (s = Hv(t).scheme),
                      (u = Hv(t).path),
                      (l = s === Hv(t).scheme),
                      [4, i.load()]
                    );
                  case 1:
                    return (
                      (f = c.sent()),
                      n && l ? [4, qv.getManager(s).removeModel(u)] : [3, 3]
                    );
                  case 2:
                    c.sent(), (c.label = 3);
                  case 3:
                    return [4, o.save(f)];
                  case 4:
                    return (
                      (h = c.sent()),
                      !n || l ? [3, 6] : [4, qv.getManager(s).removeModel(u)]
                    );
                  case 5:
                    c.sent(), (c.label = 6);
                  case 6:
                    return [2, h.modelArtifactsInfo];
                }
              });
            })
          );
        }
        function Gv() {
          return u(this, void 0, void 0, function() {
            var t, e, n, r, i, a, o;
            return c(this, function(s) {
              switch (s.label) {
                case 0:
                  (t = qv.getSchemes()),
                    (e = {}),
                    (n = 0),
                    (r = t),
                    (s.label = 1);
                case 1:
                  return n < r.length
                    ? ((i = r[n]), [4, qv.getManager(i).listModels()])
                    : [3, 4];
                case 2:
                  for (o in (a = s.sent())) e[i + $v + o] = a[o];
                  s.label = 3;
                case 3:
                  return n++, [3, 1];
                case 4:
                  return [2, e];
              }
            });
          });
        }
        function Xv(t) {
          return u(this, void 0, void 0, function() {
            var e;
            return c(this, function(n) {
              switch (n.label) {
                case 0:
                  return (
                    (e = Hv(t)),
                    [4, qv.getManager(e.scheme).removeModel(e.path)]
                  );
                case 1:
                  return [2, n.sent()];
              }
            });
          });
        }
        function Jv(t, e) {
          return u(this, void 0, void 0, function() {
            return c(this, function(n) {
              switch (n.label) {
                case 0:
                  return [4, Kv(t, e, !1)];
                case 1:
                  return [2, n.sent()];
              }
            });
          });
        }
        function Yv(t, e) {
          return u(this, void 0, void 0, function() {
            return c(this, function(n) {
              switch (n.label) {
                case 0:
                  return [4, Kv(t, e, !0)];
                case 1:
                  return [2, n.sent()];
              }
            });
          });
        }
        var Qv = "tensorflowjs",
          Zv = 1,
          ty = "models_store",
          ey = "model_info_store";
        function ny() {
          if (!_e.get("IS_BROWSER"))
            throw new Error(
              "Failed to obtain IndexedDB factory because the current environmentis not a web browser."
            );
          var t = window,
            e =
              t.indexedDB ||
              t.mozIndexedDB ||
              t.webkitIndexedDB ||
              t.msIndexedDB ||
              t.shimIndexedDB;
          if (null == e)
            throw new Error(
              "The current browser does not appear to support IndexedDB."
            );
          return e;
        }
        function ry(t) {
          var e = t.result;
          e.createObjectStore(ty, { keyPath: "modelPath" }),
            e.createObjectStore(ey, { keyPath: "modelPath" });
        }
        var iy = (function() {
            function t(t) {
              if (((this.indexedDB = ny()), null == t || !t))
                throw new Error(
                  "For IndexedDB, modelPath must not be null, undefined or empty."
                );
              this.modelPath = t;
            }
            return (
              (t.prototype.save = function(t) {
                return u(this, void 0, void 0, function() {
                  return c(this, function(e) {
                    if (t.modelTopology instanceof ArrayBuffer)
                      throw new Error(
                        "BrowserLocalStorage.save() does not support saving model topology in binary formats yet."
                      );
                    return [2, this.databaseAction(this.modelPath, t)];
                  });
                });
              }),
              (t.prototype.load = function() {
                return u(this, void 0, void 0, function() {
                  return c(this, function(t) {
                    return [2, this.databaseAction(this.modelPath)];
                  });
                });
              }),
              (t.prototype.databaseAction = function(t, e) {
                var n = this;
                return new Promise(function(t, r) {
                  var i = n.indexedDB.open(Qv, Zv);
                  (i.onupgradeneeded = function() {
                    return ry(i);
                  }),
                    (i.onsuccess = function() {
                      var a = i.result;
                      if (null == e) {
                        var o = a.transaction(ty, "readonly"),
                          s = o.objectStore(ty).get(n.modelPath);
                        (s.onsuccess = function() {
                          if (null == s.result)
                            return (
                              a.close(),
                              r(
                                new Error(
                                  "Cannot find model with path '" +
                                    n.modelPath +
                                    "' in IndexedDB."
                                )
                              )
                            );
                          t(s.result.modelArtifacts);
                        }),
                          (s.onerror = function(t) {
                            return a.close(), r(s.error);
                          }),
                          (o.oncomplete = function() {
                            return a.close();
                          });
                      } else {
                        var u,
                          c = Bv(e),
                          l = a.transaction(ey, "readwrite"),
                          f = l.objectStore(ey),
                          h = f.put({
                            modelPath: n.modelPath,
                            modelArtifactsInfo: c
                          });
                        (h.onsuccess = function() {
                          var i = (u = a.transaction(ty, "readwrite"))
                            .objectStore(ty)
                            .put({
                              modelPath: n.modelPath,
                              modelArtifacts: e,
                              modelArtifactsInfo: c
                            });
                          (i.onsuccess = function() {
                            return t({ modelArtifactsInfo: c });
                          }),
                            (i.onerror = function(t) {
                              var e = (f = l.objectStore(ey)).delete(
                                n.modelPath
                              );
                              (e.onsuccess = function() {
                                return a.close(), r(i.error);
                              }),
                                (e.onerror = function(t) {
                                  return a.close(), r(i.error);
                                });
                            });
                        }),
                          (h.onerror = function(t) {
                            return a.close(), r(h.error);
                          }),
                          (l.oncomplete = function() {
                            null == u
                              ? a.close()
                              : (u.oncomplete = function() {
                                  return a.close();
                                });
                          });
                      }
                    }),
                    (i.onerror = function(t) {
                      return r(i.error);
                    });
                });
              }),
              (t.URL_SCHEME = "indexeddb://"),
              t
            );
          })(),
          ay = function(t) {
            return _e.get("IS_BROWSER") &&
              !Array.isArray(t) &&
              t.startsWith(iy.URL_SCHEME)
              ? oy(t.slice(iy.URL_SCHEME.length))
              : null;
          };
        function oy(t) {
          return new iy(t);
        }
        function sy(t) {
          return t.startsWith(iy.URL_SCHEME)
            ? t.slice(iy.URL_SCHEME.length)
            : t;
        }
        Fv.registerSaveRouter(ay), Fv.registerLoadRouter(ay);
        var uy = (function() {
          function t() {
            this.indexedDB = ny();
          }
          return (
            (t.prototype.listModels = function() {
              return u(this, void 0, void 0, function() {
                var t = this;
                return c(this, function(e) {
                  return [
                    2,
                    new Promise(function(e, n) {
                      var r = t.indexedDB.open(Qv, Zv);
                      (r.onupgradeneeded = function() {
                        return ry(r);
                      }),
                        (r.onsuccess = function() {
                          var t = r.result,
                            i = t.transaction(ey, "readonly"),
                            a = i.objectStore(ey).getAll();
                          (a.onsuccess = function() {
                            for (
                              var t = {}, n = 0, r = a.result;
                              n < r.length;
                              n++
                            ) {
                              var i = r[n];
                              t[i.modelPath] = i.modelArtifactsInfo;
                            }
                            e(t);
                          }),
                            (a.onerror = function(e) {
                              return t.close(), n(a.error);
                            }),
                            (i.oncomplete = function() {
                              return t.close();
                            });
                        }),
                        (r.onerror = function(t) {
                          return n(r.error);
                        });
                    })
                  ];
                });
              });
            }),
            (t.prototype.removeModel = function(t) {
              return u(this, void 0, void 0, function() {
                var e = this;
                return c(this, function(n) {
                  return (
                    (t = sy(t)),
                    [
                      2,
                      new Promise(function(n, r) {
                        var i = e.indexedDB.open(Qv, Zv);
                        (i.onupgradeneeded = function() {
                          return ry(i);
                        }),
                          (i.onsuccess = function() {
                            var e,
                              a = i.result,
                              o = a.transaction(ey, "readwrite"),
                              s = o.objectStore(ey),
                              u = s.get(t);
                            (u.onsuccess = function() {
                              if (null == u.result)
                                return (
                                  a.close(),
                                  r(
                                    new Error(
                                      "Cannot find model with path '" +
                                        t +
                                        "' in IndexedDB."
                                    )
                                  )
                                );
                              var i = s.delete(t),
                                o = function() {
                                  var i = (e = a.transaction(ty, "readwrite"))
                                    .objectStore(ty)
                                    .delete(t);
                                  (i.onsuccess = function() {
                                    return n(u.result.modelArtifactsInfo);
                                  }),
                                    (i.onerror = function(t) {
                                      return r(u.error);
                                    });
                                };
                              (i.onsuccess = o),
                                (i.onerror = function(t) {
                                  return o(), a.close(), r(u.error);
                                });
                            }),
                              (u.onerror = function(t) {
                                return a.close(), r(u.error);
                              }),
                              (o.oncomplete = function() {
                                null == e
                                  ? a.close()
                                  : (e.oncomplete = function() {
                                      return a.close();
                                    });
                              });
                          }),
                          (i.onerror = function(t) {
                            return r(i.error);
                          });
                      })
                    ]
                  );
                });
              });
            }),
            t
          );
        })();
        if (_e.get("IS_BROWSER"))
          try {
            qv.registerManager(iy.URL_SCHEME, new uy());
          } catch (Sg) {}
        var cy = "/",
          ly = "tensorflowjs_models",
          fy = "info",
          hy = "model_topology",
          py = "weight_specs",
          dy = "weight_data";
        function my(t) {
          return {
            info: [ly, t, fy].join(cy),
            topology: [ly, t, hy].join(cy),
            weightSpecs: [ly, t, py].join(cy),
            weightData: [ly, t, dy].join(cy)
          };
        }
        function vy(t) {
          var e = t.split(cy);
          if (e.length < 3) throw new Error("Invalid key format: " + t);
          return e.slice(1, e.length - 1).join(cy);
        }
        function yy(t) {
          return t.startsWith(gy.URL_SCHEME)
            ? t.slice(gy.URL_SCHEME.length)
            : t;
        }
        var gy = (function() {
            function t(t) {
              if (!_e.get("IS_BROWSER") || void 0 === window.localStorage)
                throw new Error(
                  "The current environment does not support local storage."
                );
              if (((this.LS = window.localStorage), null == t || !t))
                throw new Error(
                  "For local storage, modelPath must not be null, undefined or empty."
                );
              (this.modelPath = t), (this.keys = my(this.modelPath));
            }
            return (
              (t.prototype.save = function(t) {
                return u(this, void 0, void 0, function() {
                  var e, n, r, i;
                  return c(this, function(a) {
                    if (t.modelTopology instanceof ArrayBuffer)
                      throw new Error(
                        "BrowserLocalStorage.save() does not support saving model topology in binary formats yet."
                      );
                    (e = JSON.stringify(t.modelTopology)),
                      (n = JSON.stringify(t.weightSpecs)),
                      (r = Bv(t));
                    try {
                      return (
                        this.LS.setItem(this.keys.info, JSON.stringify(r)),
                        this.LS.setItem(this.keys.topology, e),
                        this.LS.setItem(this.keys.weightSpecs, n),
                        this.LS.setItem(this.keys.weightData, Dv(t.weightData)),
                        [2, { modelArtifactsInfo: r }]
                      );
                    } catch (t) {
                      for (i in this.keys) this.LS.removeItem(this.keys[i]);
                      throw new Error(
                        "Failed to save model '" +
                          this.modelPath +
                          "' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=" +
                          r.modelTopologyBytes +
                          ", weightSpecsBytes=" +
                          r.weightSpecsBytes +
                          ", weightDataBytes=" +
                          r.weightDataBytes +
                          "."
                      );
                    }
                    return [2];
                  });
                });
              }),
              (t.prototype.load = function() {
                return u(this, void 0, void 0, function() {
                  var t, e, n, r, i;
                  return c(this, function(a) {
                    if (
                      null == (t = JSON.parse(this.LS.getItem(this.keys.info)))
                    )
                      throw new Error(
                        "In local storage, there is no model with name '" +
                          this.modelPath +
                          "'"
                      );
                    if ("JSON" !== t.modelTopologyType)
                      throw new Error(
                        "BrowserLocalStorage does not support loading non-JSON model topology yet."
                      );
                    if (
                      ((e = {}),
                      null ==
                        (n = JSON.parse(this.LS.getItem(this.keys.topology))))
                    )
                      throw new Error(
                        "In local storage, the topology of model '" +
                          this.modelPath +
                          "' is missing."
                      );
                    if (
                      ((e.modelTopology = n),
                      null ==
                        (r = JSON.parse(
                          this.LS.getItem(this.keys.weightSpecs)
                        )))
                    )
                      throw new Error(
                        "In local storage, the weight specs of model '" +
                          this.modelPath +
                          "' are missing."
                      );
                    if (
                      ((e.weightSpecs = r),
                      null == (i = this.LS.getItem(this.keys.weightData)))
                    )
                      throw new Error(
                        "In local storage, the binary weight values of model '" +
                          this.modelPath +
                          "' are missing."
                      );
                    return (e.weightData = Mv(i)), [2, e];
                  });
                });
              }),
              (t.URL_SCHEME = "localstorage://"),
              t
            );
          })(),
          by = function(t) {
            return _e.get("IS_BROWSER") &&
              !Array.isArray(t) &&
              t.startsWith(gy.URL_SCHEME)
              ? wy(t.slice(gy.URL_SCHEME.length))
              : null;
          };
        function wy(t) {
          return new gy(t);
        }
        Fv.registerSaveRouter(by), Fv.registerLoadRouter(by);
        var _y = (function() {
          function t() {
            _(_e.get("IS_BROWSER"), "Current environment is not a web browser"),
              _(
                void 0 !== window.localStorage,
                "Current browser does not appear to support localStorage"
              ),
              (this.LS = window.localStorage);
          }
          return (
            (t.prototype.listModels = function() {
              return u(this, void 0, void 0, function() {
                var t, e, n, r, i, a;
                return c(this, function(o) {
                  for (
                    t = {}, e = ly + cy, n = cy + fy, r = 0;
                    r < this.LS.length;
                    ++r
                  )
                    (i = this.LS.key(r)).startsWith(e) &&
                      i.endsWith(n) &&
                      ((a = vy(i)), (t[a] = JSON.parse(this.LS.getItem(i))));
                  return [2, t];
                });
              });
            }),
            (t.prototype.removeModel = function(t) {
              return u(this, void 0, void 0, function() {
                var e, n;
                return c(this, function(r) {
                  if (
                    ((t = yy(t)), (e = my(t)), null == this.LS.getItem(e.info))
                  )
                    throw new Error("Cannot find model at path '" + t + "'");
                  return (
                    (n = JSON.parse(this.LS.getItem(e.info))),
                    this.LS.removeItem(e.info),
                    this.LS.removeItem(e.topology),
                    this.LS.removeItem(e.weightSpecs),
                    this.LS.removeItem(e.weightData),
                    [2, n]
                  );
                });
              });
            }),
            t
          );
        })();
        if (_e.get("IS_BROWSER"))
          try {
            qv.registerManager(gy.URL_SCHEME, new _y());
          } catch (Sg) {}
        var xy = "model",
          Ey = ".json",
          Sy = ".weights.bin",
          Ny = (function() {
            function t(e) {
              if (!_e.get("IS_BROWSER"))
                throw new Error(
                  "browserDownloads() cannot proceed because the current environment is not a browser."
                );
              e.startsWith(t.URL_SCHEME) && (e = e.slice(t.URL_SCHEME.length)),
                (null != e && 0 !== e.length) || (e = xy),
                (this.modelTopologyFileName = e + Ey),
                (this.weightDataFileName = e + Sy);
            }
            return (
              (t.prototype.save = function(t) {
                return u(this, void 0, void 0, function() {
                  var e, n, r, i, a, o;
                  return c(this, function(s) {
                    if (
                      ((e = window.URL.createObjectURL(
                        new Blob([t.weightData], {
                          type: "application/octet-stream"
                        })
                      )),
                      t.modelTopology instanceof ArrayBuffer)
                    )
                      throw new Error(
                        "BrowserDownloads.save() does not support saving model topology in binary formats yet."
                      );
                    return (
                      (n = [
                        {
                          paths: ["./" + this.weightDataFileName],
                          weights: t.weightSpecs
                        }
                      ]),
                      (r = {
                        modelTopology: t.modelTopology,
                        weightsManifest: n
                      }),
                      (i = window.URL.createObjectURL(
                        new Blob([JSON.stringify(r)], {
                          type: "application/json"
                        })
                      )),
                      ((a =
                        null == this.jsonAnchor
                          ? document.createElement("a")
                          : this
                              .jsonAnchor).download = this.modelTopologyFileName),
                      (a.href = i),
                      a.click(),
                      null != t.weightData &&
                        (((o =
                          null == this.weightDataAnchor
                            ? document.createElement("a")
                            : this
                                .weightDataAnchor).download = this.weightDataFileName),
                        (o.href = e),
                        o.click()),
                      [2, { modelArtifactsInfo: Bv(t) }]
                    );
                  });
                });
              }),
              (t.URL_SCHEME = "downloads://"),
              t
            );
          })(),
          Oy = (function() {
            function t(t) {
              if (null == t || t.length < 1)
                throw new Error(
                  "When calling browserFiles, at least 1 file is required, but received " +
                    t
                );
              this.files = t;
            }
            return (
              (t.prototype.load = function() {
                return u(this, void 0, void 0, function() {
                  var t,
                    e,
                    n = this;
                  return c(this, function(r) {
                    return (
                      (t = this.files[0]),
                      (e = this.files.slice(1)),
                      [
                        2,
                        new Promise(function(r, i) {
                          var a = new FileReader();
                          (a.onload = function(a) {
                            var o = JSON.parse(a.target.result),
                              s = o.modelTopology;
                            if (null != s) {
                              0 === e.length && r({ modelTopology: s });
                              var u = o.weightsManifest;
                              if (null != u) {
                                var c;
                                try {
                                  c = n.checkManifestAndWeightFiles(u, e);
                                } catch (t) {
                                  return void i(t);
                                }
                                var l = [],
                                  f = [],
                                  h = [];
                                u.forEach(function(t) {
                                  t.paths.forEach(function(t) {
                                    f.push(t), h.push(null);
                                  }),
                                    l.push.apply(l, t.weights);
                                }),
                                  u.forEach(function(t) {
                                    t.paths.forEach(function(t) {
                                      var e = new FileReader();
                                      (e.onload = function(e) {
                                        var n = e.target.result,
                                          i = f.indexOf(t);
                                        (h[i] = n),
                                          -1 === h.indexOf(null) &&
                                            r({
                                              modelTopology: s,
                                              weightSpecs: l,
                                              weightData: jv(h)
                                            });
                                      }),
                                        (e.onerror = function(e) {
                                          return i(
                                            "Failed to weights data from file of path '" +
                                              t +
                                              "'."
                                          );
                                        }),
                                        e.readAsArrayBuffer(c[t]);
                                    });
                                  });
                              } else
                                i(
                                  new Error(
                                    "weightManifest field is missing from file " +
                                      t.name
                                  )
                                );
                            } else
                              i(
                                new Error(
                                  "modelTopology field is missing from file " +
                                    t.name
                                )
                              );
                          }),
                            (a.onerror = function(e) {
                              return i(
                                "Failed to read model topology and weights manifest JSON from file '" +
                                  t.name +
                                  "'. BrowserFiles supports loading Keras-style tf.Model artifacts only."
                              );
                            }),
                            a.readAsText(t);
                        })
                      ]
                    );
                  });
                });
              }),
              (t.prototype.checkManifestAndWeightFiles = function(t, e) {
                for (
                  var n = [],
                    r = e.map(function(t) {
                      return Lv(t.name);
                    }),
                    i = {},
                    a = 0,
                    o = t;
                  a < o.length;
                  a++
                )
                  o[a].paths.forEach(function(t) {
                    var a = Lv(t);
                    if (-1 !== n.indexOf(a))
                      throw new Error(
                        "Duplicate file basename found in weights manifest: '" +
                          a +
                          "'"
                      );
                    if ((n.push(a), -1 === r.indexOf(a)))
                      throw new Error(
                        "Weight file with basename '" + a + "' is not provided."
                      );
                    i[t] = e[r.indexOf(a)];
                  });
                if (n.length !== e.length)
                  throw new Error(
                    "Mismatch in the number of files in weights manifest (" +
                      n.length +
                      ") and the number of weight files provided (" +
                      e.length +
                      ")."
                  );
                return i;
              }),
              t
            );
          })(),
          Iy = function(t) {
            return _e.get("IS_BROWSER") &&
              !Array.isArray(t) &&
              t.startsWith(Ny.URL_SCHEME)
              ? Cy(t.slice(Ny.URL_SCHEME.length))
              : null;
          };
        function Cy(t) {
          return void 0 === t && (t = "model"), new Ny(t);
        }
        function Ay(t) {
          return new Oy(t);
        }
        function ky(t, e, n, r) {
          return u(this, void 0, void 0, function() {
            var i, a, o;
            return c(this, function(s) {
              switch (s.label) {
                case 0:
                  return (
                    null == n && (n = fetch),
                    (i = t.map(function(t) {
                      return n(t, e);
                    })),
                    null != r && at(i, r, 0, 0.5),
                    [4, Promise.all(i)]
                  );
                case 1:
                  return (
                    (a = s.sent()),
                    (o = a.map(function(t) {
                      return t.arrayBuffer();
                    })),
                    null != r && at(o, r, 0.5, 1),
                    [4, Promise.all(o)]
                  );
                case 2:
                  return [2, s.sent()];
              }
            });
          });
        }
        function Py(t, e, n, r) {
          return (
            void 0 === e && (e = ""),
            u(this, void 0, void 0, function() {
              return c(this, function(i) {
                return [
                  2,
                  Ty(function(t) {
                    return ky(t, r);
                  })(t, e, n)
                ];
              });
            })
          );
        }
        function Ty(t) {
          var e = this;
          return function(n, r, i) {
            return (
              void 0 === r && (r = ""),
              u(e, void 0, void 0, function() {
                var e, a, o, s, u, l, f, h, p, d;
                return c(this, function(c) {
                  switch (c.label) {
                    case 0:
                      if (
                        ((e = n.map(function() {
                          return !1;
                        })),
                        (a = {}),
                        (o =
                          null != i
                            ? i.map(function() {
                                return !1;
                              })
                            : []),
                        (s = []),
                        n.forEach(function(t, n) {
                          var r = 0;
                          t.weights.forEach(function(t) {
                            var u =
                                "quantization" in t
                                  ? t.quantization.dtype
                                  : t.dtype,
                              c = Cv[u] * N(t.shape),
                              l = function() {
                                (e[n] = !0),
                                  null == a[n] && (a[n] = []),
                                  a[n].push({
                                    manifestEntry: t,
                                    groupOffset: r,
                                    sizeBytes: c
                                  });
                              };
                            null != i
                              ? i.forEach(function(e, n) {
                                  e === t.name && (l(), (o[n] = !0));
                                })
                              : l(),
                              s.push(t.name),
                              (r += c);
                          });
                        }),
                        !o.every(function(t) {
                          return t;
                        }))
                      )
                        throw ((u = i.filter(function(t, e) {
                          return !o[e];
                        })),
                        new Error(
                          "Could not find weights in manifest with names: " +
                            u.join(", ") +
                            ". \nManifest JSON has weights with names: " +
                            s.join(", ") +
                            "."
                        ));
                      return (
                        (l = e.reduce(function(t, e, n) {
                          return e && t.push(n), t;
                        }, [])),
                        (f = []),
                        l.forEach(function(t) {
                          n[t].paths.forEach(function(t) {
                            var e = r + (r.endsWith("/") ? "" : "/") + t;
                            f.push(e);
                          });
                        }),
                        [4, t(f)]
                      );
                    case 1:
                      return (
                        (h = c.sent()),
                        (p = {}),
                        (d = 0),
                        l.forEach(function(t) {
                          for (
                            var e = n[t].paths.length, r = 0, i = 0;
                            i < e;
                            i++
                          )
                            r += h[d + i].byteLength;
                          for (
                            var o = new ArrayBuffer(r),
                              s = new Uint8Array(o),
                              u = 0,
                              c = 0;
                            c < e;
                            c++
                          ) {
                            var l = new Uint8Array(h[d + c]);
                            s.set(l, u), (u += l.byteLength);
                          }
                          a[t].forEach(function(t) {
                            var e = kv(
                              o.slice(
                                t.groupOffset,
                                t.groupOffset + t.sizeBytes
                              ),
                              [t.manifestEntry]
                            );
                            for (var n in e) p[n] = e[n];
                          }),
                            (d += e);
                        }),
                        [2, p]
                      );
                  }
                });
              })
            );
          };
        }
        Fv.registerSaveRouter(Iy);
        var Ry = "application/octet-stream",
          Dy = "application/json",
          My = (function() {
            function t(t, e, n, r, i) {
              if (
                ((this.weightPathPrefix = n),
                (this.onProgress = i),
                (this.DEFAULT_METHOD = "POST"),
                null == r)
              ) {
                if ("undefined" == typeof fetch)
                  throw new Error(
                    "browserHTTPRequest is not supported outside the web browser without a fetch polyfill."
                  );
                r = fetch.bind("undefined" == typeof window ? null : window);
              } else
                _(
                  "function" == typeof r,
                  "Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"
                );
              if (
                ((this.fetchFunc = function(t, e) {
                  return r(t, e).catch(function(e) {
                    throw new Error(
                      "Request for " + t + " failed due to error: " + e
                    );
                  });
                }),
                _(
                  null != t && t.length > 0,
                  "URL path for browserHTTPRequest must not be null, undefined or empty."
                ),
                Array.isArray(t) &&
                  _(
                    2 === t.length,
                    "URL paths for browserHTTPRequest must have a length of 2, (actual length is " +
                      t.length +
                      ")."
                  ),
                (this.path = t),
                null != e && null != e.body)
              )
                throw new Error(
                  "requestInit is expected to have no pre-existing body, but has one."
                );
              this.requestInit = e || {};
            }
            return (
              (t.prototype.save = function(t) {
                return u(this, void 0, void 0, function() {
                  var e, n, r, i;
                  return c(this, function(a) {
                    switch (a.label) {
                      case 0:
                        if (t.modelTopology instanceof ArrayBuffer)
                          throw new Error(
                            "BrowserHTTPRequest.save() does not support saving model topology in binary formats yet."
                          );
                        return (
                          ((e = Object.assign(
                            { method: this.DEFAULT_METHOD },
                            this.requestInit
                          )).body = new FormData()),
                          (n = [
                            {
                              paths: ["./model.weights.bin"],
                              weights: t.weightSpecs
                            }
                          ]),
                          (r = {
                            modelTopology: t.modelTopology,
                            weightsManifest: n
                          }),
                          e.body.append(
                            "model.json",
                            new Blob([JSON.stringify(r)], { type: Dy }),
                            "model.json"
                          ),
                          null != t.weightData &&
                            e.body.append(
                              "model.weights.bin",
                              new Blob([t.weightData], { type: Ry }),
                              "model.weights.bin"
                            ),
                          [4, this.getFetchFunc()(this.path, e)]
                        );
                      case 1:
                        if ((i = a.sent()).ok)
                          return [
                            2,
                            { modelArtifactsInfo: Bv(t), responses: [i] }
                          ];
                        throw new Error(
                          "BrowserHTTPRequest.save() failed due to HTTP response status " +
                            i.status +
                            "."
                        );
                    }
                  });
                });
              }),
              (t.prototype.load = function() {
                return u(this, void 0, void 0, function() {
                  return c(this, function(t) {
                    return [
                      2,
                      Array.isArray(this.path)
                        ? this.loadBinaryModel()
                        : this.loadJSONModel()
                    ];
                  });
                });
              }),
              (t.prototype.loadBinaryTopology = function() {
                return u(this, void 0, void 0, function() {
                  var t;
                  return c(this, function(e) {
                    switch (e.label) {
                      case 0:
                        return [
                          4,
                          this.getFetchFunc()(this.path[0], this.requestInit)
                        ];
                      case 1:
                        if (!(t = e.sent()).ok)
                          throw new Error(
                            "Request to " +
                              this.path[0] +
                              " failed with error: " +
                              t.statusText
                          );
                        return [4, t.arrayBuffer()];
                      case 2:
                        return [2, e.sent()];
                    }
                  });
                });
              }),
              (t.prototype.loadBinaryModel = function() {
                return u(this, void 0, void 0, function() {
                  var t, e, n, r, i, a, o, s;
                  return c(this, function(u) {
                    switch (u.label) {
                      case 0:
                        return (
                          (t = this.loadBinaryTopology()),
                          [
                            4,
                            this.getFetchFunc()(this.path[1], this.requestInit)
                          ]
                        );
                      case 1:
                        if (!(e = u.sent()).ok)
                          throw new Error(
                            "Request to " +
                              this.path[1] +
                              " failed with error: " +
                              e.statusText
                          );
                        return [4, Promise.all([t, e])];
                      case 2:
                        return (n = u.sent()), (r = n[0]), [4, n[1].json()];
                      case 3:
                        return null == (i = u.sent())
                          ? [3, 5]
                          : [4, this.loadWeights(i)];
                      case 4:
                        (s = u.sent()), (a = s[0]), (o = s[1]), (u.label = 5);
                      case 5:
                        return [
                          2,
                          { modelTopology: r, weightSpecs: a, weightData: o }
                        ];
                    }
                  });
                });
              }),
              (t.prototype.loadJSONModel = function() {
                return u(this, void 0, void 0, function() {
                  var t, e, n, r, i, a, o, s;
                  return c(this, function(u) {
                    switch (u.label) {
                      case 0:
                        return [
                          4,
                          this.getFetchFunc()(this.path, this.requestInit)
                        ];
                      case 1:
                        if (!(t = u.sent()).ok)
                          throw new Error(
                            "Request to " +
                              this.path +
                              " failed with error: " +
                              t.statusText
                          );
                        return [4, t.json()];
                      case 2:
                        if (
                          ((e = u.sent()),
                          (n = e.modelTopology),
                          (r = e.weightsManifest),
                          null == n && null == r)
                        )
                          throw new Error(
                            "The JSON from HTTP path " +
                              this.path +
                              " contains neither model topology or manifest for weights."
                          );
                        return null == r
                          ? [3, 4]
                          : ((o = e.weightsManifest), [4, this.loadWeights(o)]);
                      case 3:
                        (s = u.sent()), (i = s[0]), (a = s[1]), (u.label = 4);
                      case 4:
                        return [
                          2,
                          { modelTopology: n, weightSpecs: i, weightData: a }
                        ];
                    }
                  });
                });
              }),
              (t.prototype.loadWeights = function(t) {
                return u(this, void 0, void 0, function() {
                  var e, n, r, i, a, o, s, u, l, f, h, p;
                  return c(this, function(c) {
                    switch (c.label) {
                      case 0:
                        for (
                          e = Array.isArray(this.path)
                            ? this.path[1]
                            : this.path,
                            n = jy(e),
                            r = n[0],
                            i = n[1],
                            a = this.weightPathPrefix || r,
                            o = [],
                            s = 0,
                            u = t;
                          s < u.length;
                          s++
                        )
                          (l = u[s]), o.push.apply(o, l.weights);
                        return (
                          (f = []),
                          t.forEach(function(t) {
                            t.paths.forEach(function(t) {
                              f.push(a + t + i);
                            });
                          }),
                          (h = [o]),
                          (p = jv),
                          [
                            4,
                            ky(
                              f,
                              this.requestInit,
                              this.getFetchFunc(),
                              this.onProgress
                            )
                          ]
                        );
                      case 1:
                        return [2, h.concat([p.apply(void 0, [c.sent()])])];
                    }
                  });
                });
              }),
              (t.prototype.getFetchFunc = function() {
                return this.fetchFunc;
              }),
              (t.URL_SCHEME_REGEX = /^https?:\/\//),
              t
            );
          })();
        function jy(t) {
          var e = t.lastIndexOf("/"),
            n = t.lastIndexOf("?");
          return [t.substring(0, e) + "/", n > e ? t.substring(n) : ""];
        }
        function Ly(t) {
          return null != t.match(My.URL_SCHEME_REGEX);
        }
        var By = function(t, e) {
          return "undefined" == typeof fetch
            ? null
            : (Array.isArray(t)
              ? t.every(function(t) {
                  return Ly(t);
                })
              : Ly(t))
            ? Fy(t, null, null, null, e)
            : null;
        };
        function Fy(t, e, n, r, i) {
          return new My(t, e, n, r, i);
        }
        Fv.registerSaveRouter(By), Fv.registerLoadRouter(By);
        var zy = (function() {
            function t(t, e, n) {
              (this.modelTopology = t),
                (this.weightSpecs = e),
                (this.weightData = n);
            }
            return (
              (t.prototype.load = function() {
                return u(this, void 0, void 0, function() {
                  var t;
                  return c(this, function(e) {
                    return (
                      (t = {}),
                      null != this.modelTopology &&
                        (t = s({ modelTopology: this.modelTopology }, t)),
                      null != this.weightSpecs &&
                        this.weightSpecs.length > 0 &&
                        (t = s({ weightSpecs: this.weightSpecs }, t)),
                      null != this.weightData &&
                        this.weightData.byteLength > 0 &&
                        (t = s({ weightData: this.weightData }, t)),
                      [2, t]
                    );
                  });
                });
              }),
              t
            );
          })(),
          Uy = (function() {
            function t(t) {
              this.saveHandler = t;
            }
            return (
              (t.prototype.save = function(t) {
                return u(this, void 0, void 0, function() {
                  return c(this, function(e) {
                    return [2, this.saveHandler(t)];
                  });
                });
              }),
              t
            );
          })();
        function Vy(t, e, n) {
          return new zy(t, e, n);
        }
        function Wy(t) {
          return new Uy(t);
        }
        var $y = Object.freeze({
          browserFiles: Ay,
          browserHTTPRequest: Fy,
          concatenateArrayBuffers: jv,
          decodeWeights: kv,
          encodeWeights: Av,
          fromMemory: Vy,
          getLoadHandlers: Wv,
          getModelArtifactsInfoForJSON: Bv,
          getSaveHandlers: Vv,
          isHTTPScheme: Ly,
          loadWeights: Py,
          registerLoadRouter: Uv,
          registerSaveRouter: zv,
          weightsLoaderFactory: Ty,
          withSaveHandler: Wy,
          copyModel: Jv,
          listModels: Gv,
          moveModel: Yv,
          removeModel: Xv
        });
        function qy(t, e, n) {
          var r = un(t, "labels", "confusionMatrix"),
            i = un(e, "predictions", "confusionMatrix");
          _(
            null == n || (n > 0 && Number.isInteger(n)),
            "If provided, numClasses must be a positive integer, but got " + n
          ),
            _(
              1 === r.rank,
              "Expected the rank of labels to be 1, but got " + r.rank
            ),
            _(
              1 === i.rank,
              "Expected the rank of predictions to be 1, but got " + i.rank
            ),
            _(
              r.shape[0] === i.shape[0],
              "Mismatch in the number of examples: " +
                r.shape[0] +
                " vs. " +
                i.shape[0] +
                ". Labels and predictions should have the same number of elements."
            ),
            _(
              n > 0 && Number.isInteger(n),
              "numClasses is required to be a positive integer, but got " + n
            );
          var a = Ic(r.asType("int32"), n),
            o = Ic(i.asType("int32"), n);
          return a
            .transpose()
            .matMul(o)
            .asType("int32");
        }
        var Hy = ln({ confusionMatrix_: qy }),
          Ky = (Object.freeze({ confusionMatrix: Hy }),
          (function() {
            function t() {}
            return (
              (t.prototype.getClassName = function() {
                return this.constructor.className;
              }),
              (t.fromConfig = function(t, e) {
                return new t(e);
              }),
              t
            );
          })()),
          Gy = (function() {
            function t() {
              this.classNameMap = {};
            }
            return (
              (t.getMap = function() {
                return null == t.instance && (t.instance = new t()), t.instance;
              }),
              (t.register = function(e) {
                t.getMap().classNameMap[e.className] = [e, e.fromConfig];
              }),
              t
            );
          })();
        function Xy(t) {
          _(
            null != t.className,
            "Class being registered does not have the static className property defined."
          ),
            _(
              "string" == typeof t.className,
              "className is required to be a string, but got type " +
                typeof t.className
            ),
            _(
              t.className.length > 0,
              "Class being registered has an empty-string as its className, which is disallowed."
            ),
            Gy.register(t);
        }
        var Jy = Object.freeze({
            Serializable: Ky,
            SerializationMap: Gy,
            registerClass: Xy
          }),
          Yy = { HAS_WEBGL: !0 },
          Qy = { WEBGL_PACK: !0 },
          Zy = { IS_NODE: !0 },
          tg = { IS_CHROME: !0 },
          eg = { IS_BROWSER: !0 },
          ng = { HAS_WEBGL: !1 },
          rg = {};
        function ig(t, e, n) {
          return (
            null == n && (n = _e.get("TEST_EPSILON")),
            ag(
              t,
              "number" == typeof e || "boolean" == typeof e ? [e] : e,
              function(t, e) {
                return cg(t, Number(e), n);
              }
            )
          );
        }
        function ag(t, e, n) {
          if (t instanceof St || e instanceof St) {
            if (t instanceof St && e instanceof St) {
              if (t.dtype !== e.dtype)
                throw new Error(
                  "Arrays are of different type actual: " +
                    t.dtype +
                    " vs expected: " +
                    e.dtype +
                    "."
                );
              if (!I(t.shape, e.shape))
                throw new Error(
                  "Arrays are of different shape actual: " +
                    t.shape +
                    " vs expected: " +
                    e.shape +
                    "."
                );
            }
          } else {
            var r = t.constructor.name,
              i = e.constructor.name;
            if (r !== i)
              throw new Error(
                "Arrays are of different type actual: " +
                  r +
                  " vs expected: " +
                  i
              );
          }
          var a, o;
          if (
            ((a = t instanceof St ? t.dataSync() : t),
            (o = e instanceof St ? e.dataSync() : e),
            a.length !== o.length)
          )
            throw new Error(
              "Arrays have different lengths actual: " +
                a.length +
                " vs expected: " +
                o.length +
                ".\nActual:   " +
                a +
                ".\nExpected: " +
                o +
                "."
            );
          for (var s = 0; s < o.length; ++s) {
            var u = a[s],
              c = o[s];
            if (!n(u, c))
              throw new Error(
                "Arrays differ: actual[" +
                  s +
                  "] = " +
                  u +
                  ", expected[" +
                  s +
                  "] = " +
                  c +
                  ".\nActual:   " +
                  a +
                  ".\nExpected: " +
                  o +
                  "."
              );
          }
        }
        function og(t, e) {
          t().then(
            function() {
              return e.fail();
            },
            function() {
              return e();
            }
          );
        }
        function sg(t, e) {
          var n =
            "string" == typeof e ||
            "number" == typeof e ||
            "boolean" == typeof e
              ? [e]
              : e;
          return (t instanceof St && "string" === t.dtype) ||
            (e instanceof St && "string" === e.dtype) ||
            (Array.isArray(t) && q(t[0])) ||
            (Array.isArray(e) && q(e[0]))
            ? ag(t, n, function(t, e) {
                return t == e;
              })
            : ig(t, e, 0);
        }
        function ug(t, e, n) {
          if ((null == n && (n = _e.get("TEST_EPSILON")), !cg(t, e, n)))
            throw new Error(
              "Numbers differ: actual === " + t + ", expected === " + e
            );
        }
        function cg(t, e, n) {
          return (
            !(!isNaN(t) || !isNaN(e)) ||
            !(isNaN(t) || isNaN(e) || Math.abs(t - e) > n)
          );
        }
        function lg(t, e, n) {
          var r;
          r = t instanceof St ? t.dataSync() : t;
          for (var i = 0; i < r.length; i++)
            if (r[i] < e || r[i] > n)
              throw new Error(
                "Value out of range:" + r[i] + " low: " + e + ", high: " + n
              );
        }
        function fg(t, e) {
          expect(new Float32Array(t)).toEqual(new Float32Array(e));
        }
        Object.freeze({
          WEBGL_ENVS: Yy,
          PACKED_ENVS: Qy,
          NODE_ENVS: Zy,
          CHROME_ENVS: tg,
          BROWSER_ENVS: eg,
          CPU_ENVS: ng,
          ALL_ENVS: rg,
          expectArraysClose: ig,
          expectPromiseToFail: og,
          expectArraysEqual: sg,
          expectNumbersClose: ug,
          expectValuesInRange: lg,
          expectArrayBuffersEqual: fg
        });
        var hg = "0.15.4",
          pg = (Object.freeze({
            gpgpu_util: Eo,
            webgl_util: to,
            MathBackendWebGL: Gc,
            GPGPUContext: So
          }),
          (function(t) {
            function e() {
              return (null !== t && t.apply(this, arguments)) || this;
            }
            return (
              o(e, t),
              (e.prototype.minimize = function(t, e, n) {
                void 0 === e && (e = !1);
                var r = this.computeGradients(t, n),
                  i = r.value,
                  a = r.grads;
                return (
                  this.applyGradients(a),
                  Object.keys(a).forEach(function(t) {
                    return a[t].dispose();
                  }),
                  e ? i : (i.dispose(), null)
                );
              }),
              (e.prototype.computeGradients = function(t, e) {
                return xe(t, e);
              }),
              e
            );
          })(Ky));
        Object.defineProperty(pg, Symbol.hasInstance, {
          value: function(t) {
            return (
              null != t.minimize &&
              null != t.computeGradients &&
              null != t.applyGradients
            );
          }
        });
        var dg = (function(t) {
          function e(e, n, r) {
            void 0 === r && (r = null);
            var i = t.call(this) || this;
            return (
              (i.learningRate = e),
              (i.rho = n),
              (i.epsilon = r),
              (i.accumulatedGrads = {}),
              (i.accumulatedUpdates = {}),
              (i.c = Ne(xn(-e))),
              (i.rhoScalar = Ne(xn(n))),
              (i.oneMinusRho = Ne(xn(1 - n))),
              null === r && (r = _e.get("EPSILON")),
              (i.epsilonScalar = Ne(xn(r))),
              i
            );
          }
          return (
            o(e, t),
            (e.prototype.applyGradients = function(t) {
              var e = this,
                n = function(n) {
                  var i = _e.engine.registeredVariables[n];
                  null == r.accumulatedGrads[n] &&
                    Se(function() {
                      e.accumulatedGrads[n] = Ln(i).variable(!1);
                    }),
                    null == r.accumulatedUpdates[n] &&
                      Se(function() {
                        e.accumulatedUpdates[n] = Ln(i).variable(!1);
                      });
                  var a = t[n],
                    o = r.accumulatedGrads[n],
                    s = r.accumulatedUpdates[n];
                  Se(function() {
                    var t = e.rhoScalar
                        .mul(o)
                        .add(e.oneMinusRho.mul(a.square())),
                      r = s
                        .add(e.epsilonScalar)
                        .sqrt()
                        .div(o.add(e.epsilonScalar).sqrt())
                        .mul(a),
                      u = e.rhoScalar.mul(s).add(e.oneMinusRho.mul(r.square()));
                    e.accumulatedGrads[n].assign(t),
                      e.accumulatedUpdates[n].assign(u);
                    var c = e.c.mul(r).add(i);
                    i.assign(c);
                  });
                },
                r = this;
              for (var i in t) n(i);
            }),
            (e.prototype.dispose = function() {
              var t = this;
              this.c.dispose(),
                this.epsilonScalar.dispose(),
                this.rhoScalar.dispose(),
                this.oneMinusRho.dispose(),
                null != this.accumulatedUpdates &&
                  (Object.keys(this.accumulatedUpdates).forEach(function(e) {
                    return t.accumulatedUpdates[e].dispose();
                  }),
                  Object.keys(this.accumulatedGrads).forEach(function(e) {
                    return t.accumulatedGrads[e].dispose();
                  }));
            }),
            (e.prototype.getConfig = function() {
              return {
                learningRate: this.learningRate,
                rho: this.rho,
                epsilon: this.epsilon
              };
            }),
            (e.fromConfig = function(t, e) {
              return new t(e.learningRate, e.rho, e.epsilon);
            }),
            (e.className = "AdadeltaOptimizer"),
            e
          );
        })(pg);
        Xy(dg);
        var mg = (function(t) {
          function e(e, n) {
            void 0 === n && (n = 0.1);
            var r = t.call(this) || this;
            return (
              (r.learningRate = e),
              (r.initialAccumulatorValue = n),
              (r.accumulatedGrads = {}),
              (r.c = Ne(xn(-e))),
              (r.epsilon = Ne(xn(_e.get("EPSILON")))),
              r
            );
          }
          return (
            o(e, t),
            (e.prototype.applyGradients = function(t) {
              var e = this,
                n = function(n) {
                  var i = _e.engine.registeredVariables[n];
                  null == r.accumulatedGrads[n] &&
                    Se(function() {
                      e.accumulatedGrads[n] = Pn(
                        i.shape,
                        e.initialAccumulatorValue
                      ).variable(!1);
                    });
                  var a = t[n],
                    o = r.accumulatedGrads[n];
                  Se(function() {
                    var t = o.add(a.square());
                    e.accumulatedGrads[n].assign(t);
                    var r = e.c.mul(a.div(t.add(e.epsilon).sqrt())).add(i);
                    i.assign(r);
                  });
                },
                r = this;
              for (var i in t) n(i);
            }),
            (e.prototype.dispose = function() {
              var t = this;
              this.epsilon.dispose(),
                this.c.dispose(),
                null != this.accumulatedGrads &&
                  Object.keys(this.accumulatedGrads).forEach(function(e) {
                    return t.accumulatedGrads[e].dispose();
                  });
            }),
            (e.prototype.getConfig = function() {
              return {
                learningRate: this.learningRate,
                initialAccumulatorValue: this.initialAccumulatorValue
              };
            }),
            (e.fromConfig = function(t, e) {
              return new t(e.learningRate, e.initialAccumulatorValue);
            }),
            (e.className = "AdagradOptimizer"),
            e
          );
        })(pg);
        Xy(mg);
        var vg = (function(t) {
          function e(e, n, r, i) {
            void 0 === i && (i = null);
            var a = t.call(this) || this;
            return (
              (a.learningRate = e),
              (a.beta1 = n),
              (a.beta2 = r),
              (a.epsilon = i),
              (a.accumulatedFirstMoment = {}),
              (a.accumulatedSecondMoment = {}),
              (a.c = Ne(xn(-e))),
              (a.beta1Scalar = Ne(xn(n))),
              (a.beta2Scalar = Ne(xn(r))),
              Se(function() {
                (a.accBeta1 = xn(n).variable()),
                  (a.accBeta2 = xn(r).variable());
              }),
              (a.oneMinusBeta1 = Ne(xn(1 - n))),
              (a.oneMinusBeta2 = Ne(xn(1 - r))),
              (a.one = Ne(xn(1))),
              null === i && (i = _e.get("EPSILON")),
              (a.epsScalar = Ne(xn(i))),
              a
            );
          }
          return (
            o(e, t),
            (e.prototype.applyGradients = function(t) {
              var e = this;
              Se(function() {
                var n = e.one.sub(e.accBeta1),
                  r = e.one.sub(e.accBeta2);
                for (var i in t) {
                  var a = _e.engine.registeredVariables[i];
                  if (null == e.accumulatedFirstMoment[i]) {
                    var o = !1;
                    e.accumulatedFirstMoment[i] = Ln(a).variable(o);
                  }
                  null == e.accumulatedSecondMoment[i] &&
                    ((o = !1),
                    (e.accumulatedSecondMoment[i] = Ln(a).variable(o)));
                  var s = t[i],
                    u = e.accumulatedFirstMoment[i],
                    c = e.accumulatedSecondMoment[i],
                    l = e.beta1Scalar.mul(u).add(e.oneMinusBeta1.mul(s)),
                    f = e.beta2Scalar
                      .mul(c)
                      .add(e.oneMinusBeta2.mul(s.square())),
                    h = l.div(n),
                    p = f.div(r);
                  e.accumulatedFirstMoment[i].assign(l),
                    e.accumulatedSecondMoment[i].assign(f);
                  var d = e.c.mul(h.div(e.epsScalar.add(p.sqrt()))).add(a);
                  a.assign(d);
                }
                e.accBeta1.assign(e.accBeta1.mul(e.beta1Scalar)),
                  e.accBeta2.assign(e.accBeta2.mul(e.beta2Scalar));
              });
            }),
            (e.prototype.dispose = function() {
              var t = this;
              this.c.dispose(),
                this.epsScalar.dispose(),
                this.beta1Scalar.dispose(),
                this.beta2Scalar.dispose(),
                this.accBeta1.dispose(),
                this.accBeta2.dispose(),
                this.oneMinusBeta1.dispose(),
                this.oneMinusBeta2.dispose(),
                this.one.dispose(),
                null != this.accumulatedFirstMoment &&
                  Object.keys(this.accumulatedFirstMoment).forEach(function(e) {
                    return t.accumulatedFirstMoment[e].dispose();
                  }),
                null != this.accumulatedSecondMoment &&
                  Object.keys(this.accumulatedSecondMoment).forEach(function(
                    e
                  ) {
                    return t.accumulatedSecondMoment[e].dispose();
                  });
            }),
            (e.prototype.getConfig = function() {
              return {
                learningRate: this.learningRate,
                beta1: this.beta1,
                beta2: this.beta2,
                epsilon: this.epsilon
              };
            }),
            (e.fromConfig = function(t, e) {
              return new t(e.learningRate, e.beta1, e.beta2, e.epsilon);
            }),
            (e.className = "AdamOptimizer"),
            e
          );
        })(pg);
        Xy(vg);
        var yg = (function(t) {
          function e(e, n, r, i, a) {
            void 0 === i && (i = null), void 0 === a && (a = 0);
            var o = t.call(this) || this;
            return (
              (o.learningRate = e),
              (o.beta1 = n),
              (o.beta2 = r),
              (o.epsilon = i),
              (o.decay = a),
              (o.accumulatedFirstMoment = {}),
              (o.accumulatedWeightedInfNorm = {}),
              (o.c = Ne(xn(-e))),
              (o.beta1Scalar = Ne(xn(n))),
              (o.beta2Scalar = Ne(xn(r))),
              (o.decayScalar = Ne(xn(a))),
              Se(function() {
                (o.iteration = xn(0).variable()),
                  (o.accBeta1 = xn(n).variable());
              }),
              (o.oneMinusBeta1 = Ne(xn(1 - n))),
              (o.one = Ne(xn(1))),
              null === i && (i = _e.get("EPSILON")),
              (o.epsScalar = Ne(xn(i))),
              o
            );
          }
          return (
            o(e, t),
            (e.prototype.applyGradients = function(t) {
              var e = this;
              Se(function() {
                var n = e.one.sub(e.accBeta1),
                  r = e.c.div(e.one.add(e.decayScalar.mul(e.iteration)));
                for (var i in t) {
                  var a = _e.engine.registeredVariables[i];
                  if (null == e.accumulatedFirstMoment[i]) {
                    var o = !1;
                    e.accumulatedFirstMoment[i] = Ln(a).variable(o);
                  }
                  null == e.accumulatedWeightedInfNorm[i] &&
                    ((o = !1),
                    (e.accumulatedWeightedInfNorm[i] = Ln(a).variable(o)));
                  var s = t[i],
                    u = e.accumulatedFirstMoment[i],
                    c = e.accumulatedWeightedInfNorm[i],
                    l = e.beta1Scalar.mul(u).add(e.oneMinusBeta1.mul(s)),
                    f = e.beta2Scalar.mul(c),
                    h = s.abs(),
                    p = f.maximum(h);
                  e.accumulatedFirstMoment[i].assign(l),
                    e.accumulatedWeightedInfNorm[i].assign(p);
                  var d = r
                    .div(n)
                    .mul(l.div(e.epsScalar.add(p)))
                    .add(a);
                  a.assign(d);
                }
                e.iteration.assign(e.iteration.add(e.one)),
                  e.accBeta1.assign(e.accBeta1.mul(e.beta1Scalar));
              });
            }),
            (e.prototype.dispose = function() {
              var t = this;
              this.c.dispose(),
                this.epsScalar.dispose(),
                this.accBeta1.dispose(),
                this.beta1Scalar.dispose(),
                this.beta2Scalar.dispose(),
                this.oneMinusBeta1.dispose(),
                this.decayScalar.dispose(),
                this.iteration.dispose(),
                this.one.dispose(),
                null != this.accumulatedFirstMoment &&
                  Object.keys(this.accumulatedFirstMoment).forEach(function(e) {
                    return t.accumulatedFirstMoment[e].dispose();
                  }),
                null != this.accumulatedWeightedInfNorm &&
                  Object.keys(this.accumulatedWeightedInfNorm).forEach(function(
                    e
                  ) {
                    return t.accumulatedWeightedInfNorm[e].dispose();
                  });
            }),
            (e.prototype.getConfig = function() {
              return {
                learningRate: this.learningRate,
                beta1: this.beta1,
                beta2: this.beta2,
                epsilon: this.epsilon,
                decay: this.decay
              };
            }),
            (e.fromConfig = function(t, e) {
              return new t(
                e.learningRate,
                e.beta1,
                e.beta2,
                e.epsilon,
                e.decay
              );
            }),
            (e.className = "AdamaxOptimizer"),
            e
          );
        })(pg);
        Xy(yg);
        var gg = (function(t) {
          function e(e) {
            var n = t.call(this) || this;
            return (n.learningRate = e), n.setLearningRate(e), n;
          }
          return (
            o(e, t),
            (e.prototype.applyGradients = function(t) {
              var e = this;
              Object.keys(t).forEach(function(n) {
                var r = t[n],
                  i = _e.engine.registeredVariables[n];
                Se(function() {
                  var t = e.c.mul(r).add(i);
                  i.assign(t);
                });
              });
            }),
            (e.prototype.setLearningRate = function(t) {
              (this.learningRate = t),
                null != this.c && this.c.dispose(),
                (this.c = Ne(xn(-t)));
            }),
            (e.prototype.dispose = function() {
              this.c.dispose();
            }),
            (e.prototype.getConfig = function() {
              return { learningRate: this.learningRate };
            }),
            (e.fromConfig = function(t, e) {
              return new t(e.learningRate);
            }),
            (e.className = "SGDOptimizer"),
            e
          );
        })(pg);
        Xy(gg);
        var bg = (function(t) {
          function e(e, n, r) {
            void 0 === r && (r = !1);
            var i = t.call(this, e) || this;
            return (
              (i.learningRate = e),
              (i.momentum = n),
              (i.useNesterov = r),
              (i.m = xn(i.momentum)),
              (i.accumulations = {}),
              i
            );
          }
          return (
            o(e, t),
            (e.prototype.applyGradients = function(t) {
              var e = this,
                n = function(n) {
                  var i = _e.engine.registeredVariables[n];
                  null == r.accumulations[n] &&
                    Se(function() {
                      e.accumulations[n] = Ln(i).variable(!1);
                    });
                  var a = r.accumulations[n],
                    o = t[n];
                  Se(function() {
                    var t,
                      r = e.m.mul(a).add(o);
                    (t = e.useNesterov
                      ? e.c.mul(o.add(r.mul(e.m))).add(i)
                      : e.c.mul(r).add(i)),
                      e.accumulations[n].assign(r),
                      i.assign(t);
                  });
                },
                r = this;
              for (var i in t) n(i);
            }),
            (e.prototype.dispose = function() {
              if (
                (t.prototype.dispose.call(this),
                this.m.dispose(),
                null != this.accumulations)
              )
                for (var e in this.accumulations)
                  this.accumulations[e].dispose();
            }),
            (e.prototype.setMomentum = function(t) {
              this.momentum = t;
            }),
            (e.prototype.getConfig = function() {
              return {
                learningRate: this.learningRate,
                momentum: this.momentum,
                useNesterov: this.useNesterov
              };
            }),
            (e.fromConfig = function(t, e) {
              return new t(e.learningRate, e.momentum, e.useNesterov);
            }),
            (e.className = "MomentumOptimizer"),
            e
          );
        })(gg);
        Xy(bg);
        var wg = (function(t) {
          function e(e, n, r, i, a) {
            void 0 === n && (n = 0.9),
              void 0 === r && (r = 0),
              void 0 === i && (i = null),
              void 0 === a && (a = !1);
            var o = t.call(this) || this;
            return (
              (o.learningRate = e),
              (o.decay = n),
              (o.momentum = r),
              (o.epsilon = i),
              (o.accumulatedMeanSquares = {}),
              (o.accumulatedMeanGrads = {}),
              (o.accumulatedMoments = {}),
              (o.c = Ne(xn(e))),
              (o.decayScalar = Ne(xn(n))),
              (o.momentumScalar = Ne(xn(r))),
              (o.oneMinusDecay = Ne(xn(1 - n))),
              (o.centered = a),
              null === i && (i = _e.get("EPSILON")),
              (o.epsilonScalar = Ne(xn(i))),
              o
            );
          }
          return (
            o(e, t),
            (e.prototype.applyGradients = function(t) {
              var e = this,
                n = function(n) {
                  var i = _e.engine.registeredVariables[n];
                  null == r.accumulatedMeanSquares[n] &&
                    Se(function() {
                      e.accumulatedMeanSquares[n] = Ln(i).variable(!1);
                    }),
                    null == r.accumulatedMeanGrads[n] &&
                      r.centered &&
                      Se(function() {
                        e.accumulatedMeanGrads[n] = Ln(i).variable(!1);
                      }),
                    null == r.accumulatedMoments[n] &&
                      Se(function() {
                        e.accumulatedMoments[n] = Ln(i).variable(!1);
                      });
                  var a = r.accumulatedMeanSquares[n],
                    o = r.accumulatedMeanGrads[n],
                    s = r.accumulatedMoments[n],
                    u = t[n];
                  Se(function() {
                    var t = e.decayScalar
                      .mul(a)
                      .add(e.oneMinusDecay.mul(u.square()));
                    if (e.centered) {
                      var r = e.decayScalar.mul(o).add(e.oneMinusDecay.mul(u)),
                        c = e.momentumScalar
                          .mul(s)
                          .add(
                            e.c
                              .mul(u)
                              .div(
                                t.sub(r.square().add(e.epsilonScalar)).sqrt()
                              )
                          );
                      e.accumulatedMeanSquares[n].assign(t),
                        e.accumulatedMeanGrads[n].assign(r),
                        e.accumulatedMoments[n].assign(c);
                      var l = i.sub(c);
                      i.assign(l);
                    } else {
                      var f = e.decayScalar
                        .mul(a)
                        .add(e.oneMinusDecay.mul(u.square()));
                      (c = e.momentumScalar
                        .mul(s)
                        .add(e.c.mul(u).div(f.add(e.epsilonScalar).sqrt()))),
                        e.accumulatedMeanSquares[n].assign(f),
                        e.accumulatedMoments[n].assign(c),
                        (l = i.sub(c)),
                        i.assign(l);
                    }
                  });
                },
                r = this;
              for (var i in t) n(i);
            }),
            (e.prototype.dispose = function() {
              var t = this;
              this.c.dispose(),
                this.epsilonScalar.dispose(),
                this.decayScalar.dispose(),
                this.momentumScalar.dispose(),
                this.oneMinusDecay.dispose(),
                null != this.accumulatedMeanSquares &&
                  Object.keys(this.accumulatedMeanSquares).forEach(function(e) {
                    return t.accumulatedMeanSquares[e].dispose();
                  }),
                null != this.accumulatedMeanGrads &&
                  this.centered &&
                  Object.keys(this.accumulatedMeanGrads).forEach(function(e) {
                    return t.accumulatedMeanGrads[e].dispose();
                  }),
                null != this.accumulatedMoments &&
                  Object.keys(this.accumulatedMoments).forEach(function(e) {
                    return t.accumulatedMoments[e].dispose();
                  });
            }),
            (e.prototype.getConfig = function() {
              return {
                learningRate: this.learningRate,
                decay: this.decay,
                momentum: this.momentum,
                epsilon: this.epsilon,
                centered: this.centered
              };
            }),
            (e.fromConfig = function(t, e) {
              return new t(
                e.learningRate,
                e.decay,
                e.momentum,
                e.epsilon,
                e.centered
              );
            }),
            (e.className = "RMSPropOptimizer"),
            e
          );
        })(pg);
        Xy(wg);
        var _g = (function() {
            function t() {}
            return (
              (t.sgd = function(t) {
                return new gg(t);
              }),
              (t.momentum = function(t, e, n) {
                return void 0 === n && (n = !1), new bg(t, e, n);
              }),
              (t.rmsprop = function(t, e, n, r, i) {
                return (
                  void 0 === e && (e = 0.9),
                  void 0 === n && (n = 0),
                  void 0 === r && (r = null),
                  void 0 === i && (i = !1),
                  new wg(t, e, n, r, i)
                );
              }),
              (t.adam = function(t, e, n, r) {
                return (
                  void 0 === t && (t = 0.001),
                  void 0 === e && (e = 0.9),
                  void 0 === n && (n = 0.999),
                  void 0 === r && (r = null),
                  new vg(t, e, n, r)
                );
              }),
              (t.adadelta = function(t, e, n) {
                return (
                  void 0 === t && (t = 0.001),
                  void 0 === e && (e = 0.95),
                  void 0 === n && (n = null),
                  new dg(t, e, n)
                );
              }),
              (t.adamax = function(t, e, n, r, i) {
                return (
                  void 0 === t && (t = 0.002),
                  void 0 === e && (e = 0.9),
                  void 0 === n && (n = 0.999),
                  void 0 === r && (r = null),
                  void 0 === i && (i = 0),
                  new yg(t, e, n, r, i)
                );
              }),
              (t.adagrad = function(t, e) {
                return void 0 === e && (e = 0.1), new mg(t, e);
              }),
              t
            );
          })(),
          xg = {
            sgd: _g.sgd,
            momentum: _g.momentum,
            adadelta: _g.adadelta,
            adagrad: _g.adagrad,
            rmsprop: _g.rmsprop,
            adamax: _g.adamax,
            adam: _g.adam
          },
          Eg = (me.setBackend, me.getBackend, me.disposeVariables, me.memory);
        xt(Ev);
      }.call(this, n("f28c"), n("c8ba"), n("b639").Buffer));
    },
    "4fd1": function(t, e, n) {
      var r = n("3fb5"),
        i = n("b672"),
        a = n("8707").Buffer,
        o = [
          1116352408,
          3609767458,
          1899447441,
          602891725,
          3049323471,
          3964484399,
          3921009573,
          2173295548,
          961987163,
          4081628472,
          1508970993,
          3053834265,
          2453635748,
          2937671579,
          2870763221,
          3664609560,
          3624381080,
          2734883394,
          310598401,
          1164996542,
          607225278,
          1323610764,
          1426881987,
          3590304994,
          1925078388,
          4068182383,
          2162078206,
          991336113,
          2614888103,
          633803317,
          3248222580,
          3479774868,
          3835390401,
          2666613458,
          4022224774,
          944711139,
          264347078,
          2341262773,
          604807628,
          2007800933,
          770255983,
          1495990901,
          1249150122,
          1856431235,
          1555081692,
          3175218132,
          1996064986,
          2198950837,
          2554220882,
          3999719339,
          2821834349,
          766784016,
          2952996808,
          2566594879,
          3210313671,
          3203337956,
          3336571891,
          1034457026,
          3584528711,
          2466948901,
          113926993,
          3758326383,
          338241895,
          168717936,
          666307205,
          1188179964,
          773529912,
          1546045734,
          1294757372,
          1522805485,
          1396182291,
          2643833823,
          1695183700,
          2343527390,
          1986661051,
          1014477480,
          2177026350,
          1206759142,
          2456956037,
          344077627,
          2730485921,
          1290863460,
          2820302411,
          3158454273,
          3259730800,
          3505952657,
          3345764771,
          106217008,
          3516065817,
          3606008344,
          3600352804,
          1432725776,
          4094571909,
          1467031594,
          275423344,
          851169720,
          430227734,
          3100823752,
          506948616,
          1363258195,
          659060556,
          3750685593,
          883997877,
          3785050280,
          958139571,
          3318307427,
          1322822218,
          3812723403,
          1537002063,
          2003034995,
          1747873779,
          3602036899,
          1955562222,
          1575990012,
          2024104815,
          1125592928,
          2227730452,
          2716904306,
          2361852424,
          442776044,
          2428436474,
          593698344,
          2756734187,
          3733110249,
          3204031479,
          2999351573,
          3329325298,
          3815920427,
          3391569614,
          3928383900,
          3515267271,
          566280711,
          3940187606,
          3454069534,
          4118630271,
          4000239992,
          116418474,
          1914138554,
          174292421,
          2731055270,
          289380356,
          3203993006,
          460393269,
          320620315,
          685471733,
          587496836,
          852142971,
          1086792851,
          1017036298,
          365543100,
          1126000580,
          2618297676,
          1288033470,
          3409855158,
          1501505948,
          4234509866,
          1607167915,
          987167468,
          1816402316,
          1246189591
        ],
        s = new Array(160);
      function u() {
        this.init(), (this._w = s), i.call(this, 128, 112);
      }
      function c(t, e, n) {
        return n ^ (t & (e ^ n));
      }
      function l(t, e, n) {
        return (t & e) | (n & (t | e));
      }
      function f(t, e) {
        return (
          ((t >>> 28) | (e << 4)) ^
          ((e >>> 2) | (t << 30)) ^
          ((e >>> 7) | (t << 25))
        );
      }
      function h(t, e) {
        return (
          ((t >>> 14) | (e << 18)) ^
          ((t >>> 18) | (e << 14)) ^
          ((e >>> 9) | (t << 23))
        );
      }
      function p(t, e) {
        return ((t >>> 1) | (e << 31)) ^ ((t >>> 8) | (e << 24)) ^ (t >>> 7);
      }
      function d(t, e) {
        return (
          ((t >>> 1) | (e << 31)) ^
          ((t >>> 8) | (e << 24)) ^
          ((t >>> 7) | (e << 25))
        );
      }
      function m(t, e) {
        return ((t >>> 19) | (e << 13)) ^ ((e >>> 29) | (t << 3)) ^ (t >>> 6);
      }
      function v(t, e) {
        return (
          ((t >>> 19) | (e << 13)) ^
          ((e >>> 29) | (t << 3)) ^
          ((t >>> 6) | (e << 26))
        );
      }
      function y(t, e) {
        return t >>> 0 < e >>> 0 ? 1 : 0;
      }
      r(u, i),
        (u.prototype.init = function() {
          return (
            (this._ah = 1779033703),
            (this._bh = 3144134277),
            (this._ch = 1013904242),
            (this._dh = 2773480762),
            (this._eh = 1359893119),
            (this._fh = 2600822924),
            (this._gh = 528734635),
            (this._hh = 1541459225),
            (this._al = 4089235720),
            (this._bl = 2227873595),
            (this._cl = 4271175723),
            (this._dl = 1595750129),
            (this._el = 2917565137),
            (this._fl = 725511199),
            (this._gl = 4215389547),
            (this._hl = 327033209),
            this
          );
        }),
        (u.prototype._update = function(t) {
          for (
            var e = this._w,
              n = 0 | this._ah,
              r = 0 | this._bh,
              i = 0 | this._ch,
              a = 0 | this._dh,
              s = 0 | this._eh,
              u = 0 | this._fh,
              g = 0 | this._gh,
              b = 0 | this._hh,
              w = 0 | this._al,
              _ = 0 | this._bl,
              x = 0 | this._cl,
              E = 0 | this._dl,
              S = 0 | this._el,
              N = 0 | this._fl,
              O = 0 | this._gl,
              I = 0 | this._hl,
              C = 0;
            C < 32;
            C += 2
          )
            (e[C] = t.readInt32BE(4 * C)),
              (e[C + 1] = t.readInt32BE(4 * C + 4));
          for (; C < 160; C += 2) {
            var A = e[C - 30],
              k = e[C - 30 + 1],
              P = p(A, k),
              T = d(k, A);
            (A = e[C - 4]), (k = e[C - 4 + 1]);
            var R = m(A, k),
              D = v(k, A),
              M = e[C - 14],
              j = e[C - 14 + 1],
              L = e[C - 32],
              B = e[C - 32 + 1],
              F = (T + j) | 0,
              z = (P + M + y(F, T)) | 0;
            (F = (F + D) | 0),
              (z = (z + R + y(F, D)) | 0),
              (F = (F + B) | 0),
              (z = (z + L + y(F, B)) | 0),
              (e[C] = z),
              (e[C + 1] = F);
          }
          for (var U = 0; U < 160; U += 2) {
            (z = e[U]), (F = e[U + 1]);
            var V = l(n, r, i),
              W = l(w, _, x),
              $ = f(n, w),
              q = f(w, n),
              H = h(s, S),
              K = h(S, s),
              G = o[U],
              X = o[U + 1],
              J = c(s, u, g),
              Y = c(S, N, O),
              Q = (I + K) | 0,
              Z = (b + H + y(Q, I)) | 0;
            (Q = (Q + Y) | 0),
              (Z = (Z + J + y(Q, Y)) | 0),
              (Q = (Q + X) | 0),
              (Z = (Z + G + y(Q, X)) | 0),
              (Q = (Q + F) | 0),
              (Z = (Z + z + y(Q, F)) | 0);
            var tt = (q + W) | 0,
              et = ($ + V + y(tt, q)) | 0;
            (b = g),
              (I = O),
              (g = u),
              (O = N),
              (u = s),
              (N = S),
              (S = (E + Q) | 0),
              (s = (a + Z + y(S, E)) | 0),
              (a = i),
              (E = x),
              (i = r),
              (x = _),
              (r = n),
              (_ = w),
              (w = (Q + tt) | 0),
              (n = (Z + et + y(w, Q)) | 0);
          }
          (this._al = (this._al + w) | 0),
            (this._bl = (this._bl + _) | 0),
            (this._cl = (this._cl + x) | 0),
            (this._dl = (this._dl + E) | 0),
            (this._el = (this._el + S) | 0),
            (this._fl = (this._fl + N) | 0),
            (this._gl = (this._gl + O) | 0),
            (this._hl = (this._hl + I) | 0),
            (this._ah = (this._ah + n + y(this._al, w)) | 0),
            (this._bh = (this._bh + r + y(this._bl, _)) | 0),
            (this._ch = (this._ch + i + y(this._cl, x)) | 0),
            (this._dh = (this._dh + a + y(this._dl, E)) | 0),
            (this._eh = (this._eh + s + y(this._el, S)) | 0),
            (this._fh = (this._fh + u + y(this._fl, N)) | 0),
            (this._gh = (this._gh + g + y(this._gl, O)) | 0),
            (this._hh = (this._hh + b + y(this._hl, I)) | 0);
        }),
        (u.prototype._hash = function() {
          var t = a.allocUnsafe(64);
          function e(e, n, r) {
            t.writeInt32BE(e, r), t.writeInt32BE(n, r + 4);
          }
          return (
            e(this._ah, this._al, 0),
            e(this._bh, this._bl, 8),
            e(this._ch, this._cl, 16),
            e(this._dh, this._dl, 24),
            e(this._eh, this._el, 32),
            e(this._fh, this._fl, 40),
            e(this._gh, this._gl, 48),
            e(this._hh, this._hl, 56),
            t
          );
        }),
        (t.exports = u);
    },
    "50ed": function(t, e) {
      t.exports = function(t, e) {
        return { value: e, done: !!t };
      };
    },
    5165: function(t, e, n) {
      (function(t) {
        var r = n("8c8a");
        function i(t) {
          return (t._prev = t._cipher.encryptBlock(t._prev)), t._prev;
        }
        e.encrypt = function(e, n) {
          while (e._cache.length < n.length)
            e._cache = t.concat([e._cache, i(e)]);
          var a = e._cache.slice(0, n.length);
          return (e._cache = e._cache.slice(n.length)), r(n, a);
        };
      }.call(this, n("b639").Buffer));
    },
    5168: function(t, e, n) {
      var r = n("dbdb")("wks"),
        i = n("62a0"),
        a = n("e53d").Symbol,
        o = "function" == typeof a,
        s = (t.exports = function(t) {
          return r[t] || (r[t] = (o && a[t]) || (o ? a : i)("Symbol." + t));
        });
      s.store = r;
    },
    "520a": function(t, e, n) {
      "use strict";
      var r = n("0bfb"),
        i = RegExp.prototype.exec,
        a = String.prototype.replace,
        o = i,
        s = "lastIndex",
        u = (function() {
          var t = /a/,
            e = /b*/g;
          return i.call(t, "a"), i.call(e, "a"), 0 !== t[s] || 0 !== e[s];
        })(),
        c = void 0 !== /()??/.exec("")[1],
        l = u || c;
      l &&
        (o = function(t) {
          var e,
            n,
            o,
            l,
            f = this;
          return (
            c && (n = new RegExp("^" + f.source + "$(?!\\s)", r.call(f))),
            u && (e = f[s]),
            (o = i.call(f, t)),
            u && o && (f[s] = f.global ? o.index + o[0].length : e),
            c &&
              o &&
              o.length > 1 &&
              a.call(o[0], n, function() {
                for (l = 1; l < arguments.length - 2; l++)
                  void 0 === arguments[l] && (o[l] = void 0);
              }),
            o
          );
        }),
        (t.exports = o);
    },
    5239: function(t, e, n) {
      var r = n("8707").Buffer;
      function i(t, e, n) {
        var r,
          i,
          o,
          s = -1,
          u = 8,
          c = 0;
        while (++s < u)
          (r = t._cipher.encryptBlock(t._prev)),
            (i = e & (1 << (7 - s)) ? 128 : 0),
            (o = r[0] ^ i),
            (c += (128 & o) >> s % 8),
            (t._prev = a(t._prev, n ? i : o));
        return c;
      }
      function a(t, e) {
        var n = t.length,
          i = -1,
          a = r.allocUnsafe(t.length);
        t = r.concat([t, r.from([e])]);
        while (++i < n) a[i] = (t[i] << 1) | (t[i + 1] >> 7);
        return a;
      }
      e.encrypt = function(t, e, n) {
        var a = e.length,
          o = r.allocUnsafe(a),
          s = -1;
        while (++s < a) o[s] = i(t, e[s], n);
        return o;
      };
    },
    5291: function(t, e, n) {
      var r = n("399f"),
        i = n("8707").Buffer;
      function a(t, e) {
        return i.from(
          t
            .toRed(r.mont(e.modulus))
            .redPow(new r(e.publicExponent))
            .fromRed()
            .toArray()
        );
      }
      t.exports = a;
    },
    "52a7": function(t, e) {
      e.f = {}.propertyIsEnumerable;
    },
    "53e2": function(t, e, n) {
      var r = n("07e3"),
        i = n("241e"),
        a = n("5559")("IE_PROTO"),
        o = Object.prototype;
      t.exports =
        Object.getPrototypeOf ||
        function(t) {
          return (
            (t = i(t)),
            r(t, a)
              ? t[a]
              : "function" == typeof t.constructor && t instanceof t.constructor
              ? t.constructor.prototype
              : t instanceof Object
              ? o
              : null
          );
        };
    },
    "551c": function(t, e, n) {
      "use strict";
      var r,
        i,
        a,
        o,
        s = n("2d00"),
        u = n("7726"),
        c = n("9b43"),
        l = n("23c6"),
        f = n("5ca1"),
        h = n("d3f4"),
        p = n("d8e8"),
        d = n("f605"),
        m = n("4a59"),
        v = n("ebd6"),
        y = n("1991").set,
        g = n("8079")(),
        b = n("a5b8"),
        w = n("9c80"),
        _ = n("a25f"),
        x = n("bcaa"),
        E = "Promise",
        S = u.TypeError,
        N = u.process,
        O = N && N.versions,
        I = (O && O.v8) || "",
        C = u[E],
        A = "process" == l(N),
        k = function() {},
        P = (i = b.f),
        T = !!(function() {
          try {
            var t = C.resolve(1),
              e = ((t.constructor = {})[n("2b4c")("species")] = function(t) {
                t(k, k);
              });
            return (
              (A || "function" == typeof PromiseRejectionEvent) &&
              t.then(k) instanceof e &&
              0 !== I.indexOf("6.6") &&
              -1 === _.indexOf("Chrome/66")
            );
          } catch (r) {}
        })(),
        R = function(t) {
          var e;
          return !(!h(t) || "function" != typeof (e = t.then)) && e;
        },
        D = function(t, e) {
          if (!t._n) {
            t._n = !0;
            var n = t._c;
            g(function() {
              var r = t._v,
                i = 1 == t._s,
                a = 0,
                o = function(e) {
                  var n,
                    a,
                    o,
                    s = i ? e.ok : e.fail,
                    u = e.resolve,
                    c = e.reject,
                    l = e.domain;
                  try {
                    s
                      ? (i || (2 == t._h && L(t), (t._h = 1)),
                        !0 === s
                          ? (n = r)
                          : (l && l.enter(),
                            (n = s(r)),
                            l && (l.exit(), (o = !0))),
                        n === e.promise
                          ? c(S("Promise-chain cycle"))
                          : (a = R(n))
                          ? a.call(n, u, c)
                          : u(n))
                      : c(r);
                  } catch (f) {
                    l && !o && l.exit(), c(f);
                  }
                };
              while (n.length > a) o(n[a++]);
              (t._c = []), (t._n = !1), e && !t._h && M(t);
            });
          }
        },
        M = function(t) {
          y.call(u, function() {
            var e,
              n,
              r,
              i = t._v,
              a = j(t);
            if (
              (a &&
                ((e = w(function() {
                  A
                    ? N.emit("unhandledRejection", i, t)
                    : (n = u.onunhandledrejection)
                    ? n({ promise: t, reason: i })
                    : (r = u.console) &&
                      r.error &&
                      r.error("Unhandled promise rejection", i);
                })),
                (t._h = A || j(t) ? 2 : 1)),
              (t._a = void 0),
              a && e.e)
            )
              throw e.v;
          });
        },
        j = function(t) {
          return 1 !== t._h && 0 === (t._a || t._c).length;
        },
        L = function(t) {
          y.call(u, function() {
            var e;
            A
              ? N.emit("rejectionHandled", t)
              : (e = u.onrejectionhandled) && e({ promise: t, reason: t._v });
          });
        },
        B = function(t) {
          var e = this;
          e._d ||
            ((e._d = !0),
            (e = e._w || e),
            (e._v = t),
            (e._s = 2),
            e._a || (e._a = e._c.slice()),
            D(e, !0));
        },
        F = function(t) {
          var e,
            n = this;
          if (!n._d) {
            (n._d = !0), (n = n._w || n);
            try {
              if (n === t) throw S("Promise can't be resolved itself");
              (e = R(t))
                ? g(function() {
                    var r = { _w: n, _d: !1 };
                    try {
                      e.call(t, c(F, r, 1), c(B, r, 1));
                    } catch (i) {
                      B.call(r, i);
                    }
                  })
                : ((n._v = t), (n._s = 1), D(n, !1));
            } catch (r) {
              B.call({ _w: n, _d: !1 }, r);
            }
          }
        };
      T ||
        ((C = function(t) {
          d(this, C, E, "_h"), p(t), r.call(this);
          try {
            t(c(F, this, 1), c(B, this, 1));
          } catch (e) {
            B.call(this, e);
          }
        }),
        (r = function(t) {
          (this._c = []),
            (this._a = void 0),
            (this._s = 0),
            (this._d = !1),
            (this._v = void 0),
            (this._h = 0),
            (this._n = !1);
        }),
        (r.prototype = n("dcbc")(C.prototype, {
          then: function(t, e) {
            var n = P(v(this, C));
            return (
              (n.ok = "function" != typeof t || t),
              (n.fail = "function" == typeof e && e),
              (n.domain = A ? N.domain : void 0),
              this._c.push(n),
              this._a && this._a.push(n),
              this._s && D(this, !1),
              n.promise
            );
          },
          catch: function(t) {
            return this.then(void 0, t);
          }
        })),
        (a = function() {
          var t = new r();
          (this.promise = t),
            (this.resolve = c(F, t, 1)),
            (this.reject = c(B, t, 1));
        }),
        (b.f = P = function(t) {
          return t === C || t === o ? new a(t) : i(t);
        })),
        f(f.G + f.W + f.F * !T, { Promise: C }),
        n("7f20")(C, E),
        n("7a56")(E),
        (o = n("8378")[E]),
        f(f.S + f.F * !T, E, {
          reject: function(t) {
            var e = P(this),
              n = e.reject;
            return n(t), e.promise;
          }
        }),
        f(f.S + f.F * (s || !T), E, {
          resolve: function(t) {
            return x(s && this === o ? C : this, t);
          }
        }),
        f(
          f.S +
            f.F *
              !(
                T &&
                n("5cc5")(function(t) {
                  C.all(t)["catch"](k);
                })
              ),
          E,
          {
            all: function(t) {
              var e = this,
                n = P(e),
                r = n.resolve,
                i = n.reject,
                a = w(function() {
                  var n = [],
                    a = 0,
                    o = 1;
                  m(t, !1, function(t) {
                    var s = a++,
                      u = !1;
                    n.push(void 0),
                      o++,
                      e.resolve(t).then(function(t) {
                        u || ((u = !0), (n[s] = t), --o || r(n));
                      }, i);
                  }),
                    --o || r(n);
                });
              return a.e && i(a.v), n.promise;
            },
            race: function(t) {
              var e = this,
                n = P(e),
                r = n.reject,
                i = w(function() {
                  m(t, !1, function(t) {
                    e.resolve(t).then(n.resolve, r);
                  });
                });
              return i.e && r(i.v), n.promise;
            }
          }
        );
    },
    5537: function(t, e, n) {
      var r = n("8378"),
        i = n("7726"),
        a = "__core-js_shared__",
        o = i[a] || (i[a] = {});
      (t.exports = function(t, e) {
        return o[t] || (o[t] = void 0 !== e ? e : {});
      })("versions", []).push({
        version: r.version,
        mode: n("2d00") ? "pure" : "global",
        copyright: "© 2019 Denis Pushkarev (zloirock.ru)"
      });
    },
    5559: function(t, e, n) {
      var r = n("dbdb")("keys"),
        i = n("62a0");
      t.exports = function(t) {
        return r[t] || (r[t] = i(t));
      };
    },
    "561d": function(t, e, n) {
      (function(e) {
        var r = n("399f"),
          i = n("7a10"),
          a = new i(),
          o = new r(24),
          s = new r(11),
          u = new r(10),
          c = new r(3),
          l = new r(7),
          f = n("58a2"),
          h = n("11dc");
        function p(t, n) {
          return (
            (n = n || "utf8"),
            e.isBuffer(t) || (t = new e(t, n)),
            (this._pub = new r(t)),
            this
          );
        }
        function d(t, n) {
          return (
            (n = n || "utf8"),
            e.isBuffer(t) || (t = new e(t, n)),
            (this._priv = new r(t)),
            this
          );
        }
        t.exports = y;
        var m = {};
        function v(t, e) {
          var n = e.toString("hex"),
            r = [n, t.toString(16)].join("_");
          if (r in m) return m[r];
          var i,
            h = 0;
          if (t.isEven() || !f.simpleSieve || !f.fermatTest(t) || !a.test(t))
            return (
              (h += 1), (h += "02" === n || "05" === n ? 8 : 4), (m[r] = h), h
            );
          switch ((a.test(t.shrn(1)) || (h += 2), n)) {
            case "02":
              t.mod(o).cmp(s) && (h += 8);
              break;
            case "05":
              (i = t.mod(u)), i.cmp(c) && i.cmp(l) && (h += 8);
              break;
            default:
              h += 4;
          }
          return (m[r] = h), h;
        }
        function y(t, e, n) {
          this.setGenerator(e),
            (this.__prime = new r(t)),
            (this._prime = r.mont(this.__prime)),
            (this._primeLen = t.length),
            (this._pub = void 0),
            (this._priv = void 0),
            (this._primeCode = void 0),
            n
              ? ((this.setPublicKey = p), (this.setPrivateKey = d))
              : (this._primeCode = 8);
        }
        function g(t, n) {
          var r = new e(t.toArray());
          return n ? r.toString(n) : r;
        }
        Object.defineProperty(y.prototype, "verifyError", {
          enumerable: !0,
          get: function() {
            return (
              "number" !== typeof this._primeCode &&
                (this._primeCode = v(this.__prime, this.__gen)),
              this._primeCode
            );
          }
        }),
          (y.prototype.generateKeys = function() {
            return (
              this._priv || (this._priv = new r(h(this._primeLen))),
              (this._pub = this._gen
                .toRed(this._prime)
                .redPow(this._priv)
                .fromRed()),
              this.getPublicKey()
            );
          }),
          (y.prototype.computeSecret = function(t) {
            (t = new r(t)), (t = t.toRed(this._prime));
            var n = t.redPow(this._priv).fromRed(),
              i = new e(n.toArray()),
              a = this.getPrime();
            if (i.length < a.length) {
              var o = new e(a.length - i.length);
              o.fill(0), (i = e.concat([o, i]));
            }
            return i;
          }),
          (y.prototype.getPublicKey = function(t) {
            return g(this._pub, t);
          }),
          (y.prototype.getPrivateKey = function(t) {
            return g(this._priv, t);
          }),
          (y.prototype.getPrime = function(t) {
            return g(this.__prime, t);
          }),
          (y.prototype.getGenerator = function(t) {
            return g(this._gen, t);
          }),
          (y.prototype.setGenerator = function(t, n) {
            return (
              (n = n || "utf8"),
              e.isBuffer(t) || (t = new e(t, n)),
              (this.__gen = t),
              (this._gen = new r(t)),
              this
            );
          });
      }.call(this, n("b639").Buffer));
    },
    "56b5": function(t, e, n) {
      "use strict";
      var r = n("7f7a"),
        i = r.define("Time", function() {
          this.choice({ utcTime: this.utctime(), generalTime: this.gentime() });
        }),
        a = r.define("AttributeTypeValue", function() {
          this.seq().obj(this.key("type").objid(), this.key("value").any());
        }),
        o = r.define("AlgorithmIdentifier", function() {
          this.seq().obj(
            this.key("algorithm").objid(),
            this.key("parameters").optional(),
            this.key("curve")
              .objid()
              .optional()
          );
        }),
        s = r.define("SubjectPublicKeyInfo", function() {
          this.seq().obj(
            this.key("algorithm").use(o),
            this.key("subjectPublicKey").bitstr()
          );
        }),
        u = r.define("RelativeDistinguishedName", function() {
          this.setof(a);
        }),
        c = r.define("RDNSequence", function() {
          this.seqof(u);
        }),
        l = r.define("Name", function() {
          this.choice({ rdnSequence: this.use(c) });
        }),
        f = r.define("Validity", function() {
          this.seq().obj(
            this.key("notBefore").use(i),
            this.key("notAfter").use(i)
          );
        }),
        h = r.define("Extension", function() {
          this.seq().obj(
            this.key("extnID").objid(),
            this.key("critical")
              .bool()
              .def(!1),
            this.key("extnValue").octstr()
          );
        }),
        p = r.define("TBSCertificate", function() {
          this.seq().obj(
            this.key("version")
              .explicit(0)
              .int()
              .optional(),
            this.key("serialNumber").int(),
            this.key("signature").use(o),
            this.key("issuer").use(l),
            this.key("validity").use(f),
            this.key("subject").use(l),
            this.key("subjectPublicKeyInfo").use(s),
            this.key("issuerUniqueID")
              .implicit(1)
              .bitstr()
              .optional(),
            this.key("subjectUniqueID")
              .implicit(2)
              .bitstr()
              .optional(),
            this.key("extensions")
              .explicit(3)
              .seqof(h)
              .optional()
          );
        }),
        d = r.define("X509Certificate", function() {
          this.seq().obj(
            this.key("tbsCertificate").use(p),
            this.key("signatureAlgorithm").use(o),
            this.key("signatureValue").bitstr()
          );
        });
      t.exports = d;
    },
    "584a": function(t, e) {
      var n = (t.exports = { version: "2.6.6" });
      "number" == typeof __e && (__e = n);
    },
    "58a2": function(t, e, n) {
      var r = n("11dc");
      (t.exports = b), (b.simpleSieve = y), (b.fermatTest = g);
      var i = n("399f"),
        a = new i(24),
        o = n("7a10"),
        s = new o(),
        u = new i(1),
        c = new i(2),
        l = new i(5),
        f = (new i(16), new i(8), new i(10)),
        h = new i(3),
        p = (new i(7), new i(11)),
        d = new i(4),
        m = (new i(12), null);
      function v() {
        if (null !== m) return m;
        var t = 1048576,
          e = [];
        e[0] = 2;
        for (var n = 1, r = 3; r < t; r += 2) {
          for (var i = Math.ceil(Math.sqrt(r)), a = 0; a < n && e[a] <= i; a++)
            if (r % e[a] === 0) break;
          (n !== a && e[a] <= i) || (e[n++] = r);
        }
        return (m = e), e;
      }
      function y(t) {
        for (var e = v(), n = 0; n < e.length; n++)
          if (0 === t.modn(e[n])) return 0 === t.cmpn(e[n]);
        return !0;
      }
      function g(t) {
        var e = i.mont(t);
        return (
          0 ===
          c
            .toRed(e)
            .redPow(t.subn(1))
            .fromRed()
            .cmpn(1)
        );
      }
      function b(t, e) {
        if (t < 16) return new i(2 === e || 5 === e ? [140, 123] : [140, 39]);
        var n, o;
        e = new i(e);
        while (1) {
          n = new i(r(Math.ceil(t / 8)));
          while (n.bitLength() > t) n.ishrn(1);
          if ((n.isEven() && n.iadd(u), n.testn(1) || n.iadd(c), e.cmp(c))) {
            if (!e.cmp(l)) while (n.mod(f).cmp(h)) n.iadd(d);
          } else while (n.mod(a).cmp(p)) n.iadd(d);
          if (
            ((o = n.shrn(1)),
            y(o) && y(n) && g(o) && g(n) && s.test(o) && s.test(n))
          )
            return n;
        }
      }
    },
    5919: function(t, e, n) {
      "use strict";
      (e.sha1 = n("13e2")),
        (e.sha224 = n("07f2")),
        (e.sha256 = n("6eed")),
        (e.sha384 = n("8b95")),
        (e.sha512 = n("b525"));
    },
    "5a76": function(t, e, n) {
      var r = n("f576");
      t.exports = function(t) {
        return new r().update(t).digest();
      };
    },
    "5b4e": function(t, e, n) {
      var r = n("36c3"),
        i = n("b447"),
        a = n("0fc9");
      t.exports = function(t) {
        return function(e, n, o) {
          var s,
            u = r(e),
            c = i(u.length),
            l = a(o, c);
          if (t && n != n) {
            while (c > l) if (((s = u[l++]), s != s)) return !0;
          } else
            for (; c > l; l++)
              if ((t || l in u) && u[l] === n) return t || l || 0;
          return !t && -1;
        };
      };
    },
    "5c95": function(t, e, n) {
      var r = n("35e8");
      t.exports = function(t, e, n) {
        for (var i in e) n && t[i] ? (t[i] = e[i]) : r(t, i, e[i]);
        return t;
      };
    },
    "5ca1": function(t, e, n) {
      var r = n("7726"),
        i = n("8378"),
        a = n("32e9"),
        o = n("2aba"),
        s = n("9b43"),
        u = "prototype",
        c = function(t, e, n) {
          var l,
            f,
            h,
            p,
            d = t & c.F,
            m = t & c.G,
            v = t & c.S,
            y = t & c.P,
            g = t & c.B,
            b = m ? r : v ? r[e] || (r[e] = {}) : (r[e] || {})[u],
            w = m ? i : i[e] || (i[e] = {}),
            _ = w[u] || (w[u] = {});
          for (l in (m && (n = e), n))
            (f = !d && b && void 0 !== b[l]),
              (h = (f ? b : n)[l]),
              (p =
                g && f
                  ? s(h, r)
                  : y && "function" == typeof h
                  ? s(Function.call, h)
                  : h),
              b && o(b, l, h, t & c.U),
              w[l] != h && a(w, l, p),
              y && _[l] != h && (_[l] = h);
        };
      (r.core = i),
        (c.F = 1),
        (c.G = 2),
        (c.S = 4),
        (c.P = 8),
        (c.B = 16),
        (c.W = 32),
        (c.U = 64),
        (c.R = 128),
        (t.exports = c);
    },
    "5cc5": function(t, e, n) {
      var r = n("2b4c")("iterator"),
        i = !1;
      try {
        var a = [7][r]();
        (a["return"] = function() {
          i = !0;
        }),
          Array.from(a, function() {
            throw 2;
          });
      } catch (o) {}
      t.exports = function(t, e) {
        if (!e && !i) return !1;
        var n = !1;
        try {
          var a = [7],
            s = a[r]();
          (s.next = function() {
            return { done: (n = !0) };
          }),
            (a[r] = function() {
              return s;
            }),
            t(a);
        } catch (o) {}
        return n;
      };
    },
    "5e1a": function(t, e, n) {
      "use strict";
      function r(t, e) {
        if (!(t instanceof e))
          throw new TypeError("Cannot call a class as a function");
      }
      var i = n("8707").Buffer,
        a = n(2);
      function o(t, e, n) {
        t.copy(e, n);
      }
      (t.exports = (function() {
        function t() {
          r(this, t), (this.head = null), (this.tail = null), (this.length = 0);
        }
        return (
          (t.prototype.push = function(t) {
            var e = { data: t, next: null };
            this.length > 0 ? (this.tail.next = e) : (this.head = e),
              (this.tail = e),
              ++this.length;
          }),
          (t.prototype.unshift = function(t) {
            var e = { data: t, next: this.head };
            0 === this.length && (this.tail = e),
              (this.head = e),
              ++this.length;
          }),
          (t.prototype.shift = function() {
            if (0 !== this.length) {
              var t = this.head.data;
              return (
                1 === this.length
                  ? (this.head = this.tail = null)
                  : (this.head = this.head.next),
                --this.length,
                t
              );
            }
          }),
          (t.prototype.clear = function() {
            (this.head = this.tail = null), (this.length = 0);
          }),
          (t.prototype.join = function(t) {
            if (0 === this.length) return "";
            var e = this.head,
              n = "" + e.data;
            while ((e = e.next)) n += t + e.data;
            return n;
          }),
          (t.prototype.concat = function(t) {
            if (0 === this.length) return i.alloc(0);
            if (1 === this.length) return this.head.data;
            var e = i.allocUnsafe(t >>> 0),
              n = this.head,
              r = 0;
            while (n) o(n.data, e, r), (r += n.data.length), (n = n.next);
            return e;
          }),
          t
        );
      })()),
        a &&
          a.inspect &&
          a.inspect.custom &&
          (t.exports.prototype[a.inspect.custom] = function() {
            var t = a.inspect({ length: this.length });
            return this.constructor.name + " " + t;
          });
    },
    "5ee7": function(t, e, n) {
      "use strict";
      (e.readUInt32BE = function(t, e) {
        var n =
          (t[0 + e] << 24) | (t[1 + e] << 16) | (t[2 + e] << 8) | t[3 + e];
        return n >>> 0;
      }),
        (e.writeUInt32BE = function(t, e, n) {
          (t[0 + n] = e >>> 24),
            (t[1 + n] = (e >>> 16) & 255),
            (t[2 + n] = (e >>> 8) & 255),
            (t[3 + n] = 255 & e);
        }),
        (e.ip = function(t, e, n, r) {
          for (var i = 0, a = 0, o = 6; o >= 0; o -= 2) {
            for (var s = 0; s <= 24; s += 8)
              (i <<= 1), (i |= (e >>> (s + o)) & 1);
            for (s = 0; s <= 24; s += 8) (i <<= 1), (i |= (t >>> (s + o)) & 1);
          }
          for (o = 6; o >= 0; o -= 2) {
            for (s = 1; s <= 25; s += 8) (a <<= 1), (a |= (e >>> (s + o)) & 1);
            for (s = 1; s <= 25; s += 8) (a <<= 1), (a |= (t >>> (s + o)) & 1);
          }
          (n[r + 0] = i >>> 0), (n[r + 1] = a >>> 0);
        }),
        (e.rip = function(t, e, n, r) {
          for (var i = 0, a = 0, o = 0; o < 4; o++)
            for (var s = 24; s >= 0; s -= 8)
              (i <<= 1),
                (i |= (e >>> (s + o)) & 1),
                (i <<= 1),
                (i |= (t >>> (s + o)) & 1);
          for (o = 4; o < 8; o++)
            for (s = 24; s >= 0; s -= 8)
              (a <<= 1),
                (a |= (e >>> (s + o)) & 1),
                (a <<= 1),
                (a |= (t >>> (s + o)) & 1);
          (n[r + 0] = i >>> 0), (n[r + 1] = a >>> 0);
        }),
        (e.pc1 = function(t, e, n, r) {
          for (var i = 0, a = 0, o = 7; o >= 5; o--) {
            for (var s = 0; s <= 24; s += 8)
              (i <<= 1), (i |= (e >> (s + o)) & 1);
            for (s = 0; s <= 24; s += 8) (i <<= 1), (i |= (t >> (s + o)) & 1);
          }
          for (s = 0; s <= 24; s += 8) (i <<= 1), (i |= (e >> (s + o)) & 1);
          for (o = 1; o <= 3; o++) {
            for (s = 0; s <= 24; s += 8) (a <<= 1), (a |= (e >> (s + o)) & 1);
            for (s = 0; s <= 24; s += 8) (a <<= 1), (a |= (t >> (s + o)) & 1);
          }
          for (s = 0; s <= 24; s += 8) (a <<= 1), (a |= (t >> (s + o)) & 1);
          (n[r + 0] = i >>> 0), (n[r + 1] = a >>> 0);
        }),
        (e.r28shl = function(t, e) {
          return ((t << e) & 268435455) | (t >>> (28 - e));
        });
      var r = [
        14,
        11,
        17,
        4,
        27,
        23,
        25,
        0,
        13,
        22,
        7,
        18,
        5,
        9,
        16,
        24,
        2,
        20,
        12,
        21,
        1,
        8,
        15,
        26,
        15,
        4,
        25,
        19,
        9,
        1,
        26,
        16,
        5,
        11,
        23,
        8,
        12,
        7,
        17,
        0,
        22,
        3,
        10,
        14,
        6,
        20,
        27,
        24
      ];
      (e.pc2 = function(t, e, n, i) {
        for (var a = 0, o = 0, s = r.length >>> 1, u = 0; u < s; u++)
          (a <<= 1), (a |= (t >>> r[u]) & 1);
        for (u = s; u < r.length; u++) (o <<= 1), (o |= (e >>> r[u]) & 1);
        (n[i + 0] = a >>> 0), (n[i + 1] = o >>> 0);
      }),
        (e.expand = function(t, e, n) {
          var r = 0,
            i = 0;
          r = ((1 & t) << 5) | (t >>> 27);
          for (var a = 23; a >= 15; a -= 4) (r <<= 6), (r |= (t >>> a) & 63);
          for (a = 11; a >= 3; a -= 4) (i |= (t >>> a) & 63), (i <<= 6);
          (i |= ((31 & t) << 1) | (t >>> 31)),
            (e[n + 0] = r >>> 0),
            (e[n + 1] = i >>> 0);
        });
      var i = [
        14,
        0,
        4,
        15,
        13,
        7,
        1,
        4,
        2,
        14,
        15,
        2,
        11,
        13,
        8,
        1,
        3,
        10,
        10,
        6,
        6,
        12,
        12,
        11,
        5,
        9,
        9,
        5,
        0,
        3,
        7,
        8,
        4,
        15,
        1,
        12,
        14,
        8,
        8,
        2,
        13,
        4,
        6,
        9,
        2,
        1,
        11,
        7,
        15,
        5,
        12,
        11,
        9,
        3,
        7,
        14,
        3,
        10,
        10,
        0,
        5,
        6,
        0,
        13,
        15,
        3,
        1,
        13,
        8,
        4,
        14,
        7,
        6,
        15,
        11,
        2,
        3,
        8,
        4,
        14,
        9,
        12,
        7,
        0,
        2,
        1,
        13,
        10,
        12,
        6,
        0,
        9,
        5,
        11,
        10,
        5,
        0,
        13,
        14,
        8,
        7,
        10,
        11,
        1,
        10,
        3,
        4,
        15,
        13,
        4,
        1,
        2,
        5,
        11,
        8,
        6,
        12,
        7,
        6,
        12,
        9,
        0,
        3,
        5,
        2,
        14,
        15,
        9,
        10,
        13,
        0,
        7,
        9,
        0,
        14,
        9,
        6,
        3,
        3,
        4,
        15,
        6,
        5,
        10,
        1,
        2,
        13,
        8,
        12,
        5,
        7,
        14,
        11,
        12,
        4,
        11,
        2,
        15,
        8,
        1,
        13,
        1,
        6,
        10,
        4,
        13,
        9,
        0,
        8,
        6,
        15,
        9,
        3,
        8,
        0,
        7,
        11,
        4,
        1,
        15,
        2,
        14,
        12,
        3,
        5,
        11,
        10,
        5,
        14,
        2,
        7,
        12,
        7,
        13,
        13,
        8,
        14,
        11,
        3,
        5,
        0,
        6,
        6,
        15,
        9,
        0,
        10,
        3,
        1,
        4,
        2,
        7,
        8,
        2,
        5,
        12,
        11,
        1,
        12,
        10,
        4,
        14,
        15,
        9,
        10,
        3,
        6,
        15,
        9,
        0,
        0,
        6,
        12,
        10,
        11,
        1,
        7,
        13,
        13,
        8,
        15,
        9,
        1,
        4,
        3,
        5,
        14,
        11,
        5,
        12,
        2,
        7,
        8,
        2,
        4,
        14,
        2,
        14,
        12,
        11,
        4,
        2,
        1,
        12,
        7,
        4,
        10,
        7,
        11,
        13,
        6,
        1,
        8,
        5,
        5,
        0,
        3,
        15,
        15,
        10,
        13,
        3,
        0,
        9,
        14,
        8,
        9,
        6,
        4,
        11,
        2,
        8,
        1,
        12,
        11,
        7,
        10,
        1,
        13,
        14,
        7,
        2,
        8,
        13,
        15,
        6,
        9,
        15,
        12,
        0,
        5,
        9,
        6,
        10,
        3,
        4,
        0,
        5,
        14,
        3,
        12,
        10,
        1,
        15,
        10,
        4,
        15,
        2,
        9,
        7,
        2,
        12,
        6,
        9,
        8,
        5,
        0,
        6,
        13,
        1,
        3,
        13,
        4,
        14,
        14,
        0,
        7,
        11,
        5,
        3,
        11,
        8,
        9,
        4,
        14,
        3,
        15,
        2,
        5,
        12,
        2,
        9,
        8,
        5,
        12,
        15,
        3,
        10,
        7,
        11,
        0,
        14,
        4,
        1,
        10,
        7,
        1,
        6,
        13,
        0,
        11,
        8,
        6,
        13,
        4,
        13,
        11,
        0,
        2,
        11,
        14,
        7,
        15,
        4,
        0,
        9,
        8,
        1,
        13,
        10,
        3,
        14,
        12,
        3,
        9,
        5,
        7,
        12,
        5,
        2,
        10,
        15,
        6,
        8,
        1,
        6,
        1,
        6,
        4,
        11,
        11,
        13,
        13,
        8,
        12,
        1,
        3,
        4,
        7,
        10,
        14,
        7,
        10,
        9,
        15,
        5,
        6,
        0,
        8,
        15,
        0,
        14,
        5,
        2,
        9,
        3,
        2,
        12,
        13,
        1,
        2,
        15,
        8,
        13,
        4,
        8,
        6,
        10,
        15,
        3,
        11,
        7,
        1,
        4,
        10,
        12,
        9,
        5,
        3,
        6,
        14,
        11,
        5,
        0,
        0,
        14,
        12,
        9,
        7,
        2,
        7,
        2,
        11,
        1,
        4,
        14,
        1,
        7,
        9,
        4,
        12,
        10,
        14,
        8,
        2,
        13,
        0,
        15,
        6,
        12,
        10,
        9,
        13,
        0,
        15,
        3,
        3,
        5,
        5,
        6,
        8,
        11
      ];
      e.substitute = function(t, e) {
        for (var n = 0, r = 0; r < 4; r++) {
          var a = (t >>> (18 - 6 * r)) & 63,
            o = i[64 * r + a];
          (n <<= 4), (n |= o);
        }
        for (r = 0; r < 4; r++) {
          (a = (e >>> (18 - 6 * r)) & 63), (o = i[256 + 64 * r + a]);
          (n <<= 4), (n |= o);
        }
        return n >>> 0;
      };
      var a = [
        16,
        25,
        12,
        11,
        3,
        20,
        4,
        15,
        31,
        17,
        9,
        6,
        27,
        14,
        1,
        22,
        30,
        24,
        8,
        18,
        0,
        5,
        29,
        23,
        13,
        19,
        2,
        26,
        10,
        21,
        28,
        7
      ];
      (e.permute = function(t) {
        for (var e = 0, n = 0; n < a.length; n++)
          (e <<= 1), (e |= (t >>> a[n]) & 1);
        return e >>> 0;
      }),
        (e.padSplit = function(t, e, n) {
          var r = t.toString(2);
          while (r.length < e) r = "0" + r;
          for (var i = [], a = 0; a < e; a += n) i.push(r.slice(a, a + n));
          return i.join(" ");
        });
    },
    "5f1b": function(t, e, n) {
      "use strict";
      var r = n("23c6"),
        i = RegExp.prototype.exec;
      t.exports = function(t, e) {
        var n = t.exec;
        if ("function" === typeof n) {
          var a = n.call(t, e);
          if ("object" !== typeof a)
            throw new TypeError(
              "RegExp exec method returned something other than an Object or null"
            );
          return a;
        }
        if ("RegExp" !== r(t))
          throw new TypeError("RegExp#exec called on incompatible receiver");
        return i.call(t, e);
      };
    },
    "613b": function(t, e, n) {
      var r = n("5537")("keys"),
        i = n("ca5a");
      t.exports = function(t) {
        return r[t] || (r[t] = i(t));
      };
    },
    "626a": function(t, e, n) {
      var r = n("2d95");
      t.exports = Object("z").propertyIsEnumerable(0)
        ? Object
        : function(t) {
            return "String" == r(t) ? t.split("") : Object(t);
          };
    },
    6283: function(t, e, n) {
      var r = n("3fb5"),
        i = n("41df").Reporter,
        a = n("b639").Buffer;
      function o(t, e) {
        i.call(this, e),
          a.isBuffer(t)
            ? ((this.base = t), (this.offset = 0), (this.length = t.length))
            : this.error("Input not Buffer");
      }
      function s(t, e) {
        if (Array.isArray(t))
          (this.length = 0),
            (this.value = t.map(function(t) {
              return (
                t instanceof s || (t = new s(t, e)),
                (this.length += t.length),
                t
              );
            }, this));
        else if ("number" === typeof t) {
          if (!(0 <= t && t <= 255))
            return e.error("non-byte EncoderBuffer value");
          (this.value = t), (this.length = 1);
        } else if ("string" === typeof t)
          (this.value = t), (this.length = a.byteLength(t));
        else {
          if (!a.isBuffer(t)) return e.error("Unsupported type: " + typeof t);
          (this.value = t), (this.length = t.length);
        }
      }
      r(o, i),
        (e.DecoderBuffer = o),
        (o.prototype.save = function() {
          return { offset: this.offset, reporter: i.prototype.save.call(this) };
        }),
        (o.prototype.restore = function(t) {
          var e = new o(this.base);
          return (
            (e.offset = t.offset),
            (e.length = this.offset),
            (this.offset = t.offset),
            i.prototype.restore.call(this, t.reporter),
            e
          );
        }),
        (o.prototype.isEmpty = function() {
          return this.offset === this.length;
        }),
        (o.prototype.readUInt8 = function(t) {
          return this.offset + 1 <= this.length
            ? this.base.readUInt8(this.offset++, !0)
            : this.error(t || "DecoderBuffer overrun");
        }),
        (o.prototype.skip = function(t, e) {
          if (!(this.offset + t <= this.length))
            return this.error(e || "DecoderBuffer overrun");
          var n = new o(this.base);
          return (
            (n._reporterState = this._reporterState),
            (n.offset = this.offset),
            (n.length = this.offset + t),
            (this.offset += t),
            n
          );
        }),
        (o.prototype.raw = function(t) {
          return this.base.slice(t ? t.offset : this.offset, this.length);
        }),
        (e.EncoderBuffer = s),
        (s.prototype.join = function(t, e) {
          return (
            t || (t = new a(this.length)),
            e || (e = 0),
            0 === this.length
              ? t
              : (Array.isArray(this.value)
                  ? this.value.forEach(function(n) {
                      n.join(t, e), (e += n.length);
                    })
                  : ("number" === typeof this.value
                      ? (t[e] = this.value)
                      : "string" === typeof this.value
                      ? t.write(this.value, e)
                      : a.isBuffer(this.value) && this.value.copy(t, e),
                    (e += this.length)),
                t)
          );
        });
    },
    "62a0": function(t, e) {
      var n = 0,
        r = Math.random();
      t.exports = function(t) {
        return "Symbol(".concat(
          void 0 === t ? "" : t,
          ")_",
          (++n + r).toString(36)
        );
      };
    },
    "62c9": function(t, e, n) {
      var r = n("8707").Buffer;
      function i(t, e, n) {
        var i = t._cipher.encryptBlock(t._prev),
          a = i[0] ^ e;
        return (t._prev = r.concat([t._prev.slice(1), r.from([n ? e : a])])), a;
      }
      e.encrypt = function(t, e, n) {
        var a = e.length,
          o = r.allocUnsafe(a),
          s = -1;
        while (++s < a) o[s] = i(t, e[s], n);
        return o;
      };
    },
    "62e4": function(t, e) {
      t.exports = function(t) {
        return (
          t.webpackPolyfill ||
            ((t.deprecate = function() {}),
            (t.paths = []),
            t.children || (t.children = []),
            Object.defineProperty(t, "loaded", {
              enumerable: !0,
              get: function() {
                return t.l;
              }
            }),
            Object.defineProperty(t, "id", {
              enumerable: !0,
              get: function() {
                return t.i;
              }
            }),
            (t.webpackPolyfill = 1)),
          t
        );
      };
    },
    "63b6": function(t, e, n) {
      var r = n("e53d"),
        i = n("584a"),
        a = n("d864"),
        o = n("35e8"),
        s = n("07e3"),
        u = "prototype",
        c = function(t, e, n) {
          var l,
            f,
            h,
            p = t & c.F,
            d = t & c.G,
            m = t & c.S,
            v = t & c.P,
            y = t & c.B,
            g = t & c.W,
            b = d ? i : i[e] || (i[e] = {}),
            w = b[u],
            _ = d ? r : m ? r[e] : (r[e] || {})[u];
          for (l in (d && (n = e), n))
            (f = !p && _ && void 0 !== _[l]),
              (f && s(b, l)) ||
                ((h = f ? _[l] : n[l]),
                (b[l] =
                  d && "function" != typeof _[l]
                    ? n[l]
                    : y && f
                    ? a(h, r)
                    : g && _[l] == h
                    ? (function(t) {
                        var e = function(e, n, r) {
                          if (this instanceof t) {
                            switch (arguments.length) {
                              case 0:
                                return new t();
                              case 1:
                                return new t(e);
                              case 2:
                                return new t(e, n);
                            }
                            return new t(e, n, r);
                          }
                          return t.apply(this, arguments);
                        };
                        return (e[u] = t[u]), e;
                      })(h)
                    : v && "function" == typeof h
                    ? a(Function.call, h)
                    : h),
                v &&
                  (((b.virtual || (b.virtual = {}))[l] = h),
                  t & c.R && w && !w[l] && o(w, l, h)));
        };
      (c.F = 1),
        (c.G = 2),
        (c.S = 4),
        (c.P = 8),
        (c.B = 16),
        (c.W = 32),
        (c.U = 64),
        (c.R = 128),
        (t.exports = c);
    },
    6430: function(t, e, n) {
      var r = n("8707").Buffer,
        i = n("d485").Transform,
        a = n("7d72").StringDecoder,
        o = n("3fb5");
      function s(t) {
        i.call(this),
          (this.hashMode = "string" === typeof t),
          this.hashMode
            ? (this[t] = this._finalOrDigest)
            : (this.final = this._finalOrDigest),
          this._final && ((this.__final = this._final), (this._final = null)),
          (this._decoder = null),
          (this._encoding = null);
      }
      o(s, i),
        (s.prototype.update = function(t, e, n) {
          "string" === typeof t && (t = r.from(t, e));
          var i = this._update(t);
          return this.hashMode ? this : (n && (i = this._toString(i, n)), i);
        }),
        (s.prototype.setAutoPadding = function() {}),
        (s.prototype.getAuthTag = function() {
          throw new Error("trying to get auth tag in unsupported state");
        }),
        (s.prototype.setAuthTag = function() {
          throw new Error("trying to set auth tag in unsupported state");
        }),
        (s.prototype.setAAD = function() {
          throw new Error("trying to set aad in unsupported state");
        }),
        (s.prototype._transform = function(t, e, n) {
          var r;
          try {
            this.hashMode ? this._update(t) : this.push(this._update(t));
          } catch (i) {
            r = i;
          } finally {
            n(r);
          }
        }),
        (s.prototype._flush = function(t) {
          var e;
          try {
            this.push(this.__final());
          } catch (n) {
            e = n;
          }
          t(e);
        }),
        (s.prototype._finalOrDigest = function(t) {
          var e = this.__final() || r.alloc(0);
          return t && (e = this._toString(e, t, !0)), e;
        }),
        (s.prototype._toString = function(t, e, n) {
          if (
            (this._decoder ||
              ((this._decoder = new a(e)), (this._encoding = e)),
            this._encoding !== e)
          )
            throw new Error("can't switch encodings");
          var r = this._decoder.write(t);
          return n && (r += this._decoder.end()), r;
        }),
        (t.exports = s);
    },
    6442: function(t, e, n) {
      (e.publicEncrypt = n("ad25")),
        (e.privateDecrypt = n("0f2c")),
        (e.privateEncrypt = function(t, n) {
          return e.publicEncrypt(t, n, !0);
        }),
        (e.publicDecrypt = function(t, n) {
          return e.privateDecrypt(t, n, !0);
        });
    },
    "656e": function(t, e, n) {
      "use strict";
      var r = n("79aa");
      function i(t) {
        var e, n;
        (this.promise = new t(function(t, r) {
          if (void 0 !== e || void 0 !== n)
            throw TypeError("Bad Promise constructor");
          (e = t), (n = r);
        })),
          (this.resolve = r(e)),
          (this.reject = r(n));
      }
      t.exports.f = function(t) {
        return new i(t);
      };
    },
    "676f": function(t, e, n) {
      "use strict";
      var r = n("4136"),
        i = n("399f"),
        a = n("3fb5"),
        o = r.base,
        s = n("3337"),
        u = s.utils;
      function c(t) {
        o.call(this, "mont", t),
          (this.a = new i(t.a, 16).toRed(this.red)),
          (this.b = new i(t.b, 16).toRed(this.red)),
          (this.i4 = new i(4).toRed(this.red).redInvm()),
          (this.two = new i(2).toRed(this.red)),
          (this.a24 = this.i4.redMul(this.a.redAdd(this.two)));
      }
      function l(t, e, n) {
        o.BasePoint.call(this, t, "projective"),
          null === e && null === n
            ? ((this.x = this.curve.one), (this.z = this.curve.zero))
            : ((this.x = new i(e, 16)),
              (this.z = new i(n, 16)),
              this.x.red || (this.x = this.x.toRed(this.curve.red)),
              this.z.red || (this.z = this.z.toRed(this.curve.red)));
      }
      a(c, o),
        (t.exports = c),
        (c.prototype.validate = function(t) {
          var e = t.normalize().x,
            n = e.redSqr(),
            r = n
              .redMul(e)
              .redAdd(n.redMul(this.a))
              .redAdd(e),
            i = r.redSqrt();
          return 0 === i.redSqr().cmp(r);
        }),
        a(l, o.BasePoint),
        (c.prototype.decodePoint = function(t, e) {
          return this.point(u.toArray(t, e), 1);
        }),
        (c.prototype.point = function(t, e) {
          return new l(this, t, e);
        }),
        (c.prototype.pointFromJSON = function(t) {
          return l.fromJSON(this, t);
        }),
        (l.prototype.precompute = function() {}),
        (l.prototype._encode = function() {
          return this.getX().toArray("be", this.curve.p.byteLength());
        }),
        (l.fromJSON = function(t, e) {
          return new l(t, e[0], e[1] || t.one);
        }),
        (l.prototype.inspect = function() {
          return this.isInfinity()
            ? "<EC Point Infinity>"
            : "<EC Point x: " +
                this.x.fromRed().toString(16, 2) +
                " z: " +
                this.z.fromRed().toString(16, 2) +
                ">";
        }),
        (l.prototype.isInfinity = function() {
          return 0 === this.z.cmpn(0);
        }),
        (l.prototype.dbl = function() {
          var t = this.x.redAdd(this.z),
            e = t.redSqr(),
            n = this.x.redSub(this.z),
            r = n.redSqr(),
            i = e.redSub(r),
            a = e.redMul(r),
            o = i.redMul(r.redAdd(this.curve.a24.redMul(i)));
          return this.curve.point(a, o);
        }),
        (l.prototype.add = function() {
          throw new Error("Not supported on Montgomery curve");
        }),
        (l.prototype.diffAdd = function(t, e) {
          var n = this.x.redAdd(this.z),
            r = this.x.redSub(this.z),
            i = t.x.redAdd(t.z),
            a = t.x.redSub(t.z),
            o = a.redMul(n),
            s = i.redMul(r),
            u = e.z.redMul(o.redAdd(s).redSqr()),
            c = e.x.redMul(o.redISub(s).redSqr());
          return this.curve.point(u, c);
        }),
        (l.prototype.mul = function(t) {
          for (
            var e = t.clone(),
              n = this,
              r = this.curve.point(null, null),
              i = this,
              a = [];
            0 !== e.cmpn(0);
            e.iushrn(1)
          )
            a.push(e.andln(1));
          for (var o = a.length - 1; o >= 0; o--)
            0 === a[o]
              ? ((n = n.diffAdd(r, i)), (r = r.dbl()))
              : ((r = n.diffAdd(r, i)), (n = n.dbl()));
          return r;
        }),
        (l.prototype.mulAdd = function() {
          throw new Error("Not supported on Montgomery curve");
        }),
        (l.prototype.jumlAdd = function() {
          throw new Error("Not supported on Montgomery curve");
        }),
        (l.prototype.eq = function(t) {
          return 0 === this.getX().cmp(t.getX());
        }),
        (l.prototype.normalize = function() {
          return (
            (this.x = this.x.redMul(this.z.redInvm())),
            (this.z = this.curve.one),
            this
          );
        }),
        (l.prototype.getX = function() {
          return this.normalize(), this.x.fromRed();
        });
    },
    "67ab": function(t, e, n) {
      var r = n("ca5a")("meta"),
        i = n("d3f4"),
        a = n("69a8"),
        o = n("86cc").f,
        s = 0,
        u =
          Object.isExtensible ||
          function() {
            return !0;
          },
        c = !n("79e5")(function() {
          return u(Object.preventExtensions({}));
        }),
        l = function(t) {
          o(t, r, { value: { i: "O" + ++s, w: {} } });
        },
        f = function(t, e) {
          if (!i(t))
            return "symbol" == typeof t
              ? t
              : ("string" == typeof t ? "S" : "P") + t;
          if (!a(t, r)) {
            if (!u(t)) return "F";
            if (!e) return "E";
            l(t);
          }
          return t[r].i;
        },
        h = function(t, e) {
          if (!a(t, r)) {
            if (!u(t)) return !0;
            if (!e) return !1;
            l(t);
          }
          return t[r].w;
        },
        p = function(t) {
          return c && d.NEED && u(t) && !a(t, r) && l(t), t;
        },
        d = (t.exports = {
          KEY: r,
          NEED: !1,
          fastKey: f,
          getWeak: h,
          onFreeze: p
        });
    },
    6821: function(t, e, n) {
      var r = n("626a"),
        i = n("be13");
      t.exports = function(t) {
        return r(i(t));
      };
    },
    "696e": function(t, e, n) {
      n("c207"),
        n("1654"),
        n("6c1c"),
        n("24c5"),
        n("3c11"),
        n("43fc"),
        (t.exports = n("584a").Promise);
    },
    "69a8": function(t, e) {
      var n = {}.hasOwnProperty;
      t.exports = function(t, e) {
        return n.call(t, e);
      };
    },
    "69f2": function(t, e, n) {
      e = t.exports = function(t) {
        t = t.toLowerCase();
        var n = e[t];
        if (!n)
          throw new Error(t + " is not supported (we accept pull requests)");
        return new n();
      };
      (e.sha = n("087f")),
        (e.sha1 = n("7e78")),
        (e.sha224 = n("72aa")),
        (e.sha256 = n("a255")),
        (e.sha384 = n("b837")),
        (e.sha512 = n("4fd1"));
    },
    "6a99": function(t, e, n) {
      var r = n("d3f4");
      t.exports = function(t, e) {
        if (!r(t)) return t;
        var n, i;
        if (e && "function" == typeof (n = t.toString) && !r((i = n.call(t))))
          return i;
        if ("function" == typeof (n = t.valueOf) && !r((i = n.call(t))))
          return i;
        if (!e && "function" == typeof (n = t.toString) && !r((i = n.call(t))))
          return i;
        throw TypeError("Can't convert object to primitive value");
      };
    },
    "6aa2": function(t, e, n) {
      "use strict";
      var r = n("7d92"),
        i = n("7658"),
        a = n("da3e");
      function o(t) {
        if (!(this instanceof o)) return new o(t);
        (this.hash = t.hash),
          (this.predResist = !!t.predResist),
          (this.outLen = this.hash.outSize),
          (this.minEntropy = t.minEntropy || this.hash.hmacStrength),
          (this._reseed = null),
          (this.reseedInterval = null),
          (this.K = null),
          (this.V = null);
        var e = i.toArray(t.entropy, t.entropyEnc || "hex"),
          n = i.toArray(t.nonce, t.nonceEnc || "hex"),
          r = i.toArray(t.pers, t.persEnc || "hex");
        a(
          e.length >= this.minEntropy / 8,
          "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
        ),
          this._init(e, n, r);
      }
      (t.exports = o),
        (o.prototype._init = function(t, e, n) {
          var r = t.concat(e).concat(n);
          (this.K = new Array(this.outLen / 8)),
            (this.V = new Array(this.outLen / 8));
          for (var i = 0; i < this.V.length; i++)
            (this.K[i] = 0), (this.V[i] = 1);
          this._update(r),
            (this._reseed = 1),
            (this.reseedInterval = 281474976710656);
        }),
        (o.prototype._hmac = function() {
          return new r.hmac(this.hash, this.K);
        }),
        (o.prototype._update = function(t) {
          var e = this._hmac()
            .update(this.V)
            .update([0]);
          t && (e = e.update(t)),
            (this.K = e.digest()),
            (this.V = this._hmac()
              .update(this.V)
              .digest()),
            t &&
              ((this.K = this._hmac()
                .update(this.V)
                .update([1])
                .update(t)
                .digest()),
              (this.V = this._hmac()
                .update(this.V)
                .digest()));
        }),
        (o.prototype.reseed = function(t, e, n, r) {
          "string" !== typeof e && ((r = n), (n = e), (e = null)),
            (t = i.toArray(t, e)),
            (n = i.toArray(n, r)),
            a(
              t.length >= this.minEntropy / 8,
              "Not enough entropy. Minimum is: " + this.minEntropy + " bits"
            ),
            this._update(t.concat(n || [])),
            (this._reseed = 1);
        }),
        (o.prototype.generate = function(t, e, n, r) {
          if (this._reseed > this.reseedInterval)
            throw new Error("Reseed is required");
          "string" !== typeof e && ((r = n), (n = e), (e = null)),
            n && ((n = i.toArray(n, r || "hex")), this._update(n));
          var a = [];
          while (a.length < t)
            (this.V = this._hmac()
              .update(this.V)
              .digest()),
              (a = a.concat(this.V));
          var o = a.slice(0, t);
          return this._update(n), this._reseed++, i.encode(o, e);
        });
    },
    "6ade": function(t, e, n) {
      var r = n("8c8a"),
        i = n("8707").Buffer,
        a = n("bd9d");
      function o(t) {
        var e = t._cipher.encryptBlockRaw(t._prev);
        return a(t._prev), e;
      }
      var s = 16;
      e.encrypt = function(t, e) {
        var n = Math.ceil(e.length / s),
          a = t._cache.length;
        t._cache = i.concat([t._cache, i.allocUnsafe(n * s)]);
        for (var u = 0; u < n; u++) {
          var c = o(t),
            l = a + u * s;
          t._cache.writeUInt32BE(c[0], l + 0),
            t._cache.writeUInt32BE(c[1], l + 4),
            t._cache.writeUInt32BE(c[2], l + 8),
            t._cache.writeUInt32BE(c[3], l + 12);
        }
        var f = t._cache.slice(0, e.length);
        return (t._cache = t._cache.slice(e.length)), r(e, f);
      };
    },
    "6b4c": function(t, e) {
      var n = {}.toString;
      t.exports = function(t) {
        return n.call(t).slice(8, -1);
      };
    },
    "6c1c": function(t, e, n) {
      n("c367");
      for (
        var r = n("e53d"),
          i = n("35e8"),
          a = n("481b"),
          o = n("5168")("toStringTag"),
          s = "CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(
            ","
          ),
          u = 0;
        u < s.length;
        u++
      ) {
        var c = s[u],
          l = r[c],
          f = l && l.prototype;
        f && !f[o] && i(f, o, c), (a[c] = a.Array);
      }
    },
    "6eed": function(t, e, n) {
      "use strict";
      var r = n("c3c0"),
        i = n("edc9"),
        a = n("aa56"),
        o = n("da3e"),
        s = r.sum32,
        u = r.sum32_4,
        c = r.sum32_5,
        l = a.ch32,
        f = a.maj32,
        h = a.s0_256,
        p = a.s1_256,
        d = a.g0_256,
        m = a.g1_256,
        v = i.BlockHash,
        y = [
          1116352408,
          1899447441,
          3049323471,
          3921009573,
          961987163,
          1508970993,
          2453635748,
          2870763221,
          3624381080,
          310598401,
          607225278,
          1426881987,
          1925078388,
          2162078206,
          2614888103,
          3248222580,
          3835390401,
          4022224774,
          264347078,
          604807628,
          770255983,
          1249150122,
          1555081692,
          1996064986,
          2554220882,
          2821834349,
          2952996808,
          3210313671,
          3336571891,
          3584528711,
          113926993,
          338241895,
          666307205,
          773529912,
          1294757372,
          1396182291,
          1695183700,
          1986661051,
          2177026350,
          2456956037,
          2730485921,
          2820302411,
          3259730800,
          3345764771,
          3516065817,
          3600352804,
          4094571909,
          275423344,
          430227734,
          506948616,
          659060556,
          883997877,
          958139571,
          1322822218,
          1537002063,
          1747873779,
          1955562222,
          2024104815,
          2227730452,
          2361852424,
          2428436474,
          2756734187,
          3204031479,
          3329325298
        ];
      function g() {
        if (!(this instanceof g)) return new g();
        v.call(this),
          (this.h = [
            1779033703,
            3144134277,
            1013904242,
            2773480762,
            1359893119,
            2600822924,
            528734635,
            1541459225
          ]),
          (this.k = y),
          (this.W = new Array(64));
      }
      r.inherits(g, v),
        (t.exports = g),
        (g.blockSize = 512),
        (g.outSize = 256),
        (g.hmacStrength = 192),
        (g.padLength = 64),
        (g.prototype._update = function(t, e) {
          for (var n = this.W, r = 0; r < 16; r++) n[r] = t[e + r];
          for (; r < n.length; r++)
            n[r] = u(m(n[r - 2]), n[r - 7], d(n[r - 15]), n[r - 16]);
          var i = this.h[0],
            a = this.h[1],
            v = this.h[2],
            y = this.h[3],
            g = this.h[4],
            b = this.h[5],
            w = this.h[6],
            _ = this.h[7];
          for (o(this.k.length === n.length), r = 0; r < n.length; r++) {
            var x = c(_, p(g), l(g, b, w), this.k[r], n[r]),
              E = s(h(i), f(i, a, v));
            (_ = w),
              (w = b),
              (b = g),
              (g = s(y, x)),
              (y = v),
              (v = a),
              (a = i),
              (i = s(x, E));
          }
          (this.h[0] = s(this.h[0], i)),
            (this.h[1] = s(this.h[1], a)),
            (this.h[2] = s(this.h[2], v)),
            (this.h[3] = s(this.h[3], y)),
            (this.h[4] = s(this.h[4], g)),
            (this.h[5] = s(this.h[5], b)),
            (this.h[6] = s(this.h[6], w)),
            (this.h[7] = s(this.h[7], _));
        }),
        (g.prototype._digest = function(t) {
          return "hex" === t
            ? r.toHex32(this.h, "big")
            : r.split32(this.h, "big");
        });
    },
    "6fe7": function(t, e, n) {
      (function(e) {
        var r = n("1a2a"),
          i = n("a958"),
          a = n("3337").ec,
          o = n("399f"),
          s = n("2aee"),
          u = n("cd91");
        function c(t, n, r, a, o) {
          var u = s(n);
          if (u.curve) {
            if ("ecdsa" !== a && "ecdsa/rsa" !== a)
              throw new Error("wrong private key type");
            return l(t, u);
          }
          if ("dsa" === u.type) {
            if ("dsa" !== a) throw new Error("wrong private key type");
            return f(t, u, r);
          }
          if ("rsa" !== a && "ecdsa/rsa" !== a)
            throw new Error("wrong private key type");
          t = e.concat([o, t]);
          var c = u.modulus.byteLength(),
            h = [0, 1];
          while (t.length + h.length + 1 < c) h.push(255);
          h.push(0);
          var p = -1;
          while (++p < t.length) h.push(t[p]);
          var d = i(h, u);
          return d;
        }
        function l(t, n) {
          var r = u[n.curve.join(".")];
          if (!r) throw new Error("unknown curve " + n.curve.join("."));
          var i = new a(r),
            o = i.keyFromPrivate(n.privateKey),
            s = o.sign(t);
          return new e(s.toDER());
        }
        function f(t, e, n) {
          var r,
            i = e.params.priv_key,
            a = e.params.p,
            s = e.params.q,
            u = e.params.g,
            c = new o(0),
            l = d(t, s).mod(s),
            f = !1,
            m = p(i, s, t, n);
          while (!1 === f)
            (r = v(s, m, n)),
              (c = y(u, r, a, s)),
              (f = r
                .invm(s)
                .imul(l.add(i.mul(c)))
                .mod(s)),
              0 === f.cmpn(0) && ((f = !1), (c = new o(0)));
          return h(c, f);
        }
        function h(t, n) {
          (t = t.toArray()),
            (n = n.toArray()),
            128 & t[0] && (t = [0].concat(t)),
            128 & n[0] && (n = [0].concat(n));
          var r = t.length + n.length + 4,
            i = [48, r, 2, t.length];
          return (i = i.concat(t, [2, n.length], n)), new e(i);
        }
        function p(t, n, i, a) {
          if (((t = new e(t.toArray())), t.length < n.byteLength())) {
            var o = new e(n.byteLength() - t.length);
            o.fill(0), (t = e.concat([o, t]));
          }
          var s = i.length,
            u = m(i, n),
            c = new e(s);
          c.fill(1);
          var l = new e(s);
          return (
            l.fill(0),
            (l = r(a, l)
              .update(c)
              .update(new e([0]))
              .update(t)
              .update(u)
              .digest()),
            (c = r(a, l)
              .update(c)
              .digest()),
            (l = r(a, l)
              .update(c)
              .update(new e([1]))
              .update(t)
              .update(u)
              .digest()),
            (c = r(a, l)
              .update(c)
              .digest()),
            { k: l, v: c }
          );
        }
        function d(t, e) {
          var n = new o(t),
            r = (t.length << 3) - e.bitLength();
          return r > 0 && n.ishrn(r), n;
        }
        function m(t, n) {
          (t = d(t, n)), (t = t.mod(n));
          var r = new e(t.toArray());
          if (r.length < n.byteLength()) {
            var i = new e(n.byteLength() - r.length);
            i.fill(0), (r = e.concat([i, r]));
          }
          return r;
        }
        function v(t, n, i) {
          var a, o;
          do {
            a = new e(0);
            while (8 * a.length < t.bitLength())
              (n.v = r(i, n.k)
                .update(n.v)
                .digest()),
                (a = e.concat([a, n.v]));
            (o = d(a, t)),
              (n.k = r(i, n.k)
                .update(n.v)
                .update(new e([0]))
                .digest()),
              (n.v = r(i, n.k)
                .update(n.v)
                .digest());
          } while (-1 !== o.cmp(t));
          return o;
        }
        function y(t, e, n, r) {
          return t
            .toRed(o.mont(n))
            .redPow(e)
            .fromRed()
            .mod(r);
        }
        (t.exports = c), (t.exports.getKey = p), (t.exports.makeKey = v);
      }.call(this, n("b639").Buffer));
    },
    "71c1": function(t, e, n) {
      var r = n("3a38"),
        i = n("25eb");
      t.exports = function(t) {
        return function(e, n) {
          var a,
            o,
            s = String(i(e)),
            u = r(n),
            c = s.length;
          return u < 0 || u >= c
            ? t
              ? ""
              : void 0
            : ((a = s.charCodeAt(u)),
              a < 55296 ||
              a > 56319 ||
              u + 1 === c ||
              (o = s.charCodeAt(u + 1)) < 56320 ||
              o > 57343
                ? t
                  ? s.charAt(u)
                  : a
                : t
                ? s.slice(u, u + 2)
                : o - 56320 + ((a - 55296) << 10) + 65536);
        };
      };
    },
    "72aa": function(t, e, n) {
      var r = n("3fb5"),
        i = n("a255"),
        a = n("b672"),
        o = n("8707").Buffer,
        s = new Array(64);
      function u() {
        this.init(), (this._w = s), a.call(this, 64, 56);
      }
      r(u, i),
        (u.prototype.init = function() {
          return (
            (this._a = 3238371032),
            (this._b = 914150663),
            (this._c = 812702999),
            (this._d = 4144912697),
            (this._e = 4290775857),
            (this._f = 1750603025),
            (this._g = 1694076839),
            (this._h = 3204075428),
            this
          );
        }),
        (u.prototype._hash = function() {
          var t = o.allocUnsafe(28);
          return (
            t.writeInt32BE(this._a, 0),
            t.writeInt32BE(this._b, 4),
            t.writeInt32BE(this._c, 8),
            t.writeInt32BE(this._d, 12),
            t.writeInt32BE(this._e, 16),
            t.writeInt32BE(this._f, 20),
            t.writeInt32BE(this._g, 24),
            t
          );
        }),
        (t.exports = u);
    },
    7333: function(t, e, n) {
      "use strict";
      var r = n("9e1e"),
        i = n("0d58"),
        a = n("2621"),
        o = n("52a7"),
        s = n("4bf8"),
        u = n("626a"),
        c = Object.assign;
      t.exports =
        !c ||
        n("79e5")(function() {
          var t = {},
            e = {},
            n = Symbol(),
            r = "abcdefghijklmnopqrst";
          return (
            (t[n] = 7),
            r.split("").forEach(function(t) {
              e[t] = t;
            }),
            7 != c({}, t)[n] || Object.keys(c({}, e)).join("") != r
          );
        })
          ? function(t, e) {
              var n = s(t),
                c = arguments.length,
                l = 1,
                f = a.f,
                h = o.f;
              while (c > l) {
                var p,
                  d = u(arguments[l++]),
                  m = f ? i(d).concat(f(d)) : i(d),
                  v = m.length,
                  y = 0;
                while (v > y)
                  (p = m[y++]), (r && !h.call(d, p)) || (n[p] = d[p]);
              }
              return n;
            }
          : c;
    },
    "75cc": function(t, e, n) {
      "use strict";
      (function(t, r) {
        function i() {
          throw new Error(
            "secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11"
          );
        }
        var a = n("8707"),
          o = n("11dc"),
          s = a.Buffer,
          u = a.kMaxLength,
          c = t.crypto || t.msCrypto,
          l = Math.pow(2, 32) - 1;
        function f(t, e) {
          if ("number" !== typeof t || t !== t)
            throw new TypeError("offset must be a number");
          if (t > l || t < 0) throw new TypeError("offset must be a uint32");
          if (t > u || t > e) throw new RangeError("offset out of range");
        }
        function h(t, e, n) {
          if ("number" !== typeof t || t !== t)
            throw new TypeError("size must be a number");
          if (t > l || t < 0) throw new TypeError("size must be a uint32");
          if (t + e > n || t > u) throw new RangeError("buffer too small");
        }
        function p(e, n, r, i) {
          if (!s.isBuffer(e) && !(e instanceof t.Uint8Array))
            throw new TypeError(
              '"buf" argument must be a Buffer or Uint8Array'
            );
          if ("function" === typeof n) (i = n), (n = 0), (r = e.length);
          else if ("function" === typeof r) (i = r), (r = e.length - n);
          else if ("function" !== typeof i)
            throw new TypeError('"cb" argument must be a function');
          return f(n, e.length), h(r, n, e.length), d(e, n, r, i);
        }
        function d(t, e, n, i) {
          if (r.browser) {
            var a = t.buffer,
              s = new Uint8Array(a, e, n);
            return (
              c.getRandomValues(s),
              i
                ? void r.nextTick(function() {
                    i(null, t);
                  })
                : t
            );
          }
          if (!i) {
            var u = o(n);
            return u.copy(t, e), t;
          }
          o(n, function(n, r) {
            if (n) return i(n);
            r.copy(t, e), i(null, t);
          });
        }
        function m(e, n, r) {
          if (
            ("undefined" === typeof n && (n = 0),
            !s.isBuffer(e) && !(e instanceof t.Uint8Array))
          )
            throw new TypeError(
              '"buf" argument must be a Buffer or Uint8Array'
            );
          return (
            f(n, e.length),
            void 0 === r && (r = e.length - n),
            h(r, n, e.length),
            d(e, n, r)
          );
        }
        (c && c.getRandomValues) || !r.browser
          ? ((e.randomFill = p), (e.randomFillSync = m))
          : ((e.randomFill = i), (e.randomFillSync = i));
      }.call(this, n("c8ba"), n("f28c")));
    },
    7658: function(t, e, n) {
      "use strict";
      var r = e;
      function i(t, e) {
        if (Array.isArray(t)) return t.slice();
        if (!t) return [];
        var n = [];
        if ("string" !== typeof t) {
          for (var r = 0; r < t.length; r++) n[r] = 0 | t[r];
          return n;
        }
        if ("hex" === e) {
          (t = t.replace(/[^a-z0-9]+/gi, "")),
            t.length % 2 !== 0 && (t = "0" + t);
          for (r = 0; r < t.length; r += 2)
            n.push(parseInt(t[r] + t[r + 1], 16));
        } else
          for (r = 0; r < t.length; r++) {
            var i = t.charCodeAt(r),
              a = i >> 8,
              o = 255 & i;
            a ? n.push(a, o) : n.push(o);
          }
        return n;
      }
      function a(t) {
        return 1 === t.length ? "0" + t : t;
      }
      function o(t) {
        for (var e = "", n = 0; n < t.length; n++) e += a(t[n].toString(16));
        return e;
      }
      (r.toArray = i),
        (r.zero2 = a),
        (r.toHex = o),
        (r.encode = function(t, e) {
          return "hex" === e ? o(t) : t;
        });
    },
    7726: function(t, e) {
      var n = (t.exports =
        "undefined" != typeof window && window.Math == Math
          ? window
          : "undefined" != typeof self && self.Math == Math
          ? self
          : Function("return this")());
      "number" == typeof __g && (__g = n);
    },
    "77f1": function(t, e, n) {
      var r = n("4588"),
        i = Math.max,
        a = Math.min;
      t.exports = function(t, e) {
        return (t = r(t)), t < 0 ? i(t + e, 0) : a(t, e);
      };
    },
    "780f": function(t, e, n) {
      "use strict";
      t.exports = a;
      var r = n("27bf"),
        i = n("3a7c");
      function a(t) {
        if (!(this instanceof a)) return new a(t);
        r.call(this, t);
      }
      (i.inherits = n("3fb5")),
        i.inherits(a, r),
        (a.prototype._transform = function(t, e, n) {
          n(null, t);
        });
    },
    "794b": function(t, e, n) {
      t.exports =
        !n("8e60") &&
        !n("294c")(function() {
          return (
            7 !=
            Object.defineProperty(n("1ec9")("div"), "a", {
              get: function() {
                return 7;
              }
            }).a
          );
        });
    },
    "795b": function(t, e, n) {
      t.exports = n("696e");
    },
    "79aa": function(t, e) {
      t.exports = function(t) {
        if ("function" != typeof t) throw TypeError(t + " is not a function!");
        return t;
      };
    },
    "79e5": function(t, e) {
      t.exports = function(t) {
        try {
          return !!t();
        } catch (e) {
          return !0;
        }
      };
    },
    "7a10": function(t, e, n) {
      var r = n("399f"),
        i = n("fdac");
      function a(t) {
        this.rand = t || new i.Rand();
      }
      (t.exports = a),
        (a.create = function(t) {
          return new a(t);
        }),
        (a.prototype._randbelow = function(t) {
          var e = t.bitLength(),
            n = Math.ceil(e / 8);
          do {
            var i = new r(this.rand.generate(n));
          } while (i.cmp(t) >= 0);
          return i;
        }),
        (a.prototype._randrange = function(t, e) {
          var n = e.sub(t);
          return t.add(this._randbelow(n));
        }),
        (a.prototype.test = function(t, e, n) {
          var i = t.bitLength(),
            a = r.mont(t),
            o = new r(1).toRed(a);
          e || (e = Math.max(1, (i / 48) | 0));
          for (var s = t.subn(1), u = 0; !s.testn(u); u++);
          for (var c = t.shrn(u), l = s.toRed(a), f = !0; e > 0; e--) {
            var h = this._randrange(new r(2), s);
            n && n(h);
            var p = h.toRed(a).redPow(c);
            if (0 !== p.cmp(o) && 0 !== p.cmp(l)) {
              for (var d = 1; d < u; d++) {
                if (((p = p.redSqr()), 0 === p.cmp(o))) return !1;
                if (0 === p.cmp(l)) break;
              }
              if (d === u) return !1;
            }
          }
          return f;
        }),
        (a.prototype.getDivisor = function(t, e) {
          var n = t.bitLength(),
            i = r.mont(t),
            a = new r(1).toRed(i);
          e || (e = Math.max(1, (n / 48) | 0));
          for (var o = t.subn(1), s = 0; !o.testn(s); s++);
          for (var u = t.shrn(s), c = o.toRed(i); e > 0; e--) {
            var l = this._randrange(new r(2), o),
              f = t.gcd(l);
            if (0 !== f.cmpn(1)) return f;
            var h = l.toRed(i).redPow(u);
            if (0 !== h.cmp(a) && 0 !== h.cmp(c)) {
              for (var p = 1; p < s; p++) {
                if (((h = h.redSqr()), 0 === h.cmp(a)))
                  return h
                    .fromRed()
                    .subn(1)
                    .gcd(t);
                if (0 === h.cmp(c)) break;
              }
              if (p === s)
                return (
                  (h = h.redSqr()),
                  h
                    .fromRed()
                    .subn(1)
                    .gcd(t)
                );
            }
          }
          return !1;
        });
    },
    "7a56": function(t, e, n) {
      "use strict";
      var r = n("7726"),
        i = n("86cc"),
        a = n("9e1e"),
        o = n("2b4c")("species");
      t.exports = function(t) {
        var e = r[t];
        a &&
          e &&
          !e[o] &&
          i.f(e, o, {
            configurable: !0,
            get: function() {
              return this;
            }
          });
      };
    },
    "7bbc": function(t, e, n) {
      var r = n("6821"),
        i = n("9093").f,
        a = {}.toString,
        o =
          "object" == typeof window && window && Object.getOwnPropertyNames
            ? Object.getOwnPropertyNames(window)
            : [],
        s = function(t) {
          try {
            return i(t);
          } catch (e) {
            return o.slice();
          }
        };
      t.exports.f = function(t) {
        return o && "[object Window]" == a.call(t) ? s(t) : i(r(t));
      };
    },
    "7cd6": function(t, e, n) {
      var r = n("40c3"),
        i = n("5168")("iterator"),
        a = n("481b");
      t.exports = n("584a").getIteratorMethod = function(t) {
        if (void 0 != t) return t[i] || t["@@iterator"] || a[r(t)];
      };
    },
    "7d2a": function(t, e, n) {
      (function(e) {
        var n = Math.pow(2, 30) - 1;
        function r(t, n) {
          if ("string" !== typeof t && !e.isBuffer(t))
            throw new TypeError(n + " must be a buffer or string");
        }
        t.exports = function(t, e, i, a) {
          if ((r(t, "Password"), r(e, "Salt"), "number" !== typeof i))
            throw new TypeError("Iterations not a number");
          if (i < 0) throw new TypeError("Bad iterations");
          if ("number" !== typeof a)
            throw new TypeError("Key length not a number");
          if (a < 0 || a > n || a !== a) throw new TypeError("Bad key length");
        };
      }.call(this, n("b639").Buffer));
    },
    "7d72": function(t, e, n) {
      "use strict";
      var r = n("8707").Buffer,
        i =
          r.isEncoding ||
          function(t) {
            switch (((t = "" + t), t && t.toLowerCase())) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
              case "raw":
                return !0;
              default:
                return !1;
            }
          };
      function a(t) {
        if (!t) return "utf8";
        var e;
        while (1)
          switch (t) {
            case "utf8":
            case "utf-8":
              return "utf8";
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return "utf16le";
            case "latin1":
            case "binary":
              return "latin1";
            case "base64":
            case "ascii":
            case "hex":
              return t;
            default:
              if (e) return;
              (t = ("" + t).toLowerCase()), (e = !0);
          }
      }
      function o(t) {
        var e = a(t);
        if ("string" !== typeof e && (r.isEncoding === i || !i(t)))
          throw new Error("Unknown encoding: " + t);
        return e || t;
      }
      function s(t) {
        var e;
        switch (((this.encoding = o(t)), this.encoding)) {
          case "utf16le":
            (this.text = d), (this.end = m), (e = 4);
            break;
          case "utf8":
            (this.fillLast = f), (e = 4);
            break;
          case "base64":
            (this.text = v), (this.end = y), (e = 3);
            break;
          default:
            return (this.write = g), void (this.end = b);
        }
        (this.lastNeed = 0),
          (this.lastTotal = 0),
          (this.lastChar = r.allocUnsafe(e));
      }
      function u(t) {
        return t <= 127
          ? 0
          : t >> 5 === 6
          ? 2
          : t >> 4 === 14
          ? 3
          : t >> 3 === 30
          ? 4
          : t >> 6 === 2
          ? -1
          : -2;
      }
      function c(t, e, n) {
        var r = e.length - 1;
        if (r < n) return 0;
        var i = u(e[r]);
        return i >= 0
          ? (i > 0 && (t.lastNeed = i - 1), i)
          : --r < n || -2 === i
          ? 0
          : ((i = u(e[r])),
            i >= 0
              ? (i > 0 && (t.lastNeed = i - 2), i)
              : --r < n || -2 === i
              ? 0
              : ((i = u(e[r])),
                i >= 0
                  ? (i > 0 && (2 === i ? (i = 0) : (t.lastNeed = i - 3)), i)
                  : 0));
      }
      function l(t, e, n) {
        if (128 !== (192 & e[0])) return (t.lastNeed = 0), "�";
        if (t.lastNeed > 1 && e.length > 1) {
          if (128 !== (192 & e[1])) return (t.lastNeed = 1), "�";
          if (t.lastNeed > 2 && e.length > 2 && 128 !== (192 & e[2]))
            return (t.lastNeed = 2), "�";
        }
      }
      function f(t) {
        var e = this.lastTotal - this.lastNeed,
          n = l(this, t, e);
        return void 0 !== n
          ? n
          : this.lastNeed <= t.length
          ? (t.copy(this.lastChar, e, 0, this.lastNeed),
            this.lastChar.toString(this.encoding, 0, this.lastTotal))
          : (t.copy(this.lastChar, e, 0, t.length),
            void (this.lastNeed -= t.length));
      }
      function h(t, e) {
        var n = c(this, t, e);
        if (!this.lastNeed) return t.toString("utf8", e);
        this.lastTotal = n;
        var r = t.length - (n - this.lastNeed);
        return t.copy(this.lastChar, 0, r), t.toString("utf8", e, r);
      }
      function p(t) {
        var e = t && t.length ? this.write(t) : "";
        return this.lastNeed ? e + "�" : e;
      }
      function d(t, e) {
        if ((t.length - e) % 2 === 0) {
          var n = t.toString("utf16le", e);
          if (n) {
            var r = n.charCodeAt(n.length - 1);
            if (r >= 55296 && r <= 56319)
              return (
                (this.lastNeed = 2),
                (this.lastTotal = 4),
                (this.lastChar[0] = t[t.length - 2]),
                (this.lastChar[1] = t[t.length - 1]),
                n.slice(0, -1)
              );
          }
          return n;
        }
        return (
          (this.lastNeed = 1),
          (this.lastTotal = 2),
          (this.lastChar[0] = t[t.length - 1]),
          t.toString("utf16le", e, t.length - 1)
        );
      }
      function m(t) {
        var e = t && t.length ? this.write(t) : "";
        if (this.lastNeed) {
          var n = this.lastTotal - this.lastNeed;
          return e + this.lastChar.toString("utf16le", 0, n);
        }
        return e;
      }
      function v(t, e) {
        var n = (t.length - e) % 3;
        return 0 === n
          ? t.toString("base64", e)
          : ((this.lastNeed = 3 - n),
            (this.lastTotal = 3),
            1 === n
              ? (this.lastChar[0] = t[t.length - 1])
              : ((this.lastChar[0] = t[t.length - 2]),
                (this.lastChar[1] = t[t.length - 1])),
            t.toString("base64", e, t.length - n));
      }
      function y(t) {
        var e = t && t.length ? this.write(t) : "";
        return this.lastNeed
          ? e + this.lastChar.toString("base64", 0, 3 - this.lastNeed)
          : e;
      }
      function g(t) {
        return t.toString(this.encoding);
      }
      function b(t) {
        return t && t.length ? this.write(t) : "";
      }
      (e.StringDecoder = s),
        (s.prototype.write = function(t) {
          if (0 === t.length) return "";
          var e, n;
          if (this.lastNeed) {
            if (((e = this.fillLast(t)), void 0 === e)) return "";
            (n = this.lastNeed), (this.lastNeed = 0);
          } else n = 0;
          return n < t.length
            ? e
              ? e + this.text(t, n)
              : this.text(t, n)
            : e || "";
        }),
        (s.prototype.end = p),
        (s.prototype.text = h),
        (s.prototype.fillLast = function(t) {
          if (this.lastNeed <= t.length)
            return (
              t.copy(
                this.lastChar,
                this.lastTotal - this.lastNeed,
                0,
                this.lastNeed
              ),
              this.lastChar.toString(this.encoding, 0, this.lastTotal)
            );
          t.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, t.length),
            (this.lastNeed -= t.length);
        });
    },
    "7d92": function(t, e, n) {
      var r = e;
      (r.utils = n("c3c0")),
        (r.common = n("edc9")),
        (r.sha = n("5919")),
        (r.ripemd = n("bb44")),
        (r.hmac = n("2137")),
        (r.sha1 = r.sha.sha1),
        (r.sha256 = r.sha.sha256),
        (r.sha224 = r.sha.sha224),
        (r.sha384 = r.sha.sha384),
        (r.sha512 = r.sha.sha512),
        (r.ripemd160 = r.ripemd.ripemd160);
    },
    "7e78": function(t, e, n) {
      var r = n("3fb5"),
        i = n("b672"),
        a = n("8707").Buffer,
        o = [1518500249, 1859775393, -1894007588, -899497514],
        s = new Array(80);
      function u() {
        this.init(), (this._w = s), i.call(this, 64, 56);
      }
      function c(t) {
        return (t << 1) | (t >>> 31);
      }
      function l(t) {
        return (t << 5) | (t >>> 27);
      }
      function f(t) {
        return (t << 30) | (t >>> 2);
      }
      function h(t, e, n, r) {
        return 0 === t
          ? (e & n) | (~e & r)
          : 2 === t
          ? (e & n) | (e & r) | (n & r)
          : e ^ n ^ r;
      }
      r(u, i),
        (u.prototype.init = function() {
          return (
            (this._a = 1732584193),
            (this._b = 4023233417),
            (this._c = 2562383102),
            (this._d = 271733878),
            (this._e = 3285377520),
            this
          );
        }),
        (u.prototype._update = function(t) {
          for (
            var e = this._w,
              n = 0 | this._a,
              r = 0 | this._b,
              i = 0 | this._c,
              a = 0 | this._d,
              s = 0 | this._e,
              u = 0;
            u < 16;
            ++u
          )
            e[u] = t.readInt32BE(4 * u);
          for (; u < 80; ++u)
            e[u] = c(e[u - 3] ^ e[u - 8] ^ e[u - 14] ^ e[u - 16]);
          for (var p = 0; p < 80; ++p) {
            var d = ~~(p / 20),
              m = (l(n) + h(d, r, i, a) + s + e[p] + o[d]) | 0;
            (s = a), (a = i), (i = f(r)), (r = n), (n = m);
          }
          (this._a = (n + this._a) | 0),
            (this._b = (r + this._b) | 0),
            (this._c = (i + this._c) | 0),
            (this._d = (a + this._d) | 0),
            (this._e = (s + this._e) | 0);
        }),
        (u.prototype._hash = function() {
          var t = a.allocUnsafe(20);
          return (
            t.writeInt32BE(0 | this._a, 0),
            t.writeInt32BE(0 | this._b, 4),
            t.writeInt32BE(0 | this._c, 8),
            t.writeInt32BE(0 | this._d, 12),
            t.writeInt32BE(0 | this._e, 16),
            t
          );
        }),
        (t.exports = u);
    },
    "7e90": function(t, e, n) {
      var r = n("d9f6"),
        i = n("e4ae"),
        a = n("c3a1");
      t.exports = n("8e60")
        ? Object.defineProperties
        : function(t, e) {
            i(t);
            var n,
              o = a(e),
              s = o.length,
              u = 0;
            while (s > u) r.f(t, (n = o[u++]), e[n]);
            return t;
          };
    },
    "7f20": function(t, e, n) {
      var r = n("86cc").f,
        i = n("69a8"),
        a = n("2b4c")("toStringTag");
      t.exports = function(t, e, n) {
        t &&
          !i((t = n ? t : t.prototype), a) &&
          r(t, a, { configurable: !0, value: e });
      };
    },
    "7f7a": function(t, e, n) {
      var r = e;
      (r.bignum = n("399f")),
        (r.define = n("ef3a").define),
        (r.base = n("41df")),
        (r.constants = n("0211")),
        (r.decoders = n("20f6")),
        (r.encoders = n("343e"));
    },
    "7f7f": function(t, e, n) {
      var r = n("86cc").f,
        i = Function.prototype,
        a = /^\s*function ([^ (]*)/,
        o = "name";
      o in i ||
        (n("9e1e") &&
          r(i, o, {
            configurable: !0,
            get: function() {
              try {
                return ("" + this).match(a)[1];
              } catch (t) {
                return "";
              }
            }
          }));
    },
    8079: function(t, e, n) {
      var r = n("7726"),
        i = n("1991").set,
        a = r.MutationObserver || r.WebKitMutationObserver,
        o = r.process,
        s = r.Promise,
        u = "process" == n("2d95")(o);
      t.exports = function() {
        var t,
          e,
          n,
          c = function() {
            var r, i;
            u && (r = o.domain) && r.exit();
            while (t) {
              (i = t.fn), (t = t.next);
              try {
                i();
              } catch (a) {
                throw (t ? n() : (e = void 0), a);
              }
            }
            (e = void 0), r && r.enter();
          };
        if (u)
          n = function() {
            o.nextTick(c);
          };
        else if (!a || (r.navigator && r.navigator.standalone))
          if (s && s.resolve) {
            var l = s.resolve(void 0);
            n = function() {
              l.then(c);
            };
          } else
            n = function() {
              i.call(r, c);
            };
        else {
          var f = !0,
            h = document.createTextNode("");
          new a(c).observe(h, { characterData: !0 }),
            (n = function() {
              h.data = f = !f;
            });
        }
        return function(r) {
          var i = { fn: r, next: void 0 };
          e && (e.next = i), t || ((t = i), n()), (e = i);
        };
      };
    },
    "82f0": function(t, e, n) {
      var r = n("39f5"),
        i = n("8707").Buffer,
        a = n("6430"),
        o = n("3fb5"),
        s = n("3f62"),
        u = n("8c8a"),
        c = n("bd9d");
      function l(t, e) {
        var n = 0;
        t.length !== e.length && n++;
        for (var r = Math.min(t.length, e.length), i = 0; i < r; ++i)
          n += t[i] ^ e[i];
        return n;
      }
      function f(t, e, n) {
        if (12 === e.length)
          return (
            (t._finID = i.concat([e, i.from([0, 0, 0, 1])])),
            i.concat([e, i.from([0, 0, 0, 2])])
          );
        var r = new s(n),
          a = e.length,
          o = a % 16;
        r.update(e),
          o && ((o = 16 - o), r.update(i.alloc(o, 0))),
          r.update(i.alloc(8, 0));
        var u = 8 * a,
          l = i.alloc(8);
        l.writeUIntBE(u, 0, 8), r.update(l), (t._finID = r.state);
        var f = i.from(t._finID);
        return c(f), f;
      }
      function h(t, e, n, o) {
        a.call(this);
        var u = i.alloc(4, 0);
        this._cipher = new r.AES(e);
        var c = this._cipher.encryptBlock(u);
        (this._ghash = new s(c)),
          (n = f(this, n, c)),
          (this._prev = i.from(n)),
          (this._cache = i.allocUnsafe(0)),
          (this._secCache = i.allocUnsafe(0)),
          (this._decrypt = o),
          (this._alen = 0),
          (this._len = 0),
          (this._mode = t),
          (this._authTag = null),
          (this._called = !1);
      }
      o(h, a),
        (h.prototype._update = function(t) {
          if (!this._called && this._alen) {
            var e = 16 - (this._alen % 16);
            e < 16 && ((e = i.alloc(e, 0)), this._ghash.update(e));
          }
          this._called = !0;
          var n = this._mode.encrypt(this, t);
          return (
            this._decrypt ? this._ghash.update(t) : this._ghash.update(n),
            (this._len += t.length),
            n
          );
        }),
        (h.prototype._final = function() {
          if (this._decrypt && !this._authTag)
            throw new Error("Unsupported state or unable to authenticate data");
          var t = u(
            this._ghash.final(8 * this._alen, 8 * this._len),
            this._cipher.encryptBlock(this._finID)
          );
          if (this._decrypt && l(t, this._authTag))
            throw new Error("Unsupported state or unable to authenticate data");
          (this._authTag = t), this._cipher.scrub();
        }),
        (h.prototype.getAuthTag = function() {
          if (this._decrypt || !i.isBuffer(this._authTag))
            throw new Error("Attempting to get auth tag in unsupported state");
          return this._authTag;
        }),
        (h.prototype.setAuthTag = function(t) {
          if (!this._decrypt)
            throw new Error("Attempting to set auth tag in unsupported state");
          this._authTag = t;
        }),
        (h.prototype.setAAD = function(t) {
          if (this._called)
            throw new Error("Attempting to set AAD in unsupported state");
          this._ghash.update(t), (this._alen += t.length);
        }),
        (t.exports = h);
    },
    8360: function(t, e, n) {
      var r = n("41df").Reporter,
        i = n("41df").EncoderBuffer,
        a = n("41df").DecoderBuffer,
        o = n("da3e"),
        s = [
          "seq",
          "seqof",
          "set",
          "setof",
          "objid",
          "bool",
          "gentime",
          "utctime",
          "null_",
          "enum",
          "int",
          "objDesc",
          "bitstr",
          "bmpstr",
          "charstr",
          "genstr",
          "graphstr",
          "ia5str",
          "iso646str",
          "numstr",
          "octstr",
          "printstr",
          "t61str",
          "unistr",
          "utf8str",
          "videostr"
        ],
        u = [
          "key",
          "obj",
          "use",
          "optional",
          "explicit",
          "implicit",
          "def",
          "choice",
          "any",
          "contains"
        ].concat(s),
        c = [
          "_peekTag",
          "_decodeTag",
          "_use",
          "_decodeStr",
          "_decodeObjid",
          "_decodeTime",
          "_decodeNull",
          "_decodeInt",
          "_decodeBool",
          "_decodeList",
          "_encodeComposite",
          "_encodeStr",
          "_encodeObjid",
          "_encodeTime",
          "_encodeNull",
          "_encodeInt",
          "_encodeBool"
        ];
      function l(t, e) {
        var n = {};
        (this._baseState = n),
          (n.enc = t),
          (n.parent = e || null),
          (n.children = null),
          (n.tag = null),
          (n.args = null),
          (n.reverseArgs = null),
          (n.choice = null),
          (n.optional = !1),
          (n.any = !1),
          (n.obj = !1),
          (n.use = null),
          (n.useDecoder = null),
          (n.key = null),
          (n["default"] = null),
          (n.explicit = null),
          (n.implicit = null),
          (n.contains = null),
          n.parent || ((n.children = []), this._wrap());
      }
      t.exports = l;
      var f = [
        "enc",
        "parent",
        "children",
        "tag",
        "args",
        "reverseArgs",
        "choice",
        "optional",
        "any",
        "obj",
        "use",
        "alteredUse",
        "key",
        "default",
        "explicit",
        "implicit",
        "contains"
      ];
      (l.prototype.clone = function() {
        var t = this._baseState,
          e = {};
        f.forEach(function(n) {
          e[n] = t[n];
        });
        var n = new this.constructor(e.parent);
        return (n._baseState = e), n;
      }),
        (l.prototype._wrap = function() {
          var t = this._baseState;
          u.forEach(function(e) {
            this[e] = function() {
              var n = new this.constructor(this);
              return t.children.push(n), n[e].apply(n, arguments);
            };
          }, this);
        }),
        (l.prototype._init = function(t) {
          var e = this._baseState;
          o(null === e.parent),
            t.call(this),
            (e.children = e.children.filter(function(t) {
              return t._baseState.parent === this;
            }, this)),
            o.equal(e.children.length, 1, "Root node can have only one child");
        }),
        (l.prototype._useArgs = function(t) {
          var e = this._baseState,
            n = t.filter(function(t) {
              return t instanceof this.constructor;
            }, this);
          (t = t.filter(function(t) {
            return !(t instanceof this.constructor);
          }, this)),
            0 !== n.length &&
              (o(null === e.children),
              (e.children = n),
              n.forEach(function(t) {
                t._baseState.parent = this;
              }, this)),
            0 !== t.length &&
              (o(null === e.args),
              (e.args = t),
              (e.reverseArgs = t.map(function(t) {
                if ("object" !== typeof t || t.constructor !== Object) return t;
                var e = {};
                return (
                  Object.keys(t).forEach(function(n) {
                    n == (0 | n) && (n |= 0);
                    var r = t[n];
                    e[r] = n;
                  }),
                  e
                );
              })));
        }),
        c.forEach(function(t) {
          l.prototype[t] = function() {
            var e = this._baseState;
            throw new Error(t + " not implemented for encoding: " + e.enc);
          };
        }),
        s.forEach(function(t) {
          l.prototype[t] = function() {
            var e = this._baseState,
              n = Array.prototype.slice.call(arguments);
            return o(null === e.tag), (e.tag = t), this._useArgs(n), this;
          };
        }),
        (l.prototype.use = function(t) {
          o(t);
          var e = this._baseState;
          return o(null === e.use), (e.use = t), this;
        }),
        (l.prototype.optional = function() {
          var t = this._baseState;
          return (t.optional = !0), this;
        }),
        (l.prototype.def = function(t) {
          var e = this._baseState;
          return (
            o(null === e["default"]),
            (e["default"] = t),
            (e.optional = !0),
            this
          );
        }),
        (l.prototype.explicit = function(t) {
          var e = this._baseState;
          return (
            o(null === e.explicit && null === e.implicit),
            (e.explicit = t),
            this
          );
        }),
        (l.prototype.implicit = function(t) {
          var e = this._baseState;
          return (
            o(null === e.explicit && null === e.implicit),
            (e.implicit = t),
            this
          );
        }),
        (l.prototype.obj = function() {
          var t = this._baseState,
            e = Array.prototype.slice.call(arguments);
          return (t.obj = !0), 0 !== e.length && this._useArgs(e), this;
        }),
        (l.prototype.key = function(t) {
          var e = this._baseState;
          return o(null === e.key), (e.key = t), this;
        }),
        (l.prototype.any = function() {
          var t = this._baseState;
          return (t.any = !0), this;
        }),
        (l.prototype.choice = function(t) {
          var e = this._baseState;
          return (
            o(null === e.choice),
            (e.choice = t),
            this._useArgs(
              Object.keys(t).map(function(e) {
                return t[e];
              })
            ),
            this
          );
        }),
        (l.prototype.contains = function(t) {
          var e = this._baseState;
          return o(null === e.use), (e.contains = t), this;
        }),
        (l.prototype._decode = function(t, e) {
          var n = this._baseState;
          if (null === n.parent)
            return t.wrapResult(n.children[0]._decode(t, e));
          var r,
            i = n["default"],
            o = !0,
            s = null;
          if ((null !== n.key && (s = t.enterKey(n.key)), n.optional)) {
            var u = null;
            if (
              (null !== n.explicit
                ? (u = n.explicit)
                : null !== n.implicit
                ? (u = n.implicit)
                : null !== n.tag && (u = n.tag),
              null !== u || n.any)
            ) {
              if (((o = this._peekTag(t, u, n.any)), t.isError(o))) return o;
            } else {
              var c = t.save();
              try {
                null === n.choice
                  ? this._decodeGeneric(n.tag, t, e)
                  : this._decodeChoice(t, e),
                  (o = !0);
              } catch (d) {
                o = !1;
              }
              t.restore(c);
            }
          }
          if ((n.obj && o && (r = t.enterObject()), o)) {
            if (null !== n.explicit) {
              var l = this._decodeTag(t, n.explicit);
              if (t.isError(l)) return l;
              t = l;
            }
            var f = t.offset;
            if (null === n.use && null === n.choice) {
              if (n.any) c = t.save();
              var h = this._decodeTag(
                t,
                null !== n.implicit ? n.implicit : n.tag,
                n.any
              );
              if (t.isError(h)) return h;
              n.any ? (i = t.raw(c)) : (t = h);
            }
            if (
              (e &&
                e.track &&
                null !== n.tag &&
                e.track(t.path(), f, t.length, "tagged"),
              e &&
                e.track &&
                null !== n.tag &&
                e.track(t.path(), t.offset, t.length, "content"),
              (i = n.any
                ? i
                : null === n.choice
                ? this._decodeGeneric(n.tag, t, e)
                : this._decodeChoice(t, e)),
              t.isError(i))
            )
              return i;
            if (
              (n.any ||
                null !== n.choice ||
                null === n.children ||
                n.children.forEach(function(n) {
                  n._decode(t, e);
                }),
              n.contains && ("octstr" === n.tag || "bitstr" === n.tag))
            ) {
              var p = new a(i);
              i = this._getUse(n.contains, t._reporterState.obj)._decode(p, e);
            }
          }
          return (
            n.obj && o && (i = t.leaveObject(r)),
            null === n.key || (null === i && !0 !== o)
              ? null !== s && t.exitKey(s)
              : t.leaveKey(s, n.key, i),
            i
          );
        }),
        (l.prototype._decodeGeneric = function(t, e, n) {
          var r = this._baseState;
          return "seq" === t || "set" === t
            ? null
            : "seqof" === t || "setof" === t
            ? this._decodeList(e, t, r.args[0], n)
            : /str$/.test(t)
            ? this._decodeStr(e, t, n)
            : "objid" === t && r.args
            ? this._decodeObjid(e, r.args[0], r.args[1], n)
            : "objid" === t
            ? this._decodeObjid(e, null, null, n)
            : "gentime" === t || "utctime" === t
            ? this._decodeTime(e, t, n)
            : "null_" === t
            ? this._decodeNull(e, n)
            : "bool" === t
            ? this._decodeBool(e, n)
            : "objDesc" === t
            ? this._decodeStr(e, t, n)
            : "int" === t || "enum" === t
            ? this._decodeInt(e, r.args && r.args[0], n)
            : null !== r.use
            ? this._getUse(r.use, e._reporterState.obj)._decode(e, n)
            : e.error("unknown tag: " + t);
        }),
        (l.prototype._getUse = function(t, e) {
          var n = this._baseState;
          return (
            (n.useDecoder = this._use(t, e)),
            o(null === n.useDecoder._baseState.parent),
            (n.useDecoder = n.useDecoder._baseState.children[0]),
            n.implicit !== n.useDecoder._baseState.implicit &&
              ((n.useDecoder = n.useDecoder.clone()),
              (n.useDecoder._baseState.implicit = n.implicit)),
            n.useDecoder
          );
        }),
        (l.prototype._decodeChoice = function(t, e) {
          var n = this._baseState,
            r = null,
            i = !1;
          return (
            Object.keys(n.choice).some(function(a) {
              var o = t.save(),
                s = n.choice[a];
              try {
                var u = s._decode(t, e);
                if (t.isError(u)) return !1;
                (r = { type: a, value: u }), (i = !0);
              } catch (c) {
                return t.restore(o), !1;
              }
              return !0;
            }, this),
            i ? r : t.error("Choice not matched")
          );
        }),
        (l.prototype._createEncoderBuffer = function(t) {
          return new i(t, this.reporter);
        }),
        (l.prototype._encode = function(t, e, n) {
          var r = this._baseState;
          if (null === r["default"] || r["default"] !== t) {
            var i = this._encodeValue(t, e, n);
            if (void 0 !== i && !this._skipDefault(i, e, n)) return i;
          }
        }),
        (l.prototype._encodeValue = function(t, e, n) {
          var i = this._baseState;
          if (null === i.parent) return i.children[0]._encode(t, e || new r());
          var a = null;
          if (((this.reporter = e), i.optional && void 0 === t)) {
            if (null === i["default"]) return;
            t = i["default"];
          }
          var o = null,
            s = !1;
          if (i.any) a = this._createEncoderBuffer(t);
          else if (i.choice) a = this._encodeChoice(t, e);
          else if (i.contains)
            (o = this._getUse(i.contains, n)._encode(t, e)), (s = !0);
          else if (i.children)
            (o = i.children
              .map(function(n) {
                if ("null_" === n._baseState.tag) return n._encode(null, e, t);
                if (null === n._baseState.key)
                  return e.error("Child should have a key");
                var r = e.enterKey(n._baseState.key);
                if ("object" !== typeof t)
                  return e.error("Child expected, but input is not object");
                var i = n._encode(t[n._baseState.key], e, t);
                return e.leaveKey(r), i;
              }, this)
              .filter(function(t) {
                return t;
              })),
              (o = this._createEncoderBuffer(o));
          else if ("seqof" === i.tag || "setof" === i.tag) {
            if (!i.args || 1 !== i.args.length)
              return e.error("Too many args for : " + i.tag);
            if (!Array.isArray(t))
              return e.error("seqof/setof, but data is not Array");
            var u = this.clone();
            (u._baseState.implicit = null),
              (o = this._createEncoderBuffer(
                t.map(function(n) {
                  var r = this._baseState;
                  return this._getUse(r.args[0], t)._encode(n, e);
                }, u)
              ));
          } else
            null !== i.use
              ? (a = this._getUse(i.use, n)._encode(t, e))
              : ((o = this._encodePrimitive(i.tag, t)), (s = !0));
          if (!i.any && null === i.choice) {
            var c = null !== i.implicit ? i.implicit : i.tag,
              l = null === i.implicit ? "universal" : "context";
            null === c
              ? null === i.use &&
                e.error("Tag could be omitted only for .use()")
              : null === i.use && (a = this._encodeComposite(c, s, l, o));
          }
          return (
            null !== i.explicit &&
              (a = this._encodeComposite(i.explicit, !1, "context", a)),
            a
          );
        }),
        (l.prototype._encodeChoice = function(t, e) {
          var n = this._baseState,
            r = n.choice[t.type];
          return (
            r ||
              o(
                !1,
                t.type +
                  " not found in " +
                  JSON.stringify(Object.keys(n.choice))
              ),
            r._encode(t.value, e)
          );
        }),
        (l.prototype._encodePrimitive = function(t, e) {
          var n = this._baseState;
          if (/str$/.test(t)) return this._encodeStr(e, t);
          if ("objid" === t && n.args)
            return this._encodeObjid(e, n.reverseArgs[0], n.args[1]);
          if ("objid" === t) return this._encodeObjid(e, null, null);
          if ("gentime" === t || "utctime" === t) return this._encodeTime(e, t);
          if ("null_" === t) return this._encodeNull();
          if ("int" === t || "enum" === t)
            return this._encodeInt(e, n.args && n.reverseArgs[0]);
          if ("bool" === t) return this._encodeBool(e);
          if ("objDesc" === t) return this._encodeStr(e, t);
          throw new Error("Unsupported tag: " + t);
        }),
        (l.prototype._isNumstr = function(t) {
          return /^[0-9 ]*$/.test(t);
        }),
        (l.prototype._isPrintstr = function(t) {
          return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(t);
        });
    },
    8378: function(t, e) {
      var n = (t.exports = { version: "2.6.6" });
      "number" == typeof __e && (__e = n);
    },
    "83d5": function(t, e) {
      t.exports = function(t, e) {
        var n = t.length,
          r = -1;
        while (++r < n) t[r] ^= e[r];
        return t;
      };
    },
    8436: function(t, e) {
      t.exports = function() {};
    },
    "84f2": function(t, e) {
      t.exports = {};
    },
    "85b3": function(t, e, n) {
      var r = n("3fb5"),
        i = n("3768");
      function a(t) {
        i.call(this, t), (this.enc = "pem");
      }
      r(a, i),
        (t.exports = a),
        (a.prototype.encode = function(t, e) {
          for (
            var n = i.prototype.encode.call(this, t),
              r = n.toString("base64"),
              a = ["-----BEGIN " + e.label + "-----"],
              o = 0;
            o < r.length;
            o += 64
          )
            a.push(r.slice(o, o + 64));
          return a.push("-----END " + e.label + "-----"), a.join("\n");
        });
    },
    "86cc": function(t, e, n) {
      var r = n("cb7c"),
        i = n("c69a"),
        a = n("6a99"),
        o = Object.defineProperty;
      e.f = n("9e1e")
        ? Object.defineProperty
        : function(t, e, n) {
            if ((r(t), (e = a(e, !0)), r(n), i))
              try {
                return o(t, e, n);
              } catch (s) {}
            if ("get" in n || "set" in n)
              throw TypeError("Accessors not supported!");
            return "value" in n && (t[e] = n.value), t;
          };
    },
    8707: function(t, e, n) {
      var r = n("b639"),
        i = r.Buffer;
      function a(t, e) {
        for (var n in t) e[n] = t[n];
      }
      function o(t, e, n) {
        return i(t, e, n);
      }
      i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow
        ? (t.exports = r)
        : (a(r, e), (e.Buffer = o)),
        a(i, o),
        (o.from = function(t, e, n) {
          if ("number" === typeof t)
            throw new TypeError("Argument must not be a number");
          return i(t, e, n);
        }),
        (o.alloc = function(t, e, n) {
          if ("number" !== typeof t)
            throw new TypeError("Argument must be a number");
          var r = i(t);
          return (
            void 0 !== e
              ? "string" === typeof n
                ? r.fill(e, n)
                : r.fill(e)
              : r.fill(0),
            r
          );
        }),
        (o.allocUnsafe = function(t) {
          if ("number" !== typeof t)
            throw new TypeError("Argument must be a number");
          return i(t);
        }),
        (o.allocUnsafeSlow = function(t) {
          if ("number" !== typeof t)
            throw new TypeError("Argument must be a number");
          return r.SlowBuffer(t);
        });
    },
    8947: function(t, e, n) {
      var r = n("bac2"),
        i = n("82f0"),
        a = n("8707").Buffer,
        o = n("09f5"),
        s = n("6430"),
        u = n("39f5"),
        c = n("ae84"),
        l = n("3fb5");
      function f(t, e, n) {
        s.call(this),
          (this._cache = new p()),
          (this._cipher = new u.AES(e)),
          (this._prev = a.from(n)),
          (this._mode = t),
          (this._autopadding = !0);
      }
      l(f, s),
        (f.prototype._update = function(t) {
          var e, n;
          this._cache.add(t);
          var r = [];
          while ((e = this._cache.get()))
            (n = this._mode.encrypt(this, e)), r.push(n);
          return a.concat(r);
        });
      var h = a.alloc(16, 16);
      function p() {
        this.cache = a.allocUnsafe(0);
      }
      function d(t, e, n) {
        var s = r[t.toLowerCase()];
        if (!s) throw new TypeError("invalid suite type");
        if (("string" === typeof e && (e = a.from(e)), e.length !== s.key / 8))
          throw new TypeError("invalid key length " + e.length);
        if (
          ("string" === typeof n && (n = a.from(n)),
          "GCM" !== s.mode && n.length !== s.iv)
        )
          throw new TypeError("invalid iv length " + n.length);
        return "stream" === s.type
          ? new o(s.module, e, n)
          : "auth" === s.type
          ? new i(s.module, e, n)
          : new f(s.module, e, n);
      }
      function m(t, e) {
        var n = r[t.toLowerCase()];
        if (!n) throw new TypeError("invalid suite type");
        var i = c(e, !1, n.key, n.iv);
        return d(t, i.key, i.iv);
      }
      (f.prototype._final = function() {
        var t = this._cache.flush();
        if (this._autopadding)
          return (t = this._mode.encrypt(this, t)), this._cipher.scrub(), t;
        if (!t.equals(h))
          throw (this._cipher.scrub(),
          new Error("data not multiple of block length"));
      }),
        (f.prototype.setAutoPadding = function(t) {
          return (this._autopadding = !!t), this;
        }),
        (p.prototype.add = function(t) {
          this.cache = a.concat([this.cache, t]);
        }),
        (p.prototype.get = function() {
          if (this.cache.length > 15) {
            var t = this.cache.slice(0, 16);
            return (this.cache = this.cache.slice(16)), t;
          }
          return null;
        }),
        (p.prototype.flush = function() {
          var t = 16 - this.cache.length,
            e = a.allocUnsafe(t),
            n = -1;
          while (++n < t) e.writeUInt8(t, n);
          return a.concat([this.cache, e]);
        }),
        (e.createCipheriv = d),
        (e.createCipher = m);
    },
    "8a81": function(t, e, n) {
      "use strict";
      var r = n("7726"),
        i = n("69a8"),
        a = n("9e1e"),
        o = n("5ca1"),
        s = n("2aba"),
        u = n("67ab").KEY,
        c = n("79e5"),
        l = n("5537"),
        f = n("7f20"),
        h = n("ca5a"),
        p = n("2b4c"),
        d = n("37c8"),
        m = n("3a72"),
        v = n("d4c0"),
        y = n("1169"),
        g = n("cb7c"),
        b = n("d3f4"),
        w = n("4bf8"),
        _ = n("6821"),
        x = n("6a99"),
        E = n("4630"),
        S = n("2aeb"),
        N = n("7bbc"),
        O = n("11e9"),
        I = n("2621"),
        C = n("86cc"),
        A = n("0d58"),
        k = O.f,
        P = C.f,
        T = N.f,
        R = r.Symbol,
        D = r.JSON,
        M = D && D.stringify,
        j = "prototype",
        L = p("_hidden"),
        B = p("toPrimitive"),
        F = {}.propertyIsEnumerable,
        z = l("symbol-registry"),
        U = l("symbols"),
        V = l("op-symbols"),
        W = Object[j],
        $ = "function" == typeof R,
        q = r.QObject,
        H = !q || !q[j] || !q[j].findChild,
        K =
          a &&
          c(function() {
            return (
              7 !=
              S(
                P({}, "a", {
                  get: function() {
                    return P(this, "a", { value: 7 }).a;
                  }
                })
              ).a
            );
          })
            ? function(t, e, n) {
                var r = k(W, e);
                r && delete W[e], P(t, e, n), r && t !== W && P(W, e, r);
              }
            : P,
        G = function(t) {
          var e = (U[t] = S(R[j]));
          return (e._k = t), e;
        },
        X =
          $ && "symbol" == typeof R.iterator
            ? function(t) {
                return "symbol" == typeof t;
              }
            : function(t) {
                return t instanceof R;
              },
        J = function(t, e, n) {
          return (
            t === W && J(V, e, n),
            g(t),
            (e = x(e, !0)),
            g(n),
            i(U, e)
              ? (n.enumerable
                  ? (i(t, L) && t[L][e] && (t[L][e] = !1),
                    (n = S(n, { enumerable: E(0, !1) })))
                  : (i(t, L) || P(t, L, E(1, {})), (t[L][e] = !0)),
                K(t, e, n))
              : P(t, e, n)
          );
        },
        Y = function(t, e) {
          g(t);
          var n,
            r = v((e = _(e))),
            i = 0,
            a = r.length;
          while (a > i) J(t, (n = r[i++]), e[n]);
          return t;
        },
        Q = function(t, e) {
          return void 0 === e ? S(t) : Y(S(t), e);
        },
        Z = function(t) {
          var e = F.call(this, (t = x(t, !0)));
          return (
            !(this === W && i(U, t) && !i(V, t)) &&
            (!(e || !i(this, t) || !i(U, t) || (i(this, L) && this[L][t])) || e)
          );
        },
        tt = function(t, e) {
          if (((t = _(t)), (e = x(e, !0)), t !== W || !i(U, e) || i(V, e))) {
            var n = k(t, e);
            return (
              !n || !i(U, e) || (i(t, L) && t[L][e]) || (n.enumerable = !0), n
            );
          }
        },
        et = function(t) {
          var e,
            n = T(_(t)),
            r = [],
            a = 0;
          while (n.length > a)
            i(U, (e = n[a++])) || e == L || e == u || r.push(e);
          return r;
        },
        nt = function(t) {
          var e,
            n = t === W,
            r = T(n ? V : _(t)),
            a = [],
            o = 0;
          while (r.length > o)
            !i(U, (e = r[o++])) || (n && !i(W, e)) || a.push(U[e]);
          return a;
        };
      $ ||
        ((R = function() {
          if (this instanceof R)
            throw TypeError("Symbol is not a constructor!");
          var t = h(arguments.length > 0 ? arguments[0] : void 0),
            e = function(n) {
              this === W && e.call(V, n),
                i(this, L) && i(this[L], t) && (this[L][t] = !1),
                K(this, t, E(1, n));
            };
          return a && H && K(W, t, { configurable: !0, set: e }), G(t);
        }),
        s(R[j], "toString", function() {
          return this._k;
        }),
        (O.f = tt),
        (C.f = J),
        (n("9093").f = N.f = et),
        (n("52a7").f = Z),
        (I.f = nt),
        a && !n("2d00") && s(W, "propertyIsEnumerable", Z, !0),
        (d.f = function(t) {
          return G(p(t));
        })),
        o(o.G + o.W + o.F * !$, { Symbol: R });
      for (
        var rt = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(
            ","
          ),
          it = 0;
        rt.length > it;

      )
        p(rt[it++]);
      for (var at = A(p.store), ot = 0; at.length > ot; ) m(at[ot++]);
      o(o.S + o.F * !$, "Symbol", {
        for: function(t) {
          return i(z, (t += "")) ? z[t] : (z[t] = R(t));
        },
        keyFor: function(t) {
          if (!X(t)) throw TypeError(t + " is not a symbol!");
          for (var e in z) if (z[e] === t) return e;
        },
        useSetter: function() {
          H = !0;
        },
        useSimple: function() {
          H = !1;
        }
      }),
        o(o.S + o.F * !$, "Object", {
          create: Q,
          defineProperty: J,
          defineProperties: Y,
          getOwnPropertyDescriptor: tt,
          getOwnPropertyNames: et,
          getOwnPropertySymbols: nt
        });
      var st = c(function() {
        I.f(1);
      });
      o(o.S + o.F * st, "Object", {
        getOwnPropertySymbols: function(t) {
          return I.f(w(t));
        }
      }),
        D &&
          o(
            o.S +
              o.F *
                (!$ ||
                  c(function() {
                    var t = R();
                    return (
                      "[null]" != M([t]) ||
                      "{}" != M({ a: t }) ||
                      "{}" != M(Object(t))
                    );
                  })),
            "JSON",
            {
              stringify: function(t) {
                var e,
                  n,
                  r = [t],
                  i = 1;
                while (arguments.length > i) r.push(arguments[i++]);
                if (((n = e = r[1]), (b(e) || void 0 !== t) && !X(t)))
                  return (
                    y(e) ||
                      (e = function(t, e) {
                        if (
                          ("function" == typeof n && (e = n.call(this, t, e)),
                          !X(e))
                        )
                          return e;
                      }),
                    (r[1] = e),
                    M.apply(D, r)
                  );
              }
            }
          ),
        R[j][B] || n("32e9")(R[j], B, R[j].valueOf),
        f(R, "Symbol"),
        f(Math, "Math", !0),
        f(r.JSON, "JSON", !0);
    },
    "8b71": function(t, e, n) {
      var r = n("0211");
      (e.tagClass = {
        0: "universal",
        1: "application",
        2: "context",
        3: "private"
      }),
        (e.tagClassByName = r._reverse(e.tagClass)),
        (e.tag = {
          0: "end",
          1: "bool",
          2: "int",
          3: "bitstr",
          4: "octstr",
          5: "null_",
          6: "objid",
          7: "objDesc",
          8: "external",
          9: "real",
          10: "enum",
          11: "embed",
          12: "utf8str",
          13: "relativeOid",
          16: "seq",
          17: "set",
          18: "numstr",
          19: "printstr",
          20: "t61str",
          21: "videostr",
          22: "ia5str",
          23: "utctime",
          24: "gentime",
          25: "graphstr",
          26: "iso646str",
          27: "genstr",
          28: "unistr",
          29: "charstr",
          30: "bmpstr"
        }),
        (e.tagByName = r._reverse(e.tag));
    },
    "8b95": function(t, e, n) {
      "use strict";
      var r = n("c3c0"),
        i = n("b525");
      function a() {
        if (!(this instanceof a)) return new a();
        i.call(this),
          (this.h = [
            3418070365,
            3238371032,
            1654270250,
            914150663,
            2438529370,
            812702999,
            355462360,
            4144912697,
            1731405415,
            4290775857,
            2394180231,
            1750603025,
            3675008525,
            1694076839,
            1203062813,
            3204075428
          ]);
      }
      r.inherits(a, i),
        (t.exports = a),
        (a.blockSize = 1024),
        (a.outSize = 384),
        (a.hmacStrength = 192),
        (a.padLength = 128),
        (a.prototype._digest = function(t) {
          return "hex" === t
            ? r.toHex32(this.h.slice(0, 12), "big")
            : r.split32(this.h.slice(0, 12), "big");
        });
    },
    "8c4f": function(t, e, n) {
      "use strict";
      /*!
       * vue-router v3.0.6
       * (c) 2019 Evan You
       * @license MIT
       */ function r(t, e) {
        0;
      }
      function i(t) {
        return Object.prototype.toString.call(t).indexOf("Error") > -1;
      }
      function a(t, e) {
        for (var n in e) t[n] = e[n];
        return t;
      }
      var o = {
        name: "RouterView",
        functional: !0,
        props: { name: { type: String, default: "default" } },
        render: function(t, e) {
          var n = e.props,
            r = e.children,
            i = e.parent,
            o = e.data;
          o.routerView = !0;
          var u = i.$createElement,
            c = n.name,
            l = i.$route,
            f = i._routerViewCache || (i._routerViewCache = {}),
            h = 0,
            p = !1;
          while (i && i._routerRoot !== i) {
            var d = i.$vnode && i.$vnode.data;
            d && (d.routerView && h++, d.keepAlive && i._inactive && (p = !0)),
              (i = i.$parent);
          }
          if (((o.routerViewDepth = h), p)) return u(f[c], o, r);
          var m = l.matched[h];
          if (!m) return (f[c] = null), u();
          var v = (f[c] = m.components[c]);
          (o.registerRouteInstance = function(t, e) {
            var n = m.instances[c];
            ((e && n !== t) || (!e && n === t)) && (m.instances[c] = e);
          }),
            ((o.hook || (o.hook = {})).prepatch = function(t, e) {
              m.instances[c] = e.componentInstance;
            }),
            (o.hook.init = function(t) {
              t.data.keepAlive &&
                t.componentInstance &&
                t.componentInstance !== m.instances[c] &&
                (m.instances[c] = t.componentInstance);
            });
          var y = (o.props = s(l, m.props && m.props[c]));
          if (y) {
            y = o.props = a({}, y);
            var g = (o.attrs = o.attrs || {});
            for (var b in y)
              (v.props && b in v.props) || ((g[b] = y[b]), delete y[b]);
          }
          return u(v, o, r);
        }
      };
      function s(t, e) {
        switch (typeof e) {
          case "undefined":
            return;
          case "object":
            return e;
          case "function":
            return e(t);
          case "boolean":
            return e ? t.params : void 0;
          default:
            0;
        }
      }
      var u = /[!'()*]/g,
        c = function(t) {
          return "%" + t.charCodeAt(0).toString(16);
        },
        l = /%2C/g,
        f = function(t) {
          return encodeURIComponent(t)
            .replace(u, c)
            .replace(l, ",");
        },
        h = decodeURIComponent;
      function p(t, e, n) {
        void 0 === e && (e = {});
        var r,
          i = n || d;
        try {
          r = i(t || "");
        } catch (o) {
          r = {};
        }
        for (var a in e) r[a] = e[a];
        return r;
      }
      function d(t) {
        var e = {};
        return (
          (t = t.trim().replace(/^(\?|#|&)/, "")),
          t
            ? (t.split("&").forEach(function(t) {
                var n = t.replace(/\+/g, " ").split("="),
                  r = h(n.shift()),
                  i = n.length > 0 ? h(n.join("=")) : null;
                void 0 === e[r]
                  ? (e[r] = i)
                  : Array.isArray(e[r])
                  ? e[r].push(i)
                  : (e[r] = [e[r], i]);
              }),
              e)
            : e
        );
      }
      function m(t) {
        var e = t
          ? Object.keys(t)
              .map(function(e) {
                var n = t[e];
                if (void 0 === n) return "";
                if (null === n) return f(e);
                if (Array.isArray(n)) {
                  var r = [];
                  return (
                    n.forEach(function(t) {
                      void 0 !== t &&
                        (null === t ? r.push(f(e)) : r.push(f(e) + "=" + f(t)));
                    }),
                    r.join("&")
                  );
                }
                return f(e) + "=" + f(n);
              })
              .filter(function(t) {
                return t.length > 0;
              })
              .join("&")
          : null;
        return e ? "?" + e : "";
      }
      var v = /\/?$/;
      function y(t, e, n, r) {
        var i = r && r.options.stringifyQuery,
          a = e.query || {};
        try {
          a = g(a);
        } catch (s) {}
        var o = {
          name: e.name || (t && t.name),
          meta: (t && t.meta) || {},
          path: e.path || "/",
          hash: e.hash || "",
          query: a,
          params: e.params || {},
          fullPath: _(e, i),
          matched: t ? w(t) : []
        };
        return n && (o.redirectedFrom = _(n, i)), Object.freeze(o);
      }
      function g(t) {
        if (Array.isArray(t)) return t.map(g);
        if (t && "object" === typeof t) {
          var e = {};
          for (var n in t) e[n] = g(t[n]);
          return e;
        }
        return t;
      }
      var b = y(null, { path: "/" });
      function w(t) {
        var e = [];
        while (t) e.unshift(t), (t = t.parent);
        return e;
      }
      function _(t, e) {
        var n = t.path,
          r = t.query;
        void 0 === r && (r = {});
        var i = t.hash;
        void 0 === i && (i = "");
        var a = e || m;
        return (n || "/") + a(r) + i;
      }
      function x(t, e) {
        return e === b
          ? t === e
          : !!e &&
              (t.path && e.path
                ? t.path.replace(v, "") === e.path.replace(v, "") &&
                  t.hash === e.hash &&
                  E(t.query, e.query)
                : !(!t.name || !e.name) &&
                  (t.name === e.name &&
                    t.hash === e.hash &&
                    E(t.query, e.query) &&
                    E(t.params, e.params)));
      }
      function E(t, e) {
        if ((void 0 === t && (t = {}), void 0 === e && (e = {}), !t || !e))
          return t === e;
        var n = Object.keys(t),
          r = Object.keys(e);
        return (
          n.length === r.length &&
          n.every(function(n) {
            var r = t[n],
              i = e[n];
            return "object" === typeof r && "object" === typeof i
              ? E(r, i)
              : String(r) === String(i);
          })
        );
      }
      function S(t, e) {
        return (
          0 === t.path.replace(v, "/").indexOf(e.path.replace(v, "/")) &&
          (!e.hash || t.hash === e.hash) &&
          N(t.query, e.query)
        );
      }
      function N(t, e) {
        for (var n in e) if (!(n in t)) return !1;
        return !0;
      }
      var O,
        I = [String, Object],
        C = [String, Array],
        A = {
          name: "RouterLink",
          props: {
            to: { type: I, required: !0 },
            tag: { type: String, default: "a" },
            exact: Boolean,
            append: Boolean,
            replace: Boolean,
            activeClass: String,
            exactActiveClass: String,
            event: { type: C, default: "click" }
          },
          render: function(t) {
            var e = this,
              n = this.$router,
              r = this.$route,
              i = n.resolve(this.to, r, this.append),
              o = i.location,
              s = i.route,
              u = i.href,
              c = {},
              l = n.options.linkActiveClass,
              f = n.options.linkExactActiveClass,
              h = null == l ? "router-link-active" : l,
              p = null == f ? "router-link-exact-active" : f,
              d = null == this.activeClass ? h : this.activeClass,
              m = null == this.exactActiveClass ? p : this.exactActiveClass,
              v = o.path ? y(null, o, null, n) : s;
            (c[m] = x(r, v)), (c[d] = this.exact ? c[m] : S(r, v));
            var g = function(t) {
                k(t) && (e.replace ? n.replace(o) : n.push(o));
              },
              b = { click: k };
            Array.isArray(this.event)
              ? this.event.forEach(function(t) {
                  b[t] = g;
                })
              : (b[this.event] = g);
            var w = { class: c };
            if ("a" === this.tag) (w.on = b), (w.attrs = { href: u });
            else {
              var _ = P(this.$slots.default);
              if (_) {
                _.isStatic = !1;
                var E = (_.data = a({}, _.data));
                E.on = b;
                var N = (_.data.attrs = a({}, _.data.attrs));
                N.href = u;
              } else w.on = b;
            }
            return t(this.tag, w, this.$slots.default);
          }
        };
      function k(t) {
        if (
          !(t.metaKey || t.altKey || t.ctrlKey || t.shiftKey) &&
          !t.defaultPrevented &&
          (void 0 === t.button || 0 === t.button)
        ) {
          if (t.currentTarget && t.currentTarget.getAttribute) {
            var e = t.currentTarget.getAttribute("target");
            if (/\b_blank\b/i.test(e)) return;
          }
          return t.preventDefault && t.preventDefault(), !0;
        }
      }
      function P(t) {
        if (t)
          for (var e, n = 0; n < t.length; n++) {
            if (((e = t[n]), "a" === e.tag)) return e;
            if (e.children && (e = P(e.children))) return e;
          }
      }
      function T(t) {
        if (!T.installed || O !== t) {
          (T.installed = !0), (O = t);
          var e = function(t) {
              return void 0 !== t;
            },
            n = function(t, n) {
              var r = t.$options._parentVnode;
              e(r) &&
                e((r = r.data)) &&
                e((r = r.registerRouteInstance)) &&
                r(t, n);
            };
          t.mixin({
            beforeCreate: function() {
              e(this.$options.router)
                ? ((this._routerRoot = this),
                  (this._router = this.$options.router),
                  this._router.init(this),
                  t.util.defineReactive(
                    this,
                    "_route",
                    this._router.history.current
                  ))
                : (this._routerRoot =
                    (this.$parent && this.$parent._routerRoot) || this),
                n(this, this);
            },
            destroyed: function() {
              n(this);
            }
          }),
            Object.defineProperty(t.prototype, "$router", {
              get: function() {
                return this._routerRoot._router;
              }
            }),
            Object.defineProperty(t.prototype, "$route", {
              get: function() {
                return this._routerRoot._route;
              }
            }),
            t.component("RouterView", o),
            t.component("RouterLink", A);
          var r = t.config.optionMergeStrategies;
          r.beforeRouteEnter = r.beforeRouteLeave = r.beforeRouteUpdate =
            r.created;
        }
      }
      var R = "undefined" !== typeof window;
      function D(t, e, n) {
        var r = t.charAt(0);
        if ("/" === r) return t;
        if ("?" === r || "#" === r) return e + t;
        var i = e.split("/");
        (n && i[i.length - 1]) || i.pop();
        for (
          var a = t.replace(/^\//, "").split("/"), o = 0;
          o < a.length;
          o++
        ) {
          var s = a[o];
          ".." === s ? i.pop() : "." !== s && i.push(s);
        }
        return "" !== i[0] && i.unshift(""), i.join("/");
      }
      function M(t) {
        var e = "",
          n = "",
          r = t.indexOf("#");
        r >= 0 && ((e = t.slice(r)), (t = t.slice(0, r)));
        var i = t.indexOf("?");
        return (
          i >= 0 && ((n = t.slice(i + 1)), (t = t.slice(0, i))),
          { path: t, query: n, hash: e }
        );
      }
      function j(t) {
        return t.replace(/\/\//g, "/");
      }
      var L =
          Array.isArray ||
          function(t) {
            return "[object Array]" == Object.prototype.toString.call(t);
          },
        B = rt,
        F = $,
        z = q,
        U = G,
        V = nt,
        W = new RegExp(
          [
            "(\\\\.)",
            "([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"
          ].join("|"),
          "g"
        );
      function $(t, e) {
        var n,
          r = [],
          i = 0,
          a = 0,
          o = "",
          s = (e && e.delimiter) || "/";
        while (null != (n = W.exec(t))) {
          var u = n[0],
            c = n[1],
            l = n.index;
          if (((o += t.slice(a, l)), (a = l + u.length), c)) o += c[1];
          else {
            var f = t[a],
              h = n[2],
              p = n[3],
              d = n[4],
              m = n[5],
              v = n[6],
              y = n[7];
            o && (r.push(o), (o = ""));
            var g = null != h && null != f && f !== h,
              b = "+" === v || "*" === v,
              w = "?" === v || "*" === v,
              _ = n[2] || s,
              x = d || m;
            r.push({
              name: p || i++,
              prefix: h || "",
              delimiter: _,
              optional: w,
              repeat: b,
              partial: g,
              asterisk: !!y,
              pattern: x ? J(x) : y ? ".*" : "[^" + X(_) + "]+?"
            });
          }
        }
        return a < t.length && (o += t.substr(a)), o && r.push(o), r;
      }
      function q(t, e) {
        return G($(t, e));
      }
      function H(t) {
        return encodeURI(t).replace(/[\/?#]/g, function(t) {
          return (
            "%" +
            t
              .charCodeAt(0)
              .toString(16)
              .toUpperCase()
          );
        });
      }
      function K(t) {
        return encodeURI(t).replace(/[?#]/g, function(t) {
          return (
            "%" +
            t
              .charCodeAt(0)
              .toString(16)
              .toUpperCase()
          );
        });
      }
      function G(t) {
        for (var e = new Array(t.length), n = 0; n < t.length; n++)
          "object" === typeof t[n] &&
            (e[n] = new RegExp("^(?:" + t[n].pattern + ")$"));
        return function(n, r) {
          for (
            var i = "",
              a = n || {},
              o = r || {},
              s = o.pretty ? H : encodeURIComponent,
              u = 0;
            u < t.length;
            u++
          ) {
            var c = t[u];
            if ("string" !== typeof c) {
              var l,
                f = a[c.name];
              if (null == f) {
                if (c.optional) {
                  c.partial && (i += c.prefix);
                  continue;
                }
                throw new TypeError('Expected "' + c.name + '" to be defined');
              }
              if (L(f)) {
                if (!c.repeat)
                  throw new TypeError(
                    'Expected "' +
                      c.name +
                      '" to not repeat, but received `' +
                      JSON.stringify(f) +
                      "`"
                  );
                if (0 === f.length) {
                  if (c.optional) continue;
                  throw new TypeError(
                    'Expected "' + c.name + '" to not be empty'
                  );
                }
                for (var h = 0; h < f.length; h++) {
                  if (((l = s(f[h])), !e[u].test(l)))
                    throw new TypeError(
                      'Expected all "' +
                        c.name +
                        '" to match "' +
                        c.pattern +
                        '", but received `' +
                        JSON.stringify(l) +
                        "`"
                    );
                  i += (0 === h ? c.prefix : c.delimiter) + l;
                }
              } else {
                if (((l = c.asterisk ? K(f) : s(f)), !e[u].test(l)))
                  throw new TypeError(
                    'Expected "' +
                      c.name +
                      '" to match "' +
                      c.pattern +
                      '", but received "' +
                      l +
                      '"'
                  );
                i += c.prefix + l;
              }
            } else i += c;
          }
          return i;
        };
      }
      function X(t) {
        return t.replace(/([.+*?=^!:${}()[\]|\/\\])/g, "\\$1");
      }
      function J(t) {
        return t.replace(/([=!:$\/()])/g, "\\$1");
      }
      function Y(t, e) {
        return (t.keys = e), t;
      }
      function Q(t) {
        return t.sensitive ? "" : "i";
      }
      function Z(t, e) {
        var n = t.source.match(/\((?!\?)/g);
        if (n)
          for (var r = 0; r < n.length; r++)
            e.push({
              name: r,
              prefix: null,
              delimiter: null,
              optional: !1,
              repeat: !1,
              partial: !1,
              asterisk: !1,
              pattern: null
            });
        return Y(t, e);
      }
      function tt(t, e, n) {
        for (var r = [], i = 0; i < t.length; i++)
          r.push(rt(t[i], e, n).source);
        var a = new RegExp("(?:" + r.join("|") + ")", Q(n));
        return Y(a, e);
      }
      function et(t, e, n) {
        return nt($(t, n), e, n);
      }
      function nt(t, e, n) {
        L(e) || ((n = e || n), (e = [])), (n = n || {});
        for (
          var r = n.strict, i = !1 !== n.end, a = "", o = 0;
          o < t.length;
          o++
        ) {
          var s = t[o];
          if ("string" === typeof s) a += X(s);
          else {
            var u = X(s.prefix),
              c = "(?:" + s.pattern + ")";
            e.push(s),
              s.repeat && (c += "(?:" + u + c + ")*"),
              (c = s.optional
                ? s.partial
                  ? u + "(" + c + ")?"
                  : "(?:" + u + "(" + c + "))?"
                : u + "(" + c + ")"),
              (a += c);
          }
        }
        var l = X(n.delimiter || "/"),
          f = a.slice(-l.length) === l;
        return (
          r || (a = (f ? a.slice(0, -l.length) : a) + "(?:" + l + "(?=$))?"),
          (a += i ? "$" : r && f ? "" : "(?=" + l + "|$)"),
          Y(new RegExp("^" + a, Q(n)), e)
        );
      }
      function rt(t, e, n) {
        return (
          L(e) || ((n = e || n), (e = [])),
          (n = n || {}),
          t instanceof RegExp ? Z(t, e) : L(t) ? tt(t, e, n) : et(t, e, n)
        );
      }
      (B.parse = F),
        (B.compile = z),
        (B.tokensToFunction = U),
        (B.tokensToRegExp = V);
      var it = Object.create(null);
      function at(t, e, n) {
        e = e || {};
        try {
          var r = it[t] || (it[t] = B.compile(t));
          return e.pathMatch && (e[0] = e.pathMatch), r(e, { pretty: !0 });
        } catch (i) {
          return "";
        } finally {
          delete e[0];
        }
      }
      function ot(t, e, n, r) {
        var i = e || [],
          a = n || Object.create(null),
          o = r || Object.create(null);
        t.forEach(function(t) {
          st(i, a, o, t);
        });
        for (var s = 0, u = i.length; s < u; s++)
          "*" === i[s] && (i.push(i.splice(s, 1)[0]), u--, s--);
        return { pathList: i, pathMap: a, nameMap: o };
      }
      function st(t, e, n, r, i, a) {
        var o = r.path,
          s = r.name;
        var u = r.pathToRegexpOptions || {},
          c = ct(o, i, u.strict);
        "boolean" === typeof r.caseSensitive && (u.sensitive = r.caseSensitive);
        var l = {
          path: c,
          regex: ut(c, u),
          components: r.components || { default: r.component },
          instances: {},
          name: s,
          parent: i,
          matchAs: a,
          redirect: r.redirect,
          beforeEnter: r.beforeEnter,
          meta: r.meta || {},
          props:
            null == r.props ? {} : r.components ? r.props : { default: r.props }
        };
        if (
          (r.children &&
            r.children.forEach(function(r) {
              var i = a ? j(a + "/" + r.path) : void 0;
              st(t, e, n, r, l, i);
            }),
          void 0 !== r.alias)
        ) {
          var f = Array.isArray(r.alias) ? r.alias : [r.alias];
          f.forEach(function(a) {
            var o = { path: a, children: r.children };
            st(t, e, n, o, i, l.path || "/");
          });
        }
        e[l.path] || (t.push(l.path), (e[l.path] = l)),
          s && (n[s] || (n[s] = l));
      }
      function ut(t, e) {
        var n = B(t, [], e);
        return n;
      }
      function ct(t, e, n) {
        return (
          n || (t = t.replace(/\/$/, "")),
          "/" === t[0] ? t : null == e ? t : j(e.path + "/" + t)
        );
      }
      function lt(t, e, n, r) {
        var i = "string" === typeof t ? { path: t } : t;
        if (i._normalized) return i;
        if (i.name) return a({}, t);
        if (!i.path && i.params && e) {
          (i = a({}, i)), (i._normalized = !0);
          var o = a(a({}, e.params), i.params);
          if (e.name) (i.name = e.name), (i.params = o);
          else if (e.matched.length) {
            var s = e.matched[e.matched.length - 1].path;
            i.path = at(s, o, "path " + e.path);
          } else 0;
          return i;
        }
        var u = M(i.path || ""),
          c = (e && e.path) || "/",
          l = u.path ? D(u.path, c, n || i.append) : c,
          f = p(u.query, i.query, r && r.options.parseQuery),
          h = i.hash || u.hash;
        return (
          h && "#" !== h.charAt(0) && (h = "#" + h),
          { _normalized: !0, path: l, query: f, hash: h }
        );
      }
      function ft(t, e) {
        var n = ot(t),
          r = n.pathList,
          i = n.pathMap,
          a = n.nameMap;
        function o(t) {
          ot(t, r, i, a);
        }
        function s(t, n, o) {
          var s = lt(t, n, !1, e),
            u = s.name;
          if (u) {
            var c = a[u];
            if (!c) return l(null, s);
            var f = c.regex.keys
              .filter(function(t) {
                return !t.optional;
              })
              .map(function(t) {
                return t.name;
              });
            if (
              ("object" !== typeof s.params && (s.params = {}),
              n && "object" === typeof n.params)
            )
              for (var h in n.params)
                !(h in s.params) &&
                  f.indexOf(h) > -1 &&
                  (s.params[h] = n.params[h]);
            if (c)
              return (
                (s.path = at(c.path, s.params, 'named route "' + u + '"')),
                l(c, s, o)
              );
          } else if (s.path) {
            s.params = {};
            for (var p = 0; p < r.length; p++) {
              var d = r[p],
                m = i[d];
              if (ht(m.regex, s.path, s.params)) return l(m, s, o);
            }
          }
          return l(null, s);
        }
        function u(t, n) {
          var r = t.redirect,
            i = "function" === typeof r ? r(y(t, n, null, e)) : r;
          if (
            ("string" === typeof i && (i = { path: i }),
            !i || "object" !== typeof i)
          )
            return l(null, n);
          var o = i,
            u = o.name,
            c = o.path,
            f = n.query,
            h = n.hash,
            p = n.params;
          if (
            ((f = o.hasOwnProperty("query") ? o.query : f),
            (h = o.hasOwnProperty("hash") ? o.hash : h),
            (p = o.hasOwnProperty("params") ? o.params : p),
            u)
          ) {
            a[u];
            return s(
              { _normalized: !0, name: u, query: f, hash: h, params: p },
              void 0,
              n
            );
          }
          if (c) {
            var d = pt(c, t),
              m = at(d, p, 'redirect route with path "' + d + '"');
            return s(
              { _normalized: !0, path: m, query: f, hash: h },
              void 0,
              n
            );
          }
          return l(null, n);
        }
        function c(t, e, n) {
          var r = at(n, e.params, 'aliased route with path "' + n + '"'),
            i = s({ _normalized: !0, path: r });
          if (i) {
            var a = i.matched,
              o = a[a.length - 1];
            return (e.params = i.params), l(o, e);
          }
          return l(null, e);
        }
        function l(t, n, r) {
          return t && t.redirect
            ? u(t, r || n)
            : t && t.matchAs
            ? c(t, n, t.matchAs)
            : y(t, n, r, e);
        }
        return { match: s, addRoutes: o };
      }
      function ht(t, e, n) {
        var r = e.match(t);
        if (!r) return !1;
        if (!n) return !0;
        for (var i = 1, a = r.length; i < a; ++i) {
          var o = t.keys[i - 1],
            s = "string" === typeof r[i] ? decodeURIComponent(r[i]) : r[i];
          o && (n[o.name || "pathMatch"] = s);
        }
        return !0;
      }
      function pt(t, e) {
        return D(t, e.parent ? e.parent.path : "/", !0);
      }
      var dt = Object.create(null);
      function mt() {
        window.history.replaceState(
          { key: At() },
          "",
          window.location.href.replace(window.location.origin, "")
        ),
          window.addEventListener("popstate", function(t) {
            yt(), t.state && t.state.key && kt(t.state.key);
          });
      }
      function vt(t, e, n, r) {
        if (t.app) {
          var i = t.options.scrollBehavior;
          i &&
            t.app.$nextTick(function() {
              var a = gt(),
                o = i.call(t, e, n, r ? a : null);
              o &&
                ("function" === typeof o.then
                  ? o
                      .then(function(t) {
                        St(t, a);
                      })
                      .catch(function(t) {
                        0;
                      })
                  : St(o, a));
            });
        }
      }
      function yt() {
        var t = At();
        t && (dt[t] = { x: window.pageXOffset, y: window.pageYOffset });
      }
      function gt() {
        var t = At();
        if (t) return dt[t];
      }
      function bt(t, e) {
        var n = document.documentElement,
          r = n.getBoundingClientRect(),
          i = t.getBoundingClientRect();
        return { x: i.left - r.left - e.x, y: i.top - r.top - e.y };
      }
      function wt(t) {
        return Et(t.x) || Et(t.y);
      }
      function _t(t) {
        return {
          x: Et(t.x) ? t.x : window.pageXOffset,
          y: Et(t.y) ? t.y : window.pageYOffset
        };
      }
      function xt(t) {
        return { x: Et(t.x) ? t.x : 0, y: Et(t.y) ? t.y : 0 };
      }
      function Et(t) {
        return "number" === typeof t;
      }
      function St(t, e) {
        var n = "object" === typeof t;
        if (n && "string" === typeof t.selector) {
          var r = document.querySelector(t.selector);
          if (r) {
            var i = t.offset && "object" === typeof t.offset ? t.offset : {};
            (i = xt(i)), (e = bt(r, i));
          } else wt(t) && (e = _t(t));
        } else n && wt(t) && (e = _t(t));
        e && window.scrollTo(e.x, e.y);
      }
      var Nt =
          R &&
          (function() {
            var t = window.navigator.userAgent;
            return (
              ((-1 === t.indexOf("Android 2.") &&
                -1 === t.indexOf("Android 4.0")) ||
                -1 === t.indexOf("Mobile Safari") ||
                -1 !== t.indexOf("Chrome") ||
                -1 !== t.indexOf("Windows Phone")) &&
              (window.history && "pushState" in window.history)
            );
          })(),
        Ot =
          R && window.performance && window.performance.now
            ? window.performance
            : Date,
        It = Ct();
      function Ct() {
        return Ot.now().toFixed(3);
      }
      function At() {
        return It;
      }
      function kt(t) {
        It = t;
      }
      function Pt(t, e) {
        yt();
        var n = window.history;
        try {
          e
            ? n.replaceState({ key: It }, "", t)
            : ((It = Ct()), n.pushState({ key: It }, "", t));
        } catch (r) {
          window.location[e ? "replace" : "assign"](t);
        }
      }
      function Tt(t) {
        Pt(t, !0);
      }
      function Rt(t, e, n) {
        var r = function(i) {
          i >= t.length
            ? n()
            : t[i]
            ? e(t[i], function() {
                r(i + 1);
              })
            : r(i + 1);
        };
        r(0);
      }
      function Dt(t) {
        return function(e, n, r) {
          var a = !1,
            o = 0,
            s = null;
          Mt(t, function(t, e, n, u) {
            if ("function" === typeof t && void 0 === t.cid) {
              (a = !0), o++;
              var c,
                l = Ft(function(e) {
                  Bt(e) && (e = e.default),
                    (t.resolved = "function" === typeof e ? e : O.extend(e)),
                    (n.components[u] = e),
                    o--,
                    o <= 0 && r();
                }),
                f = Ft(function(t) {
                  var e = "Failed to resolve async component " + u + ": " + t;
                  s || ((s = i(t) ? t : new Error(e)), r(s));
                });
              try {
                c = t(l, f);
              } catch (p) {
                f(p);
              }
              if (c)
                if ("function" === typeof c.then) c.then(l, f);
                else {
                  var h = c.component;
                  h && "function" === typeof h.then && h.then(l, f);
                }
            }
          }),
            a || r();
        };
      }
      function Mt(t, e) {
        return jt(
          t.map(function(t) {
            return Object.keys(t.components).map(function(n) {
              return e(t.components[n], t.instances[n], t, n);
            });
          })
        );
      }
      function jt(t) {
        return Array.prototype.concat.apply([], t);
      }
      var Lt =
        "function" === typeof Symbol && "symbol" === typeof Symbol.toStringTag;
      function Bt(t) {
        return t.__esModule || (Lt && "Module" === t[Symbol.toStringTag]);
      }
      function Ft(t) {
        var e = !1;
        return function() {
          var n = [],
            r = arguments.length;
          while (r--) n[r] = arguments[r];
          if (!e) return (e = !0), t.apply(this, n);
        };
      }
      var zt = function(t, e) {
        (this.router = t),
          (this.base = Ut(e)),
          (this.current = b),
          (this.pending = null),
          (this.ready = !1),
          (this.readyCbs = []),
          (this.readyErrorCbs = []),
          (this.errorCbs = []);
      };
      function Ut(t) {
        if (!t)
          if (R) {
            var e = document.querySelector("base");
            (t = (e && e.getAttribute("href")) || "/"),
              (t = t.replace(/^https?:\/\/[^\/]+/, ""));
          } else t = "/";
        return "/" !== t.charAt(0) && (t = "/" + t), t.replace(/\/$/, "");
      }
      function Vt(t, e) {
        var n,
          r = Math.max(t.length, e.length);
        for (n = 0; n < r; n++) if (t[n] !== e[n]) break;
        return {
          updated: e.slice(0, n),
          activated: e.slice(n),
          deactivated: t.slice(n)
        };
      }
      function Wt(t, e, n, r) {
        var i = Mt(t, function(t, r, i, a) {
          var o = $t(t, e);
          if (o)
            return Array.isArray(o)
              ? o.map(function(t) {
                  return n(t, r, i, a);
                })
              : n(o, r, i, a);
        });
        return jt(r ? i.reverse() : i);
      }
      function $t(t, e) {
        return "function" !== typeof t && (t = O.extend(t)), t.options[e];
      }
      function qt(t) {
        return Wt(t, "beforeRouteLeave", Kt, !0);
      }
      function Ht(t) {
        return Wt(t, "beforeRouteUpdate", Kt);
      }
      function Kt(t, e) {
        if (e)
          return function() {
            return t.apply(e, arguments);
          };
      }
      function Gt(t, e, n) {
        return Wt(t, "beforeRouteEnter", function(t, r, i, a) {
          return Xt(t, i, a, e, n);
        });
      }
      function Xt(t, e, n, r, i) {
        return function(a, o, s) {
          return t(a, o, function(t) {
            s(t),
              "function" === typeof t &&
                r.push(function() {
                  Jt(t, e.instances, n, i);
                });
          });
        };
      }
      function Jt(t, e, n, r) {
        e[n] && !e[n]._isBeingDestroyed
          ? t(e[n])
          : r() &&
            setTimeout(function() {
              Jt(t, e, n, r);
            }, 16);
      }
      (zt.prototype.listen = function(t) {
        this.cb = t;
      }),
        (zt.prototype.onReady = function(t, e) {
          this.ready
            ? t()
            : (this.readyCbs.push(t), e && this.readyErrorCbs.push(e));
        }),
        (zt.prototype.onError = function(t) {
          this.errorCbs.push(t);
        }),
        (zt.prototype.transitionTo = function(t, e, n) {
          var r = this,
            i = this.router.match(t, this.current);
          this.confirmTransition(
            i,
            function() {
              r.updateRoute(i),
                e && e(i),
                r.ensureURL(),
                r.ready ||
                  ((r.ready = !0),
                  r.readyCbs.forEach(function(t) {
                    t(i);
                  }));
            },
            function(t) {
              n && n(t),
                t &&
                  !r.ready &&
                  ((r.ready = !0),
                  r.readyErrorCbs.forEach(function(e) {
                    e(t);
                  }));
            }
          );
        }),
        (zt.prototype.confirmTransition = function(t, e, n) {
          var a = this,
            o = this.current,
            s = function(t) {
              i(t) &&
                (a.errorCbs.length
                  ? a.errorCbs.forEach(function(e) {
                      e(t);
                    })
                  : (r(!1, "uncaught error during route navigation:"),
                    console.error(t))),
                n && n(t);
            };
          if (x(t, o) && t.matched.length === o.matched.length)
            return this.ensureURL(), s();
          var u = Vt(this.current.matched, t.matched),
            c = u.updated,
            l = u.deactivated,
            f = u.activated,
            h = [].concat(
              qt(l),
              this.router.beforeHooks,
              Ht(c),
              f.map(function(t) {
                return t.beforeEnter;
              }),
              Dt(f)
            );
          this.pending = t;
          var p = function(e, n) {
            if (a.pending !== t) return s();
            try {
              e(t, o, function(t) {
                !1 === t || i(t)
                  ? (a.ensureURL(!0), s(t))
                  : "string" === typeof t ||
                    ("object" === typeof t &&
                      ("string" === typeof t.path ||
                        "string" === typeof t.name))
                  ? (s(),
                    "object" === typeof t && t.replace
                      ? a.replace(t)
                      : a.push(t))
                  : n(t);
              });
            } catch (r) {
              s(r);
            }
          };
          Rt(h, p, function() {
            var n = [],
              r = function() {
                return a.current === t;
              },
              i = Gt(f, n, r),
              o = i.concat(a.router.resolveHooks);
            Rt(o, p, function() {
              if (a.pending !== t) return s();
              (a.pending = null),
                e(t),
                a.router.app &&
                  a.router.app.$nextTick(function() {
                    n.forEach(function(t) {
                      t();
                    });
                  });
            });
          });
        }),
        (zt.prototype.updateRoute = function(t) {
          var e = this.current;
          (this.current = t),
            this.cb && this.cb(t),
            this.router.afterHooks.forEach(function(n) {
              n && n(t, e);
            });
        });
      var Yt = (function(t) {
        function e(e, n) {
          var r = this;
          t.call(this, e, n);
          var i = e.options.scrollBehavior,
            a = Nt && i;
          a && mt();
          var o = Qt(this.base);
          window.addEventListener("popstate", function(t) {
            var n = r.current,
              i = Qt(r.base);
            (r.current === b && i === o) ||
              r.transitionTo(i, function(t) {
                a && vt(e, t, n, !0);
              });
          });
        }
        return (
          t && (e.__proto__ = t),
          (e.prototype = Object.create(t && t.prototype)),
          (e.prototype.constructor = e),
          (e.prototype.go = function(t) {
            window.history.go(t);
          }),
          (e.prototype.push = function(t, e, n) {
            var r = this,
              i = this,
              a = i.current;
            this.transitionTo(
              t,
              function(t) {
                Pt(j(r.base + t.fullPath)), vt(r.router, t, a, !1), e && e(t);
              },
              n
            );
          }),
          (e.prototype.replace = function(t, e, n) {
            var r = this,
              i = this,
              a = i.current;
            this.transitionTo(
              t,
              function(t) {
                Tt(j(r.base + t.fullPath)), vt(r.router, t, a, !1), e && e(t);
              },
              n
            );
          }),
          (e.prototype.ensureURL = function(t) {
            if (Qt(this.base) !== this.current.fullPath) {
              var e = j(this.base + this.current.fullPath);
              t ? Pt(e) : Tt(e);
            }
          }),
          (e.prototype.getCurrentLocation = function() {
            return Qt(this.base);
          }),
          e
        );
      })(zt);
      function Qt(t) {
        var e = decodeURI(window.location.pathname);
        return (
          t && 0 === e.indexOf(t) && (e = e.slice(t.length)),
          (e || "/") + window.location.search + window.location.hash
        );
      }
      var Zt = (function(t) {
        function e(e, n, r) {
          t.call(this, e, n), (r && te(this.base)) || ee();
        }
        return (
          t && (e.__proto__ = t),
          (e.prototype = Object.create(t && t.prototype)),
          (e.prototype.constructor = e),
          (e.prototype.setupListeners = function() {
            var t = this,
              e = this.router,
              n = e.options.scrollBehavior,
              r = Nt && n;
            r && mt(),
              window.addEventListener(
                Nt ? "popstate" : "hashchange",
                function() {
                  var e = t.current;
                  ee() &&
                    t.transitionTo(ne(), function(n) {
                      r && vt(t.router, n, e, !0), Nt || ae(n.fullPath);
                    });
                }
              );
          }),
          (e.prototype.push = function(t, e, n) {
            var r = this,
              i = this,
              a = i.current;
            this.transitionTo(
              t,
              function(t) {
                ie(t.fullPath), vt(r.router, t, a, !1), e && e(t);
              },
              n
            );
          }),
          (e.prototype.replace = function(t, e, n) {
            var r = this,
              i = this,
              a = i.current;
            this.transitionTo(
              t,
              function(t) {
                ae(t.fullPath), vt(r.router, t, a, !1), e && e(t);
              },
              n
            );
          }),
          (e.prototype.go = function(t) {
            window.history.go(t);
          }),
          (e.prototype.ensureURL = function(t) {
            var e = this.current.fullPath;
            ne() !== e && (t ? ie(e) : ae(e));
          }),
          (e.prototype.getCurrentLocation = function() {
            return ne();
          }),
          e
        );
      })(zt);
      function te(t) {
        var e = Qt(t);
        if (!/^\/#/.test(e))
          return window.location.replace(j(t + "/#" + e)), !0;
      }
      function ee() {
        var t = ne();
        return "/" === t.charAt(0) || (ae("/" + t), !1);
      }
      function ne() {
        var t = window.location.href,
          e = t.indexOf("#");
        if (e < 0) return "";
        t = t.slice(e + 1);
        var n = t.indexOf("?");
        if (n < 0) {
          var r = t.indexOf("#");
          t = r > -1 ? decodeURI(t.slice(0, r)) + t.slice(r) : decodeURI(t);
        } else n > -1 && (t = decodeURI(t.slice(0, n)) + t.slice(n));
        return t;
      }
      function re(t) {
        var e = window.location.href,
          n = e.indexOf("#"),
          r = n >= 0 ? e.slice(0, n) : e;
        return r + "#" + t;
      }
      function ie(t) {
        Nt ? Pt(re(t)) : (window.location.hash = t);
      }
      function ae(t) {
        Nt ? Tt(re(t)) : window.location.replace(re(t));
      }
      var oe = (function(t) {
          function e(e, n) {
            t.call(this, e, n), (this.stack = []), (this.index = -1);
          }
          return (
            t && (e.__proto__ = t),
            (e.prototype = Object.create(t && t.prototype)),
            (e.prototype.constructor = e),
            (e.prototype.push = function(t, e, n) {
              var r = this;
              this.transitionTo(
                t,
                function(t) {
                  (r.stack = r.stack.slice(0, r.index + 1).concat(t)),
                    r.index++,
                    e && e(t);
                },
                n
              );
            }),
            (e.prototype.replace = function(t, e, n) {
              var r = this;
              this.transitionTo(
                t,
                function(t) {
                  (r.stack = r.stack.slice(0, r.index).concat(t)), e && e(t);
                },
                n
              );
            }),
            (e.prototype.go = function(t) {
              var e = this,
                n = this.index + t;
              if (!(n < 0 || n >= this.stack.length)) {
                var r = this.stack[n];
                this.confirmTransition(r, function() {
                  (e.index = n), e.updateRoute(r);
                });
              }
            }),
            (e.prototype.getCurrentLocation = function() {
              var t = this.stack[this.stack.length - 1];
              return t ? t.fullPath : "/";
            }),
            (e.prototype.ensureURL = function() {}),
            e
          );
        })(zt),
        se = function(t) {
          void 0 === t && (t = {}),
            (this.app = null),
            (this.apps = []),
            (this.options = t),
            (this.beforeHooks = []),
            (this.resolveHooks = []),
            (this.afterHooks = []),
            (this.matcher = ft(t.routes || [], this));
          var e = t.mode || "hash";
          switch (
            ((this.fallback = "history" === e && !Nt && !1 !== t.fallback),
            this.fallback && (e = "hash"),
            R || (e = "abstract"),
            (this.mode = e),
            e)
          ) {
            case "history":
              this.history = new Yt(this, t.base);
              break;
            case "hash":
              this.history = new Zt(this, t.base, this.fallback);
              break;
            case "abstract":
              this.history = new oe(this, t.base);
              break;
            default:
              0;
          }
        },
        ue = { currentRoute: { configurable: !0 } };
      function ce(t, e) {
        return (
          t.push(e),
          function() {
            var n = t.indexOf(e);
            n > -1 && t.splice(n, 1);
          }
        );
      }
      function le(t, e, n) {
        var r = "hash" === n ? "#" + e : e;
        return t ? j(t + "/" + r) : r;
      }
      (se.prototype.match = function(t, e, n) {
        return this.matcher.match(t, e, n);
      }),
        (ue.currentRoute.get = function() {
          return this.history && this.history.current;
        }),
        (se.prototype.init = function(t) {
          var e = this;
          if (
            (this.apps.push(t),
            t.$once("hook:destroyed", function() {
              var n = e.apps.indexOf(t);
              n > -1 && e.apps.splice(n, 1),
                e.app === t && (e.app = e.apps[0] || null);
            }),
            !this.app)
          ) {
            this.app = t;
            var n = this.history;
            if (n instanceof Yt) n.transitionTo(n.getCurrentLocation());
            else if (n instanceof Zt) {
              var r = function() {
                n.setupListeners();
              };
              n.transitionTo(n.getCurrentLocation(), r, r);
            }
            n.listen(function(t) {
              e.apps.forEach(function(e) {
                e._route = t;
              });
            });
          }
        }),
        (se.prototype.beforeEach = function(t) {
          return ce(this.beforeHooks, t);
        }),
        (se.prototype.beforeResolve = function(t) {
          return ce(this.resolveHooks, t);
        }),
        (se.prototype.afterEach = function(t) {
          return ce(this.afterHooks, t);
        }),
        (se.prototype.onReady = function(t, e) {
          this.history.onReady(t, e);
        }),
        (se.prototype.onError = function(t) {
          this.history.onError(t);
        }),
        (se.prototype.push = function(t, e, n) {
          this.history.push(t, e, n);
        }),
        (se.prototype.replace = function(t, e, n) {
          this.history.replace(t, e, n);
        }),
        (se.prototype.go = function(t) {
          this.history.go(t);
        }),
        (se.prototype.back = function() {
          this.go(-1);
        }),
        (se.prototype.forward = function() {
          this.go(1);
        }),
        (se.prototype.getMatchedComponents = function(t) {
          var e = t
            ? t.matched
              ? t
              : this.resolve(t).route
            : this.currentRoute;
          return e
            ? [].concat.apply(
                [],
                e.matched.map(function(t) {
                  return Object.keys(t.components).map(function(e) {
                    return t.components[e];
                  });
                })
              )
            : [];
        }),
        (se.prototype.resolve = function(t, e, n) {
          e = e || this.history.current;
          var r = lt(t, e, n, this),
            i = this.match(r, e),
            a = i.redirectedFrom || i.fullPath,
            o = this.history.base,
            s = le(o, a, this.mode);
          return {
            location: r,
            route: i,
            href: s,
            normalizedTo: r,
            resolved: i
          };
        }),
        (se.prototype.addRoutes = function(t) {
          this.matcher.addRoutes(t),
            this.history.current !== b &&
              this.history.transitionTo(this.history.getCurrentLocation());
        }),
        Object.defineProperties(se.prototype, ue),
        (se.install = T),
        (se.version = "3.0.6"),
        R && window.Vue && window.Vue.use(se),
        (e["a"] = se);
    },
    "8c8a": function(t, e, n) {
      (function(e) {
        t.exports = function(t, n) {
          for (
            var r = Math.min(t.length, n.length), i = new e(r), a = 0;
            a < r;
            ++a
          )
            i[a] = t[a] ^ n[a];
          return i;
        };
      }.call(this, n("b639").Buffer));
    },
    "8df7": function(t, e, n) {
      var r = n("3fb5"),
        i = n("b639").Buffer,
        a = n("cfbd");
      function o(t) {
        a.call(this, t), (this.enc = "pem");
      }
      r(o, a),
        (t.exports = o),
        (o.prototype.decode = function(t, e) {
          for (
            var n = t.toString().split(/[\r\n]+/g),
              r = e.label.toUpperCase(),
              o = /^-----(BEGIN|END) ([^-]+)-----$/,
              s = -1,
              u = -1,
              c = 0;
            c < n.length;
            c++
          ) {
            var l = n[c].match(o);
            if (null !== l && l[2] === r) {
              if (-1 !== s) {
                if ("END" !== l[1]) break;
                u = c;
                break;
              }
              if ("BEGIN" !== l[1]) break;
              s = c;
            }
          }
          if (-1 === s || -1 === u)
            throw new Error("PEM section not found for: " + r);
          var f = n.slice(s + 1, u).join("");
          f.replace(/[^a-z0-9\+\/=]+/gi, "");
          var h = new i(f, "base64");
          return a.prototype.decode.call(this, h, e);
        });
    },
    "8e60": function(t, e, n) {
      t.exports = !n("294c")(function() {
        return (
          7 !=
          Object.defineProperty({}, "a", {
            get: function() {
              return 7;
            }
          }).a
        );
      });
    },
    "8f60": function(t, e, n) {
      "use strict";
      var r = n("a159"),
        i = n("aebd"),
        a = n("45f2"),
        o = {};
      n("35e8")(o, n("5168")("iterator"), function() {
        return this;
      }),
        (t.exports = function(t, e, n) {
          (t.prototype = r(o, { next: i(1, n) })), a(t, e + " Iterator");
        });
    },
    "8f9b": function(t, e) {
      (t.exports = e = window.fetch),
        (e.default = window.fetch.bind(window)),
        (e.Headers = window.Headers),
        (e.Request = window.Request),
        (e.Response = window.Response);
    },
    9093: function(t, e, n) {
      var r = n("ce10"),
        i = n("e11e").concat("length", "prototype");
      e.f =
        Object.getOwnPropertyNames ||
        function(t) {
          return r(t, i);
        };
    },
    9138: function(t, e, n) {
      t.exports = n("35e8");
    },
    9152: function(t, e) {
      (e.read = function(t, e, n, r, i) {
        var a,
          o,
          s = 8 * i - r - 1,
          u = (1 << s) - 1,
          c = u >> 1,
          l = -7,
          f = n ? i - 1 : 0,
          h = n ? -1 : 1,
          p = t[e + f];
        for (
          f += h, a = p & ((1 << -l) - 1), p >>= -l, l += s;
          l > 0;
          a = 256 * a + t[e + f], f += h, l -= 8
        );
        for (
          o = a & ((1 << -l) - 1), a >>= -l, l += r;
          l > 0;
          o = 256 * o + t[e + f], f += h, l -= 8
        );
        if (0 === a) a = 1 - c;
        else {
          if (a === u) return o ? NaN : (1 / 0) * (p ? -1 : 1);
          (o += Math.pow(2, r)), (a -= c);
        }
        return (p ? -1 : 1) * o * Math.pow(2, a - r);
      }),
        (e.write = function(t, e, n, r, i, a) {
          var o,
            s,
            u,
            c = 8 * a - i - 1,
            l = (1 << c) - 1,
            f = l >> 1,
            h = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
            p = r ? 0 : a - 1,
            d = r ? 1 : -1,
            m = e < 0 || (0 === e && 1 / e < 0) ? 1 : 0;
          for (
            e = Math.abs(e),
              isNaN(e) || e === 1 / 0
                ? ((s = isNaN(e) ? 1 : 0), (o = l))
                : ((o = Math.floor(Math.log(e) / Math.LN2)),
                  e * (u = Math.pow(2, -o)) < 1 && (o--, (u *= 2)),
                  (e += o + f >= 1 ? h / u : h * Math.pow(2, 1 - f)),
                  e * u >= 2 && (o++, (u /= 2)),
                  o + f >= l
                    ? ((s = 0), (o = l))
                    : o + f >= 1
                    ? ((s = (e * u - 1) * Math.pow(2, i)), (o += f))
                    : ((s = e * Math.pow(2, f - 1) * Math.pow(2, i)), (o = 0)));
            i >= 8;
            t[n + p] = 255 & s, p += d, s /= 256, i -= 8
          );
          for (
            o = (o << i) | s, c += i;
            c > 0;
            t[n + p] = 255 & o, p += d, o /= 256, c -= 8
          );
          t[n + p - d] |= 128 * m;
        });
    },
    "93e6": function(t, e, n) {
      "use strict";
      var r = n("8707").Buffer,
        i = n("d485").Transform,
        a = n("3fb5");
      function o(t, e) {
        if (!r.isBuffer(t) && "string" !== typeof t)
          throw new TypeError(e + " must be a string or a buffer");
      }
      function s(t) {
        i.call(this),
          (this._block = r.allocUnsafe(t)),
          (this._blockSize = t),
          (this._blockOffset = 0),
          (this._length = [0, 0, 0, 0]),
          (this._finalized = !1);
      }
      a(s, i),
        (s.prototype._transform = function(t, e, n) {
          var r = null;
          try {
            this.update(t, e);
          } catch (i) {
            r = i;
          }
          n(r);
        }),
        (s.prototype._flush = function(t) {
          var e = null;
          try {
            this.push(this.digest());
          } catch (n) {
            e = n;
          }
          t(e);
        }),
        (s.prototype.update = function(t, e) {
          if ((o(t, "Data"), this._finalized))
            throw new Error("Digest already called");
          r.isBuffer(t) || (t = r.from(t, e));
          var n = this._block,
            i = 0;
          while (this._blockOffset + t.length - i >= this._blockSize) {
            for (var a = this._blockOffset; a < this._blockSize; )
              n[a++] = t[i++];
            this._update(), (this._blockOffset = 0);
          }
          while (i < t.length) n[this._blockOffset++] = t[i++];
          for (var s = 0, u = 8 * t.length; u > 0; ++s)
            (this._length[s] += u),
              (u = (this._length[s] / 4294967296) | 0),
              u > 0 && (this._length[s] -= 4294967296 * u);
          return this;
        }),
        (s.prototype._update = function() {
          throw new Error("_update is not implemented");
        }),
        (s.prototype.digest = function(t) {
          if (this._finalized) throw new Error("Digest already called");
          this._finalized = !0;
          var e = this._digest();
          void 0 !== t && (e = e.toString(t)),
            this._block.fill(0),
            (this._blockOffset = 0);
          for (var n = 0; n < 4; ++n) this._length[n] = 0;
          return e;
        }),
        (s.prototype._digest = function() {
          throw new Error("_digest is not implemented");
        }),
        (t.exports = s);
    },
    "945d": function(t, e, n) {
      "use strict";
      var r = n("7d92"),
        i = n("3337"),
        a = i.utils,
        o = a.assert,
        s = a.parseBytes,
        u = n("380f"),
        c = n("44a3");
      function l(t) {
        if (
          (o("ed25519" === t, "only tested with ed25519 so far"),
          !(this instanceof l))
        )
          return new l(t);
        t = i.curves[t].curve;
        (this.curve = t),
          (this.g = t.g),
          this.g.precompute(t.n.bitLength() + 1),
          (this.pointClass = t.point().constructor),
          (this.encodingLength = Math.ceil(t.n.bitLength() / 8)),
          (this.hash = r.sha512);
      }
      (t.exports = l),
        (l.prototype.sign = function(t, e) {
          t = s(t);
          var n = this.keyFromSecret(e),
            r = this.hashInt(n.messagePrefix(), t),
            i = this.g.mul(r),
            a = this.encodePoint(i),
            o = this.hashInt(a, n.pubBytes(), t).mul(n.priv()),
            u = r.add(o).umod(this.curve.n);
          return this.makeSignature({ R: i, S: u, Rencoded: a });
        }),
        (l.prototype.verify = function(t, e, n) {
          (t = s(t)), (e = this.makeSignature(e));
          var r = this.keyFromPublic(n),
            i = this.hashInt(e.Rencoded(), r.pubBytes(), t),
            a = this.g.mul(e.S()),
            o = e.R().add(r.pub().mul(i));
          return o.eq(a);
        }),
        (l.prototype.hashInt = function() {
          for (var t = this.hash(), e = 0; e < arguments.length; e++)
            t.update(arguments[e]);
          return a.intFromLE(t.digest()).umod(this.curve.n);
        }),
        (l.prototype.keyFromPublic = function(t) {
          return u.fromPublic(this, t);
        }),
        (l.prototype.keyFromSecret = function(t) {
          return u.fromSecret(this, t);
        }),
        (l.prototype.makeSignature = function(t) {
          return t instanceof c ? t : new c(this, t);
        }),
        (l.prototype.encodePoint = function(t) {
          var e = t.getY().toArray("le", this.encodingLength);
          return (e[this.encodingLength - 1] |= t.getX().isOdd() ? 128 : 0), e;
        }),
        (l.prototype.decodePoint = function(t) {
          t = a.parseBytes(t);
          var e = t.length - 1,
            n = t.slice(0, e).concat(-129 & t[e]),
            r = 0 !== (128 & t[e]),
            i = a.intFromLE(n);
          return this.curve.pointFromY(i, r);
        }),
        (l.prototype.encodeInt = function(t) {
          return t.toArray("le", this.encodingLength);
        }),
        (l.prototype.decodeInt = function(t) {
          return a.intFromLE(t);
        }),
        (l.prototype.isPoint = function(t) {
          return t instanceof this.pointClass;
        });
    },
    "956a": function(t, e, n) {
      var r = n("1e3c"),
        i = n("fda6"),
        a = n("bac2"),
        o = n("0be8"),
        s = n("ae84");
      function u(t, e) {
        var n, r;
        if (((t = t.toLowerCase()), a[t])) (n = a[t].key), (r = a[t].iv);
        else {
          if (!o[t]) throw new TypeError("invalid suite type");
          (n = 8 * o[t].key), (r = o[t].iv);
        }
        var i = s(e, !1, n, r);
        return l(t, i.key, i.iv);
      }
      function c(t, e) {
        var n, r;
        if (((t = t.toLowerCase()), a[t])) (n = a[t].key), (r = a[t].iv);
        else {
          if (!o[t]) throw new TypeError("invalid suite type");
          (n = 8 * o[t].key), (r = o[t].iv);
        }
        var i = s(e, !1, n, r);
        return f(t, i.key, i.iv);
      }
      function l(t, e, n) {
        if (((t = t.toLowerCase()), a[t])) return i.createCipheriv(t, e, n);
        if (o[t]) return new r({ key: e, iv: n, mode: t });
        throw new TypeError("invalid suite type");
      }
      function f(t, e, n) {
        if (((t = t.toLowerCase()), a[t])) return i.createDecipheriv(t, e, n);
        if (o[t]) return new r({ key: e, iv: n, mode: t, decrypt: !0 });
        throw new TypeError("invalid suite type");
      }
      function h() {
        return Object.keys(o).concat(i.getCiphers());
      }
      (e.createCipher = e.Cipher = u),
        (e.createCipheriv = e.Cipheriv = l),
        (e.createDecipher = e.Decipher = c),
        (e.createDecipheriv = e.Decipheriv = f),
        (e.listCiphers = e.getCiphers = h);
    },
    "966d": function(t, e, n) {
      "use strict";
      (function(e) {
        function n(t, n, r, i) {
          if ("function" !== typeof t)
            throw new TypeError('"callback" argument must be a function');
          var a,
            o,
            s = arguments.length;
          switch (s) {
            case 0:
            case 1:
              return e.nextTick(t);
            case 2:
              return e.nextTick(function() {
                t.call(null, n);
              });
            case 3:
              return e.nextTick(function() {
                t.call(null, n, r);
              });
            case 4:
              return e.nextTick(function() {
                t.call(null, n, r, i);
              });
            default:
              (a = new Array(s - 1)), (o = 0);
              while (o < a.length) a[o++] = arguments[o];
              return e.nextTick(function() {
                t.apply(null, a);
              });
          }
        }
        !e.version ||
        0 === e.version.indexOf("v0.") ||
        (0 === e.version.indexOf("v1.") && 0 !== e.version.indexOf("v1.8."))
          ? (t.exports = { nextTick: n })
          : (t.exports = e);
      }.call(this, n("f28c")));
    },
    "96cf": function(t, e, n) {
      var r = (function(t) {
        "use strict";
        var e,
          n = Object.prototype,
          r = n.hasOwnProperty,
          i = "function" === typeof Symbol ? Symbol : {},
          a = i.iterator || "@@iterator",
          o = i.asyncIterator || "@@asyncIterator",
          s = i.toStringTag || "@@toStringTag";
        function u(t, e, n, r) {
          var i = e && e.prototype instanceof m ? e : m,
            a = Object.create(i.prototype),
            o = new C(r || []);
          return (a._invoke = S(t, n, o)), a;
        }
        function c(t, e, n) {
          try {
            return { type: "normal", arg: t.call(e, n) };
          } catch (r) {
            return { type: "throw", arg: r };
          }
        }
        t.wrap = u;
        var l = "suspendedStart",
          f = "suspendedYield",
          h = "executing",
          p = "completed",
          d = {};
        function m() {}
        function v() {}
        function y() {}
        var g = {};
        g[a] = function() {
          return this;
        };
        var b = Object.getPrototypeOf,
          w = b && b(b(A([])));
        w && w !== n && r.call(w, a) && (g = w);
        var _ = (y.prototype = m.prototype = Object.create(g));
        function x(t) {
          ["next", "throw", "return"].forEach(function(e) {
            t[e] = function(t) {
              return this._invoke(e, t);
            };
          });
        }
        function E(t) {
          function e(n, i, a, o) {
            var s = c(t[n], t, i);
            if ("throw" !== s.type) {
              var u = s.arg,
                l = u.value;
              return l && "object" === typeof l && r.call(l, "__await")
                ? Promise.resolve(l.__await).then(
                    function(t) {
                      e("next", t, a, o);
                    },
                    function(t) {
                      e("throw", t, a, o);
                    }
                  )
                : Promise.resolve(l).then(
                    function(t) {
                      (u.value = t), a(u);
                    },
                    function(t) {
                      return e("throw", t, a, o);
                    }
                  );
            }
            o(s.arg);
          }
          var n;
          function i(t, r) {
            function i() {
              return new Promise(function(n, i) {
                e(t, r, n, i);
              });
            }
            return (n = n ? n.then(i, i) : i());
          }
          this._invoke = i;
        }
        function S(t, e, n) {
          var r = l;
          return function(i, a) {
            if (r === h) throw new Error("Generator is already running");
            if (r === p) {
              if ("throw" === i) throw a;
              return k();
            }
            (n.method = i), (n.arg = a);
            while (1) {
              var o = n.delegate;
              if (o) {
                var s = N(o, n);
                if (s) {
                  if (s === d) continue;
                  return s;
                }
              }
              if ("next" === n.method) n.sent = n._sent = n.arg;
              else if ("throw" === n.method) {
                if (r === l) throw ((r = p), n.arg);
                n.dispatchException(n.arg);
              } else "return" === n.method && n.abrupt("return", n.arg);
              r = h;
              var u = c(t, e, n);
              if ("normal" === u.type) {
                if (((r = n.done ? p : f), u.arg === d)) continue;
                return { value: u.arg, done: n.done };
              }
              "throw" === u.type &&
                ((r = p), (n.method = "throw"), (n.arg = u.arg));
            }
          };
        }
        function N(t, n) {
          var r = t.iterator[n.method];
          if (r === e) {
            if (((n.delegate = null), "throw" === n.method)) {
              if (
                t.iterator["return"] &&
                ((n.method = "return"),
                (n.arg = e),
                N(t, n),
                "throw" === n.method)
              )
                return d;
              (n.method = "throw"),
                (n.arg = new TypeError(
                  "The iterator does not provide a 'throw' method"
                ));
            }
            return d;
          }
          var i = c(r, t.iterator, n.arg);
          if ("throw" === i.type)
            return (
              (n.method = "throw"), (n.arg = i.arg), (n.delegate = null), d
            );
          var a = i.arg;
          return a
            ? a.done
              ? ((n[t.resultName] = a.value),
                (n.next = t.nextLoc),
                "return" !== n.method && ((n.method = "next"), (n.arg = e)),
                (n.delegate = null),
                d)
              : a
            : ((n.method = "throw"),
              (n.arg = new TypeError("iterator result is not an object")),
              (n.delegate = null),
              d);
        }
        function O(t) {
          var e = { tryLoc: t[0] };
          1 in t && (e.catchLoc = t[1]),
            2 in t && ((e.finallyLoc = t[2]), (e.afterLoc = t[3])),
            this.tryEntries.push(e);
        }
        function I(t) {
          var e = t.completion || {};
          (e.type = "normal"), delete e.arg, (t.completion = e);
        }
        function C(t) {
          (this.tryEntries = [{ tryLoc: "root" }]),
            t.forEach(O, this),
            this.reset(!0);
        }
        function A(t) {
          if (t) {
            var n = t[a];
            if (n) return n.call(t);
            if ("function" === typeof t.next) return t;
            if (!isNaN(t.length)) {
              var i = -1,
                o = function n() {
                  while (++i < t.length)
                    if (r.call(t, i)) return (n.value = t[i]), (n.done = !1), n;
                  return (n.value = e), (n.done = !0), n;
                };
              return (o.next = o);
            }
          }
          return { next: k };
        }
        function k() {
          return { value: e, done: !0 };
        }
        return (
          (v.prototype = _.constructor = y),
          (y.constructor = v),
          (y[s] = v.displayName = "GeneratorFunction"),
          (t.isGeneratorFunction = function(t) {
            var e = "function" === typeof t && t.constructor;
            return (
              !!e &&
              (e === v || "GeneratorFunction" === (e.displayName || e.name))
            );
          }),
          (t.mark = function(t) {
            return (
              Object.setPrototypeOf
                ? Object.setPrototypeOf(t, y)
                : ((t.__proto__ = y), s in t || (t[s] = "GeneratorFunction")),
              (t.prototype = Object.create(_)),
              t
            );
          }),
          (t.awrap = function(t) {
            return { __await: t };
          }),
          x(E.prototype),
          (E.prototype[o] = function() {
            return this;
          }),
          (t.AsyncIterator = E),
          (t.async = function(e, n, r, i) {
            var a = new E(u(e, n, r, i));
            return t.isGeneratorFunction(n)
              ? a
              : a.next().then(function(t) {
                  return t.done ? t.value : a.next();
                });
          }),
          x(_),
          (_[s] = "Generator"),
          (_[a] = function() {
            return this;
          }),
          (_.toString = function() {
            return "[object Generator]";
          }),
          (t.keys = function(t) {
            var e = [];
            for (var n in t) e.push(n);
            return (
              e.reverse(),
              function n() {
                while (e.length) {
                  var r = e.pop();
                  if (r in t) return (n.value = r), (n.done = !1), n;
                }
                return (n.done = !0), n;
              }
            );
          }),
          (t.values = A),
          (C.prototype = {
            constructor: C,
            reset: function(t) {
              if (
                ((this.prev = 0),
                (this.next = 0),
                (this.sent = this._sent = e),
                (this.done = !1),
                (this.delegate = null),
                (this.method = "next"),
                (this.arg = e),
                this.tryEntries.forEach(I),
                !t)
              )
                for (var n in this)
                  "t" === n.charAt(0) &&
                    r.call(this, n) &&
                    !isNaN(+n.slice(1)) &&
                    (this[n] = e);
            },
            stop: function() {
              this.done = !0;
              var t = this.tryEntries[0],
                e = t.completion;
              if ("throw" === e.type) throw e.arg;
              return this.rval;
            },
            dispatchException: function(t) {
              if (this.done) throw t;
              var n = this;
              function i(r, i) {
                return (
                  (s.type = "throw"),
                  (s.arg = t),
                  (n.next = r),
                  i && ((n.method = "next"), (n.arg = e)),
                  !!i
                );
              }
              for (var a = this.tryEntries.length - 1; a >= 0; --a) {
                var o = this.tryEntries[a],
                  s = o.completion;
                if ("root" === o.tryLoc) return i("end");
                if (o.tryLoc <= this.prev) {
                  var u = r.call(o, "catchLoc"),
                    c = r.call(o, "finallyLoc");
                  if (u && c) {
                    if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
                    if (this.prev < o.finallyLoc) return i(o.finallyLoc);
                  } else if (u) {
                    if (this.prev < o.catchLoc) return i(o.catchLoc, !0);
                  } else {
                    if (!c)
                      throw new Error("try statement without catch or finally");
                    if (this.prev < o.finallyLoc) return i(o.finallyLoc);
                  }
                }
              }
            },
            abrupt: function(t, e) {
              for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                var i = this.tryEntries[n];
                if (
                  i.tryLoc <= this.prev &&
                  r.call(i, "finallyLoc") &&
                  this.prev < i.finallyLoc
                ) {
                  var a = i;
                  break;
                }
              }
              a &&
                ("break" === t || "continue" === t) &&
                a.tryLoc <= e &&
                e <= a.finallyLoc &&
                (a = null);
              var o = a ? a.completion : {};
              return (
                (o.type = t),
                (o.arg = e),
                a
                  ? ((this.method = "next"), (this.next = a.finallyLoc), d)
                  : this.complete(o)
              );
            },
            complete: function(t, e) {
              if ("throw" === t.type) throw t.arg;
              return (
                "break" === t.type || "continue" === t.type
                  ? (this.next = t.arg)
                  : "return" === t.type
                  ? ((this.rval = this.arg = t.arg),
                    (this.method = "return"),
                    (this.next = "end"))
                  : "normal" === t.type && e && (this.next = e),
                d
              );
            },
            finish: function(t) {
              for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                var n = this.tryEntries[e];
                if (n.finallyLoc === t)
                  return this.complete(n.completion, n.afterLoc), I(n), d;
              }
            },
            catch: function(t) {
              for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                var n = this.tryEntries[e];
                if (n.tryLoc === t) {
                  var r = n.completion;
                  if ("throw" === r.type) {
                    var i = r.arg;
                    I(n);
                  }
                  return i;
                }
              }
              throw new Error("illegal catch attempt");
            },
            delegateYield: function(t, n, r) {
              return (
                (this.delegate = { iterator: A(t), resultName: n, nextLoc: r }),
                "next" === this.method && (this.arg = e),
                d
              );
            }
          }),
          t
        );
      })(t.exports);
      try {
        regeneratorRuntime = r;
      } catch (i) {
        Function("r", "regeneratorRuntime = r")(r);
      }
    },
    "980c": function(t, e, n) {
      (function(e) {
        var r = n("399f"),
          i = n("3337").ec,
          a = n("2aee"),
          o = n("cd91");
        function s(t, n, i, o, s) {
          var l = a(i);
          if ("ec" === l.type) {
            if ("ecdsa" !== o && "ecdsa/rsa" !== o)
              throw new Error("wrong public key type");
            return u(t, n, l);
          }
          if ("dsa" === l.type) {
            if ("dsa" !== o) throw new Error("wrong public key type");
            return c(t, n, l);
          }
          if ("rsa" !== o && "ecdsa/rsa" !== o)
            throw new Error("wrong public key type");
          n = e.concat([s, n]);
          var f = l.modulus.byteLength(),
            h = [1],
            p = 0;
          while (n.length + h.length + 2 < f) h.push(255), p++;
          h.push(0);
          var d = -1;
          while (++d < n.length) h.push(n[d]);
          h = new e(h);
          var m = r.mont(l.modulus);
          (t = new r(t).toRed(m)),
            (t = t.redPow(new r(l.publicExponent))),
            (t = new e(t.fromRed().toArray()));
          var v = p < 8 ? 1 : 0;
          (f = Math.min(t.length, h.length)),
            t.length !== h.length && (v = 1),
            (d = -1);
          while (++d < f) v |= t[d] ^ h[d];
          return 0 === v;
        }
        function u(t, e, n) {
          var r = o[n.data.algorithm.curve.join(".")];
          if (!r)
            throw new Error(
              "unknown curve " + n.data.algorithm.curve.join(".")
            );
          var a = new i(r),
            s = n.data.subjectPrivateKey.data;
          return a.verify(e, t, s);
        }
        function c(t, e, n) {
          var i = n.data.p,
            o = n.data.q,
            s = n.data.g,
            u = n.data.pub_key,
            c = a.signature.decode(t, "der"),
            f = c.s,
            h = c.r;
          l(f, o), l(h, o);
          var p = r.mont(i),
            d = f.invm(o),
            m = s
              .toRed(p)
              .redPow(new r(e).mul(d).mod(o))
              .fromRed()
              .mul(
                u
                  .toRed(p)
                  .redPow(h.mul(d).mod(o))
                  .fromRed()
              )
              .mod(i)
              .mod(o);
          return 0 === m.cmp(h);
        }
        function l(t, e) {
          if (t.cmpn(0) <= 0) throw new Error("invalid sig");
          if (t.cmp(e) >= e) throw new Error("invalid sig");
        }
        t.exports = s;
      }.call(this, n("b639").Buffer));
    },
    "98e6": function(t, e, n) {
      "use strict";
      var r = n("3fb5"),
        i = n("f576"),
        a = n("b5ca"),
        o = n("69f2"),
        s = n("6430");
      function u(t) {
        s.call(this, "digest"), (this._hash = t);
      }
      r(u, s),
        (u.prototype._update = function(t) {
          this._hash.update(t);
        }),
        (u.prototype._final = function() {
          return this._hash.digest();
        }),
        (t.exports = function(t) {
          return (
            (t = t.toLowerCase()),
            "md5" === t
              ? new i()
              : "rmd160" === t || "ripemd160" === t
              ? new a()
              : new u(o(t))
          );
        });
    },
    "9b43": function(t, e, n) {
      var r = n("d8e8");
      t.exports = function(t, e, n) {
        if ((r(t), void 0 === e)) return t;
        switch (n) {
          case 1:
            return function(n) {
              return t.call(e, n);
            };
          case 2:
            return function(n, r) {
              return t.call(e, n, r);
            };
          case 3:
            return function(n, r, i) {
              return t.call(e, n, r, i);
            };
        }
        return function() {
          return t.apply(e, arguments);
        };
      };
    },
    "9c6c": function(t, e, n) {
      var r = n("2b4c")("unscopables"),
        i = Array.prototype;
      void 0 == i[r] && n("32e9")(i, r, {}),
        (t.exports = function(t) {
          i[r][t] = !0;
        });
    },
    "9c80": function(t, e) {
      t.exports = function(t) {
        try {
          return { e: !1, v: t() };
        } catch (e) {
          return { e: !0, v: e };
        }
      };
    },
    "9def": function(t, e, n) {
      var r = n("4588"),
        i = Math.min;
      t.exports = function(t) {
        return t > 0 ? i(r(t), 9007199254740991) : 0;
      };
    },
    "9e1e": function(t, e, n) {
      t.exports = !n("79e5")(function() {
        return (
          7 !=
          Object.defineProperty({}, "a", {
            get: function() {
              return 7;
            }
          }).a
        );
      });
    },
    "9f9d": function(t, e, n) {
      (function(e) {
        var n;
        if (e.browser) n = "utf-8";
        else {
          var r = parseInt(e.version.split(".")[0].slice(1), 10);
          n = r >= 6 ? "utf-8" : "binary";
        }
        t.exports = n;
      }.call(this, n("f28c")));
    },
    a099: function(t, e, n) {
      (e.pbkdf2 = n("206d")), (e.pbkdf2Sync = n("e07b"));
    },
    a159: function(t, e, n) {
      var r = n("e4ae"),
        i = n("7e90"),
        a = n("1691"),
        o = n("5559")("IE_PROTO"),
        s = function() {},
        u = "prototype",
        c = function() {
          var t,
            e = n("1ec9")("iframe"),
            r = a.length,
            i = "<",
            o = ">";
          (e.style.display = "none"),
            n("32fc").appendChild(e),
            (e.src = "javascript:"),
            (t = e.contentWindow.document),
            t.open(),
            t.write(i + "script" + o + "document.F=Object" + i + "/script" + o),
            t.close(),
            (c = t.F);
          while (r--) delete c[u][a[r]];
          return c();
        };
      t.exports =
        Object.create ||
        function(t, e) {
          var n;
          return (
            null !== t
              ? ((s[u] = r(t)), (n = new s()), (s[u] = null), (n[o] = t))
              : (n = c()),
            void 0 === e ? n : i(n, e)
          );
        };
    },
    a22a: function(t, e, n) {
      var r = n("d864"),
        i = n("b0dc"),
        a = n("3702"),
        o = n("e4ae"),
        s = n("b447"),
        u = n("7cd6"),
        c = {},
        l = {};
      e = t.exports = function(t, e, n, f, h) {
        var p,
          d,
          m,
          v,
          y = h
            ? function() {
                return t;
              }
            : u(t),
          g = r(n, f, e ? 2 : 1),
          b = 0;
        if ("function" != typeof y) throw TypeError(t + " is not iterable!");
        if (a(y)) {
          for (p = s(t.length); p > b; b++)
            if (
              ((v = e ? g(o((d = t[b]))[0], d[1]) : g(t[b])),
              v === c || v === l)
            )
              return v;
        } else
          for (m = y.call(t); !(d = m.next()).done; )
            if (((v = i(m, g, d.value, e)), v === c || v === l)) return v;
      };
      (e.BREAK = c), (e.RETURN = l);
    },
    a255: function(t, e, n) {
      var r = n("3fb5"),
        i = n("b672"),
        a = n("8707").Buffer,
        o = [
          1116352408,
          1899447441,
          3049323471,
          3921009573,
          961987163,
          1508970993,
          2453635748,
          2870763221,
          3624381080,
          310598401,
          607225278,
          1426881987,
          1925078388,
          2162078206,
          2614888103,
          3248222580,
          3835390401,
          4022224774,
          264347078,
          604807628,
          770255983,
          1249150122,
          1555081692,
          1996064986,
          2554220882,
          2821834349,
          2952996808,
          3210313671,
          3336571891,
          3584528711,
          113926993,
          338241895,
          666307205,
          773529912,
          1294757372,
          1396182291,
          1695183700,
          1986661051,
          2177026350,
          2456956037,
          2730485921,
          2820302411,
          3259730800,
          3345764771,
          3516065817,
          3600352804,
          4094571909,
          275423344,
          430227734,
          506948616,
          659060556,
          883997877,
          958139571,
          1322822218,
          1537002063,
          1747873779,
          1955562222,
          2024104815,
          2227730452,
          2361852424,
          2428436474,
          2756734187,
          3204031479,
          3329325298
        ],
        s = new Array(64);
      function u() {
        this.init(), (this._w = s), i.call(this, 64, 56);
      }
      function c(t, e, n) {
        return n ^ (t & (e ^ n));
      }
      function l(t, e, n) {
        return (t & e) | (n & (t | e));
      }
      function f(t) {
        return (
          ((t >>> 2) | (t << 30)) ^
          ((t >>> 13) | (t << 19)) ^
          ((t >>> 22) | (t << 10))
        );
      }
      function h(t) {
        return (
          ((t >>> 6) | (t << 26)) ^
          ((t >>> 11) | (t << 21)) ^
          ((t >>> 25) | (t << 7))
        );
      }
      function p(t) {
        return ((t >>> 7) | (t << 25)) ^ ((t >>> 18) | (t << 14)) ^ (t >>> 3);
      }
      function d(t) {
        return ((t >>> 17) | (t << 15)) ^ ((t >>> 19) | (t << 13)) ^ (t >>> 10);
      }
      r(u, i),
        (u.prototype.init = function() {
          return (
            (this._a = 1779033703),
            (this._b = 3144134277),
            (this._c = 1013904242),
            (this._d = 2773480762),
            (this._e = 1359893119),
            (this._f = 2600822924),
            (this._g = 528734635),
            (this._h = 1541459225),
            this
          );
        }),
        (u.prototype._update = function(t) {
          for (
            var e = this._w,
              n = 0 | this._a,
              r = 0 | this._b,
              i = 0 | this._c,
              a = 0 | this._d,
              s = 0 | this._e,
              u = 0 | this._f,
              m = 0 | this._g,
              v = 0 | this._h,
              y = 0;
            y < 16;
            ++y
          )
            e[y] = t.readInt32BE(4 * y);
          for (; y < 64; ++y)
            e[y] = (d(e[y - 2]) + e[y - 7] + p(e[y - 15]) + e[y - 16]) | 0;
          for (var g = 0; g < 64; ++g) {
            var b = (v + h(s) + c(s, u, m) + o[g] + e[g]) | 0,
              w = (f(n) + l(n, r, i)) | 0;
            (v = m),
              (m = u),
              (u = s),
              (s = (a + b) | 0),
              (a = i),
              (i = r),
              (r = n),
              (n = (b + w) | 0);
          }
          (this._a = (n + this._a) | 0),
            (this._b = (r + this._b) | 0),
            (this._c = (i + this._c) | 0),
            (this._d = (a + this._d) | 0),
            (this._e = (s + this._e) | 0),
            (this._f = (u + this._f) | 0),
            (this._g = (m + this._g) | 0),
            (this._h = (v + this._h) | 0);
        }),
        (u.prototype._hash = function() {
          var t = a.allocUnsafe(32);
          return (
            t.writeInt32BE(this._a, 0),
            t.writeInt32BE(this._b, 4),
            t.writeInt32BE(this._c, 8),
            t.writeInt32BE(this._d, 12),
            t.writeInt32BE(this._e, 16),
            t.writeInt32BE(this._f, 20),
            t.writeInt32BE(this._g, 24),
            t.writeInt32BE(this._h, 28),
            t
          );
        }),
        (t.exports = u);
    },
    a25f: function(t, e, n) {
      var r = n("7726"),
        i = r.navigator;
      t.exports = (i && i.userAgent) || "";
    },
    a5b8: function(t, e, n) {
      "use strict";
      var r = n("d8e8");
      function i(t) {
        var e, n;
        (this.promise = new t(function(t, r) {
          if (void 0 !== e || void 0 !== n)
            throw TypeError("Bad Promise constructor");
          (e = t), (n = r);
        })),
          (this.resolve = r(e)),
          (this.reject = r(n));
      }
      t.exports.f = function(t) {
        return new i(t);
      };
    },
    a958: function(t, e, n) {
      (function(e) {
        var r = n("399f"),
          i = n("11dc");
        function a(t) {
          var e = s(t),
            n = e
              .toRed(r.mont(t.modulus))
              .redPow(new r(t.publicExponent))
              .fromRed();
          return { blinder: n, unblinder: e.invm(t.modulus) };
        }
        function o(t, n) {
          var i = a(n),
            o = n.modulus.byteLength(),
            s = (r.mont(n.modulus), new r(t).mul(i.blinder).umod(n.modulus)),
            u = s.toRed(r.mont(n.prime1)),
            c = s.toRed(r.mont(n.prime2)),
            l = n.coefficient,
            f = n.prime1,
            h = n.prime2,
            p = u.redPow(n.exponent1),
            d = c.redPow(n.exponent2);
          (p = p.fromRed()), (d = d.fromRed());
          var m = p
            .isub(d)
            .imul(l)
            .umod(f);
          return (
            m.imul(h),
            d.iadd(m),
            new e(
              d
                .imul(i.unblinder)
                .umod(n.modulus)
                .toArray(!1, o)
            )
          );
        }
        function s(t) {
          var e = t.modulus.byteLength(),
            n = new r(i(e));
          while (
            n.cmp(t.modulus) >= 0 ||
            !n.umod(t.prime1) ||
            !n.umod(t.prime2)
          )
            n = new r(i(e));
          return n;
        }
        (t.exports = o), (o.getr = s);
      }.call(this, n("b639").Buffer));
    },
    aa56: function(t, e, n) {
      "use strict";
      var r = n("c3c0"),
        i = r.rotr32;
      function a(t, e, n, r) {
        return 0 === t
          ? o(e, n, r)
          : 1 === t || 3 === t
          ? u(e, n, r)
          : 2 === t
          ? s(e, n, r)
          : void 0;
      }
      function o(t, e, n) {
        return (t & e) ^ (~t & n);
      }
      function s(t, e, n) {
        return (t & e) ^ (t & n) ^ (e & n);
      }
      function u(t, e, n) {
        return t ^ e ^ n;
      }
      function c(t) {
        return i(t, 2) ^ i(t, 13) ^ i(t, 22);
      }
      function l(t) {
        return i(t, 6) ^ i(t, 11) ^ i(t, 25);
      }
      function f(t) {
        return i(t, 7) ^ i(t, 18) ^ (t >>> 3);
      }
      function h(t) {
        return i(t, 17) ^ i(t, 19) ^ (t >>> 10);
      }
      (e.ft_1 = a),
        (e.ch32 = o),
        (e.maj32 = s),
        (e.p32 = u),
        (e.s0_256 = c),
        (e.s1_256 = l),
        (e.g0_256 = f),
        (e.g1_256 = h);
    },
    aae3: function(t, e, n) {
      var r = n("d3f4"),
        i = n("2d95"),
        a = n("2b4c")("match");
      t.exports = function(t) {
        var e;
        return r(t) && (void 0 !== (e = t[a]) ? !!e : "RegExp" == i(t));
      };
    },
    aba2: function(t, e, n) {
      var r = n("e53d"),
        i = n("4178").set,
        a = r.MutationObserver || r.WebKitMutationObserver,
        o = r.process,
        s = r.Promise,
        u = "process" == n("6b4c")(o);
      t.exports = function() {
        var t,
          e,
          n,
          c = function() {
            var r, i;
            u && (r = o.domain) && r.exit();
            while (t) {
              (i = t.fn), (t = t.next);
              try {
                i();
              } catch (a) {
                throw (t ? n() : (e = void 0), a);
              }
            }
            (e = void 0), r && r.enter();
          };
        if (u)
          n = function() {
            o.nextTick(c);
          };
        else if (!a || (r.navigator && r.navigator.standalone))
          if (s && s.resolve) {
            var l = s.resolve(void 0);
            n = function() {
              l.then(c);
            };
          } else
            n = function() {
              i.call(r, c);
            };
        else {
          var f = !0,
            h = document.createTextNode("");
          new a(c).observe(h, { characterData: !0 }),
            (n = function() {
              h.data = f = !f;
            });
        }
        return function(r) {
          var i = { fn: r, next: void 0 };
          e && (e.next = i), t || ((t = i), n()), (e = i);
        };
      };
    },
    ac4d: function(t, e, n) {
      n("3a72")("asyncIterator");
    },
    ac6a: function(t, e, n) {
      for (
        var r = n("cadf"),
          i = n("0d58"),
          a = n("2aba"),
          o = n("7726"),
          s = n("32e9"),
          u = n("84f2"),
          c = n("2b4c"),
          l = c("iterator"),
          f = c("toStringTag"),
          h = u.Array,
          p = {
            CSSRuleList: !0,
            CSSStyleDeclaration: !1,
            CSSValueList: !1,
            ClientRectList: !1,
            DOMRectList: !1,
            DOMStringList: !1,
            DOMTokenList: !0,
            DataTransferItemList: !1,
            FileList: !1,
            HTMLAllCollection: !1,
            HTMLCollection: !1,
            HTMLFormElement: !1,
            HTMLSelectElement: !1,
            MediaList: !0,
            MimeTypeArray: !1,
            NamedNodeMap: !1,
            NodeList: !0,
            PaintRequestList: !1,
            Plugin: !1,
            PluginArray: !1,
            SVGLengthList: !1,
            SVGNumberList: !1,
            SVGPathSegList: !1,
            SVGPointList: !1,
            SVGStringList: !1,
            SVGTransformList: !1,
            SourceBufferList: !1,
            StyleSheetList: !0,
            TextTrackCueList: !1,
            TextTrackList: !1,
            TouchList: !1
          },
          d = i(p),
          m = 0;
        m < d.length;
        m++
      ) {
        var v,
          y = d[m],
          g = p[y],
          b = o[y],
          w = b && b.prototype;
        if (w && (w[l] || s(w, l, h), w[f] || s(w, f, y), (u[y] = h), g))
          for (v in r) w[v] || a(w, v, r[v], !0);
      }
    },
    ad25: function(t, e, n) {
      var r = n("2aee"),
        i = n("11dc"),
        a = n("98e6"),
        o = n("f460"),
        s = n("83d5"),
        u = n("399f"),
        c = n("5291"),
        l = n("a958"),
        f = n("8707").Buffer;
      function h(t, e) {
        var n = t.modulus.byteLength(),
          r = e.length,
          c = a("sha1")
            .update(f.alloc(0))
            .digest(),
          l = c.length,
          h = 2 * l;
        if (r > n - h - 2) throw new Error("message too long");
        var p = f.alloc(n - r - h - 2),
          d = n - l - 1,
          m = i(l),
          v = s(f.concat([c, p, f.alloc(1, 1), e], d), o(m, d)),
          y = s(m, o(v, l));
        return new u(f.concat([f.alloc(1), y, v], n));
      }
      function p(t, e, n) {
        var r,
          i = e.length,
          a = t.modulus.byteLength();
        if (i > a - 11) throw new Error("message too long");
        return (
          (r = n ? f.alloc(a - i - 3, 255) : d(a - i - 3)),
          new u(f.concat([f.from([0, n ? 1 : 2]), r, f.alloc(1), e], a))
        );
      }
      function d(t) {
        var e,
          n = f.allocUnsafe(t),
          r = 0,
          a = i(2 * t),
          o = 0;
        while (r < t)
          o === a.length && ((a = i(2 * t)), (o = 0)),
            (e = a[o++]),
            e && (n[r++] = e);
        return n;
      }
      t.exports = function(t, e, n) {
        var i;
        i = t.padding ? t.padding : n ? 1 : 4;
        var a,
          o = r(t);
        if (4 === i) a = h(o, e);
        else if (1 === i) a = p(o, e, n);
        else {
          if (3 !== i) throw new Error("unknown padding");
          if (((a = new u(e)), a.cmp(o.modulus) >= 0))
            throw new Error("data too long for modulus");
        }
        return n ? l(a, o) : c(a, o);
      };
    },
    ad71: function(t, e, n) {
      "use strict";
      (function(e, r) {
        var i = n("966d");
        t.exports = x;
        var a,
          o = n("e3db");
        x.ReadableState = _;
        n("faa1").EventEmitter;
        var s = function(t, e) {
            return t.listeners(e).length;
          },
          u = n("429b"),
          c = n("8707").Buffer,
          l = e.Uint8Array || function() {};
        function f(t) {
          return c.from(t);
        }
        function h(t) {
          return c.isBuffer(t) || t instanceof l;
        }
        var p = n("3a7c");
        p.inherits = n("3fb5");
        var d = n(1),
          m = void 0;
        m = d && d.debuglog ? d.debuglog("stream") : function() {};
        var v,
          y = n("5e1a"),
          g = n("4681");
        p.inherits(x, u);
        var b = ["error", "close", "destroy", "pause", "resume"];
        function w(t, e, n) {
          if ("function" === typeof t.prependListener)
            return t.prependListener(e, n);
          t._events && t._events[e]
            ? o(t._events[e])
              ? t._events[e].unshift(n)
              : (t._events[e] = [n, t._events[e]])
            : t.on(e, n);
        }
        function _(t, e) {
          (a = a || n("b19a")), (t = t || {});
          var r = e instanceof a;
          (this.objectMode = !!t.objectMode),
            r && (this.objectMode = this.objectMode || !!t.readableObjectMode);
          var i = t.highWaterMark,
            o = t.readableHighWaterMark,
            s = this.objectMode ? 16 : 16384;
          (this.highWaterMark = i || 0 === i ? i : r && (o || 0 === o) ? o : s),
            (this.highWaterMark = Math.floor(this.highWaterMark)),
            (this.buffer = new y()),
            (this.length = 0),
            (this.pipes = null),
            (this.pipesCount = 0),
            (this.flowing = null),
            (this.ended = !1),
            (this.endEmitted = !1),
            (this.reading = !1),
            (this.sync = !0),
            (this.needReadable = !1),
            (this.emittedReadable = !1),
            (this.readableListening = !1),
            (this.resumeScheduled = !1),
            (this.destroyed = !1),
            (this.defaultEncoding = t.defaultEncoding || "utf8"),
            (this.awaitDrain = 0),
            (this.readingMore = !1),
            (this.decoder = null),
            (this.encoding = null),
            t.encoding &&
              (v || (v = n("7d72").StringDecoder),
              (this.decoder = new v(t.encoding)),
              (this.encoding = t.encoding));
        }
        function x(t) {
          if (((a = a || n("b19a")), !(this instanceof x))) return new x(t);
          (this._readableState = new _(t, this)),
            (this.readable = !0),
            t &&
              ("function" === typeof t.read && (this._read = t.read),
              "function" === typeof t.destroy && (this._destroy = t.destroy)),
            u.call(this);
        }
        function E(t, e, n, r, i) {
          var a,
            o = t._readableState;
          null === e
            ? ((o.reading = !1), k(t, o))
            : (i || (a = N(o, e)),
              a
                ? t.emit("error", a)
                : o.objectMode || (e && e.length > 0)
                ? ("string" === typeof e ||
                    o.objectMode ||
                    Object.getPrototypeOf(e) === c.prototype ||
                    (e = f(e)),
                  r
                    ? o.endEmitted
                      ? t.emit(
                          "error",
                          new Error("stream.unshift() after end event")
                        )
                      : S(t, o, e, !0)
                    : o.ended
                    ? t.emit("error", new Error("stream.push() after EOF"))
                    : ((o.reading = !1),
                      o.decoder && !n
                        ? ((e = o.decoder.write(e)),
                          o.objectMode || 0 !== e.length
                            ? S(t, o, e, !1)
                            : R(t, o))
                        : S(t, o, e, !1)))
                : r || (o.reading = !1));
          return O(o);
        }
        function S(t, e, n, r) {
          e.flowing && 0 === e.length && !e.sync
            ? (t.emit("data", n), t.read(0))
            : ((e.length += e.objectMode ? 1 : n.length),
              r ? e.buffer.unshift(n) : e.buffer.push(n),
              e.needReadable && P(t)),
            R(t, e);
        }
        function N(t, e) {
          var n;
          return (
            h(e) ||
              "string" === typeof e ||
              void 0 === e ||
              t.objectMode ||
              (n = new TypeError("Invalid non-string/buffer chunk")),
            n
          );
        }
        function O(t) {
          return (
            !t.ended &&
            (t.needReadable || t.length < t.highWaterMark || 0 === t.length)
          );
        }
        Object.defineProperty(x.prototype, "destroyed", {
          get: function() {
            return (
              void 0 !== this._readableState && this._readableState.destroyed
            );
          },
          set: function(t) {
            this._readableState && (this._readableState.destroyed = t);
          }
        }),
          (x.prototype.destroy = g.destroy),
          (x.prototype._undestroy = g.undestroy),
          (x.prototype._destroy = function(t, e) {
            this.push(null), e(t);
          }),
          (x.prototype.push = function(t, e) {
            var n,
              r = this._readableState;
            return (
              r.objectMode
                ? (n = !0)
                : "string" === typeof t &&
                  ((e = e || r.defaultEncoding),
                  e !== r.encoding && ((t = c.from(t, e)), (e = "")),
                  (n = !0)),
              E(this, t, e, !1, n)
            );
          }),
          (x.prototype.unshift = function(t) {
            return E(this, t, null, !0, !1);
          }),
          (x.prototype.isPaused = function() {
            return !1 === this._readableState.flowing;
          }),
          (x.prototype.setEncoding = function(t) {
            return (
              v || (v = n("7d72").StringDecoder),
              (this._readableState.decoder = new v(t)),
              (this._readableState.encoding = t),
              this
            );
          });
        var I = 8388608;
        function C(t) {
          return (
            t >= I
              ? (t = I)
              : (t--,
                (t |= t >>> 1),
                (t |= t >>> 2),
                (t |= t >>> 4),
                (t |= t >>> 8),
                (t |= t >>> 16),
                t++),
            t
          );
        }
        function A(t, e) {
          return t <= 0 || (0 === e.length && e.ended)
            ? 0
            : e.objectMode
            ? 1
            : t !== t
            ? e.flowing && e.length
              ? e.buffer.head.data.length
              : e.length
            : (t > e.highWaterMark && (e.highWaterMark = C(t)),
              t <= e.length
                ? t
                : e.ended
                ? e.length
                : ((e.needReadable = !0), 0));
        }
        function k(t, e) {
          if (!e.ended) {
            if (e.decoder) {
              var n = e.decoder.end();
              n &&
                n.length &&
                (e.buffer.push(n), (e.length += e.objectMode ? 1 : n.length));
            }
            (e.ended = !0), P(t);
          }
        }
        function P(t) {
          var e = t._readableState;
          (e.needReadable = !1),
            e.emittedReadable ||
              (m("emitReadable", e.flowing),
              (e.emittedReadable = !0),
              e.sync ? i.nextTick(T, t) : T(t));
        }
        function T(t) {
          m("emit readable"), t.emit("readable"), F(t);
        }
        function R(t, e) {
          e.readingMore || ((e.readingMore = !0), i.nextTick(D, t, e));
        }
        function D(t, e) {
          var n = e.length;
          while (
            !e.reading &&
            !e.flowing &&
            !e.ended &&
            e.length < e.highWaterMark
          ) {
            if ((m("maybeReadMore read 0"), t.read(0), n === e.length)) break;
            n = e.length;
          }
          e.readingMore = !1;
        }
        function M(t) {
          return function() {
            var e = t._readableState;
            m("pipeOnDrain", e.awaitDrain),
              e.awaitDrain && e.awaitDrain--,
              0 === e.awaitDrain && s(t, "data") && ((e.flowing = !0), F(t));
          };
        }
        function j(t) {
          m("readable nexttick read 0"), t.read(0);
        }
        function L(t, e) {
          e.resumeScheduled || ((e.resumeScheduled = !0), i.nextTick(B, t, e));
        }
        function B(t, e) {
          e.reading || (m("resume read 0"), t.read(0)),
            (e.resumeScheduled = !1),
            (e.awaitDrain = 0),
            t.emit("resume"),
            F(t),
            e.flowing && !e.reading && t.read(0);
        }
        function F(t) {
          var e = t._readableState;
          m("flow", e.flowing);
          while (e.flowing && null !== t.read());
        }
        function z(t, e) {
          return 0 === e.length
            ? null
            : (e.objectMode
                ? (n = e.buffer.shift())
                : !t || t >= e.length
                ? ((n = e.decoder
                    ? e.buffer.join("")
                    : 1 === e.buffer.length
                    ? e.buffer.head.data
                    : e.buffer.concat(e.length)),
                  e.buffer.clear())
                : (n = U(t, e.buffer, e.decoder)),
              n);
          var n;
        }
        function U(t, e, n) {
          var r;
          return (
            t < e.head.data.length
              ? ((r = e.head.data.slice(0, t)),
                (e.head.data = e.head.data.slice(t)))
              : (r =
                  t === e.head.data.length ? e.shift() : n ? V(t, e) : W(t, e)),
            r
          );
        }
        function V(t, e) {
          var n = e.head,
            r = 1,
            i = n.data;
          t -= i.length;
          while ((n = n.next)) {
            var a = n.data,
              o = t > a.length ? a.length : t;
            if (
              (o === a.length ? (i += a) : (i += a.slice(0, t)),
              (t -= o),
              0 === t)
            ) {
              o === a.length
                ? (++r, n.next ? (e.head = n.next) : (e.head = e.tail = null))
                : ((e.head = n), (n.data = a.slice(o)));
              break;
            }
            ++r;
          }
          return (e.length -= r), i;
        }
        function W(t, e) {
          var n = c.allocUnsafe(t),
            r = e.head,
            i = 1;
          r.data.copy(n), (t -= r.data.length);
          while ((r = r.next)) {
            var a = r.data,
              o = t > a.length ? a.length : t;
            if ((a.copy(n, n.length - t, 0, o), (t -= o), 0 === t)) {
              o === a.length
                ? (++i, r.next ? (e.head = r.next) : (e.head = e.tail = null))
                : ((e.head = r), (r.data = a.slice(o)));
              break;
            }
            ++i;
          }
          return (e.length -= i), n;
        }
        function $(t) {
          var e = t._readableState;
          if (e.length > 0)
            throw new Error('"endReadable()" called on non-empty stream');
          e.endEmitted || ((e.ended = !0), i.nextTick(q, e, t));
        }
        function q(t, e) {
          t.endEmitted ||
            0 !== t.length ||
            ((t.endEmitted = !0), (e.readable = !1), e.emit("end"));
        }
        function H(t, e) {
          for (var n = 0, r = t.length; n < r; n++) if (t[n] === e) return n;
          return -1;
        }
        (x.prototype.read = function(t) {
          m("read", t), (t = parseInt(t, 10));
          var e = this._readableState,
            n = t;
          if (
            (0 !== t && (e.emittedReadable = !1),
            0 === t &&
              e.needReadable &&
              (e.length >= e.highWaterMark || e.ended))
          )
            return (
              m("read: emitReadable", e.length, e.ended),
              0 === e.length && e.ended ? $(this) : P(this),
              null
            );
          if (((t = A(t, e)), 0 === t && e.ended))
            return 0 === e.length && $(this), null;
          var r,
            i = e.needReadable;
          return (
            m("need readable", i),
            (0 === e.length || e.length - t < e.highWaterMark) &&
              ((i = !0), m("length less than watermark", i)),
            e.ended || e.reading
              ? ((i = !1), m("reading or ended", i))
              : i &&
                (m("do read"),
                (e.reading = !0),
                (e.sync = !0),
                0 === e.length && (e.needReadable = !0),
                this._read(e.highWaterMark),
                (e.sync = !1),
                e.reading || (t = A(n, e))),
            (r = t > 0 ? z(t, e) : null),
            null === r ? ((e.needReadable = !0), (t = 0)) : (e.length -= t),
            0 === e.length &&
              (e.ended || (e.needReadable = !0), n !== t && e.ended && $(this)),
            null !== r && this.emit("data", r),
            r
          );
        }),
          (x.prototype._read = function(t) {
            this.emit("error", new Error("_read() is not implemented"));
          }),
          (x.prototype.pipe = function(t, e) {
            var n = this,
              a = this._readableState;
            switch (a.pipesCount) {
              case 0:
                a.pipes = t;
                break;
              case 1:
                a.pipes = [a.pipes, t];
                break;
              default:
                a.pipes.push(t);
                break;
            }
            (a.pipesCount += 1), m("pipe count=%d opts=%j", a.pipesCount, e);
            var o = (!e || !1 !== e.end) && t !== r.stdout && t !== r.stderr,
              u = o ? l : _;
            function c(t, e) {
              m("onunpipe"),
                t === n &&
                  e &&
                  !1 === e.hasUnpiped &&
                  ((e.hasUnpiped = !0), p());
            }
            function l() {
              m("onend"), t.end();
            }
            a.endEmitted ? i.nextTick(u) : n.once("end", u), t.on("unpipe", c);
            var f = M(n);
            t.on("drain", f);
            var h = !1;
            function p() {
              m("cleanup"),
                t.removeListener("close", g),
                t.removeListener("finish", b),
                t.removeListener("drain", f),
                t.removeListener("error", y),
                t.removeListener("unpipe", c),
                n.removeListener("end", l),
                n.removeListener("end", _),
                n.removeListener("data", v),
                (h = !0),
                !a.awaitDrain ||
                  (t._writableState && !t._writableState.needDrain) ||
                  f();
            }
            var d = !1;
            function v(e) {
              m("ondata"), (d = !1);
              var r = t.write(e);
              !1 !== r ||
                d ||
                (((1 === a.pipesCount && a.pipes === t) ||
                  (a.pipesCount > 1 && -1 !== H(a.pipes, t))) &&
                  !h &&
                  (m(
                    "false write response, pause",
                    n._readableState.awaitDrain
                  ),
                  n._readableState.awaitDrain++,
                  (d = !0)),
                n.pause());
            }
            function y(e) {
              m("onerror", e),
                _(),
                t.removeListener("error", y),
                0 === s(t, "error") && t.emit("error", e);
            }
            function g() {
              t.removeListener("finish", b), _();
            }
            function b() {
              m("onfinish"), t.removeListener("close", g), _();
            }
            function _() {
              m("unpipe"), n.unpipe(t);
            }
            return (
              n.on("data", v),
              w(t, "error", y),
              t.once("close", g),
              t.once("finish", b),
              t.emit("pipe", n),
              a.flowing || (m("pipe resume"), n.resume()),
              t
            );
          }),
          (x.prototype.unpipe = function(t) {
            var e = this._readableState,
              n = { hasUnpiped: !1 };
            if (0 === e.pipesCount) return this;
            if (1 === e.pipesCount)
              return t && t !== e.pipes
                ? this
                : (t || (t = e.pipes),
                  (e.pipes = null),
                  (e.pipesCount = 0),
                  (e.flowing = !1),
                  t && t.emit("unpipe", this, n),
                  this);
            if (!t) {
              var r = e.pipes,
                i = e.pipesCount;
              (e.pipes = null), (e.pipesCount = 0), (e.flowing = !1);
              for (var a = 0; a < i; a++) r[a].emit("unpipe", this, n);
              return this;
            }
            var o = H(e.pipes, t);
            return -1 === o
              ? this
              : (e.pipes.splice(o, 1),
                (e.pipesCount -= 1),
                1 === e.pipesCount && (e.pipes = e.pipes[0]),
                t.emit("unpipe", this, n),
                this);
          }),
          (x.prototype.on = function(t, e) {
            var n = u.prototype.on.call(this, t, e);
            if ("data" === t)
              !1 !== this._readableState.flowing && this.resume();
            else if ("readable" === t) {
              var r = this._readableState;
              r.endEmitted ||
                r.readableListening ||
                ((r.readableListening = r.needReadable = !0),
                (r.emittedReadable = !1),
                r.reading ? r.length && P(this) : i.nextTick(j, this));
            }
            return n;
          }),
          (x.prototype.addListener = x.prototype.on),
          (x.prototype.resume = function() {
            var t = this._readableState;
            return (
              t.flowing || (m("resume"), (t.flowing = !0), L(this, t)), this
            );
          }),
          (x.prototype.pause = function() {
            return (
              m("call pause flowing=%j", this._readableState.flowing),
              !1 !== this._readableState.flowing &&
                (m("pause"),
                (this._readableState.flowing = !1),
                this.emit("pause")),
              this
            );
          }),
          (x.prototype.wrap = function(t) {
            var e = this,
              n = this._readableState,
              r = !1;
            for (var i in (t.on("end", function() {
              if ((m("wrapped end"), n.decoder && !n.ended)) {
                var t = n.decoder.end();
                t && t.length && e.push(t);
              }
              e.push(null);
            }),
            t.on("data", function(i) {
              if (
                (m("wrapped data"),
                n.decoder && (i = n.decoder.write(i)),
                (!n.objectMode || (null !== i && void 0 !== i)) &&
                  (n.objectMode || (i && i.length)))
              ) {
                var a = e.push(i);
                a || ((r = !0), t.pause());
              }
            }),
            t))
              void 0 === this[i] &&
                "function" === typeof t[i] &&
                (this[i] = (function(e) {
                  return function() {
                    return t[e].apply(t, arguments);
                  };
                })(i));
            for (var a = 0; a < b.length; a++)
              t.on(b[a], this.emit.bind(this, b[a]));
            return (
              (this._read = function(e) {
                m("wrapped _read", e), r && ((r = !1), t.resume());
              }),
              this
            );
          }),
          Object.defineProperty(x.prototype, "readableHighWaterMark", {
            enumerable: !1,
            get: function() {
              return this._readableState.highWaterMark;
            }
          }),
          (x._fromList = z);
      }.call(this, n("c8ba"), n("f28c")));
    },
    ae84: function(t, e, n) {
      var r = n("8707").Buffer,
        i = n("f576");
      function a(t, e, n, a) {
        if (
          (r.isBuffer(t) || (t = r.from(t, "binary")),
          e && (r.isBuffer(e) || (e = r.from(e, "binary")), 8 !== e.length))
        )
          throw new RangeError("salt should be Buffer with 8 byte length");
        var o = n / 8,
          s = r.alloc(o),
          u = r.alloc(a || 0),
          c = r.alloc(0);
        while (o > 0 || a > 0) {
          var l = new i();
          l.update(c), l.update(t), e && l.update(e), (c = l.digest());
          var f = 0;
          if (o > 0) {
            var h = s.length - o;
            (f = Math.min(o, c.length)), c.copy(s, h, 0, f), (o -= f);
          }
          if (f < c.length && a > 0) {
            var p = u.length - a,
              d = Math.min(a, c.length - f);
            c.copy(u, p, f, f + d), (a -= d);
          }
        }
        return c.fill(0), { key: s, iv: u };
      }
      t.exports = a;
    },
    aebd: function(t, e) {
      t.exports = function(t, e) {
        return {
          enumerable: !(1 & t),
          configurable: !(2 & t),
          writable: !(4 & t),
          value: e
        };
      };
    },
    b0c5: function(t, e, n) {
      "use strict";
      var r = n("520a");
      n("5ca1")(
        { target: "RegExp", proto: !0, forced: r !== /./.exec },
        { exec: r }
      );
    },
    b0dc: function(t, e, n) {
      var r = n("e4ae");
      t.exports = function(t, e, n, i) {
        try {
          return i ? e(r(n)[0], n[1]) : e(n);
        } catch (o) {
          var a = t["return"];
          throw (void 0 !== a && r(a.call(t)), o);
        }
      };
    },
    b19a: function(t, e, n) {
      "use strict";
      var r = n("966d"),
        i =
          Object.keys ||
          function(t) {
            var e = [];
            for (var n in t) e.push(n);
            return e;
          };
      t.exports = f;
      var a = n("3a7c");
      a.inherits = n("3fb5");
      var o = n("ad71"),
        s = n("dc14");
      a.inherits(f, o);
      for (var u = i(s.prototype), c = 0; c < u.length; c++) {
        var l = u[c];
        f.prototype[l] || (f.prototype[l] = s.prototype[l]);
      }
      function f(t) {
        if (!(this instanceof f)) return new f(t);
        o.call(this, t),
          s.call(this, t),
          t && !1 === t.readable && (this.readable = !1),
          t && !1 === t.writable && (this.writable = !1),
          (this.allowHalfOpen = !0),
          t && !1 === t.allowHalfOpen && (this.allowHalfOpen = !1),
          this.once("end", h);
      }
      function h() {
        this.allowHalfOpen || this._writableState.ended || r.nextTick(p, this);
      }
      function p(t) {
        t.end();
      }
      Object.defineProperty(f.prototype, "writableHighWaterMark", {
        enumerable: !1,
        get: function() {
          return this._writableState.highWaterMark;
        }
      }),
        Object.defineProperty(f.prototype, "destroyed", {
          get: function() {
            return (
              void 0 !== this._readableState &&
              void 0 !== this._writableState &&
              (this._readableState.destroyed && this._writableState.destroyed)
            );
          },
          set: function(t) {
            void 0 !== this._readableState &&
              void 0 !== this._writableState &&
              ((this._readableState.destroyed = t),
              (this._writableState.destroyed = t));
          }
        }),
        (f.prototype._destroy = function(t, e) {
          this.push(null), this.end(), r.nextTick(e, t);
        });
    },
    b447: function(t, e, n) {
      var r = n("3a38"),
        i = Math.min;
      t.exports = function(t) {
        return t > 0 ? i(r(t), 9007199254740991) : 0;
      };
    },
    b4e8: function(t) {
      t.exports = {
        sha224WithRSAEncryption: {
          sign: "rsa",
          hash: "sha224",
          id: "302d300d06096086480165030402040500041c"
        },
        "RSA-SHA224": {
          sign: "ecdsa/rsa",
          hash: "sha224",
          id: "302d300d06096086480165030402040500041c"
        },
        sha256WithRSAEncryption: {
          sign: "rsa",
          hash: "sha256",
          id: "3031300d060960864801650304020105000420"
        },
        "RSA-SHA256": {
          sign: "ecdsa/rsa",
          hash: "sha256",
          id: "3031300d060960864801650304020105000420"
        },
        sha384WithRSAEncryption: {
          sign: "rsa",
          hash: "sha384",
          id: "3041300d060960864801650304020205000430"
        },
        "RSA-SHA384": {
          sign: "ecdsa/rsa",
          hash: "sha384",
          id: "3041300d060960864801650304020205000430"
        },
        sha512WithRSAEncryption: {
          sign: "rsa",
          hash: "sha512",
          id: "3051300d060960864801650304020305000440"
        },
        "RSA-SHA512": {
          sign: "ecdsa/rsa",
          hash: "sha512",
          id: "3051300d060960864801650304020305000440"
        },
        "RSA-SHA1": {
          sign: "rsa",
          hash: "sha1",
          id: "3021300906052b0e03021a05000414"
        },
        "ecdsa-with-SHA1": { sign: "ecdsa", hash: "sha1", id: "" },
        sha256: { sign: "ecdsa", hash: "sha256", id: "" },
        sha224: { sign: "ecdsa", hash: "sha224", id: "" },
        sha384: { sign: "ecdsa", hash: "sha384", id: "" },
        sha512: { sign: "ecdsa", hash: "sha512", id: "" },
        "DSA-SHA": { sign: "dsa", hash: "sha1", id: "" },
        "DSA-SHA1": { sign: "dsa", hash: "sha1", id: "" },
        DSA: { sign: "dsa", hash: "sha1", id: "" },
        "DSA-WITH-SHA224": { sign: "dsa", hash: "sha224", id: "" },
        "DSA-SHA224": { sign: "dsa", hash: "sha224", id: "" },
        "DSA-WITH-SHA256": { sign: "dsa", hash: "sha256", id: "" },
        "DSA-SHA256": { sign: "dsa", hash: "sha256", id: "" },
        "DSA-WITH-SHA384": { sign: "dsa", hash: "sha384", id: "" },
        "DSA-SHA384": { sign: "dsa", hash: "sha384", id: "" },
        "DSA-WITH-SHA512": { sign: "dsa", hash: "sha512", id: "" },
        "DSA-SHA512": { sign: "dsa", hash: "sha512", id: "" },
        "DSA-RIPEMD160": { sign: "dsa", hash: "rmd160", id: "" },
        ripemd160WithRSA: {
          sign: "rsa",
          hash: "rmd160",
          id: "3021300906052b2403020105000414"
        },
        "RSA-RIPEMD160": {
          sign: "rsa",
          hash: "rmd160",
          id: "3021300906052b2403020105000414"
        },
        md5WithRSAEncryption: {
          sign: "rsa",
          hash: "md5",
          id: "3020300c06082a864886f70d020505000410"
        },
        "RSA-MD5": {
          sign: "rsa",
          hash: "md5",
          id: "3020300c06082a864886f70d020505000410"
        }
      };
    },
    b525: function(t, e, n) {
      "use strict";
      var r = n("c3c0"),
        i = n("edc9"),
        a = n("da3e"),
        o = r.rotr64_hi,
        s = r.rotr64_lo,
        u = r.shr64_hi,
        c = r.shr64_lo,
        l = r.sum64,
        f = r.sum64_hi,
        h = r.sum64_lo,
        p = r.sum64_4_hi,
        d = r.sum64_4_lo,
        m = r.sum64_5_hi,
        v = r.sum64_5_lo,
        y = i.BlockHash,
        g = [
          1116352408,
          3609767458,
          1899447441,
          602891725,
          3049323471,
          3964484399,
          3921009573,
          2173295548,
          961987163,
          4081628472,
          1508970993,
          3053834265,
          2453635748,
          2937671579,
          2870763221,
          3664609560,
          3624381080,
          2734883394,
          310598401,
          1164996542,
          607225278,
          1323610764,
          1426881987,
          3590304994,
          1925078388,
          4068182383,
          2162078206,
          991336113,
          2614888103,
          633803317,
          3248222580,
          3479774868,
          3835390401,
          2666613458,
          4022224774,
          944711139,
          264347078,
          2341262773,
          604807628,
          2007800933,
          770255983,
          1495990901,
          1249150122,
          1856431235,
          1555081692,
          3175218132,
          1996064986,
          2198950837,
          2554220882,
          3999719339,
          2821834349,
          766784016,
          2952996808,
          2566594879,
          3210313671,
          3203337956,
          3336571891,
          1034457026,
          3584528711,
          2466948901,
          113926993,
          3758326383,
          338241895,
          168717936,
          666307205,
          1188179964,
          773529912,
          1546045734,
          1294757372,
          1522805485,
          1396182291,
          2643833823,
          1695183700,
          2343527390,
          1986661051,
          1014477480,
          2177026350,
          1206759142,
          2456956037,
          344077627,
          2730485921,
          1290863460,
          2820302411,
          3158454273,
          3259730800,
          3505952657,
          3345764771,
          106217008,
          3516065817,
          3606008344,
          3600352804,
          1432725776,
          4094571909,
          1467031594,
          275423344,
          851169720,
          430227734,
          3100823752,
          506948616,
          1363258195,
          659060556,
          3750685593,
          883997877,
          3785050280,
          958139571,
          3318307427,
          1322822218,
          3812723403,
          1537002063,
          2003034995,
          1747873779,
          3602036899,
          1955562222,
          1575990012,
          2024104815,
          1125592928,
          2227730452,
          2716904306,
          2361852424,
          442776044,
          2428436474,
          593698344,
          2756734187,
          3733110249,
          3204031479,
          2999351573,
          3329325298,
          3815920427,
          3391569614,
          3928383900,
          3515267271,
          566280711,
          3940187606,
          3454069534,
          4118630271,
          4000239992,
          116418474,
          1914138554,
          174292421,
          2731055270,
          289380356,
          3203993006,
          460393269,
          320620315,
          685471733,
          587496836,
          852142971,
          1086792851,
          1017036298,
          365543100,
          1126000580,
          2618297676,
          1288033470,
          3409855158,
          1501505948,
          4234509866,
          1607167915,
          987167468,
          1816402316,
          1246189591
        ];
      function b() {
        if (!(this instanceof b)) return new b();
        y.call(this),
          (this.h = [
            1779033703,
            4089235720,
            3144134277,
            2227873595,
            1013904242,
            4271175723,
            2773480762,
            1595750129,
            1359893119,
            2917565137,
            2600822924,
            725511199,
            528734635,
            4215389547,
            1541459225,
            327033209
          ]),
          (this.k = g),
          (this.W = new Array(160));
      }
      function w(t, e, n, r, i) {
        var a = (t & n) ^ (~t & i);
        return a < 0 && (a += 4294967296), a;
      }
      function _(t, e, n, r, i, a) {
        var o = (e & r) ^ (~e & a);
        return o < 0 && (o += 4294967296), o;
      }
      function x(t, e, n, r, i) {
        var a = (t & n) ^ (t & i) ^ (n & i);
        return a < 0 && (a += 4294967296), a;
      }
      function E(t, e, n, r, i, a) {
        var o = (e & r) ^ (e & a) ^ (r & a);
        return o < 0 && (o += 4294967296), o;
      }
      function S(t, e) {
        var n = o(t, e, 28),
          r = o(e, t, 2),
          i = o(e, t, 7),
          a = n ^ r ^ i;
        return a < 0 && (a += 4294967296), a;
      }
      function N(t, e) {
        var n = s(t, e, 28),
          r = s(e, t, 2),
          i = s(e, t, 7),
          a = n ^ r ^ i;
        return a < 0 && (a += 4294967296), a;
      }
      function O(t, e) {
        var n = o(t, e, 14),
          r = o(t, e, 18),
          i = o(e, t, 9),
          a = n ^ r ^ i;
        return a < 0 && (a += 4294967296), a;
      }
      function I(t, e) {
        var n = s(t, e, 14),
          r = s(t, e, 18),
          i = s(e, t, 9),
          a = n ^ r ^ i;
        return a < 0 && (a += 4294967296), a;
      }
      function C(t, e) {
        var n = o(t, e, 1),
          r = o(t, e, 8),
          i = u(t, e, 7),
          a = n ^ r ^ i;
        return a < 0 && (a += 4294967296), a;
      }
      function A(t, e) {
        var n = s(t, e, 1),
          r = s(t, e, 8),
          i = c(t, e, 7),
          a = n ^ r ^ i;
        return a < 0 && (a += 4294967296), a;
      }
      function k(t, e) {
        var n = o(t, e, 19),
          r = o(e, t, 29),
          i = u(t, e, 6),
          a = n ^ r ^ i;
        return a < 0 && (a += 4294967296), a;
      }
      function P(t, e) {
        var n = s(t, e, 19),
          r = s(e, t, 29),
          i = c(t, e, 6),
          a = n ^ r ^ i;
        return a < 0 && (a += 4294967296), a;
      }
      r.inherits(b, y),
        (t.exports = b),
        (b.blockSize = 1024),
        (b.outSize = 512),
        (b.hmacStrength = 192),
        (b.padLength = 128),
        (b.prototype._prepareBlock = function(t, e) {
          for (var n = this.W, r = 0; r < 32; r++) n[r] = t[e + r];
          for (; r < n.length; r += 2) {
            var i = k(n[r - 4], n[r - 3]),
              a = P(n[r - 4], n[r - 3]),
              o = n[r - 14],
              s = n[r - 13],
              u = C(n[r - 30], n[r - 29]),
              c = A(n[r - 30], n[r - 29]),
              l = n[r - 32],
              f = n[r - 31];
            (n[r] = p(i, a, o, s, u, c, l, f)),
              (n[r + 1] = d(i, a, o, s, u, c, l, f));
          }
        }),
        (b.prototype._update = function(t, e) {
          this._prepareBlock(t, e);
          var n = this.W,
            r = this.h[0],
            i = this.h[1],
            o = this.h[2],
            s = this.h[3],
            u = this.h[4],
            c = this.h[5],
            p = this.h[6],
            d = this.h[7],
            y = this.h[8],
            g = this.h[9],
            b = this.h[10],
            C = this.h[11],
            A = this.h[12],
            k = this.h[13],
            P = this.h[14],
            T = this.h[15];
          a(this.k.length === n.length);
          for (var R = 0; R < n.length; R += 2) {
            var D = P,
              M = T,
              j = O(y, g),
              L = I(y, g),
              B = w(y, g, b, C, A, k),
              F = _(y, g, b, C, A, k),
              z = this.k[R],
              U = this.k[R + 1],
              V = n[R],
              W = n[R + 1],
              $ = m(D, M, j, L, B, F, z, U, V, W),
              q = v(D, M, j, L, B, F, z, U, V, W);
            (D = S(r, i)),
              (M = N(r, i)),
              (j = x(r, i, o, s, u, c)),
              (L = E(r, i, o, s, u, c));
            var H = f(D, M, j, L),
              K = h(D, M, j, L);
            (P = A),
              (T = k),
              (A = b),
              (k = C),
              (b = y),
              (C = g),
              (y = f(p, d, $, q)),
              (g = h(d, d, $, q)),
              (p = u),
              (d = c),
              (u = o),
              (c = s),
              (o = r),
              (s = i),
              (r = f($, q, H, K)),
              (i = h($, q, H, K));
          }
          l(this.h, 0, r, i),
            l(this.h, 2, o, s),
            l(this.h, 4, u, c),
            l(this.h, 6, p, d),
            l(this.h, 8, y, g),
            l(this.h, 10, b, C),
            l(this.h, 12, A, k),
            l(this.h, 14, P, T);
        }),
        (b.prototype._digest = function(t) {
          return "hex" === t
            ? r.toHex32(this.h, "big")
            : r.split32(this.h, "big");
        });
    },
    b5ca: function(t, e, n) {
      "use strict";
      var r = n("b639").Buffer,
        i = n("3fb5"),
        a = n("93e6"),
        o = new Array(16),
        s = [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          7,
          4,
          13,
          1,
          10,
          6,
          15,
          3,
          12,
          0,
          9,
          5,
          2,
          14,
          11,
          8,
          3,
          10,
          14,
          4,
          9,
          15,
          8,
          1,
          2,
          7,
          0,
          6,
          13,
          11,
          5,
          12,
          1,
          9,
          11,
          10,
          0,
          8,
          12,
          4,
          13,
          3,
          7,
          15,
          14,
          5,
          6,
          2,
          4,
          0,
          5,
          9,
          7,
          12,
          2,
          10,
          14,
          1,
          3,
          8,
          11,
          6,
          15,
          13
        ],
        u = [
          5,
          14,
          7,
          0,
          9,
          2,
          11,
          4,
          13,
          6,
          15,
          8,
          1,
          10,
          3,
          12,
          6,
          11,
          3,
          7,
          0,
          13,
          5,
          10,
          14,
          15,
          8,
          12,
          4,
          9,
          1,
          2,
          15,
          5,
          1,
          3,
          7,
          14,
          6,
          9,
          11,
          8,
          12,
          2,
          10,
          0,
          4,
          13,
          8,
          6,
          4,
          1,
          3,
          11,
          15,
          0,
          5,
          12,
          2,
          13,
          9,
          7,
          10,
          14,
          12,
          15,
          10,
          4,
          1,
          5,
          8,
          7,
          6,
          2,
          13,
          14,
          0,
          3,
          9,
          11
        ],
        c = [
          11,
          14,
          15,
          12,
          5,
          8,
          7,
          9,
          11,
          13,
          14,
          15,
          6,
          7,
          9,
          8,
          7,
          6,
          8,
          13,
          11,
          9,
          7,
          15,
          7,
          12,
          15,
          9,
          11,
          7,
          13,
          12,
          11,
          13,
          6,
          7,
          14,
          9,
          13,
          15,
          14,
          8,
          13,
          6,
          5,
          12,
          7,
          5,
          11,
          12,
          14,
          15,
          14,
          15,
          9,
          8,
          9,
          14,
          5,
          6,
          8,
          6,
          5,
          12,
          9,
          15,
          5,
          11,
          6,
          8,
          13,
          12,
          5,
          12,
          13,
          14,
          11,
          8,
          5,
          6
        ],
        l = [
          8,
          9,
          9,
          11,
          13,
          15,
          15,
          5,
          7,
          7,
          8,
          11,
          14,
          14,
          12,
          6,
          9,
          13,
          15,
          7,
          12,
          8,
          9,
          11,
          7,
          7,
          12,
          7,
          6,
          15,
          13,
          11,
          9,
          7,
          15,
          11,
          8,
          6,
          6,
          14,
          12,
          13,
          5,
          14,
          13,
          13,
          7,
          5,
          15,
          5,
          8,
          11,
          14,
          14,
          6,
          14,
          6,
          9,
          12,
          9,
          12,
          5,
          15,
          8,
          8,
          5,
          12,
          9,
          12,
          5,
          14,
          6,
          8,
          13,
          6,
          5,
          15,
          13,
          11,
          11
        ],
        f = [0, 1518500249, 1859775393, 2400959708, 2840853838],
        h = [1352829926, 1548603684, 1836072691, 2053994217, 0];
      function p() {
        a.call(this, 64),
          (this._a = 1732584193),
          (this._b = 4023233417),
          (this._c = 2562383102),
          (this._d = 271733878),
          (this._e = 3285377520);
      }
      function d(t, e) {
        return (t << e) | (t >>> (32 - e));
      }
      function m(t, e, n, r, i, a, o, s) {
        return (d((t + (e ^ n ^ r) + a + o) | 0, s) + i) | 0;
      }
      function v(t, e, n, r, i, a, o, s) {
        return (d((t + ((e & n) | (~e & r)) + a + o) | 0, s) + i) | 0;
      }
      function y(t, e, n, r, i, a, o, s) {
        return (d((t + ((e | ~n) ^ r) + a + o) | 0, s) + i) | 0;
      }
      function g(t, e, n, r, i, a, o, s) {
        return (d((t + ((e & r) | (n & ~r)) + a + o) | 0, s) + i) | 0;
      }
      function b(t, e, n, r, i, a, o, s) {
        return (d((t + (e ^ (n | ~r)) + a + o) | 0, s) + i) | 0;
      }
      i(p, a),
        (p.prototype._update = function() {
          for (var t = o, e = 0; e < 16; ++e)
            t[e] = this._block.readInt32LE(4 * e);
          for (
            var n = 0 | this._a,
              r = 0 | this._b,
              i = 0 | this._c,
              a = 0 | this._d,
              p = 0 | this._e,
              w = 0 | this._a,
              _ = 0 | this._b,
              x = 0 | this._c,
              E = 0 | this._d,
              S = 0 | this._e,
              N = 0;
            N < 80;
            N += 1
          ) {
            var O, I;
            N < 16
              ? ((O = m(n, r, i, a, p, t[s[N]], f[0], c[N])),
                (I = b(w, _, x, E, S, t[u[N]], h[0], l[N])))
              : N < 32
              ? ((O = v(n, r, i, a, p, t[s[N]], f[1], c[N])),
                (I = g(w, _, x, E, S, t[u[N]], h[1], l[N])))
              : N < 48
              ? ((O = y(n, r, i, a, p, t[s[N]], f[2], c[N])),
                (I = y(w, _, x, E, S, t[u[N]], h[2], l[N])))
              : N < 64
              ? ((O = g(n, r, i, a, p, t[s[N]], f[3], c[N])),
                (I = v(w, _, x, E, S, t[u[N]], h[3], l[N])))
              : ((O = b(n, r, i, a, p, t[s[N]], f[4], c[N])),
                (I = m(w, _, x, E, S, t[u[N]], h[4], l[N]))),
              (n = p),
              (p = a),
              (a = d(i, 10)),
              (i = r),
              (r = O),
              (w = S),
              (S = E),
              (E = d(x, 10)),
              (x = _),
              (_ = I);
          }
          var C = (this._b + i + E) | 0;
          (this._b = (this._c + a + S) | 0),
            (this._c = (this._d + p + w) | 0),
            (this._d = (this._e + n + _) | 0),
            (this._e = (this._a + r + x) | 0),
            (this._a = C);
        }),
        (p.prototype._digest = function() {
          (this._block[this._blockOffset++] = 128),
            this._blockOffset > 56 &&
              (this._block.fill(0, this._blockOffset, 64),
              this._update(),
              (this._blockOffset = 0)),
            this._block.fill(0, this._blockOffset, 56),
            this._block.writeUInt32LE(this._length[0], 56),
            this._block.writeUInt32LE(this._length[1], 60),
            this._update();
          var t = r.alloc ? r.alloc(20) : new r(20);
          return (
            t.writeInt32LE(this._a, 0),
            t.writeInt32LE(this._b, 4),
            t.writeInt32LE(this._c, 8),
            t.writeInt32LE(this._d, 12),
            t.writeInt32LE(this._e, 16),
            t
          );
        }),
        (t.exports = p);
    },
    b639: function(t, e, n) {
      "use strict";
      (function(t) {
        /*!
         * The buffer module from node.js, for the browser.
         *
         * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
         * @license  MIT
         */
        var r = n("1fb5"),
          i = n("9152"),
          a = n("e3db");
        function o() {
          try {
            var t = new Uint8Array(1);
            return (
              (t.__proto__ = {
                __proto__: Uint8Array.prototype,
                foo: function() {
                  return 42;
                }
              }),
              42 === t.foo() &&
                "function" === typeof t.subarray &&
                0 === t.subarray(1, 1).byteLength
            );
          } catch (e) {
            return !1;
          }
        }
        function s() {
          return c.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823;
        }
        function u(t, e) {
          if (s() < e) throw new RangeError("Invalid typed array length");
          return (
            c.TYPED_ARRAY_SUPPORT
              ? ((t = new Uint8Array(e)), (t.__proto__ = c.prototype))
              : (null === t && (t = new c(e)), (t.length = e)),
            t
          );
        }
        function c(t, e, n) {
          if (!c.TYPED_ARRAY_SUPPORT && !(this instanceof c))
            return new c(t, e, n);
          if ("number" === typeof t) {
            if ("string" === typeof e)
              throw new Error(
                "If encoding is specified then the first argument must be a string"
              );
            return p(this, t);
          }
          return l(this, t, e, n);
        }
        function l(t, e, n, r) {
          if ("number" === typeof e)
            throw new TypeError('"value" argument must not be a number');
          return "undefined" !== typeof ArrayBuffer && e instanceof ArrayBuffer
            ? v(t, e, n, r)
            : "string" === typeof e
            ? d(t, e, n)
            : y(t, e);
        }
        function f(t) {
          if ("number" !== typeof t)
            throw new TypeError('"size" argument must be a number');
          if (t < 0)
            throw new RangeError('"size" argument must not be negative');
        }
        function h(t, e, n, r) {
          return (
            f(e),
            e <= 0
              ? u(t, e)
              : void 0 !== n
              ? "string" === typeof r
                ? u(t, e).fill(n, r)
                : u(t, e).fill(n)
              : u(t, e)
          );
        }
        function p(t, e) {
          if ((f(e), (t = u(t, e < 0 ? 0 : 0 | g(e))), !c.TYPED_ARRAY_SUPPORT))
            for (var n = 0; n < e; ++n) t[n] = 0;
          return t;
        }
        function d(t, e, n) {
          if (
            (("string" === typeof n && "" !== n) || (n = "utf8"),
            !c.isEncoding(n))
          )
            throw new TypeError('"encoding" must be a valid string encoding');
          var r = 0 | w(e, n);
          t = u(t, r);
          var i = t.write(e, n);
          return i !== r && (t = t.slice(0, i)), t;
        }
        function m(t, e) {
          var n = e.length < 0 ? 0 : 0 | g(e.length);
          t = u(t, n);
          for (var r = 0; r < n; r += 1) t[r] = 255 & e[r];
          return t;
        }
        function v(t, e, n, r) {
          if ((e.byteLength, n < 0 || e.byteLength < n))
            throw new RangeError("'offset' is out of bounds");
          if (e.byteLength < n + (r || 0))
            throw new RangeError("'length' is out of bounds");
          return (
            (e =
              void 0 === n && void 0 === r
                ? new Uint8Array(e)
                : void 0 === r
                ? new Uint8Array(e, n)
                : new Uint8Array(e, n, r)),
            c.TYPED_ARRAY_SUPPORT
              ? ((t = e), (t.__proto__ = c.prototype))
              : (t = m(t, e)),
            t
          );
        }
        function y(t, e) {
          if (c.isBuffer(e)) {
            var n = 0 | g(e.length);
            return (t = u(t, n)), 0 === t.length ? t : (e.copy(t, 0, 0, n), t);
          }
          if (e) {
            if (
              ("undefined" !== typeof ArrayBuffer &&
                e.buffer instanceof ArrayBuffer) ||
              "length" in e
            )
              return "number" !== typeof e.length || et(e.length)
                ? u(t, 0)
                : m(t, e);
            if ("Buffer" === e.type && a(e.data)) return m(t, e.data);
          }
          throw new TypeError(
            "First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object."
          );
        }
        function g(t) {
          if (t >= s())
            throw new RangeError(
              "Attempt to allocate Buffer larger than maximum size: 0x" +
                s().toString(16) +
                " bytes"
            );
          return 0 | t;
        }
        function b(t) {
          return +t != t && (t = 0), c.alloc(+t);
        }
        function w(t, e) {
          if (c.isBuffer(t)) return t.length;
          if (
            "undefined" !== typeof ArrayBuffer &&
            "function" === typeof ArrayBuffer.isView &&
            (ArrayBuffer.isView(t) || t instanceof ArrayBuffer)
          )
            return t.byteLength;
          "string" !== typeof t && (t = "" + t);
          var n = t.length;
          if (0 === n) return 0;
          for (var r = !1; ; )
            switch (e) {
              case "ascii":
              case "latin1":
              case "binary":
                return n;
              case "utf8":
              case "utf-8":
              case void 0:
                return J(t).length;
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * n;
              case "hex":
                return n >>> 1;
              case "base64":
                return Z(t).length;
              default:
                if (r) return J(t).length;
                (e = ("" + e).toLowerCase()), (r = !0);
            }
        }
        function _(t, e, n) {
          var r = !1;
          if (((void 0 === e || e < 0) && (e = 0), e > this.length)) return "";
          if (((void 0 === n || n > this.length) && (n = this.length), n <= 0))
            return "";
          if (((n >>>= 0), (e >>>= 0), n <= e)) return "";
          t || (t = "utf8");
          while (1)
            switch (t) {
              case "hex":
                return L(this, e, n);
              case "utf8":
              case "utf-8":
                return T(this, e, n);
              case "ascii":
                return M(this, e, n);
              case "latin1":
              case "binary":
                return j(this, e, n);
              case "base64":
                return P(this, e, n);
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return B(this, e, n);
              default:
                if (r) throw new TypeError("Unknown encoding: " + t);
                (t = (t + "").toLowerCase()), (r = !0);
            }
        }
        function x(t, e, n) {
          var r = t[e];
          (t[e] = t[n]), (t[n] = r);
        }
        function E(t, e, n, r, i) {
          if (0 === t.length) return -1;
          if (
            ("string" === typeof n
              ? ((r = n), (n = 0))
              : n > 2147483647
              ? (n = 2147483647)
              : n < -2147483648 && (n = -2147483648),
            (n = +n),
            isNaN(n) && (n = i ? 0 : t.length - 1),
            n < 0 && (n = t.length + n),
            n >= t.length)
          ) {
            if (i) return -1;
            n = t.length - 1;
          } else if (n < 0) {
            if (!i) return -1;
            n = 0;
          }
          if (("string" === typeof e && (e = c.from(e, r)), c.isBuffer(e)))
            return 0 === e.length ? -1 : S(t, e, n, r, i);
          if ("number" === typeof e)
            return (
              (e &= 255),
              c.TYPED_ARRAY_SUPPORT &&
              "function" === typeof Uint8Array.prototype.indexOf
                ? i
                  ? Uint8Array.prototype.indexOf.call(t, e, n)
                  : Uint8Array.prototype.lastIndexOf.call(t, e, n)
                : S(t, [e], n, r, i)
            );
          throw new TypeError("val must be string, number or Buffer");
        }
        function S(t, e, n, r, i) {
          var a,
            o = 1,
            s = t.length,
            u = e.length;
          if (
            void 0 !== r &&
            ((r = String(r).toLowerCase()),
            "ucs2" === r ||
              "ucs-2" === r ||
              "utf16le" === r ||
              "utf-16le" === r)
          ) {
            if (t.length < 2 || e.length < 2) return -1;
            (o = 2), (s /= 2), (u /= 2), (n /= 2);
          }
          function c(t, e) {
            return 1 === o ? t[e] : t.readUInt16BE(e * o);
          }
          if (i) {
            var l = -1;
            for (a = n; a < s; a++)
              if (c(t, a) === c(e, -1 === l ? 0 : a - l)) {
                if ((-1 === l && (l = a), a - l + 1 === u)) return l * o;
              } else -1 !== l && (a -= a - l), (l = -1);
          } else
            for (n + u > s && (n = s - u), a = n; a >= 0; a--) {
              for (var f = !0, h = 0; h < u; h++)
                if (c(t, a + h) !== c(e, h)) {
                  f = !1;
                  break;
                }
              if (f) return a;
            }
          return -1;
        }
        function N(t, e, n, r) {
          n = Number(n) || 0;
          var i = t.length - n;
          r ? ((r = Number(r)), r > i && (r = i)) : (r = i);
          var a = e.length;
          if (a % 2 !== 0) throw new TypeError("Invalid hex string");
          r > a / 2 && (r = a / 2);
          for (var o = 0; o < r; ++o) {
            var s = parseInt(e.substr(2 * o, 2), 16);
            if (isNaN(s)) return o;
            t[n + o] = s;
          }
          return o;
        }
        function O(t, e, n, r) {
          return tt(J(e, t.length - n), t, n, r);
        }
        function I(t, e, n, r) {
          return tt(Y(e), t, n, r);
        }
        function C(t, e, n, r) {
          return I(t, e, n, r);
        }
        function A(t, e, n, r) {
          return tt(Z(e), t, n, r);
        }
        function k(t, e, n, r) {
          return tt(Q(e, t.length - n), t, n, r);
        }
        function P(t, e, n) {
          return 0 === e && n === t.length
            ? r.fromByteArray(t)
            : r.fromByteArray(t.slice(e, n));
        }
        function T(t, e, n) {
          n = Math.min(t.length, n);
          var r = [],
            i = e;
          while (i < n) {
            var a,
              o,
              s,
              u,
              c = t[i],
              l = null,
              f = c > 239 ? 4 : c > 223 ? 3 : c > 191 ? 2 : 1;
            if (i + f <= n)
              switch (f) {
                case 1:
                  c < 128 && (l = c);
                  break;
                case 2:
                  (a = t[i + 1]),
                    128 === (192 & a) &&
                      ((u = ((31 & c) << 6) | (63 & a)), u > 127 && (l = u));
                  break;
                case 3:
                  (a = t[i + 1]),
                    (o = t[i + 2]),
                    128 === (192 & a) &&
                      128 === (192 & o) &&
                      ((u = ((15 & c) << 12) | ((63 & a) << 6) | (63 & o)),
                      u > 2047 && (u < 55296 || u > 57343) && (l = u));
                  break;
                case 4:
                  (a = t[i + 1]),
                    (o = t[i + 2]),
                    (s = t[i + 3]),
                    128 === (192 & a) &&
                      128 === (192 & o) &&
                      128 === (192 & s) &&
                      ((u =
                        ((15 & c) << 18) |
                        ((63 & a) << 12) |
                        ((63 & o) << 6) |
                        (63 & s)),
                      u > 65535 && u < 1114112 && (l = u));
              }
            null === l
              ? ((l = 65533), (f = 1))
              : l > 65535 &&
                ((l -= 65536),
                r.push(((l >>> 10) & 1023) | 55296),
                (l = 56320 | (1023 & l))),
              r.push(l),
              (i += f);
          }
          return D(r);
        }
        (e.Buffer = c),
          (e.SlowBuffer = b),
          (e.INSPECT_MAX_BYTES = 50),
          (c.TYPED_ARRAY_SUPPORT =
            void 0 !== t.TYPED_ARRAY_SUPPORT ? t.TYPED_ARRAY_SUPPORT : o()),
          (e.kMaxLength = s()),
          (c.poolSize = 8192),
          (c._augment = function(t) {
            return (t.__proto__ = c.prototype), t;
          }),
          (c.from = function(t, e, n) {
            return l(null, t, e, n);
          }),
          c.TYPED_ARRAY_SUPPORT &&
            ((c.prototype.__proto__ = Uint8Array.prototype),
            (c.__proto__ = Uint8Array),
            "undefined" !== typeof Symbol &&
              Symbol.species &&
              c[Symbol.species] === c &&
              Object.defineProperty(c, Symbol.species, {
                value: null,
                configurable: !0
              })),
          (c.alloc = function(t, e, n) {
            return h(null, t, e, n);
          }),
          (c.allocUnsafe = function(t) {
            return p(null, t);
          }),
          (c.allocUnsafeSlow = function(t) {
            return p(null, t);
          }),
          (c.isBuffer = function(t) {
            return !(null == t || !t._isBuffer);
          }),
          (c.compare = function(t, e) {
            if (!c.isBuffer(t) || !c.isBuffer(e))
              throw new TypeError("Arguments must be Buffers");
            if (t === e) return 0;
            for (
              var n = t.length, r = e.length, i = 0, a = Math.min(n, r);
              i < a;
              ++i
            )
              if (t[i] !== e[i]) {
                (n = t[i]), (r = e[i]);
                break;
              }
            return n < r ? -1 : r < n ? 1 : 0;
          }),
          (c.isEncoding = function(t) {
            switch (String(t).toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "latin1":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return !0;
              default:
                return !1;
            }
          }),
          (c.concat = function(t, e) {
            if (!a(t))
              throw new TypeError(
                '"list" argument must be an Array of Buffers'
              );
            if (0 === t.length) return c.alloc(0);
            var n;
            if (void 0 === e)
              for (e = 0, n = 0; n < t.length; ++n) e += t[n].length;
            var r = c.allocUnsafe(e),
              i = 0;
            for (n = 0; n < t.length; ++n) {
              var o = t[n];
              if (!c.isBuffer(o))
                throw new TypeError(
                  '"list" argument must be an Array of Buffers'
                );
              o.copy(r, i), (i += o.length);
            }
            return r;
          }),
          (c.byteLength = w),
          (c.prototype._isBuffer = !0),
          (c.prototype.swap16 = function() {
            var t = this.length;
            if (t % 2 !== 0)
              throw new RangeError("Buffer size must be a multiple of 16-bits");
            for (var e = 0; e < t; e += 2) x(this, e, e + 1);
            return this;
          }),
          (c.prototype.swap32 = function() {
            var t = this.length;
            if (t % 4 !== 0)
              throw new RangeError("Buffer size must be a multiple of 32-bits");
            for (var e = 0; e < t; e += 4)
              x(this, e, e + 3), x(this, e + 1, e + 2);
            return this;
          }),
          (c.prototype.swap64 = function() {
            var t = this.length;
            if (t % 8 !== 0)
              throw new RangeError("Buffer size must be a multiple of 64-bits");
            for (var e = 0; e < t; e += 8)
              x(this, e, e + 7),
                x(this, e + 1, e + 6),
                x(this, e + 2, e + 5),
                x(this, e + 3, e + 4);
            return this;
          }),
          (c.prototype.toString = function() {
            var t = 0 | this.length;
            return 0 === t
              ? ""
              : 0 === arguments.length
              ? T(this, 0, t)
              : _.apply(this, arguments);
          }),
          (c.prototype.equals = function(t) {
            if (!c.isBuffer(t))
              throw new TypeError("Argument must be a Buffer");
            return this === t || 0 === c.compare(this, t);
          }),
          (c.prototype.inspect = function() {
            var t = "",
              n = e.INSPECT_MAX_BYTES;
            return (
              this.length > 0 &&
                ((t = this.toString("hex", 0, n)
                  .match(/.{2}/g)
                  .join(" ")),
                this.length > n && (t += " ... ")),
              "<Buffer " + t + ">"
            );
          }),
          (c.prototype.compare = function(t, e, n, r, i) {
            if (!c.isBuffer(t))
              throw new TypeError("Argument must be a Buffer");
            if (
              (void 0 === e && (e = 0),
              void 0 === n && (n = t ? t.length : 0),
              void 0 === r && (r = 0),
              void 0 === i && (i = this.length),
              e < 0 || n > t.length || r < 0 || i > this.length)
            )
              throw new RangeError("out of range index");
            if (r >= i && e >= n) return 0;
            if (r >= i) return -1;
            if (e >= n) return 1;
            if (((e >>>= 0), (n >>>= 0), (r >>>= 0), (i >>>= 0), this === t))
              return 0;
            for (
              var a = i - r,
                o = n - e,
                s = Math.min(a, o),
                u = this.slice(r, i),
                l = t.slice(e, n),
                f = 0;
              f < s;
              ++f
            )
              if (u[f] !== l[f]) {
                (a = u[f]), (o = l[f]);
                break;
              }
            return a < o ? -1 : o < a ? 1 : 0;
          }),
          (c.prototype.includes = function(t, e, n) {
            return -1 !== this.indexOf(t, e, n);
          }),
          (c.prototype.indexOf = function(t, e, n) {
            return E(this, t, e, n, !0);
          }),
          (c.prototype.lastIndexOf = function(t, e, n) {
            return E(this, t, e, n, !1);
          }),
          (c.prototype.write = function(t, e, n, r) {
            if (void 0 === e) (r = "utf8"), (n = this.length), (e = 0);
            else if (void 0 === n && "string" === typeof e)
              (r = e), (n = this.length), (e = 0);
            else {
              if (!isFinite(e))
                throw new Error(
                  "Buffer.write(string, encoding, offset[, length]) is no longer supported"
                );
              (e |= 0),
                isFinite(n)
                  ? ((n |= 0), void 0 === r && (r = "utf8"))
                  : ((r = n), (n = void 0));
            }
            var i = this.length - e;
            if (
              ((void 0 === n || n > i) && (n = i),
              (t.length > 0 && (n < 0 || e < 0)) || e > this.length)
            )
              throw new RangeError("Attempt to write outside buffer bounds");
            r || (r = "utf8");
            for (var a = !1; ; )
              switch (r) {
                case "hex":
                  return N(this, t, e, n);
                case "utf8":
                case "utf-8":
                  return O(this, t, e, n);
                case "ascii":
                  return I(this, t, e, n);
                case "latin1":
                case "binary":
                  return C(this, t, e, n);
                case "base64":
                  return A(this, t, e, n);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return k(this, t, e, n);
                default:
                  if (a) throw new TypeError("Unknown encoding: " + r);
                  (r = ("" + r).toLowerCase()), (a = !0);
              }
          }),
          (c.prototype.toJSON = function() {
            return {
              type: "Buffer",
              data: Array.prototype.slice.call(this._arr || this, 0)
            };
          });
        var R = 4096;
        function D(t) {
          var e = t.length;
          if (e <= R) return String.fromCharCode.apply(String, t);
          var n = "",
            r = 0;
          while (r < e)
            n += String.fromCharCode.apply(String, t.slice(r, (r += R)));
          return n;
        }
        function M(t, e, n) {
          var r = "";
          n = Math.min(t.length, n);
          for (var i = e; i < n; ++i) r += String.fromCharCode(127 & t[i]);
          return r;
        }
        function j(t, e, n) {
          var r = "";
          n = Math.min(t.length, n);
          for (var i = e; i < n; ++i) r += String.fromCharCode(t[i]);
          return r;
        }
        function L(t, e, n) {
          var r = t.length;
          (!e || e < 0) && (e = 0), (!n || n < 0 || n > r) && (n = r);
          for (var i = "", a = e; a < n; ++a) i += X(t[a]);
          return i;
        }
        function B(t, e, n) {
          for (var r = t.slice(e, n), i = "", a = 0; a < r.length; a += 2)
            i += String.fromCharCode(r[a] + 256 * r[a + 1]);
          return i;
        }
        function F(t, e, n) {
          if (t % 1 !== 0 || t < 0) throw new RangeError("offset is not uint");
          if (t + e > n)
            throw new RangeError("Trying to access beyond buffer length");
        }
        function z(t, e, n, r, i, a) {
          if (!c.isBuffer(t))
            throw new TypeError('"buffer" argument must be a Buffer instance');
          if (e > i || e < a)
            throw new RangeError('"value" argument is out of bounds');
          if (n + r > t.length) throw new RangeError("Index out of range");
        }
        function U(t, e, n, r) {
          e < 0 && (e = 65535 + e + 1);
          for (var i = 0, a = Math.min(t.length - n, 2); i < a; ++i)
            t[n + i] =
              (e & (255 << (8 * (r ? i : 1 - i)))) >>> (8 * (r ? i : 1 - i));
        }
        function V(t, e, n, r) {
          e < 0 && (e = 4294967295 + e + 1);
          for (var i = 0, a = Math.min(t.length - n, 4); i < a; ++i)
            t[n + i] = (e >>> (8 * (r ? i : 3 - i))) & 255;
        }
        function W(t, e, n, r, i, a) {
          if (n + r > t.length) throw new RangeError("Index out of range");
          if (n < 0) throw new RangeError("Index out of range");
        }
        function $(t, e, n, r, a) {
          return (
            a || W(t, e, n, 4, 3.4028234663852886e38, -3.4028234663852886e38),
            i.write(t, e, n, r, 23, 4),
            n + 4
          );
        }
        function q(t, e, n, r, a) {
          return (
            a || W(t, e, n, 8, 1.7976931348623157e308, -1.7976931348623157e308),
            i.write(t, e, n, r, 52, 8),
            n + 8
          );
        }
        (c.prototype.slice = function(t, e) {
          var n,
            r = this.length;
          if (
            ((t = ~~t),
            (e = void 0 === e ? r : ~~e),
            t < 0 ? ((t += r), t < 0 && (t = 0)) : t > r && (t = r),
            e < 0 ? ((e += r), e < 0 && (e = 0)) : e > r && (e = r),
            e < t && (e = t),
            c.TYPED_ARRAY_SUPPORT)
          )
            (n = this.subarray(t, e)), (n.__proto__ = c.prototype);
          else {
            var i = e - t;
            n = new c(i, void 0);
            for (var a = 0; a < i; ++a) n[a] = this[a + t];
          }
          return n;
        }),
          (c.prototype.readUIntLE = function(t, e, n) {
            (t |= 0), (e |= 0), n || F(t, e, this.length);
            var r = this[t],
              i = 1,
              a = 0;
            while (++a < e && (i *= 256)) r += this[t + a] * i;
            return r;
          }),
          (c.prototype.readUIntBE = function(t, e, n) {
            (t |= 0), (e |= 0), n || F(t, e, this.length);
            var r = this[t + --e],
              i = 1;
            while (e > 0 && (i *= 256)) r += this[t + --e] * i;
            return r;
          }),
          (c.prototype.readUInt8 = function(t, e) {
            return e || F(t, 1, this.length), this[t];
          }),
          (c.prototype.readUInt16LE = function(t, e) {
            return e || F(t, 2, this.length), this[t] | (this[t + 1] << 8);
          }),
          (c.prototype.readUInt16BE = function(t, e) {
            return e || F(t, 2, this.length), (this[t] << 8) | this[t + 1];
          }),
          (c.prototype.readUInt32LE = function(t, e) {
            return (
              e || F(t, 4, this.length),
              (this[t] | (this[t + 1] << 8) | (this[t + 2] << 16)) +
                16777216 * this[t + 3]
            );
          }),
          (c.prototype.readUInt32BE = function(t, e) {
            return (
              e || F(t, 4, this.length),
              16777216 * this[t] +
                ((this[t + 1] << 16) | (this[t + 2] << 8) | this[t + 3])
            );
          }),
          (c.prototype.readIntLE = function(t, e, n) {
            (t |= 0), (e |= 0), n || F(t, e, this.length);
            var r = this[t],
              i = 1,
              a = 0;
            while (++a < e && (i *= 256)) r += this[t + a] * i;
            return (i *= 128), r >= i && (r -= Math.pow(2, 8 * e)), r;
          }),
          (c.prototype.readIntBE = function(t, e, n) {
            (t |= 0), (e |= 0), n || F(t, e, this.length);
            var r = e,
              i = 1,
              a = this[t + --r];
            while (r > 0 && (i *= 256)) a += this[t + --r] * i;
            return (i *= 128), a >= i && (a -= Math.pow(2, 8 * e)), a;
          }),
          (c.prototype.readInt8 = function(t, e) {
            return (
              e || F(t, 1, this.length),
              128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]
            );
          }),
          (c.prototype.readInt16LE = function(t, e) {
            e || F(t, 2, this.length);
            var n = this[t] | (this[t + 1] << 8);
            return 32768 & n ? 4294901760 | n : n;
          }),
          (c.prototype.readInt16BE = function(t, e) {
            e || F(t, 2, this.length);
            var n = this[t + 1] | (this[t] << 8);
            return 32768 & n ? 4294901760 | n : n;
          }),
          (c.prototype.readInt32LE = function(t, e) {
            return (
              e || F(t, 4, this.length),
              this[t] |
                (this[t + 1] << 8) |
                (this[t + 2] << 16) |
                (this[t + 3] << 24)
            );
          }),
          (c.prototype.readInt32BE = function(t, e) {
            return (
              e || F(t, 4, this.length),
              (this[t] << 24) |
                (this[t + 1] << 16) |
                (this[t + 2] << 8) |
                this[t + 3]
            );
          }),
          (c.prototype.readFloatLE = function(t, e) {
            return e || F(t, 4, this.length), i.read(this, t, !0, 23, 4);
          }),
          (c.prototype.readFloatBE = function(t, e) {
            return e || F(t, 4, this.length), i.read(this, t, !1, 23, 4);
          }),
          (c.prototype.readDoubleLE = function(t, e) {
            return e || F(t, 8, this.length), i.read(this, t, !0, 52, 8);
          }),
          (c.prototype.readDoubleBE = function(t, e) {
            return e || F(t, 8, this.length), i.read(this, t, !1, 52, 8);
          }),
          (c.prototype.writeUIntLE = function(t, e, n, r) {
            if (((t = +t), (e |= 0), (n |= 0), !r)) {
              var i = Math.pow(2, 8 * n) - 1;
              z(this, t, e, n, i, 0);
            }
            var a = 1,
              o = 0;
            this[e] = 255 & t;
            while (++o < n && (a *= 256)) this[e + o] = (t / a) & 255;
            return e + n;
          }),
          (c.prototype.writeUIntBE = function(t, e, n, r) {
            if (((t = +t), (e |= 0), (n |= 0), !r)) {
              var i = Math.pow(2, 8 * n) - 1;
              z(this, t, e, n, i, 0);
            }
            var a = n - 1,
              o = 1;
            this[e + a] = 255 & t;
            while (--a >= 0 && (o *= 256)) this[e + a] = (t / o) & 255;
            return e + n;
          }),
          (c.prototype.writeUInt8 = function(t, e, n) {
            return (
              (t = +t),
              (e |= 0),
              n || z(this, t, e, 1, 255, 0),
              c.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)),
              (this[e] = 255 & t),
              e + 1
            );
          }),
          (c.prototype.writeUInt16LE = function(t, e, n) {
            return (
              (t = +t),
              (e |= 0),
              n || z(this, t, e, 2, 65535, 0),
              c.TYPED_ARRAY_SUPPORT
                ? ((this[e] = 255 & t), (this[e + 1] = t >>> 8))
                : U(this, t, e, !0),
              e + 2
            );
          }),
          (c.prototype.writeUInt16BE = function(t, e, n) {
            return (
              (t = +t),
              (e |= 0),
              n || z(this, t, e, 2, 65535, 0),
              c.TYPED_ARRAY_SUPPORT
                ? ((this[e] = t >>> 8), (this[e + 1] = 255 & t))
                : U(this, t, e, !1),
              e + 2
            );
          }),
          (c.prototype.writeUInt32LE = function(t, e, n) {
            return (
              (t = +t),
              (e |= 0),
              n || z(this, t, e, 4, 4294967295, 0),
              c.TYPED_ARRAY_SUPPORT
                ? ((this[e + 3] = t >>> 24),
                  (this[e + 2] = t >>> 16),
                  (this[e + 1] = t >>> 8),
                  (this[e] = 255 & t))
                : V(this, t, e, !0),
              e + 4
            );
          }),
          (c.prototype.writeUInt32BE = function(t, e, n) {
            return (
              (t = +t),
              (e |= 0),
              n || z(this, t, e, 4, 4294967295, 0),
              c.TYPED_ARRAY_SUPPORT
                ? ((this[e] = t >>> 24),
                  (this[e + 1] = t >>> 16),
                  (this[e + 2] = t >>> 8),
                  (this[e + 3] = 255 & t))
                : V(this, t, e, !1),
              e + 4
            );
          }),
          (c.prototype.writeIntLE = function(t, e, n, r) {
            if (((t = +t), (e |= 0), !r)) {
              var i = Math.pow(2, 8 * n - 1);
              z(this, t, e, n, i - 1, -i);
            }
            var a = 0,
              o = 1,
              s = 0;
            this[e] = 255 & t;
            while (++a < n && (o *= 256))
              t < 0 && 0 === s && 0 !== this[e + a - 1] && (s = 1),
                (this[e + a] = (((t / o) >> 0) - s) & 255);
            return e + n;
          }),
          (c.prototype.writeIntBE = function(t, e, n, r) {
            if (((t = +t), (e |= 0), !r)) {
              var i = Math.pow(2, 8 * n - 1);
              z(this, t, e, n, i - 1, -i);
            }
            var a = n - 1,
              o = 1,
              s = 0;
            this[e + a] = 255 & t;
            while (--a >= 0 && (o *= 256))
              t < 0 && 0 === s && 0 !== this[e + a + 1] && (s = 1),
                (this[e + a] = (((t / o) >> 0) - s) & 255);
            return e + n;
          }),
          (c.prototype.writeInt8 = function(t, e, n) {
            return (
              (t = +t),
              (e |= 0),
              n || z(this, t, e, 1, 127, -128),
              c.TYPED_ARRAY_SUPPORT || (t = Math.floor(t)),
              t < 0 && (t = 255 + t + 1),
              (this[e] = 255 & t),
              e + 1
            );
          }),
          (c.prototype.writeInt16LE = function(t, e, n) {
            return (
              (t = +t),
              (e |= 0),
              n || z(this, t, e, 2, 32767, -32768),
              c.TYPED_ARRAY_SUPPORT
                ? ((this[e] = 255 & t), (this[e + 1] = t >>> 8))
                : U(this, t, e, !0),
              e + 2
            );
          }),
          (c.prototype.writeInt16BE = function(t, e, n) {
            return (
              (t = +t),
              (e |= 0),
              n || z(this, t, e, 2, 32767, -32768),
              c.TYPED_ARRAY_SUPPORT
                ? ((this[e] = t >>> 8), (this[e + 1] = 255 & t))
                : U(this, t, e, !1),
              e + 2
            );
          }),
          (c.prototype.writeInt32LE = function(t, e, n) {
            return (
              (t = +t),
              (e |= 0),
              n || z(this, t, e, 4, 2147483647, -2147483648),
              c.TYPED_ARRAY_SUPPORT
                ? ((this[e] = 255 & t),
                  (this[e + 1] = t >>> 8),
                  (this[e + 2] = t >>> 16),
                  (this[e + 3] = t >>> 24))
                : V(this, t, e, !0),
              e + 4
            );
          }),
          (c.prototype.writeInt32BE = function(t, e, n) {
            return (
              (t = +t),
              (e |= 0),
              n || z(this, t, e, 4, 2147483647, -2147483648),
              t < 0 && (t = 4294967295 + t + 1),
              c.TYPED_ARRAY_SUPPORT
                ? ((this[e] = t >>> 24),
                  (this[e + 1] = t >>> 16),
                  (this[e + 2] = t >>> 8),
                  (this[e + 3] = 255 & t))
                : V(this, t, e, !1),
              e + 4
            );
          }),
          (c.prototype.writeFloatLE = function(t, e, n) {
            return $(this, t, e, !0, n);
          }),
          (c.prototype.writeFloatBE = function(t, e, n) {
            return $(this, t, e, !1, n);
          }),
          (c.prototype.writeDoubleLE = function(t, e, n) {
            return q(this, t, e, !0, n);
          }),
          (c.prototype.writeDoubleBE = function(t, e, n) {
            return q(this, t, e, !1, n);
          }),
          (c.prototype.copy = function(t, e, n, r) {
            if (
              (n || (n = 0),
              r || 0 === r || (r = this.length),
              e >= t.length && (e = t.length),
              e || (e = 0),
              r > 0 && r < n && (r = n),
              r === n)
            )
              return 0;
            if (0 === t.length || 0 === this.length) return 0;
            if (e < 0) throw new RangeError("targetStart out of bounds");
            if (n < 0 || n >= this.length)
              throw new RangeError("sourceStart out of bounds");
            if (r < 0) throw new RangeError("sourceEnd out of bounds");
            r > this.length && (r = this.length),
              t.length - e < r - n && (r = t.length - e + n);
            var i,
              a = r - n;
            if (this === t && n < e && e < r)
              for (i = a - 1; i >= 0; --i) t[i + e] = this[i + n];
            else if (a < 1e3 || !c.TYPED_ARRAY_SUPPORT)
              for (i = 0; i < a; ++i) t[i + e] = this[i + n];
            else Uint8Array.prototype.set.call(t, this.subarray(n, n + a), e);
            return a;
          }),
          (c.prototype.fill = function(t, e, n, r) {
            if ("string" === typeof t) {
              if (
                ("string" === typeof e
                  ? ((r = e), (e = 0), (n = this.length))
                  : "string" === typeof n && ((r = n), (n = this.length)),
                1 === t.length)
              ) {
                var i = t.charCodeAt(0);
                i < 256 && (t = i);
              }
              if (void 0 !== r && "string" !== typeof r)
                throw new TypeError("encoding must be a string");
              if ("string" === typeof r && !c.isEncoding(r))
                throw new TypeError("Unknown encoding: " + r);
            } else "number" === typeof t && (t &= 255);
            if (e < 0 || this.length < e || this.length < n)
              throw new RangeError("Out of range index");
            if (n <= e) return this;
            var a;
            if (
              ((e >>>= 0),
              (n = void 0 === n ? this.length : n >>> 0),
              t || (t = 0),
              "number" === typeof t)
            )
              for (a = e; a < n; ++a) this[a] = t;
            else {
              var o = c.isBuffer(t) ? t : J(new c(t, r).toString()),
                s = o.length;
              for (a = 0; a < n - e; ++a) this[a + e] = o[a % s];
            }
            return this;
          });
        var H = /[^+\/0-9A-Za-z-_]/g;
        function K(t) {
          if (((t = G(t).replace(H, "")), t.length < 2)) return "";
          while (t.length % 4 !== 0) t += "=";
          return t;
        }
        function G(t) {
          return t.trim ? t.trim() : t.replace(/^\s+|\s+$/g, "");
        }
        function X(t) {
          return t < 16 ? "0" + t.toString(16) : t.toString(16);
        }
        function J(t, e) {
          var n;
          e = e || 1 / 0;
          for (var r = t.length, i = null, a = [], o = 0; o < r; ++o) {
            if (((n = t.charCodeAt(o)), n > 55295 && n < 57344)) {
              if (!i) {
                if (n > 56319) {
                  (e -= 3) > -1 && a.push(239, 191, 189);
                  continue;
                }
                if (o + 1 === r) {
                  (e -= 3) > -1 && a.push(239, 191, 189);
                  continue;
                }
                i = n;
                continue;
              }
              if (n < 56320) {
                (e -= 3) > -1 && a.push(239, 191, 189), (i = n);
                continue;
              }
              n = 65536 + (((i - 55296) << 10) | (n - 56320));
            } else i && (e -= 3) > -1 && a.push(239, 191, 189);
            if (((i = null), n < 128)) {
              if ((e -= 1) < 0) break;
              a.push(n);
            } else if (n < 2048) {
              if ((e -= 2) < 0) break;
              a.push((n >> 6) | 192, (63 & n) | 128);
            } else if (n < 65536) {
              if ((e -= 3) < 0) break;
              a.push((n >> 12) | 224, ((n >> 6) & 63) | 128, (63 & n) | 128);
            } else {
              if (!(n < 1114112)) throw new Error("Invalid code point");
              if ((e -= 4) < 0) break;
              a.push(
                (n >> 18) | 240,
                ((n >> 12) & 63) | 128,
                ((n >> 6) & 63) | 128,
                (63 & n) | 128
              );
            }
          }
          return a;
        }
        function Y(t) {
          for (var e = [], n = 0; n < t.length; ++n)
            e.push(255 & t.charCodeAt(n));
          return e;
        }
        function Q(t, e) {
          for (var n, r, i, a = [], o = 0; o < t.length; ++o) {
            if ((e -= 2) < 0) break;
            (n = t.charCodeAt(o)),
              (r = n >> 8),
              (i = n % 256),
              a.push(i),
              a.push(r);
          }
          return a;
        }
        function Z(t) {
          return r.toByteArray(K(t));
        }
        function tt(t, e, n, r) {
          for (var i = 0; i < r; ++i) {
            if (i + n >= e.length || i >= t.length) break;
            e[i + n] = t[i];
          }
          return i;
        }
        function et(t) {
          return t !== t;
        }
      }.call(this, n("c8ba")));
    },
    b672: function(t, e, n) {
      var r = n("8707").Buffer;
      function i(t, e) {
        (this._block = r.alloc(t)),
          (this._finalSize = e),
          (this._blockSize = t),
          (this._len = 0);
      }
      (i.prototype.update = function(t, e) {
        "string" === typeof t && ((e = e || "utf8"), (t = r.from(t, e)));
        for (
          var n = this._block,
            i = this._blockSize,
            a = t.length,
            o = this._len,
            s = 0;
          s < a;

        ) {
          for (var u = o % i, c = Math.min(a - s, i - u), l = 0; l < c; l++)
            n[u + l] = t[s + l];
          (o += c), (s += c), o % i === 0 && this._update(n);
        }
        return (this._len += a), this;
      }),
        (i.prototype.digest = function(t) {
          var e = this._len % this._blockSize;
          (this._block[e] = 128),
            this._block.fill(0, e + 1),
            e >= this._finalSize &&
              (this._update(this._block), this._block.fill(0));
          var n = 8 * this._len;
          if (n <= 4294967295)
            this._block.writeUInt32BE(n, this._blockSize - 4);
          else {
            var r = (4294967295 & n) >>> 0,
              i = (n - r) / 4294967296;
            this._block.writeUInt32BE(i, this._blockSize - 8),
              this._block.writeUInt32BE(r, this._blockSize - 4);
          }
          this._update(this._block);
          var a = this._hash();
          return t ? a.toString(t) : a;
        }),
        (i.prototype._update = function() {
          throw new Error("_update must be implemented by subclass");
        }),
        (t.exports = i);
    },
    b692: function(t, e, n) {
      (function(e) {
        var r = n("98e6"),
          i = n("d485"),
          a = n("3fb5"),
          o = n("6fe7"),
          s = n("980c"),
          u = n("b4e8");
        function c(t) {
          i.Writable.call(this);
          var e = u[t];
          if (!e) throw new Error("Unknown message digest");
          (this._hashType = e.hash),
            (this._hash = r(e.hash)),
            (this._tag = e.id),
            (this._signType = e.sign);
        }
        function l(t) {
          i.Writable.call(this);
          var e = u[t];
          if (!e) throw new Error("Unknown message digest");
          (this._hash = r(e.hash)),
            (this._tag = e.id),
            (this._signType = e.sign);
        }
        function f(t) {
          return new c(t);
        }
        function h(t) {
          return new l(t);
        }
        Object.keys(u).forEach(function(t) {
          (u[t].id = new e(u[t].id, "hex")), (u[t.toLowerCase()] = u[t]);
        }),
          a(c, i.Writable),
          (c.prototype._write = function(t, e, n) {
            this._hash.update(t), n();
          }),
          (c.prototype.update = function(t, n) {
            return (
              "string" === typeof t && (t = new e(t, n)),
              this._hash.update(t),
              this
            );
          }),
          (c.prototype.sign = function(t, e) {
            this.end();
            var n = this._hash.digest(),
              r = o(n, t, this._hashType, this._signType, this._tag);
            return e ? r.toString(e) : r;
          }),
          a(l, i.Writable),
          (l.prototype._write = function(t, e, n) {
            this._hash.update(t), n();
          }),
          (l.prototype.update = function(t, n) {
            return (
              "string" === typeof t && (t = new e(t, n)),
              this._hash.update(t),
              this
            );
          }),
          (l.prototype.verify = function(t, n, r) {
            "string" === typeof n && (n = new e(n, r)), this.end();
            var i = this._hash.digest();
            return s(n, i, t, this._signType, this._tag);
          }),
          (t.exports = { Sign: f, Verify: h, createSign: f, createVerify: h });
      }.call(this, n("b639").Buffer));
    },
    b73f: function(t, e, n) {
      "use strict";
      var r = n("399f"),
        i = n("3337"),
        a = i.utils,
        o = a.assert;
      function s(t, e) {
        if (t instanceof s) return t;
        this._importDER(t, e) ||
          (o(t.r && t.s, "Signature without r or s"),
          (this.r = new r(t.r, 16)),
          (this.s = new r(t.s, 16)),
          void 0 === t.recoveryParam
            ? (this.recoveryParam = null)
            : (this.recoveryParam = t.recoveryParam));
      }
      function u() {
        this.place = 0;
      }
      function c(t, e) {
        var n = t[e.place++];
        if (!(128 & n)) return n;
        for (var r = 15 & n, i = 0, a = 0, o = e.place; a < r; a++, o++)
          (i <<= 8), (i |= t[o]);
        return (e.place = o), i;
      }
      function l(t) {
        var e = 0,
          n = t.length - 1;
        while (!t[e] && !(128 & t[e + 1]) && e < n) e++;
        return 0 === e ? t : t.slice(e);
      }
      function f(t, e) {
        if (e < 128) t.push(e);
        else {
          var n = 1 + ((Math.log(e) / Math.LN2) >>> 3);
          t.push(128 | n);
          while (--n) t.push((e >>> (n << 3)) & 255);
          t.push(e);
        }
      }
      (t.exports = s),
        (s.prototype._importDER = function(t, e) {
          t = a.toArray(t, e);
          var n = new u();
          if (48 !== t[n.place++]) return !1;
          var i = c(t, n);
          if (i + n.place !== t.length) return !1;
          if (2 !== t[n.place++]) return !1;
          var o = c(t, n),
            s = t.slice(n.place, o + n.place);
          if (((n.place += o), 2 !== t[n.place++])) return !1;
          var l = c(t, n);
          if (t.length !== l + n.place) return !1;
          var f = t.slice(n.place, l + n.place);
          return (
            0 === s[0] && 128 & s[1] && (s = s.slice(1)),
            0 === f[0] && 128 & f[1] && (f = f.slice(1)),
            (this.r = new r(s)),
            (this.s = new r(f)),
            (this.recoveryParam = null),
            !0
          );
        }),
        (s.prototype.toDER = function(t) {
          var e = this.r.toArray(),
            n = this.s.toArray();
          128 & e[0] && (e = [0].concat(e)),
            128 & n[0] && (n = [0].concat(n)),
            (e = l(e)),
            (n = l(n));
          while (!n[0] && !(128 & n[1])) n = n.slice(1);
          var r = [2];
          f(r, e.length), (r = r.concat(e)), r.push(2), f(r, n.length);
          var i = r.concat(n),
            o = [48];
          return f(o, i.length), (o = o.concat(i)), a.encode(o, t);
        });
    },
    b7d1: function(t, e, n) {
      (function(e) {
        function n(t, e) {
          if (r("noDeprecation")) return t;
          var n = !1;
          function i() {
            if (!n) {
              if (r("throwDeprecation")) throw new Error(e);
              r("traceDeprecation") ? console.trace(e) : console.warn(e),
                (n = !0);
            }
            return t.apply(this, arguments);
          }
          return i;
        }
        function r(t) {
          try {
            if (!e.localStorage) return !1;
          } catch (r) {
            return !1;
          }
          var n = e.localStorage[t];
          return null != n && "true" === String(n).toLowerCase();
        }
        t.exports = n;
      }.call(this, n("c8ba")));
    },
    b837: function(t, e, n) {
      var r = n("3fb5"),
        i = n("4fd1"),
        a = n("b672"),
        o = n("8707").Buffer,
        s = new Array(160);
      function u() {
        this.init(), (this._w = s), a.call(this, 128, 112);
      }
      r(u, i),
        (u.prototype.init = function() {
          return (
            (this._ah = 3418070365),
            (this._bh = 1654270250),
            (this._ch = 2438529370),
            (this._dh = 355462360),
            (this._eh = 1731405415),
            (this._fh = 2394180231),
            (this._gh = 3675008525),
            (this._hh = 1203062813),
            (this._al = 3238371032),
            (this._bl = 914150663),
            (this._cl = 812702999),
            (this._dl = 4144912697),
            (this._el = 4290775857),
            (this._fl = 1750603025),
            (this._gl = 1694076839),
            (this._hl = 3204075428),
            this
          );
        }),
        (u.prototype._hash = function() {
          var t = o.allocUnsafe(48);
          function e(e, n, r) {
            t.writeInt32BE(e, r), t.writeInt32BE(n, r + 4);
          }
          return (
            e(this._ah, this._al, 0),
            e(this._bh, this._bl, 8),
            e(this._ch, this._cl, 16),
            e(this._dh, this._dl, 24),
            e(this._eh, this._el, 32),
            e(this._fh, this._fl, 40),
            t
          );
        }),
        (t.exports = u);
    },
    b8e3: function(t, e) {
      t.exports = !0;
    },
    b9a8: function(t, e, n) {
      "use strict";
      var r = n("399f"),
        i = n("6aa2"),
        a = n("3337"),
        o = a.utils,
        s = o.assert,
        u = n("bb34"),
        c = n("b73f");
      function l(t) {
        if (!(this instanceof l)) return new l(t);
        "string" === typeof t &&
          (s(a.curves.hasOwnProperty(t), "Unknown curve " + t),
          (t = a.curves[t])),
          t instanceof a.curves.PresetCurve && (t = { curve: t }),
          (this.curve = t.curve.curve),
          (this.n = this.curve.n),
          (this.nh = this.n.ushrn(1)),
          (this.g = this.curve.g),
          (this.g = t.curve.g),
          this.g.precompute(t.curve.n.bitLength() + 1),
          (this.hash = t.hash || t.curve.hash);
      }
      (t.exports = l),
        (l.prototype.keyPair = function(t) {
          return new u(this, t);
        }),
        (l.prototype.keyFromPrivate = function(t, e) {
          return u.fromPrivate(this, t, e);
        }),
        (l.prototype.keyFromPublic = function(t, e) {
          return u.fromPublic(this, t, e);
        }),
        (l.prototype.genKeyPair = function(t) {
          t || (t = {});
          var e = new i({
              hash: this.hash,
              pers: t.pers,
              persEnc: t.persEnc || "utf8",
              entropy: t.entropy || a.rand(this.hash.hmacStrength),
              entropyEnc: (t.entropy && t.entropyEnc) || "utf8",
              nonce: this.n.toArray()
            }),
            n = this.n.byteLength(),
            o = this.n.sub(new r(2));
          do {
            var s = new r(e.generate(n));
            if (!(s.cmp(o) > 0)) return s.iaddn(1), this.keyFromPrivate(s);
          } while (1);
        }),
        (l.prototype._truncateToN = function(t, e) {
          var n = 8 * t.byteLength() - this.n.bitLength();
          return (
            n > 0 && (t = t.ushrn(n)),
            !e && t.cmp(this.n) >= 0 ? t.sub(this.n) : t
          );
        }),
        (l.prototype.sign = function(t, e, n, a) {
          "object" === typeof n && ((a = n), (n = null)),
            a || (a = {}),
            (e = this.keyFromPrivate(e, n)),
            (t = this._truncateToN(new r(t, 16)));
          for (
            var o = this.n.byteLength(),
              s = e.getPrivate().toArray("be", o),
              u = t.toArray("be", o),
              l = new i({
                hash: this.hash,
                entropy: s,
                nonce: u,
                pers: a.pers,
                persEnc: a.persEnc || "utf8"
              }),
              f = this.n.sub(new r(1)),
              h = 0;
            1;
            h++
          ) {
            var p = a.k ? a.k(h) : new r(l.generate(this.n.byteLength()));
            if (
              ((p = this._truncateToN(p, !0)),
              !(p.cmpn(1) <= 0 || p.cmp(f) >= 0))
            ) {
              var d = this.g.mul(p);
              if (!d.isInfinity()) {
                var m = d.getX(),
                  v = m.umod(this.n);
                if (0 !== v.cmpn(0)) {
                  var y = p.invm(this.n).mul(v.mul(e.getPrivate()).iadd(t));
                  if (((y = y.umod(this.n)), 0 !== y.cmpn(0))) {
                    var g =
                      (d.getY().isOdd() ? 1 : 0) | (0 !== m.cmp(v) ? 2 : 0);
                    return (
                      a.canonical &&
                        y.cmp(this.nh) > 0 &&
                        ((y = this.n.sub(y)), (g ^= 1)),
                      new c({ r: v, s: y, recoveryParam: g })
                    );
                  }
                }
              }
            }
          }
        }),
        (l.prototype.verify = function(t, e, n, i) {
          (t = this._truncateToN(new r(t, 16))),
            (n = this.keyFromPublic(n, i)),
            (e = new c(e, "hex"));
          var a = e.r,
            o = e.s;
          if (a.cmpn(1) < 0 || a.cmp(this.n) >= 0) return !1;
          if (o.cmpn(1) < 0 || o.cmp(this.n) >= 0) return !1;
          var s = o.invm(this.n),
            u = s.mul(t).umod(this.n),
            l = s.mul(a).umod(this.n);
          if (!this.curve._maxwellTrick) {
            var f = this.g.mulAdd(u, n.getPublic(), l);
            return (
              !f.isInfinity() &&
              0 ===
                f
                  .getX()
                  .umod(this.n)
                  .cmp(a)
            );
          }
          f = this.g.jmulAdd(u, n.getPublic(), l);
          return !f.isInfinity() && f.eqXToP(a);
        }),
        (l.prototype.recoverPubKey = function(t, e, n, i) {
          s((3 & n) === n, "The recovery param is more than two bits"),
            (e = new c(e, i));
          var a = this.n,
            o = new r(t),
            u = e.r,
            l = e.s,
            f = 1 & n,
            h = n >> 1;
          if (u.cmp(this.curve.p.umod(this.curve.n)) >= 0 && h)
            throw new Error("Unable to find sencond key candinate");
          u = h
            ? this.curve.pointFromX(u.add(this.curve.n), f)
            : this.curve.pointFromX(u, f);
          var p = e.r.invm(a),
            d = a
              .sub(o)
              .mul(p)
              .umod(a),
            m = l.mul(p).umod(a);
          return this.g.mulAdd(d, u, m);
        }),
        (l.prototype.getKeyRecoveryParam = function(t, e, n, r) {
          if (((e = new c(e, r)), null !== e.recoveryParam))
            return e.recoveryParam;
          for (var i = 0; i < 4; i++) {
            var a;
            try {
              a = this.recoverPubKey(t, e, i);
            } catch (t) {
              continue;
            }
            if (a.eq(n)) return i;
          }
          throw new Error("Unable to find valid recovery factor");
        });
    },
    bac2: function(t, e, n) {
      var r = {
          ECB: n("0145"),
          CBC: n("c119"),
          CFB: n("3505"),
          CFB8: n("62c9"),
          CFB1: n("5239"),
          OFB: n("5165"),
          CTR: n("6ade"),
          GCM: n("6ade")
        },
        i = n("e85f");
      for (var a in i) i[a].module = r[i[a].mode];
      t.exports = i;
    },
    bb34: function(t, e, n) {
      "use strict";
      var r = n("399f"),
        i = n("3337"),
        a = i.utils,
        o = a.assert;
      function s(t, e) {
        (this.ec = t),
          (this.priv = null),
          (this.pub = null),
          e.priv && this._importPrivate(e.priv, e.privEnc),
          e.pub && this._importPublic(e.pub, e.pubEnc);
      }
      (t.exports = s),
        (s.fromPublic = function(t, e, n) {
          return e instanceof s ? e : new s(t, { pub: e, pubEnc: n });
        }),
        (s.fromPrivate = function(t, e, n) {
          return e instanceof s ? e : new s(t, { priv: e, privEnc: n });
        }),
        (s.prototype.validate = function() {
          var t = this.getPublic();
          return t.isInfinity()
            ? { result: !1, reason: "Invalid public key" }
            : t.validate()
            ? t.mul(this.ec.curve.n).isInfinity()
              ? { result: !0, reason: null }
              : { result: !1, reason: "Public key * N != O" }
            : { result: !1, reason: "Public key is not a point" };
        }),
        (s.prototype.getPublic = function(t, e) {
          return (
            "string" === typeof t && ((e = t), (t = null)),
            this.pub || (this.pub = this.ec.g.mul(this.priv)),
            e ? this.pub.encode(e, t) : this.pub
          );
        }),
        (s.prototype.getPrivate = function(t) {
          return "hex" === t ? this.priv.toString(16, 2) : this.priv;
        }),
        (s.prototype._importPrivate = function(t, e) {
          (this.priv = new r(t, e || 16)),
            (this.priv = this.priv.umod(this.ec.curve.n));
        }),
        (s.prototype._importPublic = function(t, e) {
          if (t.x || t.y)
            return (
              "mont" === this.ec.curve.type
                ? o(t.x, "Need x coordinate")
                : ("short" !== this.ec.curve.type &&
                    "edwards" !== this.ec.curve.type) ||
                  o(t.x && t.y, "Need both x and y coordinate"),
              void (this.pub = this.ec.curve.point(t.x, t.y))
            );
          this.pub = this.ec.curve.decodePoint(t, e);
        }),
        (s.prototype.derive = function(t) {
          return t.mul(this.priv).getX();
        }),
        (s.prototype.sign = function(t, e, n) {
          return this.ec.sign(t, this, e, n);
        }),
        (s.prototype.verify = function(t, e) {
          return this.ec.verify(t, e, this);
        }),
        (s.prototype.inspect = function() {
          return (
            "<Key priv: " +
            (this.priv && this.priv.toString(16, 2)) +
            " pub: " +
            (this.pub && this.pub.inspect()) +
            " >"
          );
        });
    },
    bb44: function(t, e, n) {
      "use strict";
      var r = n("c3c0"),
        i = n("edc9"),
        a = r.rotl32,
        o = r.sum32,
        s = r.sum32_3,
        u = r.sum32_4,
        c = i.BlockHash;
      function l() {
        if (!(this instanceof l)) return new l();
        c.call(this),
          (this.h = [
            1732584193,
            4023233417,
            2562383102,
            271733878,
            3285377520
          ]),
          (this.endian = "little");
      }
      function f(t, e, n, r) {
        return t <= 15
          ? e ^ n ^ r
          : t <= 31
          ? (e & n) | (~e & r)
          : t <= 47
          ? (e | ~n) ^ r
          : t <= 63
          ? (e & r) | (n & ~r)
          : e ^ (n | ~r);
      }
      function h(t) {
        return t <= 15
          ? 0
          : t <= 31
          ? 1518500249
          : t <= 47
          ? 1859775393
          : t <= 63
          ? 2400959708
          : 2840853838;
      }
      function p(t) {
        return t <= 15
          ? 1352829926
          : t <= 31
          ? 1548603684
          : t <= 47
          ? 1836072691
          : t <= 63
          ? 2053994217
          : 0;
      }
      r.inherits(l, c),
        (e.ripemd160 = l),
        (l.blockSize = 512),
        (l.outSize = 160),
        (l.hmacStrength = 192),
        (l.padLength = 64),
        (l.prototype._update = function(t, e) {
          for (
            var n = this.h[0],
              r = this.h[1],
              i = this.h[2],
              c = this.h[3],
              l = this.h[4],
              g = n,
              b = r,
              w = i,
              _ = c,
              x = l,
              E = 0;
            E < 80;
            E++
          ) {
            var S = o(a(u(n, f(E, r, i, c), t[d[E] + e], h(E)), v[E]), l);
            (n = l),
              (l = c),
              (c = a(i, 10)),
              (i = r),
              (r = S),
              (S = o(a(u(g, f(79 - E, b, w, _), t[m[E] + e], p(E)), y[E]), x)),
              (g = x),
              (x = _),
              (_ = a(w, 10)),
              (w = b),
              (b = S);
          }
          (S = s(this.h[1], i, _)),
            (this.h[1] = s(this.h[2], c, x)),
            (this.h[2] = s(this.h[3], l, g)),
            (this.h[3] = s(this.h[4], n, b)),
            (this.h[4] = s(this.h[0], r, w)),
            (this.h[0] = S);
        }),
        (l.prototype._digest = function(t) {
          return "hex" === t
            ? r.toHex32(this.h, "little")
            : r.split32(this.h, "little");
        });
      var d = [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          7,
          4,
          13,
          1,
          10,
          6,
          15,
          3,
          12,
          0,
          9,
          5,
          2,
          14,
          11,
          8,
          3,
          10,
          14,
          4,
          9,
          15,
          8,
          1,
          2,
          7,
          0,
          6,
          13,
          11,
          5,
          12,
          1,
          9,
          11,
          10,
          0,
          8,
          12,
          4,
          13,
          3,
          7,
          15,
          14,
          5,
          6,
          2,
          4,
          0,
          5,
          9,
          7,
          12,
          2,
          10,
          14,
          1,
          3,
          8,
          11,
          6,
          15,
          13
        ],
        m = [
          5,
          14,
          7,
          0,
          9,
          2,
          11,
          4,
          13,
          6,
          15,
          8,
          1,
          10,
          3,
          12,
          6,
          11,
          3,
          7,
          0,
          13,
          5,
          10,
          14,
          15,
          8,
          12,
          4,
          9,
          1,
          2,
          15,
          5,
          1,
          3,
          7,
          14,
          6,
          9,
          11,
          8,
          12,
          2,
          10,
          0,
          4,
          13,
          8,
          6,
          4,
          1,
          3,
          11,
          15,
          0,
          5,
          12,
          2,
          13,
          9,
          7,
          10,
          14,
          12,
          15,
          10,
          4,
          1,
          5,
          8,
          7,
          6,
          2,
          13,
          14,
          0,
          3,
          9,
          11
        ],
        v = [
          11,
          14,
          15,
          12,
          5,
          8,
          7,
          9,
          11,
          13,
          14,
          15,
          6,
          7,
          9,
          8,
          7,
          6,
          8,
          13,
          11,
          9,
          7,
          15,
          7,
          12,
          15,
          9,
          11,
          7,
          13,
          12,
          11,
          13,
          6,
          7,
          14,
          9,
          13,
          15,
          14,
          8,
          13,
          6,
          5,
          12,
          7,
          5,
          11,
          12,
          14,
          15,
          14,
          15,
          9,
          8,
          9,
          14,
          5,
          6,
          8,
          6,
          5,
          12,
          9,
          15,
          5,
          11,
          6,
          8,
          13,
          12,
          5,
          12,
          13,
          14,
          11,
          8,
          5,
          6
        ],
        y = [
          8,
          9,
          9,
          11,
          13,
          15,
          15,
          5,
          7,
          7,
          8,
          11,
          14,
          14,
          12,
          6,
          9,
          13,
          15,
          7,
          12,
          8,
          9,
          11,
          7,
          7,
          12,
          7,
          6,
          15,
          13,
          11,
          9,
          7,
          15,
          11,
          8,
          6,
          6,
          14,
          12,
          13,
          5,
          14,
          13,
          13,
          7,
          5,
          15,
          5,
          8,
          11,
          14,
          14,
          6,
          14,
          6,
          9,
          12,
          9,
          12,
          5,
          15,
          8,
          8,
          5,
          12,
          9,
          12,
          5,
          14,
          6,
          8,
          13,
          6,
          5,
          15,
          13,
          11,
          11
        ];
    },
    bc13: function(t, e, n) {
      var r = n("e53d"),
        i = r.navigator;
      t.exports = (i && i.userAgent) || "";
    },
    bcaa: function(t, e, n) {
      var r = n("cb7c"),
        i = n("d3f4"),
        a = n("a5b8");
      t.exports = function(t, e) {
        if ((r(t), i(e) && e.constructor === t)) return e;
        var n = a.f(t),
          o = n.resolve;
        return o(e), n.promise;
      };
    },
    bd9d: function(t, e) {
      function n(t) {
        var e,
          n = t.length;
        while (n--) {
          if (((e = t.readUInt8(n)), 255 !== e)) {
            e++, t.writeUInt8(e, n);
            break;
          }
          t.writeUInt8(0, n);
        }
      }
      t.exports = n;
    },
    be13: function(t, e) {
      t.exports = function(t) {
        if (void 0 == t) throw TypeError("Can't call method on  " + t);
        return t;
      };
    },
    bebe: function(t, e, n) {
      "use strict";
      (function(t, r, i) {
        n.d(e, "a", function() {
          return It;
        });
        var a = n("4f66"),
          o = function(t, e) {
            return (o =
              Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array &&
                function(t, e) {
                  t.__proto__ = e;
                }) ||
              function(t, e) {
                for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
              })(t, e);
          };
        /**
         * @license
         * Copyright 2019 Google LLC. All Rights Reserved.
         * Licensed under the Apache License, Version 2.0 (the "License");
         * you may not use this file except in compliance with the License.
         * You may obtain a copy of the License at
         *
         * http://www.apache.org/licenses/LICENSE-2.0
         *
         * Unless required by applicable law or agreed to in writing, software
         * distributed under the License is distributed on an "AS IS" BASIS,
         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
         * See the License for the specific language governing permissions and
         * limitations under the License.
         * =============================================================================
         */ function s(t, e) {
          function n() {
            this.constructor = t;
          }
          o(t, e),
            (t.prototype =
              null === e
                ? Object.create(e)
                : ((n.prototype = e.prototype), new n()));
        }
        function u(t, e, n, r) {
          return new (n || (n = Promise))(function(i, a) {
            function o(t) {
              try {
                u(r.next(t));
              } catch (t) {
                a(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                a(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(o, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        }
        function c(t, e) {
          var n,
            r,
            i,
            a,
            o = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (a = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (a[Symbol.iterator] = function() {
                return this;
              }),
            a
          );
          function s(a) {
            return function(s) {
              return (function(a) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; o; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          2 & a[0]
                            ? r.return
                            : a[0]
                            ? r.throw || ((i = r.return) && i.call(r), 0)
                            : r.next) &&
                        !(i = i.call(r, a[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (a = [2 & a[0], i.value]), a[0])) {
                      case 0:
                      case 1:
                        i = a;
                        break;
                      case 4:
                        return o.label++, { value: a[1], done: !1 };
                      case 5:
                        o.label++, (r = a[1]), (a = [0]);
                        continue;
                      case 7:
                        (a = o.ops.pop()), o.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = o.trys).length > 0 && i[i.length - 1]) &&
                          (6 === a[0] || 2 === a[0])
                        ) {
                          o = 0;
                          continue;
                        }
                        if (
                          3 === a[0] &&
                          (!i || (a[1] > i[0] && a[1] < i[3]))
                        ) {
                          o.label = a[1];
                          break;
                        }
                        if (6 === a[0] && o.label < i[1]) {
                          (o.label = i[1]), (i = a);
                          break;
                        }
                        if (i && o.label < i[2]) {
                          (o.label = i[2]), o.ops.push(a);
                          break;
                        }
                        i[2] && o.ops.pop(), o.trys.pop();
                        continue;
                    }
                    a = e.call(t, o);
                  } catch (t) {
                    (a = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & a[0]) throw a[1];
                return { value: a[0] ? a[1] : void 0, done: !0 };
              })([a, s]);
            };
          }
        }
        var l =
          "undefined" != typeof window
            ? window
            : "undefined" != typeof t
            ? t
            : "undefined" != typeof self
            ? self
            : {};
        function f(t) {
          return t &&
            t.__esModule &&
            Object.prototype.hasOwnProperty.call(t, "default")
            ? t.default
            : t;
        }
        function h(t, e) {
          return t((e = { exports: {} }), e.exports), e.exports;
        }
        var p = h(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (
                  (e.c = t.c), (e.s0 = t.s0), (e.s1 = t.s1), (e.s2 = t.s2), e
                );
              }
              function i(t, e) {
                var n = new function(t) {
                    var e,
                      n = this,
                      r = ((e = 4022871197),
                      function(t) {
                        t = t.toString();
                        for (var n = 0; n < t.length; n++) {
                          var r = 0.02519603282416938 * (e += t.charCodeAt(n));
                          (r -= e = r >>> 0),
                            (e = (r *= e) >>> 0),
                            (e += 4294967296 * (r -= e));
                        }
                        return 2.3283064365386963e-10 * (e >>> 0);
                      });
                    (n.next = function() {
                      var t = 2091639 * n.s0 + 2.3283064365386963e-10 * n.c;
                      return (
                        (n.s0 = n.s1), (n.s1 = n.s2), (n.s2 = t - (n.c = 0 | t))
                      );
                    }),
                      (n.c = 1),
                      (n.s0 = r(" ")),
                      (n.s1 = r(" ")),
                      (n.s2 = r(" ")),
                      (n.s0 -= r(t)),
                      n.s0 < 0 && (n.s0 += 1),
                      (n.s1 -= r(t)),
                      n.s1 < 0 && (n.s1 += 1),
                      (n.s2 -= r(t)),
                      n.s2 < 0 && (n.s2 += 1),
                      (r = null);
                  }(t),
                  i = e && e.state,
                  a = n.next;
                return (
                  (a.int32 = function() {
                    return (4294967296 * n.next()) | 0;
                  }),
                  (a.double = function() {
                    return a() + 1.1102230246251565e-16 * ((2097152 * a()) | 0);
                  }),
                  (a.quick = a),
                  i &&
                    ("object" == typeof i && r(i, n),
                    (a.state = function() {
                      return r(n, {});
                    })),
                  a
                );
              }
              e && e.exports
                ? (e.exports = i)
                : n && n.amd
                ? n(function() {
                    return i;
                  })
                : (this.alea = i);
            })(0, t, !1);
          }),
          d = h(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (e.x = t.x), (e.y = t.y), (e.z = t.z), (e.w = t.w), e;
              }
              function i(t, e) {
                var n = new function(t) {
                    var e = this,
                      n = "";
                    (e.x = 0),
                      (e.y = 0),
                      (e.z = 0),
                      (e.w = 0),
                      (e.next = function() {
                        var t = e.x ^ (e.x << 11);
                        return (
                          (e.x = e.y),
                          (e.y = e.z),
                          (e.z = e.w),
                          (e.w ^= (e.w >>> 19) ^ t ^ (t >>> 8))
                        );
                      }),
                      t === (0 | t) ? (e.x = t) : (n += t);
                    for (var r = 0; r < n.length + 64; r++)
                      (e.x ^= 0 | n.charCodeAt(r)), e.next();
                  }(t),
                  i = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  i &&
                    ("object" == typeof i && r(i, n),
                    (a.state = function() {
                      return r(n, {});
                    })),
                  a
                );
              }
              e && e.exports
                ? (e.exports = i)
                : n && n.amd
                ? n(function() {
                    return i;
                  })
                : (this.xor128 = i);
            })(0, t, !1);
          }),
          m = h(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (
                  (e.x = t.x),
                  (e.y = t.y),
                  (e.z = t.z),
                  (e.w = t.w),
                  (e.v = t.v),
                  (e.d = t.d),
                  e
                );
              }
              function i(t, e) {
                var n = new function(t) {
                    var e = this,
                      n = "";
                    (e.next = function() {
                      var t = e.x ^ (e.x >>> 2);
                      return (
                        (e.x = e.y),
                        (e.y = e.z),
                        (e.z = e.w),
                        (e.w = e.v),
                        ((e.d = (e.d + 362437) | 0) +
                          (e.v = e.v ^ (e.v << 4) ^ t ^ (t << 1))) |
                          0
                      );
                    }),
                      (e.x = 0),
                      (e.y = 0),
                      (e.z = 0),
                      (e.w = 0),
                      (e.v = 0),
                      t === (0 | t) ? (e.x = t) : (n += t);
                    for (var r = 0; r < n.length + 64; r++)
                      (e.x ^= 0 | n.charCodeAt(r)),
                        r == n.length && (e.d = (e.x << 10) ^ (e.x >>> 4)),
                        e.next();
                  }(t),
                  i = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  i &&
                    ("object" == typeof i && r(i, n),
                    (a.state = function() {
                      return r(n, {});
                    })),
                  a
                );
              }
              e && e.exports
                ? (e.exports = i)
                : n && n.amd
                ? n(function() {
                    return i;
                  })
                : (this.xorwow = i);
            })(0, t, !1);
          }),
          v = h(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (e.x = t.x.slice()), (e.i = t.i), e;
              }
              function i(t, e) {
                null == t && (t = +new Date());
                var n = new function(t) {
                    var e = this;
                    (e.next = function() {
                      var t,
                        n,
                        r = e.x,
                        i = e.i;
                      return (
                        (t = r[i]),
                        (n = (t ^= t >>> 7) ^ (t << 24)),
                        (n ^= (t = r[(i + 1) & 7]) ^ (t >>> 10)),
                        (n ^= (t = r[(i + 3) & 7]) ^ (t >>> 3)),
                        (n ^= (t = r[(i + 4) & 7]) ^ (t << 7)),
                        (t = r[(i + 7) & 7]),
                        (n ^= (t ^= t << 13) ^ (t << 9)),
                        (r[i] = n),
                        (e.i = (i + 1) & 7),
                        n
                      );
                    }),
                      (function(t, e) {
                        var n,
                          r = [];
                        if (e === (0 | e)) r[0] = e;
                        else
                          for (e = "" + e, n = 0; n < e.length; ++n)
                            r[7 & n] =
                              (r[7 & n] << 15) ^
                              ((e.charCodeAt(n) + r[(n + 1) & 7]) << 13);
                        for (; r.length < 8; ) r.push(0);
                        for (n = 0; n < 8 && 0 === r[n]; ++n);
                        for (
                          8 == n ? (r[7] = -1) : r[n],
                            t.x = r,
                            t.i = 0,
                            n = 256;
                          n > 0;
                          --n
                        )
                          t.next();
                      })(e, t);
                  }(t),
                  i = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  i &&
                    (i.x && r(i, n),
                    (a.state = function() {
                      return r(n, {});
                    })),
                  a
                );
              }
              e && e.exports
                ? (e.exports = i)
                : n && n.amd
                ? n(function() {
                    return i;
                  })
                : (this.xorshift7 = i);
            })(0, t, !1);
          }),
          y = h(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (e.i = t.i), (e.w = t.w), (e.X = t.X.slice()), e;
              }
              function i(t, e) {
                null == t && (t = +new Date());
                var n = new function(t) {
                    var e = this;
                    (e.next = function() {
                      var t,
                        n,
                        r = e.w,
                        i = e.X,
                        a = e.i;
                      return (
                        (e.w = r = (r + 1640531527) | 0),
                        (n = i[(a + 34) & 127]),
                        (t = i[(a = (a + 1) & 127)]),
                        (n ^= n << 13),
                        (t ^= t << 17),
                        (n ^= n >>> 15),
                        (t ^= t >>> 12),
                        (n = i[a] = n ^ t),
                        (e.i = a),
                        (n + (r ^ (r >>> 16))) | 0
                      );
                    }),
                      (function(t, e) {
                        var n,
                          r,
                          i,
                          a,
                          o,
                          s = [],
                          u = 128;
                        for (
                          e === (0 | e)
                            ? ((r = e), (e = null))
                            : ((e += "\0"),
                              (r = 0),
                              (u = Math.max(u, e.length))),
                            i = 0,
                            a = -32;
                          a < u;
                          ++a
                        )
                          e && (r ^= e.charCodeAt((a + 32) % e.length)),
                            0 === a && (o = r),
                            (r ^= r << 10),
                            (r ^= r >>> 15),
                            (r ^= r << 4),
                            (r ^= r >>> 13),
                            a >= 0 &&
                              ((o = (o + 1640531527) | 0),
                              (i = 0 == (n = s[127 & a] ^= r + o) ? i + 1 : 0));
                        for (
                          i >= 128 && (s[127 & ((e && e.length) || 0)] = -1),
                            i = 127,
                            a = 512;
                          a > 0;
                          --a
                        )
                          (r = s[(i + 34) & 127]),
                            (n = s[(i = (i + 1) & 127)]),
                            (r ^= r << 13),
                            (n ^= n << 17),
                            (r ^= r >>> 15),
                            (n ^= n >>> 12),
                            (s[i] = r ^ n);
                        (t.w = o), (t.X = s), (t.i = i);
                      })(e, t);
                  }(t),
                  i = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  i &&
                    (i.X && r(i, n),
                    (a.state = function() {
                      return r(n, {});
                    })),
                  a
                );
              }
              e && e.exports
                ? (e.exports = i)
                : n && n.amd
                ? n(function() {
                    return i;
                  })
                : (this.xor4096 = i);
            })(0, t, !1);
          }),
          g = h(function(t) {
            !(function(t, e, n) {
              function r(t, e) {
                return (e.a = t.a), (e.b = t.b), (e.c = t.c), (e.d = t.d), e;
              }
              function i(t, e) {
                var n = new function(t) {
                    var e = this,
                      n = "";
                    (e.next = function() {
                      var t = e.b,
                        n = e.c,
                        r = e.d,
                        i = e.a;
                      return (
                        (t = (t << 25) ^ (t >>> 7) ^ n),
                        (n = (n - r) | 0),
                        (r = (r << 24) ^ (r >>> 8) ^ i),
                        (i = (i - t) | 0),
                        (e.b = t = (t << 20) ^ (t >>> 12) ^ n),
                        (e.c = n = (n - r) | 0),
                        (e.d = (r << 16) ^ (n >>> 16) ^ i),
                        (e.a = (i - t) | 0)
                      );
                    }),
                      (e.a = 0),
                      (e.b = 0),
                      (e.c = -1640531527),
                      (e.d = 1367130551),
                      t === Math.floor(t)
                        ? ((e.a = (t / 4294967296) | 0), (e.b = 0 | t))
                        : (n += t);
                    for (var r = 0; r < n.length + 20; r++)
                      (e.b ^= 0 | n.charCodeAt(r)), e.next();
                  }(t),
                  i = e && e.state,
                  a = function() {
                    return (n.next() >>> 0) / 4294967296;
                  };
                return (
                  (a.double = function() {
                    do {
                      var t =
                        ((n.next() >>> 11) + (n.next() >>> 0) / 4294967296) /
                        (1 << 21);
                    } while (0 === t);
                    return t;
                  }),
                  (a.int32 = n.next),
                  (a.quick = a),
                  i &&
                    ("object" == typeof i && r(i, n),
                    (a.state = function() {
                      return r(n, {});
                    })),
                  a
                );
              }
              e && e.exports
                ? (e.exports = i)
                : n && n.amd
                ? n(function() {
                    return i;
                  })
                : (this.tychei = i);
            })(0, t, !1);
          }),
          b = h(function(t) {
            !(function(e, r) {
              var i,
                a = (0, eval)("this"),
                o = 256,
                s = 6,
                u = "random",
                c = r.pow(o, s),
                l = r.pow(2, 52),
                f = 2 * l,
                h = o - 1;
              function p(t, n, p) {
                var y = [],
                  g = m(
                    (function t(e, n) {
                      var r,
                        i = [],
                        a = typeof e;
                      if (n && "object" == a)
                        for (r in e)
                          try {
                            i.push(t(e[r], n - 1));
                          } catch (t) {}
                      return i.length ? i : "string" == a ? e : e + "\0";
                    })(
                      (n = 1 == n ? { entropy: !0 } : n || {}).entropy
                        ? [t, v(e)]
                        : null == t
                        ? (function() {
                            try {
                              var t;
                              return (
                                i && (t = i.randomBytes)
                                  ? (t = t(o))
                                  : ((t = new Uint8Array(o)),
                                    (a.crypto || a.msCrypto).getRandomValues(
                                      t
                                    )),
                                v(t)
                              );
                            } catch (t) {
                              var n = a.navigator,
                                r = n && n.plugins;
                              return [+new Date(), a, r, a.screen, v(e)];
                            }
                          })()
                        : t,
                      3
                    ),
                    y
                  ),
                  b = new function(t) {
                    var e,
                      n = t.length,
                      r = this,
                      i = 0,
                      a = (r.i = r.j = 0),
                      s = (r.S = []);
                    for (n || (t = [n++]); i < o; ) s[i] = i++;
                    for (i = 0; i < o; i++)
                      (s[i] = s[(a = h & (a + t[i % n] + (e = s[i])))]),
                        (s[a] = e);
                    (r.g = function(t) {
                      for (var e, n = 0, i = r.i, a = r.j, s = r.S; t--; )
                        (e = s[(i = h & (i + 1))]),
                          (n =
                            n * o +
                            s[
                              h & ((s[i] = s[(a = h & (a + e))]) + (s[a] = e))
                            ]);
                      return (r.i = i), (r.j = a), n;
                    })(o);
                  }(y),
                  w = function() {
                    for (var t = b.g(s), e = c, n = 0; t < l; )
                      (t = (t + n) * o), (e *= o), (n = b.g(1));
                    for (; t >= f; ) (t /= 2), (e /= 2), (n >>>= 1);
                    return (t + n) / e;
                  };
                return (
                  (w.int32 = function() {
                    return 0 | b.g(4);
                  }),
                  (w.quick = function() {
                    return b.g(4) / 4294967296;
                  }),
                  (w.double = w),
                  m(v(b.S), e),
                  (n.pass ||
                    p ||
                    function(t, e, n, i) {
                      return (
                        i &&
                          (i.S && d(i, b),
                          (t.state = function() {
                            return d(b, {});
                          })),
                        n ? ((r[u] = t), e) : t
                      );
                    })(w, g, "global" in n ? n.global : this == r, n.state)
                );
              }
              function d(t, e) {
                return (e.i = t.i), (e.j = t.j), (e.S = t.S.slice()), e;
              }
              function m(t, e) {
                for (var n, r = t + "", i = 0; i < r.length; )
                  e[h & i] = h & ((n ^= 19 * e[h & i]) + r.charCodeAt(i++));
                return v(e);
              }
              function v(t) {
                return String.fromCharCode.apply(0, t);
              }
              if (((r["seed" + u] = p), m(r.random(), e), t.exports)) {
                t.exports = p;
                try {
                  i = n("1c46");
                } catch (t) {}
              }
            })([], Math);
          });
        (b.alea = p),
          (b.xor128 = d),
          (b.xorwow = m),
          (b.xorshift7 = v),
          (b.xor4096 = y),
          (b.tychei = g);
        var w = b,
          _ = w.alea,
          x = h(function(t, e) {
            function n(t) {
              for (var e = t.length, n = 0, r = 0; e > 0; )
                (r = (Math.random() * e) | 0),
                  (n = t[--e]),
                  (t[e] = t[r]),
                  (t[r] = n);
            }
            function i(t, e) {
              if (!t) throw new Error("string" == typeof e ? e : e());
            }
            function a(t, e) {
              if ((void 0 === e && (e = []), Array.isArray(t) || l(t)))
                for (var n = 0; n < t.length; ++n) a(t[n], e);
              else e.push(t);
              return e;
            }
            function o(t, e) {
              if (t === e) return !0;
              if (null == t || null == e) return !1;
              if (t.length !== e.length) return !1;
              for (var n = 0; n < t.length; n++) if (t[n] !== e[n]) return !1;
              return !0;
            }
            function s(t) {
              return t % 1 == 0;
            }
            function u(t, e) {
              var n = e.length;
              return (
                i(
                  (t =
                    null == t
                      ? e.map(function(t, e) {
                          return e;
                        })
                      : [].concat(t)).every(function(t) {
                    return t >= -n && t < n;
                  }),
                  "All values in axis param must be in range [-" +
                    n +
                    ", " +
                    n +
                    ") but got axis " +
                    t
                ),
                i(
                  t.every(function(t) {
                    return s(t);
                  }),
                  "All values in axis param must be integers but got axis " + t
                ),
                t.map(function(t) {
                  return t < 0 ? n + t : t;
                })
              );
            }
            function c(t, e) {
              for (var n = 0; n < t.length; n++) {
                var r = t[n];
                if (isNaN(r) || !isFinite(r))
                  throw Error(
                    "A tensor of type " +
                      e +
                      " being uploaded contains " +
                      r +
                      "."
                  );
              }
            }
            function l(t) {
              return (
                t instanceof Float32Array ||
                t instanceof Int32Array ||
                t instanceof Uint8Array
              );
            }
            function f(t) {
              return "string" == typeof t || t instanceof String;
            }
            function h(t) {
              return "boolean" == typeof t;
            }
            function p(t) {
              return "number" == typeof t;
            }
            function d(t, e) {
              if (null == e || "float32" === e || "complex64" === e)
                return new Float32Array(t);
              if ("int32" === e) return new Int32Array(t);
              if ("bool" === e) return new Uint8Array(t);
              throw new Error("Unknown data type " + e);
            }
            Object.defineProperty(e, "__esModule", { value: !0 }),
              (e.shuffle = n),
              (e.clamp = function(t, e, n) {
                return Math.max(t, Math.min(e, n));
              }),
              (e.nearestLargerEven = function(t) {
                return t % 2 == 0 ? t : t + 1;
              }),
              (e.sum = function(t) {
                for (var e = 0, n = 0; n < t.length; n++) e += t[n];
                return e;
              }),
              (e.randUniform = function(t, e) {
                var n = Math.random();
                return e * n + (1 - n) * t;
              }),
              (e.distSquared = function(t, e) {
                for (var n = 0, r = 0; r < t.length; r++) {
                  var i = Number(t[r]) - Number(e[r]);
                  n += i * i;
                }
                return n;
              }),
              (e.assert = i),
              (e.assertShapesMatch = function(t, e, n) {
                void 0 === n && (n = ""),
                  i(o(t, e), n + " Shapes " + t + " and " + e + " must match");
              }),
              (e.assertNonNull = function(t) {
                i(
                  null != t,
                  "The input to the tensor constructor must be a non-null value."
                );
              }),
              (e.flatten = a),
              (e.sizeFromShape = function(t) {
                if (0 === t.length) return 1;
                for (var e = t[0], n = 1; n < t.length; n++) e *= t[n];
                return e;
              }),
              (e.isScalarShape = function(t) {
                return 0 === t.length;
              }),
              (e.arraysEqual = o),
              (e.isInt = s),
              (e.tanh = function(t) {
                if (null != Math.tanh) return Math.tanh(t);
                if (t === 1 / 0) return 1;
                if (t === -1 / 0) return -1;
                var e = Math.exp(2 * t);
                return (e - 1) / (e + 1);
              }),
              (e.sizeToSquarishShape = function(t) {
                var e = Math.ceil(Math.sqrt(t));
                return [e, Math.ceil(t / e)];
              }),
              (e.createShuffledIndices = function(t) {
                for (var e = new Uint32Array(t), r = 0; r < t; ++r) e[r] = r;
                return n(e), e;
              }),
              (e.rightPad = function(t, e) {
                return e <= t.length ? t : t + " ".repeat(e - t.length);
              }),
              (e.repeatedTry = function(t, e, n) {
                return (
                  void 0 === e &&
                    (e = function(t) {
                      return 0;
                    }),
                  new Promise(function(r, i) {
                    var a = 0,
                      o = function() {
                        if (t()) r();
                        else {
                          var s = e(++a);
                          null != n && a >= n ? i() : setTimeout(o, s);
                        }
                      };
                    o();
                  })
                );
              }),
              (e.inferFromImplicitShape = function(t, e) {
                for (var n = 1, r = -1, i = 0; i < t.length; ++i)
                  if (t[i] >= 0) n *= t[i];
                  else if (-1 === t[i]) {
                    if (-1 !== r)
                      throw Error(
                        "Shapes can only have 1 implicit size. Found -1 at dim " +
                          r +
                          " and dim " +
                          i
                      );
                    r = i;
                  } else if (t[i] < 0)
                    throw Error(
                      "Shapes can not be < 0. Found " + t[i] + " at dim " + i
                    );
                if (-1 === r) {
                  if (e > 0 && e !== n)
                    throw Error(
                      "Size(" + e + ") must match the product of shape " + t
                    );
                  return t;
                }
                if (0 === n)
                  throw Error(
                    "Cannot infer the missing size in [" +
                      t +
                      "] when there are 0 elements"
                  );
                if (e % n != 0)
                  throw Error(
                    "The implicit shape can't be a fractional number. Got " +
                      e +
                      " / " +
                      n
                  );
                var a = t.slice();
                return (a[r] = e / n), a;
              }),
              (e.parseAxisParam = u),
              (e.squeezeShape = function(t, e) {
                for (
                  var n = [],
                    r = [],
                    i = null == e ? null : u(e, t).sort(),
                    a = 0,
                    o = 0;
                  o < t.length;
                  ++o
                ) {
                  if (null != i) {
                    if (i[a] === o && 1 !== t[o])
                      throw new Error(
                        "Can't squeeze axis " +
                          o +
                          " since its dim '" +
                          t[o] +
                          "' is not 1"
                      );
                    (null == i[a] || i[a] > o) &&
                      1 === t[o] &&
                      (n.push(t[o]), r.push(o)),
                      i[a] <= o && a++;
                  }
                  1 !== t[o] && (n.push(t[o]), r.push(o));
                }
                return { newShape: n, keptDims: r };
              }),
              (e.getTypedArrayFromDType = function(t, e) {
                var n = null;
                if (null == t || "float32" === t) n = new Float32Array(e);
                else if ("int32" === t) n = new Int32Array(e);
                else {
                  if ("bool" !== t) throw new Error("Unknown data type " + t);
                  n = new Uint8Array(e);
                }
                return n;
              }),
              (e.getArrayFromDType = function(t, e) {
                var n = null;
                if (null == t || "float32" === t) n = new Float32Array(e);
                else if ("int32" === t) n = new Int32Array(e);
                else if ("bool" === t) n = new Uint8Array(e);
                else {
                  if ("string" !== t) throw new Error("Unknown data type " + t);
                  n = new Array(e);
                }
                return n;
              }),
              (e.checkComputationForErrors = function(t, e, n) {
                if ("float32" === e)
                  for (var r = 0; r < t.length; r++) {
                    var i = t[r];
                    if (isNaN(i) || !isFinite(i))
                      throw Error(
                        "The result of the '" + n + "' is " + i + "."
                      );
                  }
              }),
              (e.checkConversionForErrors = c),
              (e.hasEncodingLoss = function(t, e) {
                return !(
                  "complex64" === e ||
                  ("float32" === e && "complex64" !== t) ||
                  ("int32" === e && "float32" !== t && "complex64" !== t) ||
                  ("bool" === e && "bool" === t)
                );
              }),
              (e.isTypedArray = l),
              (e.bytesPerElement = function(t) {
                if ("float32" === t || "int32" === t) return 4;
                if ("complex64" === t) return 8;
                if ("bool" === t) return 1;
                throw new Error("Unknown dtype " + t);
              }),
              (e.bytesFromStringArray = function(t) {
                if (null == t) return 0;
                var e = 0;
                return (
                  t.forEach(function(t) {
                    return (e += 2 * t.length);
                  }),
                  e
                );
              }),
              (e.isString = f),
              (e.isBoolean = h),
              (e.isNumber = p),
              (e.inferDtype = function t(e) {
                return Array.isArray(e)
                  ? t(e[0])
                  : e instanceof Float32Array
                  ? "float32"
                  : e instanceof Int32Array || e instanceof Uint8Array
                  ? "int32"
                  : p(e)
                  ? "float32"
                  : f(e)
                  ? "string"
                  : h(e)
                  ? "bool"
                  : "float32";
              }),
              (e.isFunction = function(t) {
                return !!(t && t.constructor && t.call && t.apply);
              }),
              (e.nearestDivisor = function(t, e) {
                for (var n = e; n < t; ++n) if (t % n == 0) return n;
                return t;
              }),
              (e.computeStrides = function(t) {
                var e = t.length;
                if (e < 2) return [];
                var n = new Array(e - 1);
                n[e - 2] = t[e - 1];
                for (var r = e - 3; r >= 0; --r) n[r] = n[r + 1] * t[r + 1];
                return n;
              }),
              (e.toTypedArray = function(t, e, n) {
                if ("string" === e)
                  throw new Error("Cannot convert a string[] to a TypedArray");
                if (
                  (Array.isArray(t) && (t = a(t)),
                  n && c(t, e),
                  (function(t, e) {
                    return (
                      (t instanceof Float32Array && "float32" === e) ||
                      (t instanceof Int32Array && "int32" === e) ||
                      (t instanceof Uint8Array && "bool" === e)
                    );
                  })(t, e))
                )
                  return t;
                if (null == e || "float32" === e || "complex64" === e)
                  return new Float32Array(t);
                if ("int32" === e) return new Int32Array(t);
                if ("bool" === e) {
                  for (
                    var r = new Uint8Array(t.length), i = 0;
                    i < r.length;
                    ++i
                  )
                    0 !== Math.round(t[i]) && (r[i] = 1);
                  return r;
                }
                throw new Error("Unknown data type " + e);
              }),
              (e.toNestedArray = function(t, e) {
                if (0 === t.length) return e[0];
                var n = t.reduce(function(t, e) {
                  return t * e;
                });
                if (0 === n) return [];
                if (n !== e.length)
                  throw new Error("[" + t + "] does not match the input size.");
                return (function t(e, n, r) {
                  var i = new Array();
                  if (1 === n.length)
                    for (var a = n[0], o = 0; o < a; o++) i[o] = r[e + o];
                  else {
                    a = n[0];
                    var s = n.slice(1),
                      u = s.reduce(function(t, e) {
                        return t * e;
                      });
                    for (o = 0; o < a; o++) i[o] = t(e + o * u, s, r);
                  }
                  return i;
                })(0, t, e);
              }),
              (e.makeOnesTypedArray = function(t, e) {
                for (var n = d(t, e), r = 0; r < n.length; r++) n[r] = 1;
                return n;
              }),
              (e.makeZerosTypedArray = d),
              (e.now = function() {
                if ("undefined" != typeof performance) return performance.now();
                if ("undefined" != typeof r) {
                  var t = r.hrtime();
                  return 1e3 * t[0] + t[1] / 1e6;
                }
                throw new Error(
                  "Cannot measure time in this environment. You should run tf.js in the browser or in Node.js"
                );
              }),
              (e.monitorPromisesProgress = function(t, e, n, r) {
                !(function(t) {
                  i(
                    null != t && Array.isArray(t) && t.length > 0,
                    "promises must be a none empty array"
                  );
                })(t),
                  (function(t, e) {
                    i(
                      t >= 0 && t <= 1,
                      "Progress fraction must be in range [0, 1], but got startFraction " +
                        t
                    ),
                      i(
                        e >= 0 && e <= 1,
                        "Progress fraction must be in range [0, 1], but got endFraction " +
                          e
                      ),
                      i(
                        e >= t,
                        "startFraction must be no more than endFraction, but got startFraction " +
                          t +
                          " and endFraction " +
                          e
                      );
                  })((n = null == n ? 0 : n), (r = null == r ? 1 : r));
                var a = 0;
                return Promise.all(
                  t.map(function(i) {
                    return (
                      i.then(function(i) {
                        var o = n + (++a / t.length) * (r - n);
                        return e(o), i;
                      }),
                      i
                    );
                  })
                );
              });
          });
        f(x);
        x.shuffle,
          x.clamp,
          x.nearestLargerEven,
          x.sum,
          x.randUniform,
          x.distSquared,
          x.assert,
          x.assertShapesMatch,
          x.assertNonNull,
          x.flatten,
          x.sizeFromShape,
          x.isScalarShape,
          x.arraysEqual,
          x.isInt,
          x.tanh,
          x.sizeToSquarishShape,
          x.createShuffledIndices,
          x.rightPad,
          x.repeatedTry,
          x.inferFromImplicitShape,
          x.parseAxisParam,
          x.squeezeShape,
          x.getTypedArrayFromDType,
          x.getArrayFromDType,
          x.checkComputationForErrors,
          x.checkConversionForErrors,
          x.hasEncodingLoss,
          x.isTypedArray,
          x.bytesPerElement,
          x.bytesFromStringArray,
          x.isString,
          x.isBoolean,
          x.isNumber,
          x.inferDtype,
          x.isFunction,
          x.nearestDivisor,
          x.computeStrides,
          x.toTypedArray,
          x.toNestedArray,
          x.makeOnesTypedArray,
          x.makeZerosTypedArray,
          x.now,
          x.monitorPromisesProgress;
        var E = h(function(t, e) {
          Object.defineProperty(e, "__esModule", { value: !0 });
          var n = 20,
            r = 3,
            i = 7;
          function a(t, e) {
            var n;
            return (
              (n = Array.isArray(t)
                ? parseFloat(t[0].toFixed(i)) +
                  " + " +
                  parseFloat(t[1].toFixed(i)) +
                  "j"
                : x.isString(t)
                ? "'" + t + "'"
                : parseFloat(t.toFixed(i)).toString()),
              x.rightPad(n, e)
            );
          }
          function o(t) {
            for (var e = [], n = 0; n < t.length; n += 2)
              e.push([t[n], t[n + 1]]);
            return e;
          }
          e.tensorToString = function(t, e, i, s) {
            var u = x.computeStrides(e),
              c = (function(t, e, n, r) {
                var i = x.sizeFromShape(e),
                  s = r[r.length - 1],
                  u = new Array(s).fill(0),
                  c = e.length,
                  l = "complex64" === n ? o(t) : t;
                if (c > 1)
                  for (var f = 0; f < i / s; f++)
                    for (var h = f * s, p = 0; p < s; p++)
                      u[p] = Math.max(u[p], a(l[h + p], 0).length);
                return u;
              })(t, e, i, u),
              l = e.length,
              f = (function t(e, i, s, u, c, l) {
                void 0 === l && (l = !0);
                var f = "complex64" === s ? 2 : 1,
                  h = i[0],
                  p = i.length;
                if (0 === p) {
                  if ("complex64" === s) {
                    var d = o(e);
                    return [a(d[0], 0)];
                  }
                  return [e[0].toString()];
                }
                if (1 === p) {
                  if (h > n) {
                    var m = r * f,
                      v = Array.from(e.slice(0, m)),
                      y = Array.from(e.slice(h - r * f, h));
                    return (
                      "complex64" === s && ((v = o(v)), (y = o(y))),
                      [
                        "[" +
                          v
                            .map(function(t, e) {
                              return a(t, c[e]);
                            })
                            .join(", ") +
                          ", ..., " +
                          y
                            .map(function(t, e) {
                              return a(t, c[h - r + e]);
                            })
                            .join(", ") +
                          "]"
                      ]
                    );
                  }
                  var g = "complex64" === s ? o(e) : Array.from(e);
                  return [
                    "[" +
                      g
                        .map(function(t, e) {
                          return a(t, c[e]);
                        })
                        .join(", ") +
                      "]"
                  ];
                }
                var b = i.slice(1),
                  w = u.slice(1),
                  _ = u[0] * f,
                  x = [];
                if (h > n) {
                  for (var E = 0; E < r; E++) {
                    var S = E * _,
                      N = S + _;
                    x.push.apply(x, t(e.slice(S, N), b, s, w, c, !1));
                  }
                  x.push("...");
                  for (E = h - r; E < h; E++) {
                    (S = E * _), (N = S + _);
                    x.push.apply(x, t(e.slice(S, N), b, s, w, c, E === h - 1));
                  }
                } else
                  for (E = 0; E < h; E++) {
                    (S = E * _), (N = S + _);
                    x.push.apply(x, t(e.slice(S, N), b, s, w, c, E === h - 1));
                  }
                var O = 2 === p ? "," : "";
                x[0] = "[" + x[0] + O;
                for (E = 1; E < x.length - 1; E++) x[E] = " " + x[E] + O;
                var I = ",\n";
                for (E = 2; E < p; E++) I += "\n";
                return (
                  (x[x.length - 1] =
                    " " + x[x.length - 1] + "]" + (l ? "" : I)),
                  x
                );
              })(t, e, i, u, c),
              h = ["Tensor"];
            return (
              s &&
                (h.push("  dtype: " + i),
                h.push("  rank: " + l),
                h.push("  shape: [" + e + "]"),
                h.push("  values:")),
              h.push(
                f
                  .map(function(t) {
                    return "    " + t;
                  })
                  .join("\n")
              ),
              h.join("\n")
            );
          };
        });
        f(E);
        E.tensorToString;
        var S = h(function(t, e) {
          var n,
            r =
              (l && l.__extends) ||
              ((n =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function(t, e) {
                    t.__proto__ = e;
                  }) ||
                function(t, e) {
                  for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
                }),
              function(t, e) {
                function r() {
                  this.constructor = t;
                }
                n(t, e),
                  (t.prototype =
                    null === e
                      ? Object.create(e)
                      : ((r.prototype = e.prototype), new r()));
              }),
            i =
              (l && l.__awaiter) ||
              function(t, e, n, r) {
                return new (n || (n = Promise))(function(i, a) {
                  function o(t) {
                    try {
                      u(r.next(t));
                    } catch (t) {
                      a(t);
                    }
                  }
                  function s(t) {
                    try {
                      u(r.throw(t));
                    } catch (t) {
                      a(t);
                    }
                  }
                  function u(t) {
                    t.done
                      ? i(t.value)
                      : new n(function(e) {
                          e(t.value);
                        }).then(o, s);
                  }
                  u((r = r.apply(t, e || [])).next());
                });
              },
            a =
              (l && l.__generator) ||
              function(t, e) {
                var n,
                  r,
                  i,
                  a,
                  o = {
                    label: 0,
                    sent: function() {
                      if (1 & i[0]) throw i[1];
                      return i[1];
                    },
                    trys: [],
                    ops: []
                  };
                return (
                  (a = { next: s(0), throw: s(1), return: s(2) }),
                  "function" == typeof Symbol &&
                    (a[Symbol.iterator] = function() {
                      return this;
                    }),
                  a
                );
                function s(a) {
                  return function(s) {
                    return (function(a) {
                      if (n)
                        throw new TypeError("Generator is already executing.");
                      for (; o; )
                        try {
                          if (
                            ((n = 1),
                            r &&
                              (i =
                                2 & a[0]
                                  ? r.return
                                  : a[0]
                                  ? r.throw || ((i = r.return) && i.call(r), 0)
                                  : r.next) &&
                              !(i = i.call(r, a[1])).done)
                          )
                            return i;
                          switch (
                            ((r = 0), i && (a = [2 & a[0], i.value]), a[0])
                          ) {
                            case 0:
                            case 1:
                              i = a;
                              break;
                            case 4:
                              return o.label++, { value: a[1], done: !1 };
                            case 5:
                              o.label++, (r = a[1]), (a = [0]);
                              continue;
                            case 7:
                              (a = o.ops.pop()), o.trys.pop();
                              continue;
                            default:
                              if (
                                !(i =
                                  (i = o.trys).length > 0 && i[i.length - 1]) &&
                                (6 === a[0] || 2 === a[0])
                              ) {
                                o = 0;
                                continue;
                              }
                              if (
                                3 === a[0] &&
                                (!i || (a[1] > i[0] && a[1] < i[3]))
                              ) {
                                o.label = a[1];
                                break;
                              }
                              if (6 === a[0] && o.label < i[1]) {
                                (o.label = i[1]), (i = a);
                                break;
                              }
                              if (i && o.label < i[2]) {
                                (o.label = i[2]), o.ops.push(a);
                                break;
                              }
                              i[2] && o.ops.pop(), o.trys.pop();
                              continue;
                          }
                          a = e.call(t, o);
                        } catch (t) {
                          (a = [6, t]), (r = 0);
                        } finally {
                          n = i = 0;
                        }
                      if (5 & a[0]) throw a[1];
                      return { value: a[0] ? a[1] : void 0, done: !0 };
                    })([a, s]);
                  };
                }
              };
          Object.defineProperty(e, "__esModule", { value: !0 });
          var o = x,
            s = (function() {
              function t(t, e, n) {
                if (
                  ((this.dtype = e),
                  (this.shape = t.slice()),
                  (this.size = x.sizeFromShape(t)),
                  null != n)
                ) {
                  var r = n.length;
                  x.assert(
                    r === this.size,
                    "Length of values '" +
                      r +
                      "' does not match the size inferred by the shape '" +
                      this.size +
                      "'."
                  );
                }
                if ("complex64" === e)
                  throw new Error(
                    "complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag)."
                  );
                (this.values =
                  n || x.getArrayFromDType(e, x.sizeFromShape(this.shape))),
                  (this.strides = o.computeStrides(t));
              }
              return (
                (t.prototype.set = function(t) {
                  for (var e = [], n = 1; n < arguments.length; n++)
                    e[n - 1] = arguments[n];
                  0 === e.length && (e = [0]),
                    x.assert(
                      e.length === this.rank,
                      "The number of provided coordinates (" +
                        e.length +
                        ") must match the rank (" +
                        this.rank +
                        ")"
                    );
                  var r = this.locToIndex(e);
                  this.values[r] = t;
                }),
                (t.prototype.get = function() {
                  for (var t = [], e = 0; e < arguments.length; e++)
                    t[e] = arguments[e];
                  0 === t.length && (t = [0]);
                  for (var n = t[t.length - 1], r = 0; r < t.length - 1; ++r)
                    n += this.strides[r] * t[r];
                  return this.values[n];
                }),
                (t.prototype.locToIndex = function(t) {
                  if (0 === this.rank) return 0;
                  if (1 === this.rank) return t[0];
                  for (var e = t[t.length - 1], n = 0; n < t.length - 1; ++n)
                    e += this.strides[n] * t[n];
                  return e;
                }),
                (t.prototype.indexToLoc = function(t) {
                  if (0 === this.rank) return [];
                  if (1 === this.rank) return [t];
                  for (
                    var e = new Array(this.shape.length), n = 0;
                    n < e.length - 1;
                    ++n
                  )
                    (e[n] = Math.floor(t / this.strides[n])),
                      (t -= e[n] * this.strides[n]);
                  return (e[e.length - 1] = t), e;
                }),
                Object.defineProperty(t.prototype, "rank", {
                  get: function() {
                    return this.shape.length;
                  },
                  enumerable: !0,
                  configurable: !0
                }),
                (t.prototype.toTensor = function() {
                  return h.make(
                    this.shape,
                    { values: this.values },
                    this.dtype
                  );
                }),
                t
              );
            })();
          e.TensorBuffer = s;
          var u = null,
            c = null,
            f = null;
          (e.setTensorTracker = function(t) {
            u = t;
          }),
            (e.setOpHandler = function(t) {
              c = t;
            }),
            (e.setDeprecationWarningFn = function(t) {
              f = t;
            });
          var h = (function() {
            function t(t, e, n, r) {
              (this.isDisposedInternal = !1),
                (this.shape = t.slice()),
                (this.dtype = e || "float32"),
                (this.size = x.sizeFromShape(t)),
                (this.strides = o.computeStrides(t)),
                (this.dataId = null != r ? r : {}),
                (this.id = u().nextTensorId()),
                (this.rankType =
                  this.rank < 5 ? this.rank.toString() : "higher"),
                u().registerTensor(this),
                null != n && u().write(this.dataId, n);
            }
            return (
              (t.make = function(e, n, r) {
                return new t(e, r, n.values, n.dataId);
              }),
              (t.prototype.flatten = function() {
                return this.throwIfDisposed(), this.as1D();
              }),
              (t.prototype.asScalar = function() {
                return (
                  this.throwIfDisposed(),
                  x.assert(
                    1 === this.size,
                    "The array must have only 1 element."
                  ),
                  this.reshape([])
                );
              }),
              (t.prototype.as1D = function() {
                return this.throwIfDisposed(), this.reshape([this.size]);
              }),
              (t.prototype.as2D = function(t, e) {
                return this.throwIfDisposed(), this.reshape([t, e]);
              }),
              (t.prototype.as3D = function(t, e, n) {
                return this.throwIfDisposed(), this.reshape([t, e, n]);
              }),
              (t.prototype.as4D = function(t, e, n, r) {
                return this.throwIfDisposed(), this.reshape([t, e, n, r]);
              }),
              (t.prototype.as5D = function(t, e, n, r, i) {
                return this.throwIfDisposed(), this.reshape([t, e, n, r, i]);
              }),
              (t.prototype.asType = function(t) {
                return this.throwIfDisposed(), c.cast(this, t);
              }),
              Object.defineProperty(t.prototype, "rank", {
                get: function() {
                  return this.shape.length;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.get = function() {
                for (var t = [], e = 0; e < arguments.length; e++)
                  t[e] = arguments[e];
                f(
                  "Tensor.get() is deprecated. Use Tensor.array() and native array indexing instead."
                ),
                  x.assert(
                    t.length === this.rank,
                    "Number of coordinates in get() must match the rank of the tensor"
                  ),
                  x.assert(
                    "complex64" !== this.dtype,
                    "Tensor.get() is not supported for complex64 tensors yet."
                  ),
                  this.throwIfDisposed(),
                  0 === t.length && (t = [0]);
                for (var n = t[t.length - 1], r = 0; r < t.length - 1; ++r)
                  n += this.strides[r] * t[r];
                return this.dataSync()[n];
              }),
              (t.prototype.buffer = function() {
                return (
                  f(
                    "Tensor.buffer() is renamed to Tensor.bufferSync() in TensorFlow.js 1.0 and Tensor.buffer() will become an async function."
                  ),
                  c.buffer(this.shape, this.dtype, this.dataSync())
                );
              }),
              (t.prototype.bufferSync = function() {
                return c.buffer(this.shape, this.dtype, this.dataSync());
              }),
              (t.prototype.array = function() {
                return i(this, void 0, void 0, function() {
                  var t, e;
                  return a(this, function(n) {
                    switch (n.label) {
                      case 0:
                        return (
                          (t = o.toNestedArray),
                          (e = [this.shape]),
                          [4, this.data()]
                        );
                      case 1:
                        return [2, t.apply(void 0, e.concat([n.sent()]))];
                    }
                  });
                });
              }),
              (t.prototype.arraySync = function() {
                return o.toNestedArray(this.shape, this.dataSync());
              }),
              (t.prototype.data = function() {
                return i(this, void 0, void 0, function() {
                  return a(this, function(t) {
                    return this.throwIfDisposed(), [2, u().read(this.dataId)];
                  });
                });
              }),
              (t.prototype.dataSync = function() {
                return this.throwIfDisposed(), u().readSync(this.dataId);
              }),
              (t.prototype.dispose = function() {
                this.isDisposed ||
                  (u().disposeTensor(this), (this.isDisposedInternal = !0));
              }),
              Object.defineProperty(t.prototype, "isDisposed", {
                get: function() {
                  return this.isDisposedInternal;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.throwIfDisposed = function() {
                if (this.isDisposed) throw new Error("Tensor is disposed.");
              }),
              (t.prototype.toFloat = function() {
                return this.asType("float32");
              }),
              (t.prototype.toInt = function() {
                return this.asType("int32");
              }),
              (t.prototype.toBool = function() {
                return this.asType("bool");
              }),
              (t.prototype.print = function(t) {
                return void 0 === t && (t = !1), c.print(this, t);
              }),
              (t.prototype.reshape = function(t) {
                return this.throwIfDisposed(), c.reshape(this, t);
              }),
              (t.prototype.reshapeAs = function(t) {
                return this.throwIfDisposed(), this.reshape(t.shape);
              }),
              (t.prototype.expandDims = function(t) {
                return void 0 === t && (t = 0), c.expandDims(this, t);
              }),
              (t.prototype.cumsum = function(t, e, n) {
                return (
                  void 0 === t && (t = 0),
                  void 0 === e && (e = !1),
                  void 0 === n && (n = !1),
                  c.cumsum(this, t, e, n)
                );
              }),
              (t.prototype.squeeze = function(t) {
                return this.throwIfDisposed(), c.squeeze(this, t);
              }),
              (t.prototype.clone = function() {
                return this.throwIfDisposed(), c.clone(this);
              }),
              (t.prototype.oneHot = function(t, e, n) {
                return this.throwIfDisposed(), c.oneHot(this, t, e, n);
              }),
              (t.prototype.toString = function(t) {
                void 0 === t && (t = !1);
                var e = this.dataSync();
                return E.tensorToString(e, this.shape, this.dtype, t);
              }),
              (t.prototype.tile = function(t) {
                return this.throwIfDisposed(), c.tile(this, t);
              }),
              (t.prototype.gather = function(t, e) {
                return (
                  void 0 === e && (e = 0),
                  this.throwIfDisposed(),
                  c.gather(this, t, e)
                );
              }),
              (t.prototype.matMul = function(t, e, n) {
                return (
                  void 0 === e && (e = !1),
                  void 0 === n && (n = !1),
                  this.throwIfDisposed(),
                  c.matMul(this, t, e, n)
                );
              }),
              (t.prototype.dot = function(t) {
                return this.throwIfDisposed(), c.dot(this, t);
              }),
              (t.prototype.norm = function(t, e, n) {
                return (
                  void 0 === t && (t = "euclidean"),
                  void 0 === e && (e = null),
                  void 0 === n && (n = !1),
                  this.throwIfDisposed(),
                  c.norm(this, t, e, n)
                );
              }),
              (t.prototype.slice = function(t, e) {
                return this.throwIfDisposed(), c.slice(this, t, e);
              }),
              (t.prototype.reverse = function(t) {
                return this.throwIfDisposed(), c.reverse(this, t);
              }),
              (t.prototype.concat = function(e, n) {
                return (
                  void 0 === n && (n = 0),
                  this.throwIfDisposed(),
                  e instanceof t && (e = [e]),
                  c.concat([this].concat(e), n)
                );
              }),
              (t.prototype.split = function(t, e) {
                return (
                  void 0 === e && (e = 0),
                  this.throwIfDisposed(),
                  c.split(this, t, e)
                );
              }),
              (t.prototype.stack = function(t, e) {
                return void 0 === e && (e = 0), c.stack([this, t], e);
              }),
              (t.prototype.unstack = function(t) {
                return void 0 === t && (t = 0), c.unstack(this, t);
              }),
              (t.prototype.pad = function(t, e) {
                return void 0 === e && (e = 0), c.pad(this, t, e);
              }),
              (t.prototype.batchNormalization = function(t, e, n, r, i) {
                return (
                  void 0 === n && (n = 0.001),
                  f(
                    "tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon"
                  ),
                  this.batchNorm(t, e, i, r, n)
                );
              }),
              (t.prototype.batchNorm = function(t, e, n, r, i) {
                return (
                  void 0 === i && (i = 0.001),
                  this.throwIfDisposed(),
                  c.batchNorm(this, t, e, n, r, i)
                );
              }),
              (t.prototype.all = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  c.all(this, t, e)
                );
              }),
              (t.prototype.any = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  c.any(this, t, e)
                );
              }),
              (t.prototype.logSumExp = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  c.logSumExp(this, t, e)
                );
              }),
              (t.prototype.sum = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  c.sum(this, t, e)
                );
              }),
              (t.prototype.prod = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  c.prod(this, t, e)
                );
              }),
              (t.prototype.mean = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  c.mean(this, t, e)
                );
              }),
              (t.prototype.min = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  c.min(this, t, e)
                );
              }),
              (t.prototype.max = function(t, e) {
                return (
                  void 0 === t && (t = null),
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  c.max(this, t, e)
                );
              }),
              (t.prototype.argMin = function(t) {
                return (
                  void 0 === t && (t = null),
                  this.throwIfDisposed(),
                  c.argMin(this, t)
                );
              }),
              (t.prototype.argMax = function(t) {
                return (
                  void 0 === t && (t = null),
                  this.throwIfDisposed(),
                  c.argMax(this, t)
                );
              }),
              (t.prototype.cast = function(t) {
                return this.throwIfDisposed(), c.cast(this, t);
              }),
              (t.prototype.add = function(t) {
                return this.throwIfDisposed(), c.add(this, t);
              }),
              (t.prototype.addStrict = function(t) {
                return this.throwIfDisposed(), c.addStrict(this, t);
              }),
              (t.prototype.atan2 = function(t) {
                return this.throwIfDisposed(), c.atan2(this, t);
              }),
              (t.prototype.sub = function(t) {
                return this.throwIfDisposed(), c.sub(this, t);
              }),
              (t.prototype.subStrict = function(t) {
                return this.throwIfDisposed(), c.subStrict(this, t);
              }),
              (t.prototype.pow = function(t) {
                return this.throwIfDisposed(), c.pow(this, t);
              }),
              (t.prototype.powStrict = function(t) {
                return this.throwIfDisposed(), c.powStrict(this, t);
              }),
              (t.prototype.mul = function(t) {
                return this.throwIfDisposed(), c.mul(this, t);
              }),
              (t.prototype.mulStrict = function(t) {
                return this.throwIfDisposed(), c.mulStrict(this, t);
              }),
              (t.prototype.div = function(t) {
                return this.throwIfDisposed(), c.div(this, t);
              }),
              (t.prototype.floorDiv = function(t) {
                return this.throwIfDisposed(), c.floorDiv(this, t);
              }),
              (t.prototype.divStrict = function(t) {
                return this.throwIfDisposed(), c.divStrict(this, t);
              }),
              (t.prototype.minimum = function(t) {
                return this.throwIfDisposed(), c.minimum(this, t);
              }),
              (t.prototype.minimumStrict = function(t) {
                return this.throwIfDisposed(), c.minimumStrict(this, t);
              }),
              (t.prototype.maximum = function(t) {
                return this.throwIfDisposed(), c.maximum(this, t);
              }),
              (t.prototype.maximumStrict = function(t) {
                return this.throwIfDisposed(), c.maximumStrict(this, t);
              }),
              (t.prototype.mod = function(t) {
                return this.throwIfDisposed(), c.mod(this, t);
              }),
              (t.prototype.modStrict = function(t) {
                return this.throwIfDisposed(), c.modStrict(this, t);
              }),
              (t.prototype.squaredDifference = function(t) {
                return this.throwIfDisposed(), c.squaredDifference(this, t);
              }),
              (t.prototype.squaredDifferenceStrict = function(t) {
                return (
                  this.throwIfDisposed(), c.squaredDifferenceStrict(this, t)
                );
              }),
              (t.prototype.transpose = function(t) {
                return this.throwIfDisposed(), c.transpose(this, t);
              }),
              (t.prototype.notEqual = function(t) {
                return this.throwIfDisposed(), c.notEqual(this, t);
              }),
              (t.prototype.notEqualStrict = function(t) {
                return this.throwIfDisposed(), c.notEqualStrict(this, t);
              }),
              (t.prototype.less = function(t) {
                return this.throwIfDisposed(), c.less(this, t);
              }),
              (t.prototype.lessStrict = function(t) {
                return this.throwIfDisposed(), c.lessStrict(this, t);
              }),
              (t.prototype.equal = function(t) {
                return this.throwIfDisposed(), c.equal(this, t);
              }),
              (t.prototype.equalStrict = function(t) {
                return this.throwIfDisposed(), c.equalStrict(this, t);
              }),
              (t.prototype.lessEqual = function(t) {
                return this.throwIfDisposed(), c.lessEqual(this, t);
              }),
              (t.prototype.lessEqualStrict = function(t) {
                return this.throwIfDisposed(), c.lessEqualStrict(this, t);
              }),
              (t.prototype.greater = function(t) {
                return this.throwIfDisposed(), c.greater(this, t);
              }),
              (t.prototype.greaterStrict = function(t) {
                return this.throwIfDisposed(), c.greaterStrict(this, t);
              }),
              (t.prototype.greaterEqual = function(t) {
                return this.throwIfDisposed(), c.greaterEqual(this, t);
              }),
              (t.prototype.greaterEqualStrict = function(t) {
                return this.throwIfDisposed(), c.greaterEqualStrict(this, t);
              }),
              (t.prototype.logicalAnd = function(t) {
                return this.throwIfDisposed(), c.logicalAnd(this, t);
              }),
              (t.prototype.logicalOr = function(t) {
                return this.throwIfDisposed(), c.logicalOr(this, t);
              }),
              (t.prototype.logicalNot = function() {
                return this.throwIfDisposed(), c.logicalNot(this);
              }),
              (t.prototype.logicalXor = function(t) {
                return this.throwIfDisposed(), c.logicalXor(this, t);
              }),
              (t.prototype.where = function(t, e) {
                return this.throwIfDisposed(), c.where(t, this, e);
              }),
              (t.prototype.neg = function() {
                return this.throwIfDisposed(), c.neg(this);
              }),
              (t.prototype.ceil = function() {
                return this.throwIfDisposed(), c.ceil(this);
              }),
              (t.prototype.floor = function() {
                return this.throwIfDisposed(), c.floor(this);
              }),
              (t.prototype.sign = function() {
                return this.throwIfDisposed(), c.sign(this);
              }),
              (t.prototype.exp = function() {
                return this.throwIfDisposed(), c.exp(this);
              }),
              (t.prototype.expm1 = function() {
                return this.throwIfDisposed(), c.expm1(this);
              }),
              (t.prototype.log = function() {
                return this.throwIfDisposed(), c.log(this);
              }),
              (t.prototype.log1p = function() {
                return this.throwIfDisposed(), c.log1p(this);
              }),
              (t.prototype.sqrt = function() {
                return this.throwIfDisposed(), c.sqrt(this);
              }),
              (t.prototype.rsqrt = function() {
                return this.throwIfDisposed(), c.rsqrt(this);
              }),
              (t.prototype.square = function() {
                return this.throwIfDisposed(), c.square(this);
              }),
              (t.prototype.reciprocal = function() {
                return this.throwIfDisposed(), c.reciprocal(this);
              }),
              (t.prototype.abs = function() {
                return this.throwIfDisposed(), c.abs(this);
              }),
              (t.prototype.clipByValue = function(t, e) {
                return this.throwIfDisposed(), c.clipByValue(this, t, e);
              }),
              (t.prototype.relu = function() {
                return this.throwIfDisposed(), c.relu(this);
              }),
              (t.prototype.elu = function() {
                return this.throwIfDisposed(), c.elu(this);
              }),
              (t.prototype.selu = function() {
                return this.throwIfDisposed(), c.selu(this);
              }),
              (t.prototype.leakyRelu = function(t) {
                return (
                  void 0 === t && (t = 0.2),
                  this.throwIfDisposed(),
                  c.leakyRelu(this, t)
                );
              }),
              (t.prototype.prelu = function(t) {
                return this.throwIfDisposed(), c.prelu(this, t);
              }),
              (t.prototype.sigmoid = function() {
                return this.throwIfDisposed(), c.sigmoid(this);
              }),
              (t.prototype.logSigmoid = function() {
                return this.throwIfDisposed(), c.logSigmoid(this);
              }),
              (t.prototype.softplus = function() {
                return this.throwIfDisposed(), c.softplus(this);
              }),
              (t.prototype.zerosLike = function() {
                return this.throwIfDisposed(), c.zerosLike(this);
              }),
              (t.prototype.onesLike = function() {
                return this.throwIfDisposed(), c.onesLike(this);
              }),
              (t.prototype.sin = function() {
                return this.throwIfDisposed(), c.sin(this);
              }),
              (t.prototype.cos = function() {
                return this.throwIfDisposed(), c.cos(this);
              }),
              (t.prototype.tan = function() {
                return this.throwIfDisposed(), c.tan(this);
              }),
              (t.prototype.asin = function() {
                return this.throwIfDisposed(), c.asin(this);
              }),
              (t.prototype.acos = function() {
                return this.throwIfDisposed(), c.acos(this);
              }),
              (t.prototype.atan = function() {
                return this.throwIfDisposed(), c.atan(this);
              }),
              (t.prototype.sinh = function() {
                return this.throwIfDisposed(), c.sinh(this);
              }),
              (t.prototype.cosh = function() {
                return this.throwIfDisposed(), c.cosh(this);
              }),
              (t.prototype.tanh = function() {
                return this.throwIfDisposed(), c.tanh(this);
              }),
              (t.prototype.asinh = function() {
                return this.throwIfDisposed(), c.asinh(this);
              }),
              (t.prototype.acosh = function() {
                return this.throwIfDisposed(), c.acosh(this);
              }),
              (t.prototype.atanh = function() {
                return this.throwIfDisposed(), c.atanh(this);
              }),
              (t.prototype.erf = function() {
                return this.throwIfDisposed(), c.erf(this);
              }),
              (t.prototype.round = function() {
                return this.throwIfDisposed(), c.round(this);
              }),
              (t.prototype.step = function(t) {
                return (
                  void 0 === t && (t = 0),
                  this.throwIfDisposed(),
                  c.step(this, t)
                );
              }),
              (t.prototype.softmax = function(t) {
                return (
                  void 0 === t && (t = -1),
                  this.throwIfDisposed(),
                  c.softmax(this, t)
                );
              }),
              (t.prototype.logSoftmax = function(t) {
                return (
                  void 0 === t && (t = -1),
                  this.throwIfDisposed(),
                  c.logSoftmax(this, t)
                );
              }),
              (t.prototype.resizeBilinear = function(t, e) {
                return (
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  c.image.resizeBilinear(this, t, e)
                );
              }),
              (t.prototype.resizeNearestNeighbor = function(t, e) {
                return (
                  void 0 === e && (e = !1),
                  this.throwIfDisposed(),
                  c.image.resizeNearestNeighbor(this, t, e)
                );
              }),
              (t.prototype.conv1d = function(t, e, n, r, i, a) {
                return (
                  void 0 === r && (r = "NWC"),
                  void 0 === i && (i = 1),
                  this.throwIfDisposed(),
                  c.conv1d(this, t, e, n, r, i, a)
                );
              }),
              (t.prototype.conv2d = function(t, e, n, r, i, a) {
                return (
                  void 0 === r && (r = "NHWC"),
                  void 0 === i && (i = [1, 1]),
                  this.throwIfDisposed(),
                  c.conv2d(this, t, e, n, r, i, a)
                );
              }),
              (t.prototype.conv2dTranspose = function(t, e, n, r, i) {
                return (
                  this.throwIfDisposed(), c.conv2dTranspose(this, t, e, n, r, i)
                );
              }),
              (t.prototype.depthwiseConv2D = function(t, e, n, r, i, a) {
                return (
                  void 0 === r && (r = "NHWC"),
                  void 0 === i && (i = [1, 1]),
                  this.throwIfDisposed(),
                  c.depthwiseConv2d(this, t, e, n, r, i, a)
                );
              }),
              (t.prototype.separableConv2d = function(t, e, n, r, i, a) {
                return (
                  void 0 === i && (i = [1, 1]),
                  void 0 === a && (a = "NHWC"),
                  this.throwIfDisposed(),
                  c.separableConv2d(this, t, e, n, r, i, a)
                );
              }),
              (t.prototype.avgPool = function(t, e, n, r) {
                return this.throwIfDisposed(), c.avgPool(this, t, e, n, r);
              }),
              (t.prototype.maxPool = function(t, e, n, r) {
                return this.throwIfDisposed(), c.maxPool(this, t, e, n, r);
              }),
              (t.prototype.localResponseNormalization = function(t, e, n, r) {
                return (
                  void 0 === t && (t = 5),
                  void 0 === e && (e = 1),
                  void 0 === n && (n = 1),
                  void 0 === r && (r = 0.5),
                  c.localResponseNormalization(this, t, e, n, r)
                );
              }),
              (t.prototype.pool = function(t, e, n, r, i) {
                return this.throwIfDisposed(), c.pool(this, t, e, n, r, i);
              }),
              (t.prototype.variable = function(t, e, n) {
                return (
                  void 0 === t && (t = !0),
                  this.throwIfDisposed(),
                  p.variable(this, t, e, n)
                );
              }),
              (t.prototype.unsortedSegmentSum = function(t, e) {
                return this.throwIfDisposed(), c.unsortedSegmentSum(this, t, e);
              }),
              (t.prototype.batchToSpaceND = function(t, e) {
                return this.throwIfDisposed(), c.batchToSpaceND(this, t, e);
              }),
              (t.prototype.spaceToBatchND = function(t, e) {
                return this.throwIfDisposed(), c.spaceToBatchND(this, t, e);
              }),
              (t.prototype.topk = function(t, e) {
                return (
                  void 0 === t && (t = 1),
                  void 0 === e && (e = !0),
                  this.throwIfDisposed(),
                  c.topk(this, t, e)
                );
              }),
              (t.prototype.stridedSlice = function(t, e, n, r, i, a, o, s) {
                return (
                  void 0 === r && (r = 0),
                  void 0 === i && (i = 0),
                  void 0 === a && (a = 0),
                  void 0 === o && (o = 0),
                  void 0 === s && (s = 0),
                  this.throwIfDisposed(),
                  c.stridedSlice(this, t, e, n, r, i, a, o, s)
                );
              }),
              (t.prototype.depthToSpace = function(t, e) {
                return this.throwIfDisposed(), c.depthToSpace(this, t, e);
              }),
              (t.prototype.fft = function() {
                return this.throwIfDisposed(), c.spectral.fft(this);
              }),
              (t.prototype.ifft = function() {
                return this.throwIfDisposed(), c.spectral.ifft(this);
              }),
              (t.prototype.rfft = function() {
                return this.throwIfDisposed(), c.spectral.rfft(this);
              }),
              (t.prototype.irfft = function() {
                return this.throwIfDisposed(), c.spectral.irfft(this);
              }),
              t
            );
          })();
          (e.Tensor = h),
            Object.defineProperty(h, Symbol.hasInstance, {
              value: function(t) {
                return (
                  !!t && null != t.dataId && null != t.shape && null != t.dtype
                );
              }
            });
          var p = (function(t) {
            function e(e, n, r) {
              void 0 === n && (n = !0);
              var i = t.call(this, e.shape, e.dtype, null, e.dataId) || this;
              (i.trainable = n),
                (i.name = r),
                null == i.name &&
                  (i.name = u()
                    .nextVariableId()
                    .toString());
              try {
                u().registerVariable(i);
              } catch (t) {
                throw (u().disposeTensor(i), t);
              }
              return i;
            }
            return (
              r(e, t),
              (e.variable = function(t, n, r, i) {
                return (
                  void 0 === n && (n = !0),
                  null != i && i !== t.dtype && (t = t.asType(i)),
                  new e(t, n, r)
                );
              }),
              (e.prototype.assign = function(t) {
                if (t.dtype !== this.dtype)
                  throw new Error(
                    "dtype of the new value (" +
                      t.dtype +
                      ") and previous value (" +
                      this.dtype +
                      ") must match"
                  );
                if (!x.arraysEqual(t.shape, this.shape))
                  throw new Error(
                    "shape of the new value (" +
                      t.shape +
                      ") and previous value (" +
                      this.shape +
                      ") must match"
                  );
                u().disposeTensor(this),
                  (this.dataId = t.dataId),
                  u().registerTensor(this);
              }),
              e
            );
          })(h);
          (e.Variable = p),
            Object.defineProperty(p, Symbol.hasInstance, {
              value: function(t) {
                return (
                  t instanceof h &&
                  null != t.assign &&
                  t.assign instanceof Function
                );
              }
            });
          var d = p.variable;
          e.variable = d;
        });
        f(S);
        S.TensorBuffer,
          S.setTensorTracker,
          S.setOpHandler,
          S.setDeprecationWarningFn,
          S.Tensor,
          S.Variable,
          S.variable;
        var N = h(function(t, e) {
          var n, r, i, a;
          Object.defineProperty(e, "__esModule", { value: !0 }),
            (function(t) {
              (t.R0 = "R0"),
                (t.R1 = "R1"),
                (t.R2 = "R2"),
                (t.R3 = "R3"),
                (t.R4 = "R4"),
                (t.R5 = "R5"),
                (t.R6 = "R6");
            })(e.Rank || (e.Rank = {})),
            (function(t) {
              (t.float32 = "float32"),
                (t.int32 = "int32"),
                (t.bool = "int32"),
                (t.complex64 = "complex64");
            })(n || (n = {})),
            (function(t) {
              (t.float32 = "float32"),
                (t.int32 = "int32"),
                (t.bool = "bool"),
                (t.complex64 = "complex64");
            })(r || (r = {})),
            (function(t) {
              (t.float32 = "float32"),
                (t.int32 = "float32"),
                (t.bool = "float32"),
                (t.complex64 = "complex64");
            })(i || (i = {})),
            (function(t) {
              (t.float32 = "complex64"),
                (t.int32 = "complex64"),
                (t.bool = "complex64"),
                (t.complex64 = "complex64");
            })(a || (a = {}));
          var o = { float32: i, int32: n, bool: r, complex64: a };
          function s(t, e) {
            if ("string" === t || "string" === e) {
              if ("string" === t && "string" === e) return "string";
              throw new Error("Can not upcast " + t + " with " + e);
            }
            return o[t][e];
          }
          (e.upcastType = s),
            (e.sumOutType = function(t) {
              return s(t, "int32");
            });
        });
        f(N);
        N.Rank, N.upcastType, N.sumOutType;
        var O = h(function(t, e) {
          Object.defineProperty(e, "__esModule", { value: !0 }),
            (e.makeTypesMatch = function(t, e) {
              if (t.dtype === e.dtype) return [t, e];
              var n = N.upcastType(t.dtype, e.dtype);
              return [t.cast(n), e.cast(n)];
            }),
            (e.assertTypesMatch = function(t, e) {
              x.assert(
                t.dtype === e.dtype,
                "The dtypes of the first(" +
                  t.dtype +
                  ") and second(" +
                  e.dtype +
                  ") input must match"
              );
            }),
            (e.isTensorInList = function(t, e) {
              for (var n = 0; n < e.length; n++)
                if (e[n].id === t.id) return !0;
              return !1;
            }),
            (e.flattenNameArrayMap = function(t, e) {
              var n = [];
              if (t instanceof S.Tensor) n.push(t);
              else for (var r = t, i = 0; i < e.length; i++) n.push(r[e[i]]);
              return n;
            }),
            (e.unflattenToNameArrayMap = function(t, e) {
              if (t.length !== e.length)
                throw new Error(
                  "Cannot unflatten Tensor[], keys and arrays are not of same length."
                );
              for (var n = {}, r = 0; r < t.length; r++) n[t[r]] = e[r];
              return n;
            }),
            (e.getTensorsInContainer = function(t) {
              var e = [];
              return (
                (function t(e, n, r) {
                  if (null != e)
                    if (e instanceof S.Tensor) n.push(e);
                    else if (
                      ((i = e), Array.isArray(i) || "object" == typeof i)
                    ) {
                      var i,
                        a = e;
                      for (var o in a) {
                        var s = a[o];
                        r.has(s) || (r.add(s), t(s, n, r));
                      }
                    }
                })(t, e, new Set()),
                e
              );
            });
        });
        f(O);
        O.makeTypesMatch, O.assertTypesMatch;
        var I = O.isTensorInList,
          C = (O.flattenNameArrayMap,
          O.unflattenToNameArrayMap,
          O.getTensorsInContainer);
        function A(t, e, n, r) {
          if (
            (void 0 === n && (n = new Map()),
            void 0 === r && (r = new Set()),
            null == t)
          )
            return null;
          if (r.has(t))
            throw new Error("Circular references are not supported.");
          if (n.has(t)) return n.get(t);
          var i = e(t);
          if (i.recurse && null !== i.value)
            throw new Error(
              "A deep map function may not return both a value and recurse=true."
            );
          if (i.recurse) {
            if (D(t)) {
              var a = Array.isArray(t) ? [] : {};
              for (var o in (r.add(t), t)) {
                var s = A(t[o], e, n, r);
                a[o] = s;
              }
              return r.delete(t), a;
            }
            throw new Error("Can't recurse into non-iterable type: " + t);
          }
          return n.set(t, i.value), i.value;
        }
        function k(t, e) {
          return void 0 === e && (e = T), P(t, e);
        }
        function P(t, e, n) {
          void 0 === n && (n = new Set());
          var r = t[0];
          if (n.has(r))
            throw new Error("Circular references are not supported.");
          var i = e(t);
          if (i.recurse && null !== i.value)
            throw new Error(
              "A deep zip function may not return both a value and recurse=true."
            );
          if (i.recurse) {
            if (D(r)) {
              var a = Array.isArray(r) ? [] : {};
              n.add(r);
              var o = function(r) {
                var i = P(
                  t.map(function(t) {
                    return t[r];
                  }),
                  e,
                  n
                );
                a[r] = i;
              };
              for (var s in r) o(s);
              return n.delete(r), a;
            }
            throw new Error("Can't recurse into non-iterable type: " + r);
          }
          return i.value;
        }
        function T(t) {
          return null === t
            ? null
            : D(t[0])
            ? { value: null, recurse: !0 }
            : { value: t, recurse: !1 };
        }
        function R(t, e) {
          return u(this, void 0, void 0, function() {
            var n, r, i, a, o, s;
            return c(this, function(u) {
              switch (u.label) {
                case 0:
                  (n = new Map()),
                    A(t, e, n),
                    (r = 0),
                    (i = Array.from(n.keys())),
                    (u.label = 1);
                case 1:
                  return r < i.length
                    ? ((a = i[r]),
                      (o = n.get(a)) instanceof Promise ? [4, o] : [3, 3])
                    : [3, 4];
                case 2:
                  (s = u.sent()), n.set(a, s), (u.label = 3);
                case 3:
                  return r++, [3, 1];
                case 4:
                  return [2, A(t, e, n)];
              }
            });
          });
        }
        function D(t) {
          return (
            null != t &&
            (Array.isArray(t) ||
              ("object" == typeof t && !(t instanceof a["c"])))
          );
        }
        function M(t) {
          if (null == t) return !1;
          if (!Array.isArray(t)) return !1;
          for (var e in t) if ("number" != typeof t[e]) return !1;
          return !0;
        }
        var j = (function() {
            function t(t) {
              if (
                ((this.capacity = t), (this.begin = 0), (this.end = 0), t < 1)
              )
                throw new RangeError(
                  "Can't create ring buffer of capacity < 1."
                );
              (this.data = new Array(t)), (this.doubledCapacity = 2 * t);
            }
            return (
              (t.prototype.wrap = function(t) {
                for (; t < 0; ) t += this.doubledCapacity;
                return t % this.doubledCapacity;
              }),
              (t.prototype.get = function(t) {
                if (t < 0)
                  throw new RangeError("Can't get item at a negative index.");
                return this.data[t % this.capacity];
              }),
              (t.prototype.set = function(t, e) {
                if (t < 0)
                  throw new RangeError("Can't set item at a negative index.");
                this.data[t % this.capacity] = e;
              }),
              (t.prototype.length = function() {
                var t = this.end - this.begin;
                return t < 0 && (t = this.doubledCapacity + t), t;
              }),
              (t.prototype.isFull = function() {
                return this.length() === this.capacity;
              }),
              (t.prototype.isEmpty = function() {
                return 0 === this.length();
              }),
              (t.prototype.push = function(t) {
                if (this.isFull()) throw new RangeError("Ring buffer is full.");
                this.set(this.end, t), (this.end = this.wrap(this.end + 1));
              }),
              (t.prototype.pushAll = function(t) {
                for (var e = 0, n = t; e < n.length; e++) {
                  var r = n[e];
                  this.push(r);
                }
              }),
              (t.prototype.pop = function() {
                if (this.isEmpty())
                  throw new RangeError("Ring buffer is empty.");
                this.end = this.wrap(this.end - 1);
                var t = this.get(this.end);
                return this.set(this.end, void 0), t;
              }),
              (t.prototype.unshift = function(t) {
                if (this.isFull()) throw new RangeError("Ring buffer is full.");
                (this.begin = this.wrap(this.begin - 1)),
                  this.set(this.begin, t);
              }),
              (t.prototype.shift = function() {
                if (this.isEmpty())
                  throw new RangeError("Ring buffer is empty.");
                var t = this.get(this.begin);
                return (
                  this.set(this.begin, void 0),
                  (this.begin = this.wrap(this.begin + 1)),
                  t
                );
              }),
              (t.prototype.shuffleExcise = function(t) {
                if (this.isEmpty())
                  throw new RangeError("Ring buffer is empty.");
                var e = this.wrap(this.begin + t),
                  n = this.get(e);
                return this.set(e, this.pop()), n;
              }),
              t
            );
          })(),
          L = (function(t) {
            function e() {
              return t.call(this, e.INITIAL_CAPACITY) || this;
            }
            return (
              s(e, t),
              (e.prototype.isFull = function() {
                return !1;
              }),
              (e.prototype.push = function(e) {
                t.prototype.isFull.call(this) && this.expand(),
                  t.prototype.push.call(this, e);
              }),
              (e.prototype.unshift = function(e) {
                t.prototype.isFull.call(this) && this.expand(),
                  t.prototype.unshift.call(this, e);
              }),
              (e.prototype.expand = function() {
                for (
                  var t = 2 * this.capacity,
                    e = new Array(t),
                    n = this.length(),
                    r = 0;
                  r < n;
                  r++
                )
                  e[r] = this.get(this.wrap(this.begin + r));
                (this.data = e),
                  (this.capacity = t),
                  (this.doubledCapacity = 2 * this.capacity),
                  (this.begin = 0),
                  (this.end = n);
              }),
              (e.INITIAL_CAPACITY = 32),
              e
            );
          })(j);
        function B(t) {
          return new W(t);
        }
        function F(t) {
          return new $(t);
        }
        function z(t, e) {
          return new et(t, e);
        }
        var U,
          V = (function() {
            function t() {}
            return (
              (t.prototype.collect = function(t, e) {
                return (
                  void 0 === t && (t = 1e3),
                  void 0 === e && (e = 100),
                  u(this, void 0, void 0, function() {
                    var n, r, i, a;
                    return c(this, function(o) {
                      switch (o.label) {
                        case 0:
                          return (
                            (n = e > 0 ? this.prefetch(e) : this),
                            (r = []),
                            (i = 0),
                            [4, n.next()]
                          );
                        case 1:
                          (a = o.sent()), (o.label = 2);
                        case 2:
                          return a.done
                            ? [3, 4]
                            : (r.push(a.value),
                              ++i >= t ? [2, r] : [4, n.next()]);
                        case 3:
                          return (a = o.sent()), [3, 2];
                        case 4:
                          return [2, r];
                      }
                    });
                  })
                );
              }),
              (t.prototype.resolveFully = function() {
                return u(this, void 0, void 0, function() {
                  var t;
                  return c(this, function(e) {
                    switch (e.label) {
                      case 0:
                        return [4, this.next()];
                      case 1:
                        (t = e.sent()), (e.label = 2);
                      case 2:
                        return t.done ? [3, 4] : [4, this.next()];
                      case 3:
                        return (t = e.sent()), [3, 2];
                      case 4:
                        return [2];
                    }
                  });
                });
              }),
              (t.prototype.resolveWhile = function(t) {
                return u(this, void 0, void 0, function() {
                  var e, n;
                  return c(this, function(r) {
                    switch (r.label) {
                      case 0:
                        return [4, this.next()];
                      case 1:
                        (e = r.sent()), (n = t(e.value)), (r.label = 2);
                      case 2:
                        return e.done || !n ? [3, 4] : [4, this.next()];
                      case 3:
                        return (e = r.sent()), (n = t(e.value)), [3, 2];
                      case 4:
                        return [2];
                    }
                  });
                });
              }),
              (t.prototype.handleErrors = function(t) {
                return new Y(this, t);
              }),
              (t.prototype.filter = function(t) {
                return new X(this, t);
              }),
              (t.prototype.map = function(t) {
                return new J(this, t);
              }),
              (t.prototype.mapAsync = function(t) {
                return new Q(this, t);
              }),
              (t.prototype.serialMapAsync = function(t) {
                return new Q(this, t).serial();
              }),
              (t.prototype.flatmap = function(t) {
                return new tt(this, t);
              }),
              (t.prototype.forEachAsync = function(t) {
                return u(this, void 0, void 0, function() {
                  return c(this, function(e) {
                    return [2, this.map(t).resolveFully()];
                  });
                });
              }),
              (t.prototype.serialForEach = function(t) {
                return u(this, void 0, void 0, function() {
                  return c(this, function(e) {
                    return [
                      2,
                      this.serialMapAsync(t).resolveWhile(function(t) {
                        return !0 === t;
                      })
                    ];
                  });
                });
              }),
              (t.prototype.rowMajorBatch = function(t, e) {
                return void 0 === e && (e = !0), new G(this, t, e);
              }),
              (t.prototype.columnMajorBatch = function(t, e, n) {
                return (
                  void 0 === e && (e = !0),
                  void 0 === n && (n = T),
                  this.rowMajorBatch(t, e).map(function(t) {
                    return k(t, n);
                  })
                );
              }),
              (t.prototype.concatenate = function(t, e) {
                return new et(B([this, t]), e);
              }),
              (t.prototype.take = function(t) {
                return t < 0 || null == t ? this : new K(this, t);
              }),
              (t.prototype.skip = function(t) {
                return t < 0 || null == t ? this : new H(this, t);
              }),
              (t.prototype.prefetch = function(t) {
                return new nt(this, t);
              }),
              (t.prototype.shuffle = function(t, e) {
                return new rt(this, t, e);
              }),
              (t.prototype.serial = function() {
                return new q(this);
              }),
              t
            );
          })(),
          W = (function(t) {
            function e(e) {
              var n = t.call(this) || this;
              return (n.items = e), (n.trav = 0), n;
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return "Array of " + this.items.length + " items";
              }),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  var t, e;
                  return c(this, function(n) {
                    return this.trav >= this.items.length
                      ? [2, { value: null, done: !0 }]
                      : ((t = this.items[this.trav]),
                        (e = t instanceof a["c"] ? Object(a["B"])(t) : t),
                        this.trav++,
                        [2, { value: e, done: !1 }]);
                  });
                });
              }),
              e
            );
          })(V),
          $ = (function(t) {
            function e(e) {
              var n = t.call(this) || this;
              return (n.nextFn = e), n;
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return "Function call";
              }),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  return c(this, function(t) {
                    try {
                      return [2, this.nextFn()];
                    } catch (t) {
                      throw ((t.message =
                        "Error thrown while iterating through a dataset: " +
                        t.message),
                      t);
                    }
                    return [2];
                  });
                });
              }),
              e
            );
          })(V),
          q = (function(t) {
            function e(e) {
              var n = t.call(this) || this;
              return (
                (n.upstream = e),
                (n.lastRead = Promise.resolve({ value: null, done: !1 })),
                n
              );
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Serial";
              }),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  var t = this;
                  return c(this, function(e) {
                    return (
                      (this.lastRead = this.lastRead.then(function() {
                        return t.serialNext();
                      })),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.serialNext = function() {
                return u(this, void 0, void 0, function() {
                  return c(this, function(t) {
                    return [2, this.upstream.next()];
                  });
                });
              }),
              e
            );
          })(V),
          H = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (
                (r.upstream = e),
                (r.maxCount = n),
                (r.count = 0),
                (r.lastRead = Promise.resolve({ value: null, done: !1 })),
                r
              );
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Skip";
              }),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  var t = this;
                  return c(this, function(e) {
                    return (
                      (this.lastRead = this.lastRead.then(function() {
                        return t.serialNext();
                      })),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.serialNext = function() {
                return u(this, void 0, void 0, function() {
                  var t;
                  return c(this, function(e) {
                    switch (e.label) {
                      case 0:
                        return this.count++ < this.maxCount
                          ? [4, this.upstream.next()]
                          : [3, 2];
                      case 1:
                        return (t = e.sent()).done
                          ? [2, t]
                          : (Object(a["P"])(t.value), [3, 0]);
                      case 2:
                        return [2, this.upstream.next()];
                    }
                  });
                });
              }),
              e
            );
          })(V),
          K = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (r.upstream = e), (r.maxCount = n), (r.count = 0), r;
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Take";
              }),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  return c(this, function(t) {
                    return this.count++ >= this.maxCount
                      ? [2, { value: null, done: !0 }]
                      : [2, this.upstream.next()];
                  });
                });
              }),
              e
            );
          })(V),
          G = (function(t) {
            function e(e, n, r) {
              void 0 === r && (r = !0);
              var i = t.call(this) || this;
              return (
                (i.upstream = e),
                (i.batchSize = n),
                (i.enableSmallLastBatch = r),
                (i.lastRead = Promise.resolve({ value: null, done: !1 })),
                i
              );
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> RowMajorBatch";
              }),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  var t = this;
                  return c(this, function(e) {
                    return (
                      (this.lastRead = this.lastRead.then(function() {
                        return t.serialNext();
                      })),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.serialNext = function() {
                return u(this, void 0, void 0, function() {
                  var t, e;
                  return c(this, function(n) {
                    switch (n.label) {
                      case 0:
                        (t = []), (n.label = 1);
                      case 1:
                        return t.length < this.batchSize
                          ? [4, this.upstream.next()]
                          : [3, 3];
                      case 2:
                        return (e = n.sent()).done
                          ? this.enableSmallLastBatch && t.length > 0
                            ? [2, { value: t, done: !1 }]
                            : [2, { value: null, done: !0 }]
                          : (t.push(e.value), [3, 1]);
                      case 3:
                        return [2, { value: t, done: !1 }];
                    }
                  });
                });
              }),
              e
            );
          })(V),
          X = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (
                (r.upstream = e),
                (r.predicate = n),
                (r.lastRead = Promise.resolve({ value: null, done: !1 })),
                r
              );
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Filter";
              }),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  var t = this;
                  return c(this, function(e) {
                    return (
                      (this.lastRead = this.lastRead.then(function() {
                        return t.serialNext();
                      })),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.serialNext = function() {
                return u(this, void 0, void 0, function() {
                  var t;
                  return c(this, function(e) {
                    switch (e.label) {
                      case 0:
                        return [4, this.upstream.next()];
                      case 1:
                        return (t = e.sent()).done || this.predicate(t.value)
                          ? [2, t]
                          : (Object(a["P"])(t.value), [3, 0]);
                      case 2:
                        return [2];
                    }
                  });
                });
              }),
              e
            );
          })(V),
          J = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (r.upstream = e), (r.transform = n), r;
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Map";
              }),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  var t, e, n, r, i, a, o;
                  return c(this, function(s) {
                    switch (s.label) {
                      case 0:
                        return [4, this.upstream.next()];
                      case 1:
                        if ((t = s.sent()).done)
                          return [2, { value: null, done: !0 }];
                        for (
                          e = C(t.value),
                            n = this.transform(t.value),
                            r = C(n),
                            i = 0,
                            a = e;
                          i < a.length;
                          i++
                        )
                          (o = a[i]), I(o, r) || o.dispose();
                        return [2, { value: n, done: !1 }];
                    }
                  });
                });
              }),
              e
            );
          })(V),
          Y = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (
                (r.upstream = e),
                (r.handler = n),
                (r.count = 0),
                (r.lastRead = Promise.resolve({ value: null, done: !1 })),
                r
              );
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> handleErrors";
              }),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  var t = this;
                  return c(this, function(e) {
                    return (
                      (this.lastRead = this.lastRead.then(function() {
                        return t.serialNext();
                      })),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.serialNext = function() {
                return u(this, void 0, void 0, function() {
                  var t;
                  return c(this, function(e) {
                    switch (e.label) {
                      case 0:
                        e.label = 1;
                      case 1:
                        return (
                          e.trys.push([1, 3, , 4]), [4, this.upstream.next()]
                        );
                      case 2:
                        return [2, e.sent()];
                      case 3:
                        return (
                          (t = e.sent()),
                          this.handler(t)
                            ? [3, 4]
                            : [2, { value: null, done: !0 }]
                        );
                      case 4:
                        return [3, 0];
                      case 5:
                        return [2];
                    }
                  });
                });
              }),
              e
            );
          })(V),
          Q = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (r.upstream = e), (r.transform = n), r;
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> AsyncMap";
              }),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  var t, e, n, r, i, a, o;
                  return c(this, function(s) {
                    switch (s.label) {
                      case 0:
                        return [4, this.upstream.next()];
                      case 1:
                        return (t = s.sent()).done
                          ? [2, { value: null, done: !0 }]
                          : ((e = C(t.value)), [4, this.transform(t.value)]);
                      case 2:
                        for (
                          n = s.sent(), r = C(n), i = 0, a = e;
                          i < a.length;
                          i++
                        )
                          (o = a[i]), I(o, r) || o.dispose();
                        return [2, { value: n, done: !1 }];
                    }
                  });
                });
              }),
              e
            );
          })(V),
          Z = (function(t) {
            function e() {
              var e = t.call(this) || this;
              return (
                (e.outputQueue = new L()),
                (e.lastRead = Promise.resolve({ value: null, done: !1 })),
                e
              );
            }
            return (
              s(e, t),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  var t = this;
                  return c(this, function(e) {
                    return (
                      (this.lastRead = this.lastRead.then(function() {
                        return t.serialNext();
                      })),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.serialNext = function() {
                return u(this, void 0, void 0, function() {
                  return c(this, function(t) {
                    switch (t.label) {
                      case 0:
                        return 0 !== this.outputQueue.length()
                          ? [3, 2]
                          : [4, this.pump()];
                      case 1:
                        return t.sent()
                          ? [3, 0]
                          : [2, { value: null, done: !0 }];
                      case 2:
                        return [
                          2,
                          { value: this.outputQueue.shift(), done: !1 }
                        ];
                    }
                  });
                });
              }),
              e
            );
          })(V),
          tt = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (r.upstream = e), (r.transform = n), r;
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Flatmap";
              }),
              (e.prototype.pump = function() {
                return u(this, void 0, void 0, function() {
                  var t, e, n, r, i, a, o;
                  return c(this, function(s) {
                    switch (s.label) {
                      case 0:
                        return [4, this.upstream.next()];
                      case 1:
                        if ((t = s.sent()).done) return [2, !1];
                        for (
                          e = C(t.value),
                            n = this.transform(t.value),
                            r = C(n),
                            this.outputQueue.pushAll(n),
                            i = 0,
                            a = e;
                          i < a.length;
                          i++
                        )
                          (o = a[i]), I(o, r) || o.dispose();
                        return [2, !0];
                    }
                  });
                });
              }),
              e
            );
          })(Z),
          et = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (
                (r.baseErrorHandler = n),
                (r.lastRead = null),
                (r.iterator = null),
                (r.moreIterators = e),
                r
              );
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return "TODO: fill in upstream of chained summaries -> Chained";
              }),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  return c(this, function(t) {
                    return (
                      (this.lastRead = this.readFromChain(this.lastRead)),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.readFromChain = function(t) {
                return u(this, void 0, void 0, function() {
                  var e, n;
                  return c(this, function(r) {
                    switch (r.label) {
                      case 0:
                        return [4, t];
                      case 1:
                        return (
                          r.sent(),
                          null != this.iterator
                            ? [3, 3]
                            : [4, this.moreIterators.next()]
                        );
                      case 2:
                        if ((e = r.sent()).done)
                          return [2, { value: null, done: !0 }];
                        (this.iterator = e.value),
                          null != this.baseErrorHandler &&
                            (this.iterator = this.iterator.handleErrors(
                              this.baseErrorHandler
                            )),
                          (r.label = 3);
                      case 3:
                        return [4, this.iterator.next()];
                      case 4:
                        return (n = r.sent()).done
                          ? ((this.iterator = null), [2, this.readFromChain(t)])
                          : [2, n];
                    }
                  });
                });
              }),
              e
            );
          })(V);
        !(function(t) {
          (t[(t.FAIL = 0)] = "FAIL"),
            (t[(t.SHORTEST = 1)] = "SHORTEST"),
            (t[(t.LONGEST = 2)] = "LONGEST");
        })(U || (U = {}));
        (function(t) {
          function e(e, n) {
            void 0 === n && (n = U.FAIL);
            var r = t.call(this) || this;
            return (
              (r.iterators = e),
              (r.mismatchMode = n),
              (r.count = 0),
              (r.currentPromise = null),
              r
            );
          }
          s(e, t),
            (e.prototype.summary = function() {
              return "{TODO: fill in upstream of zip summaries} -> Zip";
            }),
            (e.prototype.nextState = function(t) {
              return u(this, void 0, void 0, function() {
                function e(t) {
                  return t instanceof V
                    ? {
                        value: t.next().then(function(t) {
                          return n++, t.done && r++, t.value;
                        }),
                        recurse: !1
                      }
                    : { value: null, recurse: !0 };
                }
                var n, r, i;
                return c(this, function(a) {
                  switch (a.label) {
                    case 0:
                      return [4, t];
                    case 1:
                      return (
                        a.sent(), (n = 0), (r = 0), [4, R(this.iterators, e)]
                      );
                    case 2:
                      if (((i = a.sent()), n === r))
                        return [2, { value: null, done: !0 }];
                      if (r > 0)
                        switch (this.mismatchMode) {
                          case U.FAIL:
                            throw new Error(
                              "Zipped streams should have the same length. Mismatched at element " +
                                this.count +
                                "."
                            );
                          case U.SHORTEST:
                            return [2, { value: null, done: !0 }];
                          case U.LONGEST:
                        }
                      return this.count++, [2, { value: i, done: !1 }];
                  }
                });
              });
            }),
            (e.prototype.next = function() {
              return u(this, void 0, void 0, function() {
                return c(this, function(t) {
                  switch (t.label) {
                    case 0:
                      return (
                        (this.currentPromise = this.nextState(
                          this.currentPromise
                        )),
                        [4, this.currentPromise]
                      );
                    case 1:
                      return [2, t.sent()];
                  }
                });
              });
            });
        })(V);
        var nt = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (
                (r.upstream = e), (r.bufferSize = n), (r.buffer = new j(n)), r
              );
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Prefetch";
              }),
              (e.prototype.refill = function() {
                for (; !this.buffer.isFull(); ) {
                  var t = this.upstream.next();
                  this.buffer.push(t);
                }
              }),
              (e.prototype.next = function() {
                return this.refill(), this.buffer.shift();
              }),
              e
            );
          })(V),
          rt = (function(t) {
            function e(e, n, r) {
              var i = t.call(this, e, n) || this;
              return (
                (i.upstream = e),
                (i.windowSize = n),
                (i.upstreamExhausted = !1),
                (i.random = _(r || a["Qc"].now().toString())),
                (i.lastRead = Promise.resolve({ value: null, done: !1 })),
                i
              );
            }
            return (
              s(e, t),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  var t = this;
                  return c(this, function(e) {
                    return (
                      (this.lastRead = this.lastRead.then(function() {
                        return t.serialNext();
                      })),
                      [2, this.lastRead]
                    );
                  });
                });
              }),
              (e.prototype.randomInt = function(t) {
                return Math.floor(this.random() * t);
              }),
              (e.prototype.chooseIndex = function() {
                return this.randomInt(this.buffer.length());
              }),
              (e.prototype.serialNext = function() {
                return u(this, void 0, void 0, function() {
                  var t, e;
                  return c(this, function(n) {
                    switch (n.label) {
                      case 0:
                        this.upstreamExhausted || this.refill(), (n.label = 1);
                      case 1:
                        return this.buffer.isEmpty()
                          ? [3, 3]
                          : ((t = this.chooseIndex()),
                            [4, this.buffer.shuffleExcise(t)]);
                      case 2:
                        return (e = n.sent()).done
                          ? ((this.upstreamExhausted = !0), [3, 1])
                          : (this.refill(), [2, e]);
                      case 3:
                        return [2, { value: null, done: !0 }];
                    }
                  });
                });
              }),
              e
            );
          })(nt),
          it = (function() {
            function t() {
              this.size = null;
            }
            return (
              (t.prototype.batch = function(t, e) {
                var n = this;
                void 0 === e && (e = !0);
                var r = this;
                return (
                  a["Qc"].assert(
                    t > 0,
                    "batchSize need to be positive, but it is\n      " + t
                  ),
                  at(
                    function() {
                      return u(n, void 0, void 0, function() {
                        return c(this, function(n) {
                          switch (n.label) {
                            case 0:
                              return [4, r.iterator()];
                            case 1:
                              return [2, n.sent().columnMajorBatch(t, e, ot)];
                          }
                        });
                      });
                    },
                    this.size === 1 / 0 || null == this.size
                      ? this.size
                      : e
                      ? Math.ceil(this.size / t)
                      : Math.floor(this.size / t)
                  )
                );
              }),
              (t.prototype.concatenate = function(t) {
                var e = this,
                  n = this;
                return at(
                  function() {
                    return u(e, void 0, void 0, function() {
                      var e, r;
                      return c(this, function(i) {
                        switch (i.label) {
                          case 0:
                            return [4, n.iterator()];
                          case 1:
                            return (
                              (r = (e = i.sent()).concatenate),
                              [4, t.iterator()]
                            );
                          case 2:
                            return [2, r.apply(e, [i.sent()])];
                        }
                      });
                    });
                  },
                  this.size === 1 / 0 || t.size === 1 / 0
                    ? 1 / 0
                    : null != this.size && null != t.size
                    ? this.size + t.size
                    : null
                );
              }),
              (t.prototype.filter = function(t) {
                var e = this,
                  n = this;
                return at(
                  function() {
                    return u(e, void 0, void 0, function() {
                      return c(this, function(e) {
                        switch (e.label) {
                          case 0:
                            return [4, n.iterator()];
                          case 1:
                            return [
                              2,
                              e.sent().filter(function(e) {
                                return Object(a["Jc"])(function() {
                                  return t(e);
                                });
                              })
                            ];
                        }
                      });
                    });
                  },
                  this.size === 1 / 0 ? 1 / 0 : null
                );
              }),
              (t.prototype.forEachAsync = function(t) {
                return u(this, void 0, void 0, function() {
                  return c(this, function(e) {
                    switch (e.label) {
                      case 0:
                        return [4, this.iterator()];
                      case 1:
                        return [2, e.sent().forEachAsync(t)];
                    }
                  });
                });
              }),
              (t.prototype.forEach = function(t) {
                return u(this, void 0, void 0, function() {
                  return c(this, function(e) {
                    return (
                      Object(a["M"])(
                        "dataset.forEach() is deprecated and will be removed. Please use dataset.forEachAsync() instead"
                      ),
                      [2, this.forEachAsync(t)]
                    );
                  });
                });
              }),
              (t.prototype.map = function(t) {
                var e = this,
                  n = this;
                return at(function() {
                  return u(e, void 0, void 0, function() {
                    return c(this, function(e) {
                      switch (e.label) {
                        case 0:
                          return [4, n.iterator()];
                        case 1:
                          return [
                            2,
                            e.sent().map(function(e) {
                              return Object(a["Jc"])(function() {
                                return t(e);
                              });
                            })
                          ];
                      }
                    });
                  });
                }, this.size);
              }),
              (t.prototype.mapAsync = function(t) {
                var e = this,
                  n = this;
                return at(function() {
                  return u(e, void 0, void 0, function() {
                    return c(this, function(e) {
                      switch (e.label) {
                        case 0:
                          return [4, n.iterator()];
                        case 1:
                          return [2, e.sent().mapAsync(t)];
                      }
                    });
                  });
                }, this.size);
              }),
              (t.prototype.prefetch = function(t) {
                var e = this,
                  n = this;
                return at(function() {
                  return u(e, void 0, void 0, function() {
                    return c(this, function(e) {
                      switch (e.label) {
                        case 0:
                          return [4, n.iterator()];
                        case 1:
                          return [2, e.sent().prefetch(t)];
                      }
                    });
                  });
                }, this.size);
              }),
              (t.prototype.repeat = function(t) {
                var e = this,
                  n = this;
                return at(
                  function() {
                    return u(e, void 0, void 0, function() {
                      var e = this;
                      return c(this, function(r) {
                        return [
                          2,
                          z(
                            F(function() {
                              return u(e, void 0, void 0, function() {
                                var t;
                                return c(this, function(e) {
                                  switch (e.label) {
                                    case 0:
                                      return (t = {}), [4, n.iterator()];
                                    case 1:
                                      return [
                                        2,
                                        ((t.value = e.sent()), (t.done = !1), t)
                                      ];
                                  }
                                });
                              });
                            }).take(t)
                          )
                        ];
                      });
                    });
                  },
                  null != this.size && t > 0
                    ? this.size * t
                    : 0 === t
                    ? 0
                    : null != this.size && (void 0 === t || t < 0)
                    ? 1 / 0
                    : null
                );
              }),
              (t.prototype.skip = function(t) {
                var e = this,
                  n = this;
                return at(
                  function() {
                    return u(e, void 0, void 0, function() {
                      return c(this, function(e) {
                        switch (e.label) {
                          case 0:
                            return [4, n.iterator()];
                          case 1:
                            return [2, e.sent().skip(t)];
                        }
                      });
                    });
                  },
                  null != this.size && t >= 0 && this.size >= t
                    ? this.size - t
                    : null != this.size &&
                      (this.size < t || void 0 === t || t < 0)
                    ? 0
                    : null
                );
              }),
              (t.prototype.shuffle = function(t, e, n) {
                var r = this;
                void 0 === n && (n = !0);
                var i = this,
                  o = _(e || a["Qc"].now().toString());
                return at(function() {
                  return u(r, void 0, void 0, function() {
                    var e;
                    return c(this, function(r) {
                      switch (r.label) {
                        case 0:
                          return (
                            (e = o.int32()),
                            n && (e += o.int32()),
                            [4, i.iterator()]
                          );
                        case 1:
                          return [2, r.sent().shuffle(t, e.toString())];
                      }
                    });
                  });
                }, this.size);
              }),
              (t.prototype.take = function(t) {
                var e = this,
                  n = this;
                return at(
                  function() {
                    return u(e, void 0, void 0, function() {
                      return c(this, function(e) {
                        switch (e.label) {
                          case 0:
                            return [4, n.iterator()];
                          case 1:
                            return [2, e.sent().take(t)];
                        }
                      });
                    });
                  },
                  null != this.size && this.size > t
                    ? t
                    : null != this.size && this.size <= t
                    ? this.size
                    : null
                );
              }),
              (t.prototype.toArray = function() {
                return u(this, void 0, void 0, function() {
                  return c(this, function(t) {
                    switch (t.label) {
                      case 0:
                        return [4, this.iterator()];
                      case 1:
                        return [2, t.sent().collect()];
                    }
                  });
                });
              }),
              t
            );
          })();
        function at(t, e) {
          return (
            void 0 === e && (e = null),
            new ((function(n) {
              function r() {
                var t = (null !== n && n.apply(this, arguments)) || this;
                return (t.size = e), t;
              }
              return (
                s(r, n),
                (r.prototype.iterator = function() {
                  return u(this, void 0, void 0, function() {
                    return c(this, function(e) {
                      return [2, t()];
                    });
                  });
                }),
                r
              );
            })(it))()
          );
        }
        function ot(t) {
          if (null === t) return null;
          var e = t[0];
          return "string" == typeof e
            ? { value: t, recurse: !1 }
            : D(e)
            ? M(e)
              ? { value: st(t), recurse: !1 }
              : { value: null, recurse: !0 }
            : { value: st(t), recurse: !1 };
        }
        function st(t) {
          if (0 === t.length)
            throw new Error("Can't make a batch of zero elements.");
          if (t[0] instanceof a["c"]) return Object(a["Ac"])(t);
          if (Array.isArray(t[0])) return ut(t);
          var e = t;
          return a["c"].make([e.length], { values: new Float32Array(e) });
        }
        function ut(t) {
          for (
            var e = t[0].length,
              n = [t.length, t[0].length],
              r = new Float32Array(t.length * e),
              i = 0,
              o = 0,
              s = t;
            o < s.length;
            o++
          ) {
            var u = s[o];
            if (u.length !== e)
              throw new Error(
                "Elements must have the same shape to be batched"
              );
            r.set(u, i), (i += e);
          }
          return a["c"].make(n, { values: r });
        }
        var ct = (function(t) {
            function e(e) {
              var n = t.call(this) || this;
              return (n.input = e), n;
            }
            return (
              s(e, t),
              (e.prototype.iterator = function() {
                return u(this, void 0, void 0, function() {
                  var t, e;
                  return c(this, function(n) {
                    switch (n.label) {
                      case 0:
                        return [4, this.input.iterator()];
                      case 1:
                        return (
                          (t = n.sent()),
                          (e = t.decodeUTF8()),
                          [2, e.split("\n")]
                        );
                    }
                  });
                });
              }),
              e
            );
          })(it),
          lt = '"',
          ft = Symbol("out"),
          ht = Symbol("field"),
          pt = Symbol("quote"),
          dt = Symbol("quoteafterquote"),
          mt = Symbol("quoteinquote"),
          vt = ((function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (
                (r.input = e),
                (r.hasHeader = !0),
                (r.fullColumnNames = null),
                (r.columnNamesValidated = !1),
                (r.columnConfigs = null),
                (r.configuredColumnsOnly = !1),
                (r.delimiter = ","),
                (r.base = new ct(e)),
                n || (n = {}),
                (r.hasHeader = !1 !== n.hasHeader),
                (r.fullColumnNames = n.columnNames),
                (r.columnConfigs = n.columnConfigs),
                (r.configuredColumnsOnly = n.configuredColumnsOnly),
                (r.delimiter = n.delimiter ? n.delimiter : ","),
                r
              );
            }
            s(e, t),
              (e.prototype.columnNames = function() {
                return u(this, void 0, void 0, function() {
                  return c(this, function(t) {
                    switch (t.label) {
                      case 0:
                        return this.columnNamesValidated
                          ? [3, 2]
                          : [4, this.setColumnNames()];
                      case 1:
                        t.sent(), (t.label = 2);
                      case 2:
                        return [
                          2,
                          this.configuredColumnsOnly
                            ? Object.keys(this.columnConfigs)
                            : this.fullColumnNames
                        ];
                    }
                  });
                });
              }),
              (e.prototype.setColumnNames = function() {
                return u(this, void 0, void 0, function() {
                  var t, e, n, r, i, o;
                  return c(this, function(s) {
                    switch (s.label) {
                      case 0:
                        return [4, this.maybeReadHeaderLine()];
                      case 1:
                        if (((t = s.sent()), !this.fullColumnNames && !t))
                          throw new Error(
                            "Column names must be provided if there is no header line."
                          );
                        if (
                          (this.fullColumnNames &&
                            t &&
                            a["Qc"].assert(
                              t.length === this.fullColumnNames.length,
                              "The length of provided columnNames (" +
                                this.fullColumnNames.length.toString() +
                                ") does not match the length of the header line read from file (" +
                                t.length.toString() +
                                ")."
                            ),
                          this.fullColumnNames || (this.fullColumnNames = t),
                          (e = this.fullColumnNames.reduce(function(t, e) {
                            return (t[e] = t[e] + 1 || 1), t;
                          }, {})),
                          (n = Object.keys(e).filter(function(t) {
                            return e[t] > 1;
                          })),
                          a["Qc"].assert(
                            0 === n.length,
                            "Duplicate column names found: " + n.toString()
                          ),
                          this.columnConfigs)
                        )
                          for (
                            r = 0, i = Object.keys(this.columnConfigs);
                            r < i.length;
                            r++
                          )
                            if (
                              ((o = i[r]),
                              -1 === this.fullColumnNames.indexOf(o))
                            )
                              throw new Error(
                                'The key "' +
                                  o +
                                  '" provided in columnConfigs does not match any of the column names (' +
                                  this.fullColumnNames.toString() +
                                  ")."
                              );
                        return (this.columnNamesValidated = !0), [2];
                    }
                  });
                });
              }),
              (e.prototype.maybeReadHeaderLine = function() {
                return u(this, void 0, void 0, function() {
                  var t;
                  return c(this, function(e) {
                    switch (e.label) {
                      case 0:
                        return this.hasHeader
                          ? [4, this.base.iterator()]
                          : [3, 3];
                      case 1:
                        return [4, e.sent().next()];
                      case 2:
                        if ((t = e.sent()).done)
                          throw new Error("No data was found for CSV parsing.");
                        return [2, t.value.split(this.delimiter)];
                      case 3:
                        return [2, null];
                    }
                  });
                });
              }),
              (e.prototype.iterator = function() {
                return u(this, void 0, void 0, function() {
                  var t,
                    e = this;
                  return c(this, function(n) {
                    switch (n.label) {
                      case 0:
                        return this.columnNamesValidated
                          ? [3, 2]
                          : [4, this.setColumnNames()];
                      case 1:
                        n.sent(), (n.label = 2);
                      case 2:
                        return [4, this.base.iterator()];
                      case 3:
                        return (
                          (t = n.sent()),
                          this.hasHeader && (t = t.skip(1)),
                          [
                            2,
                            t.map(function(t) {
                              return e.makeDataElement(t);
                            })
                          ]
                        );
                    }
                  });
                });
              }),
              (e.prototype.makeDataElement = function(t) {
                for (
                  var e = this.parseRow(t), n = {}, r = {}, i = 0;
                  i < this.fullColumnNames.length;
                  i++
                ) {
                  var a = this.fullColumnNames[i],
                    o = this.columnConfigs ? this.columnConfigs[a] : null;
                  if (!this.configuredColumnsOnly || o) {
                    var s = e[i],
                      u = null;
                    if ("" === s)
                      if (o && void 0 !== o.default) u = o.default;
                      else {
                        if (o && (o.required || o.isLabel))
                          throw new Error(
                            "Required column " +
                              a +
                              " is empty in this line: " +
                              t
                          );
                        u = void 0;
                      }
                    else {
                      var c = Number(s);
                      if (isNaN(c))
                        u = o && "bool" === o.dtype ? this.getBoolean(s) : s;
                      else if (o && o.dtype)
                        switch (o.dtype) {
                          case "float32":
                            u = c;
                            break;
                          case "int32":
                            u = Math.floor(c);
                            break;
                          case "bool":
                            u = this.getBoolean(s);
                            break;
                          default:
                            u = c;
                        }
                      else u = c;
                    }
                    o && o.isLabel ? (r[a] = u) : (n[a] = u);
                  }
                }
                return 0 === Object.keys(r).length ? n : [n, r];
              }),
              (e.prototype.getBoolean = function(t) {
                return "1" === t || "true" === t.toLowerCase() ? 1 : 0;
              }),
              (e.prototype.parseRow = function(t) {
                for (var e = [], n = 0, r = t.length, i = ht, a = 0; a < r; a++)
                  switch (i) {
                    case ft:
                      switch (t.charAt(a)) {
                        case lt:
                          (n = a + 1), (i = pt);
                          break;
                        case this.delimiter:
                          e.push(""), (i = ft), (n = a + 1);
                          break;
                        default:
                          (i = ht), (n = a);
                      }
                      break;
                    case ht:
                      switch (t.charAt(a)) {
                        case this.delimiter:
                          e.push(t.substring(n, a)), (i = ft), (n = a + 1);
                      }
                      break;
                    case pt:
                      switch (t.charAt(a)) {
                        case lt:
                          i = dt;
                      }
                      break;
                    case dt:
                      switch (t.charAt(a)) {
                        case this.delimiter:
                          e.push(t.substring(n, a - 1)), (i = ft), (n = a + 1);
                          break;
                        case lt:
                          i = pt;
                          break;
                        default:
                          i = mt;
                      }
                      break;
                    case mt:
                      switch (t.charAt(a)) {
                        case lt:
                          i = pt;
                      }
                  }
                return (
                  i === dt
                    ? e.push(t.substring(n, r - 1))
                    : e.push(t.substring(n)),
                  e
                );
              });
          })(it),
          (function() {
            return function() {};
          })()),
          yt = (function(t) {
            function e() {
              return (null !== t && t.apply(this, arguments)) || this;
            }
            return (
              s(e, t),
              (e.prototype.split = function(t) {
                return new gt(this, t);
              }),
              e
            );
          })(V),
          gt = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (r.upstream = e), (r.impl = new bt(e, n)), r;
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return this.impl.summary();
              }),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  return c(this, function(t) {
                    return [2, this.impl.next()];
                  });
                });
              }),
              e
            );
          })(yt),
          bt = (function(t) {
            function e(e, n) {
              var r = t.call(this) || this;
              return (r.upstream = e), (r.separator = n), (r.carryover = ""), r;
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return (
                  this.upstream.summary() +
                  " -> Split('" +
                  this.separator +
                  "')"
                );
              }),
              (e.prototype.pump = function() {
                return u(this, void 0, void 0, function() {
                  var t, e, n, r, i;
                  return c(this, function(a) {
                    switch (a.label) {
                      case 0:
                        return [4, this.upstream.next()];
                      case 1:
                        if ((t = a.sent()).done)
                          return "" === this.carryover
                            ? [2, !1]
                            : (this.outputQueue.push(this.carryover),
                              (this.carryover = ""),
                              [2, !0]);
                        for (
                          (e = t.value.split(this.separator))[0] =
                            this.carryover + e[0],
                            n = 0,
                            r = e.slice(0, -1);
                          n < r.length;
                          n++
                        )
                          (i = r[n]), this.outputQueue.push(i);
                        return (this.carryover = e[e.length - 1]), [2, !0];
                    }
                  });
                });
              }),
              e
            );
          })(Z),
          wt = (function(t) {
            function e() {
              return (null !== t && t.apply(this, arguments)) || this;
            }
            return (
              s(e, t),
              (e.prototype.decodeUTF8 = function() {
                return new _t(this);
              }),
              e
            );
          })(V),
          _t = (function(t) {
            function e(e) {
              var n = t.call(this) || this;
              return (n.upstream = e), (n.impl = new xt(e)), n;
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return this.impl.summary();
              }),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  return c(this, function(t) {
                    return [2, this.impl.next()];
                  });
                });
              }),
              e
            );
          })(yt),
          xt = (function(t) {
            function e(e) {
              var r = t.call(this) || this;
              if (((r.upstream = e), a["a"].get("IS_BROWSER")))
                r.decoder = new TextDecoder("utf-8");
              else {
                var i = n("7d72").StringDecoder;
                r.decoder = new i("utf8");
              }
              return r;
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return this.upstream.summary() + " -> Utf8";
              }),
              (e.prototype.pump = function() {
                return u(this, void 0, void 0, function() {
                  var t, e, n;
                  return c(this, function(r) {
                    switch (r.label) {
                      case 0:
                        return [4, this.upstream.next()];
                      case 1:
                        return (t = r.sent()).done
                          ? [2, !1]
                          : ((e = t.value),
                            (n = a["a"].get("IS_BROWSER")
                              ? this.decoder.decode(e, { stream: !0 })
                              : this.decoder.write(i.from(e.buffer))),
                            this.outputQueue.push(n),
                            [2, !0]);
                    }
                  });
                });
              }),
              e
            );
          })(Z),
          Et = (function(t) {
            function e(e, n) {
              void 0 === n && (n = {});
              var r = t.call(this) || this;
              return (
                (r.file = e),
                (r.options = n),
                a["Qc"].assert(
                  e instanceof Uint8Array ||
                    (!!a["a"].get("IS_BROWSER") &&
                      (e instanceof File || e instanceof Blob)),
                  "FileChunkIterator only supports File, Blob and Uint8Array right now."
                ),
                (r.offset = n.offset || 0),
                (r.chunkSize = n.chunkSize || 1048576),
                r
              );
            }
            return (
              s(e, t),
              (e.prototype.summary = function() {
                return "FileChunks " + this.file;
              }),
              (e.prototype.next = function() {
                return u(this, void 0, void 0, function() {
                  var t,
                    e,
                    n = this;
                  return c(this, function(r) {
                    switch (r.label) {
                      case 0:
                        return this.offset >=
                          (this.file instanceof Uint8Array
                            ? this.file.byteLength
                            : this.file.size)
                          ? [2, { value: null, done: !0 }]
                          : ((t = new Promise(function(t, e) {
                              var r = n.offset + n.chunkSize;
                              if (n.file instanceof Uint8Array)
                                t(new Uint8Array(n.file.slice(n.offset, r)));
                              else {
                                var i = new FileReader();
                                (i.onload = function(n) {
                                  var r = i.result;
                                  if (
                                    (r instanceof ArrayBuffer &&
                                      (r = new Uint8Array(r)),
                                    !(r instanceof Uint8Array))
                                  )
                                    return e(
                                      new TypeError(
                                        "FileReader returned unknown type."
                                      )
                                    );
                                  t(r);
                                }),
                                  (i.onabort = function(t) {
                                    return e(new Error("Aborted"));
                                  }),
                                  (i.onerror = function(t) {
                                    return e(new Error(t.type));
                                  });
                                var a = n.file.slice(n.offset, r);
                                i.readAsArrayBuffer(a);
                              }
                              n.offset = r;
                            })),
                            (e = {}),
                            [4, t]);
                      case 1:
                        return [2, ((e.value = r.sent()), (e.done = !1), e)];
                    }
                  });
                });
              }),
              e
            );
          })(wt);
        function St(t, e) {
          return (
            void 0 === e && (e = {}),
            u(this, void 0, void 0, function() {
              var r, i, o, s;
              return c(this, function(u) {
                switch (u.label) {
                  case 0:
                    return a["a"].get("IS_BROWSER") ? [4, fetch(t)] : [3, 5];
                  case 1:
                    return (r = u.sent()).ok ? [4, r.blob()] : [3, 3];
                  case 2:
                    return (i = u.sent()), [2, new Et(i, e)];
                  case 3:
                    throw new Error(r.statusText);
                  case 4:
                    return [3, 9];
                  case 5:
                    if (((o = n("8f9b")), "string" != typeof t))
                      throw new Error(
                        "URL must be a string. Request objects are not supported in the node.js environment yet."
                      );
                    return [4, o(t)];
                  case 6:
                    return (r = u.sent()).ok ? [4, r.buffer()] : [3, 8];
                  case 7:
                    return (s = u.sent()), [2, new Et(s, e)];
                  case 8:
                    throw new Error(r.statusText);
                  case 9:
                    return [2];
                }
              });
            })
          );
        }
        function Nt(t) {
          return "string" == typeof t && "file://" === t.substr(0, 7);
        }
        var Ot = (function(t) {
          function e(e, n) {
            void 0 === n && (n = {});
            var r = t.call(this) || this;
            return (r.input = e), (r.options = n), r;
          }
          return (
            s(e, t),
            (e.prototype.iterator = function() {
              return u(this, void 0, void 0, function() {
                var t;
                return c(this, function(e) {
                  return (
                    Nt(this.input) &&
                      a["a"].get("IS_NODE") &&
                      ((t = n("3e8f")),
                      (this.input = t.readFileSync(this.input.substr(7)))),
                    [2, new Et(this.input, this.options)]
                  );
                });
              });
            }),
            e
          );
        })(vt);
        (function(t) {
          function e(e, n) {
            void 0 === n && (n = {});
            var r = t.call(this) || this;
            return (r.url = e), (r.fileOptions = n), r;
          }
          s(e, t),
            (e.prototype.iterator = function() {
              return u(this, void 0, void 0, function() {
                return c(this, function(t) {
                  return Nt(this.url)
                    ? [2, new Ot(this.url, this.fileOptions).iterator()]
                    : [2, St(this.url, this.fileOptions)];
                });
              });
            });
        })(vt);
        var It = "0.2.3";
      }.call(this, n("c8ba"), n("f28c"), n("b639").Buffer));
    },
    c119: function(t, e, n) {
      var r = n("8c8a");
      (e.encrypt = function(t, e) {
        var n = r(e, t._prev);
        return (t._prev = t._cipher.encryptBlock(n)), t._prev;
      }),
        (e.decrypt = function(t, e) {
          var n = t._prev;
          t._prev = e;
          var i = t._cipher.decryptBlock(e);
          return r(i, n);
        });
    },
    c207: function(t, e) {},
    c24d: function(t) {
      t.exports = {
        modp1: {
          gen: "02",
          prime:
            "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"
        },
        modp2: {
          gen: "02",
          prime:
            "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"
        },
        modp5: {
          gen: "02",
          prime:
            "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"
        },
        modp14: {
          gen: "02",
          prime:
            "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"
        },
        modp15: {
          gen: "02",
          prime:
            "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"
        },
        modp16: {
          gen: "02",
          prime:
            "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"
        },
        modp17: {
          gen: "02",
          prime:
            "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"
        },
        modp18: {
          gen: "02",
          prime:
            "ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"
        }
      };
    },
    c2ae: function(t, e, n) {
      t.exports = n("e372").PassThrough;
    },
    c366: function(t, e, n) {
      var r = n("6821"),
        i = n("9def"),
        a = n("77f1");
      t.exports = function(t) {
        return function(e, n, o) {
          var s,
            u = r(e),
            c = i(u.length),
            l = a(o, c);
          if (t && n != n) {
            while (c > l) if (((s = u[l++]), s != s)) return !0;
          } else
            for (; c > l; l++)
              if ((t || l in u) && u[l] === n) return t || l || 0;
          return !t && -1;
        };
      };
    },
    c367: function(t, e, n) {
      "use strict";
      var r = n("8436"),
        i = n("50ed"),
        a = n("481b"),
        o = n("36c3");
      (t.exports = n("30f1")(
        Array,
        "Array",
        function(t, e) {
          (this._t = o(t)), (this._i = 0), (this._k = e);
        },
        function() {
          var t = this._t,
            e = this._k,
            n = this._i++;
          return !t || n >= t.length
            ? ((this._t = void 0), i(1))
            : i(0, "keys" == e ? n : "values" == e ? t[n] : [n, t[n]]);
        },
        "values"
      )),
        (a.Arguments = a.Array),
        r("keys"),
        r("values"),
        r("entries");
    },
    c3a1: function(t, e, n) {
      var r = n("e6f3"),
        i = n("1691");
      t.exports =
        Object.keys ||
        function(t) {
          return r(t, i);
        };
    },
    c3c0: function(t, e, n) {
      "use strict";
      var r = n("da3e"),
        i = n("3fb5");
      function a(t, e) {
        return (
          55296 === (64512 & t.charCodeAt(e)) &&
          (!(e < 0 || e + 1 >= t.length) &&
            56320 === (64512 & t.charCodeAt(e + 1)))
        );
      }
      function o(t, e) {
        if (Array.isArray(t)) return t.slice();
        if (!t) return [];
        var n = [];
        if ("string" === typeof t)
          if (e) {
            if ("hex" === e)
              for (
                t = t.replace(/[^a-z0-9]+/gi, ""),
                  t.length % 2 !== 0 && (t = "0" + t),
                  i = 0;
                i < t.length;
                i += 2
              )
                n.push(parseInt(t[i] + t[i + 1], 16));
          } else
            for (var r = 0, i = 0; i < t.length; i++) {
              var o = t.charCodeAt(i);
              o < 128
                ? (n[r++] = o)
                : o < 2048
                ? ((n[r++] = (o >> 6) | 192), (n[r++] = (63 & o) | 128))
                : a(t, i)
                ? ((o =
                    65536 + ((1023 & o) << 10) + (1023 & t.charCodeAt(++i))),
                  (n[r++] = (o >> 18) | 240),
                  (n[r++] = ((o >> 12) & 63) | 128),
                  (n[r++] = ((o >> 6) & 63) | 128),
                  (n[r++] = (63 & o) | 128))
                : ((n[r++] = (o >> 12) | 224),
                  (n[r++] = ((o >> 6) & 63) | 128),
                  (n[r++] = (63 & o) | 128));
            }
        else for (i = 0; i < t.length; i++) n[i] = 0 | t[i];
        return n;
      }
      function s(t) {
        for (var e = "", n = 0; n < t.length; n++) e += l(t[n].toString(16));
        return e;
      }
      function u(t) {
        var e =
          (t >>> 24) |
          ((t >>> 8) & 65280) |
          ((t << 8) & 16711680) |
          ((255 & t) << 24);
        return e >>> 0;
      }
      function c(t, e) {
        for (var n = "", r = 0; r < t.length; r++) {
          var i = t[r];
          "little" === e && (i = u(i)), (n += f(i.toString(16)));
        }
        return n;
      }
      function l(t) {
        return 1 === t.length ? "0" + t : t;
      }
      function f(t) {
        return 7 === t.length
          ? "0" + t
          : 6 === t.length
          ? "00" + t
          : 5 === t.length
          ? "000" + t
          : 4 === t.length
          ? "0000" + t
          : 3 === t.length
          ? "00000" + t
          : 2 === t.length
          ? "000000" + t
          : 1 === t.length
          ? "0000000" + t
          : t;
      }
      function h(t, e, n, i) {
        var a = n - e;
        r(a % 4 === 0);
        for (
          var o = new Array(a / 4), s = 0, u = e;
          s < o.length;
          s++, u += 4
        ) {
          var c;
          (c =
            "big" === i
              ? (t[u] << 24) | (t[u + 1] << 16) | (t[u + 2] << 8) | t[u + 3]
              : (t[u + 3] << 24) | (t[u + 2] << 16) | (t[u + 1] << 8) | t[u]),
            (o[s] = c >>> 0);
        }
        return o;
      }
      function p(t, e) {
        for (
          var n = new Array(4 * t.length), r = 0, i = 0;
          r < t.length;
          r++, i += 4
        ) {
          var a = t[r];
          "big" === e
            ? ((n[i] = a >>> 24),
              (n[i + 1] = (a >>> 16) & 255),
              (n[i + 2] = (a >>> 8) & 255),
              (n[i + 3] = 255 & a))
            : ((n[i + 3] = a >>> 24),
              (n[i + 2] = (a >>> 16) & 255),
              (n[i + 1] = (a >>> 8) & 255),
              (n[i] = 255 & a));
        }
        return n;
      }
      function d(t, e) {
        return (t >>> e) | (t << (32 - e));
      }
      function m(t, e) {
        return (t << e) | (t >>> (32 - e));
      }
      function v(t, e) {
        return (t + e) >>> 0;
      }
      function y(t, e, n) {
        return (t + e + n) >>> 0;
      }
      function g(t, e, n, r) {
        return (t + e + n + r) >>> 0;
      }
      function b(t, e, n, r, i) {
        return (t + e + n + r + i) >>> 0;
      }
      function w(t, e, n, r) {
        var i = t[e],
          a = t[e + 1],
          o = (r + a) >>> 0,
          s = (o < r ? 1 : 0) + n + i;
        (t[e] = s >>> 0), (t[e + 1] = o);
      }
      function _(t, e, n, r) {
        var i = (e + r) >>> 0,
          a = (i < e ? 1 : 0) + t + n;
        return a >>> 0;
      }
      function x(t, e, n, r) {
        var i = e + r;
        return i >>> 0;
      }
      function E(t, e, n, r, i, a, o, s) {
        var u = 0,
          c = e;
        (c = (c + r) >>> 0),
          (u += c < e ? 1 : 0),
          (c = (c + a) >>> 0),
          (u += c < a ? 1 : 0),
          (c = (c + s) >>> 0),
          (u += c < s ? 1 : 0);
        var l = t + n + i + o + u;
        return l >>> 0;
      }
      function S(t, e, n, r, i, a, o, s) {
        var u = e + r + a + s;
        return u >>> 0;
      }
      function N(t, e, n, r, i, a, o, s, u, c) {
        var l = 0,
          f = e;
        (f = (f + r) >>> 0),
          (l += f < e ? 1 : 0),
          (f = (f + a) >>> 0),
          (l += f < a ? 1 : 0),
          (f = (f + s) >>> 0),
          (l += f < s ? 1 : 0),
          (f = (f + c) >>> 0),
          (l += f < c ? 1 : 0);
        var h = t + n + i + o + u + l;
        return h >>> 0;
      }
      function O(t, e, n, r, i, a, o, s, u, c) {
        var l = e + r + a + s + c;
        return l >>> 0;
      }
      function I(t, e, n) {
        var r = (e << (32 - n)) | (t >>> n);
        return r >>> 0;
      }
      function C(t, e, n) {
        var r = (t << (32 - n)) | (e >>> n);
        return r >>> 0;
      }
      function A(t, e, n) {
        return t >>> n;
      }
      function k(t, e, n) {
        var r = (t << (32 - n)) | (e >>> n);
        return r >>> 0;
      }
      (e.inherits = i),
        (e.toArray = o),
        (e.toHex = s),
        (e.htonl = u),
        (e.toHex32 = c),
        (e.zero2 = l),
        (e.zero8 = f),
        (e.join32 = h),
        (e.split32 = p),
        (e.rotr32 = d),
        (e.rotl32 = m),
        (e.sum32 = v),
        (e.sum32_3 = y),
        (e.sum32_4 = g),
        (e.sum32_5 = b),
        (e.sum64 = w),
        (e.sum64_hi = _),
        (e.sum64_lo = x),
        (e.sum64_4_hi = E),
        (e.sum64_4_lo = S),
        (e.sum64_5_hi = N),
        (e.sum64_5_lo = O),
        (e.rotr64_hi = I),
        (e.rotr64_lo = C),
        (e.shr64_hi = A),
        (e.shr64_lo = k);
    },
    c69a: function(t, e, n) {
      t.exports =
        !n("9e1e") &&
        !n("79e5")(function() {
          return (
            7 !=
            Object.defineProperty(n("230e")("div"), "a", {
              get: function() {
                return 7;
              }
            }).a
          );
        });
    },
    c8ba: function(t, e) {
      var n;
      n = (function() {
        return this;
      })();
      try {
        n = n || new Function("return this")();
      } catch (r) {
        "object" === typeof window && (n = window);
      }
      t.exports = n;
    },
    ca5a: function(t, e) {
      var n = 0,
        r = Math.random();
      t.exports = function(t) {
        return "Symbol(".concat(
          void 0 === t ? "" : t,
          ")_",
          (++n + r).toString(36)
        );
      };
    },
    cadf: function(t, e, n) {
      "use strict";
      var r = n("9c6c"),
        i = n("d53b"),
        a = n("84f2"),
        o = n("6821");
      (t.exports = n("01f9")(
        Array,
        "Array",
        function(t, e) {
          (this._t = o(t)), (this._i = 0), (this._k = e);
        },
        function() {
          var t = this._t,
            e = this._k,
            n = this._i++;
          return !t || n >= t.length
            ? ((this._t = void 0), i(1))
            : i(0, "keys" == e ? n : "values" == e ? t[n] : [n, t[n]]);
        },
        "values"
      )),
        (a.Arguments = a.Array),
        r("keys"),
        r("values"),
        r("entries");
    },
    cb7c: function(t, e, n) {
      var r = n("d3f4");
      t.exports = function(t) {
        if (!r(t)) throw TypeError(t + " is not an object!");
        return t;
      };
    },
    cd78: function(t, e, n) {
      var r = n("e4ae"),
        i = n("f772"),
        a = n("656e");
      t.exports = function(t, e) {
        if ((r(t), i(e) && e.constructor === t)) return e;
        var n = a.f(t),
          o = n.resolve;
        return o(e), n.promise;
      };
    },
    cd91: function(t) {
      t.exports = {
        "1.3.132.0.10": "secp256k1",
        "1.3.132.0.33": "p224",
        "1.2.840.10045.3.1.1": "p192",
        "1.2.840.10045.3.1.7": "p256",
        "1.3.132.0.34": "p384",
        "1.3.132.0.35": "p521"
      };
    },
    ce10: function(t, e, n) {
      var r = n("69a8"),
        i = n("6821"),
        a = n("c366")(!1),
        o = n("613b")("IE_PROTO");
      t.exports = function(t, e) {
        var n,
          s = i(t),
          u = 0,
          c = [];
        for (n in s) n != o && r(s, n) && c.push(n);
        while (e.length > u) r(s, (n = e[u++])) && (~a(c, n) || c.push(n));
        return c;
      };
    },
    cfbd: function(t, e, n) {
      var r = n("3fb5"),
        i = n("7f7a"),
        a = i.base,
        o = i.bignum,
        s = i.constants.der;
      function u(t) {
        (this.enc = "der"),
          (this.name = t.name),
          (this.entity = t),
          (this.tree = new c()),
          this.tree._init(t.body);
      }
      function c(t) {
        a.Node.call(this, "der", t);
      }
      function l(t, e) {
        var n = t.readUInt8(e);
        if (t.isError(n)) return n;
        var r = s.tagClass[n >> 6],
          i = 0 === (32 & n);
        if (31 === (31 & n)) {
          var a = n;
          n = 0;
          while (128 === (128 & a)) {
            if (((a = t.readUInt8(e)), t.isError(a))) return a;
            (n <<= 7), (n |= 127 & a);
          }
        } else n &= 31;
        var o = s.tag[n];
        return { cls: r, primitive: i, tag: n, tagStr: o };
      }
      function f(t, e, n) {
        var r = t.readUInt8(n);
        if (t.isError(r)) return r;
        if (!e && 128 === r) return null;
        if (0 === (128 & r)) return r;
        var i = 127 & r;
        if (i > 4) return t.error("length octect is too long");
        r = 0;
        for (var a = 0; a < i; a++) {
          r <<= 8;
          var o = t.readUInt8(n);
          if (t.isError(o)) return o;
          r |= o;
        }
        return r;
      }
      (t.exports = u),
        (u.prototype.decode = function(t, e) {
          return (
            t instanceof a.DecoderBuffer || (t = new a.DecoderBuffer(t, e)),
            this.tree._decode(t, e)
          );
        }),
        r(c, a.Node),
        (c.prototype._peekTag = function(t, e, n) {
          if (t.isEmpty()) return !1;
          var r = t.save(),
            i = l(t, 'Failed to peek tag: "' + e + '"');
          return t.isError(i)
            ? i
            : (t.restore(r),
              i.tag === e || i.tagStr === e || i.tagStr + "of" === e || n);
        }),
        (c.prototype._decodeTag = function(t, e, n) {
          var r = l(t, 'Failed to decode tag of "' + e + '"');
          if (t.isError(r)) return r;
          var i = f(t, r.primitive, 'Failed to get length of "' + e + '"');
          if (t.isError(i)) return i;
          if (!n && r.tag !== e && r.tagStr !== e && r.tagStr + "of" !== e)
            return t.error('Failed to match tag: "' + e + '"');
          if (r.primitive || null !== i)
            return t.skip(i, 'Failed to match body of: "' + e + '"');
          var a = t.save(),
            o = this._skipUntilEnd(
              t,
              'Failed to skip indefinite length body: "' + this.tag + '"'
            );
          return t.isError(o)
            ? o
            : ((i = t.offset - a.offset),
              t.restore(a),
              t.skip(i, 'Failed to match body of: "' + e + '"'));
        }),
        (c.prototype._skipUntilEnd = function(t, e) {
          while (1) {
            var n = l(t, e);
            if (t.isError(n)) return n;
            var r,
              i = f(t, n.primitive, e);
            if (t.isError(i)) return i;
            if (
              ((r =
                n.primitive || null !== i
                  ? t.skip(i)
                  : this._skipUntilEnd(t, e)),
              t.isError(r))
            )
              return r;
            if ("end" === n.tagStr) break;
          }
        }),
        (c.prototype._decodeList = function(t, e, n, r) {
          var i = [];
          while (!t.isEmpty()) {
            var a = this._peekTag(t, "end");
            if (t.isError(a)) return a;
            var o = n.decode(t, "der", r);
            if (t.isError(o) && a) break;
            i.push(o);
          }
          return i;
        }),
        (c.prototype._decodeStr = function(t, e) {
          if ("bitstr" === e) {
            var n = t.readUInt8();
            return t.isError(n) ? n : { unused: n, data: t.raw() };
          }
          if ("bmpstr" === e) {
            var r = t.raw();
            if (r.length % 2 === 1)
              return t.error("Decoding of string type: bmpstr length mismatch");
            for (var i = "", a = 0; a < r.length / 2; a++)
              i += String.fromCharCode(r.readUInt16BE(2 * a));
            return i;
          }
          if ("numstr" === e) {
            var o = t.raw().toString("ascii");
            return this._isNumstr(o)
              ? o
              : t.error(
                  "Decoding of string type: numstr unsupported characters"
                );
          }
          if ("octstr" === e) return t.raw();
          if ("objDesc" === e) return t.raw();
          if ("printstr" === e) {
            var s = t.raw().toString("ascii");
            return this._isPrintstr(s)
              ? s
              : t.error(
                  "Decoding of string type: printstr unsupported characters"
                );
          }
          return /str$/.test(e)
            ? t.raw().toString()
            : t.error("Decoding of string type: " + e + " unsupported");
        }),
        (c.prototype._decodeObjid = function(t, e, n) {
          var r,
            i = [],
            a = 0;
          while (!t.isEmpty()) {
            var o = t.readUInt8();
            (a <<= 7), (a |= 127 & o), 0 === (128 & o) && (i.push(a), (a = 0));
          }
          128 & o && i.push(a);
          var s = (i[0] / 40) | 0,
            u = i[0] % 40;
          if (((r = n ? i : [s, u].concat(i.slice(1))), e)) {
            var c = e[r.join(" ")];
            void 0 === c && (c = e[r.join(".")]), void 0 !== c && (r = c);
          }
          return r;
        }),
        (c.prototype._decodeTime = function(t, e) {
          var n = t.raw().toString();
          if ("gentime" === e)
            var r = 0 | n.slice(0, 4),
              i = 0 | n.slice(4, 6),
              a = 0 | n.slice(6, 8),
              o = 0 | n.slice(8, 10),
              s = 0 | n.slice(10, 12),
              u = 0 | n.slice(12, 14);
          else {
            if ("utctime" !== e)
              return t.error("Decoding " + e + " time is not supported yet");
            (r = 0 | n.slice(0, 2)),
              (i = 0 | n.slice(2, 4)),
              (a = 0 | n.slice(4, 6)),
              (o = 0 | n.slice(6, 8)),
              (s = 0 | n.slice(8, 10)),
              (u = 0 | n.slice(10, 12));
            r = r < 70 ? 2e3 + r : 1900 + r;
          }
          return Date.UTC(r, i - 1, a, o, s, u, 0);
        }),
        (c.prototype._decodeNull = function(t) {
          return null;
        }),
        (c.prototype._decodeBool = function(t) {
          var e = t.readUInt8();
          return t.isError(e) ? e : 0 !== e;
        }),
        (c.prototype._decodeInt = function(t, e) {
          var n = t.raw(),
            r = new o(n);
          return e && (r = e[r.toString(10)] || r), r;
        }),
        (c.prototype._use = function(t, e) {
          return (
            "function" === typeof t && (t = t(e)), t._getDecoder("der").tree
          );
        });
    },
    d06a: function(module, __webpack_exports__, __webpack_require__) {
      "use strict";
      (function(global, Buffer) {
        __webpack_require__.d(__webpack_exports__, "a", function() {
          return loadGraphModel;
        }),
          __webpack_require__.d(__webpack_exports__, "b", function() {
            return version;
          });
        var _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
            "4f66"
          ),
          __assign =
            Object.assign ||
            function(t) {
              for (var e, n = 1, r = arguments.length; n < r; n++)
                for (var i in (e = arguments[n]))
                  Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
              return t;
            };
        /**
         * @license
         * Copyright 2019 Google LLC. All Rights Reserved.
         * Licensed under the Apache License, Version 2.0 (the "License");
         * you may not use this file except in compliance with the License.
         * You may obtain a copy of the License at
         *
         * http://www.apache.org/licenses/LICENSE-2.0
         *
         * Unless required by applicable law or agreed to in writing, software
         * distributed under the License is distributed on an "AS IS" BASIS,
         * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
         * See the License for the specific language governing permissions and
         * limitations under the License.
         * =============================================================================
         */ function __awaiter(t, e, n, r) {
          return new (n || (n = Promise))(function(i, a) {
            function o(t) {
              try {
                u(r.next(t));
              } catch (t) {
                a(t);
              }
            }
            function s(t) {
              try {
                u(r.throw(t));
              } catch (t) {
                a(t);
              }
            }
            function u(t) {
              t.done
                ? i(t.value)
                : new n(function(e) {
                    e(t.value);
                  }).then(o, s);
            }
            u((r = r.apply(t, e || [])).next());
          });
        }
        function __generator(t, e) {
          var n,
            r,
            i,
            a,
            o = {
              label: 0,
              sent: function() {
                if (1 & i[0]) throw i[1];
                return i[1];
              },
              trys: [],
              ops: []
            };
          return (
            (a = { next: s(0), throw: s(1), return: s(2) }),
            "function" == typeof Symbol &&
              (a[Symbol.iterator] = function() {
                return this;
              }),
            a
          );
          function s(a) {
            return function(s) {
              return (function(a) {
                if (n) throw new TypeError("Generator is already executing.");
                for (; o; )
                  try {
                    if (
                      ((n = 1),
                      r &&
                        (i =
                          r[2 & a[0] ? "return" : a[0] ? "throw" : "next"]) &&
                        !(i = i.call(r, a[1])).done)
                    )
                      return i;
                    switch (((r = 0), i && (a = [0, i.value]), a[0])) {
                      case 0:
                      case 1:
                        i = a;
                        break;
                      case 4:
                        return o.label++, { value: a[1], done: !1 };
                      case 5:
                        o.label++, (r = a[1]), (a = [0]);
                        continue;
                      case 7:
                        (a = o.ops.pop()), o.trys.pop();
                        continue;
                      default:
                        if (
                          !(i = (i = o.trys).length > 0 && i[i.length - 1]) &&
                          (6 === a[0] || 2 === a[0])
                        ) {
                          o = 0;
                          continue;
                        }
                        if (
                          3 === a[0] &&
                          (!i || (a[1] > i[0] && a[1] < i[3]))
                        ) {
                          o.label = a[1];
                          break;
                        }
                        if (6 === a[0] && o.label < i[1]) {
                          (o.label = i[1]), (i = a);
                          break;
                        }
                        if (i && o.label < i[2]) {
                          (o.label = i[2]), o.ops.push(a);
                          break;
                        }
                        i[2] && o.ops.pop(), o.trys.pop();
                        continue;
                    }
                    a = e.call(t, o);
                  } catch (t) {
                    (a = [6, t]), (r = 0);
                  } finally {
                    n = i = 0;
                  }
                if (5 & a[0]) throw a[1];
                return { value: a[0] ? a[1] : void 0, done: !0 };
              })([a, s]);
            };
          }
        }
        var commonjsGlobal =
          "undefined" != typeof window
            ? window
            : "undefined" != typeof global
            ? global
            : "undefined" != typeof self
            ? self
            : {};
        function createCommonjsModule(t, e) {
          return t((e = { exports: {} }), e.exports), e.exports;
        }
        var aspromise = asPromise;
        function asPromise(t, e) {
          for (
            var n = new Array(arguments.length - 1), r = 0, i = 2, a = !0;
            i < arguments.length;

          )
            n[r++] = arguments[i++];
          return new Promise(function(i, o) {
            n[r] = function(t) {
              if (a)
                if (((a = !1), t)) o(t);
                else {
                  for (
                    var e = new Array(arguments.length - 1), n = 0;
                    n < e.length;

                  )
                    e[n++] = arguments[n];
                  i.apply(null, e);
                }
            };
            try {
              t.apply(e || null, n);
            } catch (t) {
              a && ((a = !1), o(t));
            }
          });
        }
        var base64_1 = createCommonjsModule(function(t, e) {
            var n = e;
            n.length = function(t) {
              var e = t.length;
              if (!e) return 0;
              for (var n = 0; --e % 4 > 1 && "=" === t.charAt(e); ) ++n;
              return Math.ceil(3 * t.length) / 4 - n;
            };
            for (var r = new Array(64), i = new Array(123), a = 0; a < 64; )
              i[
                (r[a] =
                  a < 26
                    ? a + 65
                    : a < 52
                    ? a + 71
                    : a < 62
                    ? a - 4
                    : (a - 59) | 43)
              ] = a++;
            (n.encode = function(t, e, n) {
              for (var i, a = null, o = [], s = 0, u = 0; e < n; ) {
                var c = t[e++];
                switch (u) {
                  case 0:
                    (o[s++] = r[c >> 2]), (i = (3 & c) << 4), (u = 1);
                    break;
                  case 1:
                    (o[s++] = r[i | (c >> 4)]), (i = (15 & c) << 2), (u = 2);
                    break;
                  case 2:
                    (o[s++] = r[i | (c >> 6)]), (o[s++] = r[63 & c]), (u = 0);
                }
                s > 8191 &&
                  ((a || (a = [])).push(String.fromCharCode.apply(String, o)),
                  (s = 0));
              }
              return (
                u && ((o[s++] = r[i]), (o[s++] = 61), 1 === u && (o[s++] = 61)),
                a
                  ? (s &&
                      a.push(String.fromCharCode.apply(String, o.slice(0, s))),
                    a.join(""))
                  : String.fromCharCode.apply(String, o.slice(0, s))
              );
            }),
              (n.decode = function(t, e, n) {
                for (var r, a = n, o = 0, s = 0; s < t.length; ) {
                  var u = t.charCodeAt(s++);
                  if (61 === u && o > 1) break;
                  if (void 0 === (u = i[u])) throw Error("invalid encoding");
                  switch (o) {
                    case 0:
                      (r = u), (o = 1);
                      break;
                    case 1:
                      (e[n++] = (r << 2) | ((48 & u) >> 4)), (r = u), (o = 2);
                      break;
                    case 2:
                      (e[n++] = ((15 & r) << 4) | ((60 & u) >> 2)),
                        (r = u),
                        (o = 3);
                      break;
                    case 3:
                      (e[n++] = ((3 & r) << 6) | u), (o = 0);
                  }
                }
                if (1 === o) throw Error("invalid encoding");
                return n - a;
              }),
              (n.test = function(t) {
                return /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(
                  t
                );
              });
          }),
          eventemitter = EventEmitter;
        function EventEmitter() {
          this._listeners = {};
        }
        (EventEmitter.prototype.on = function(t, e, n) {
          return (
            (this._listeners[t] || (this._listeners[t] = [])).push({
              fn: e,
              ctx: n || this
            }),
            this
          );
        }),
          (EventEmitter.prototype.off = function(t, e) {
            if (void 0 === t) this._listeners = {};
            else if (void 0 === e) this._listeners[t] = [];
            else
              for (var n = this._listeners[t], r = 0; r < n.length; )
                n[r].fn === e ? n.splice(r, 1) : ++r;
            return this;
          }),
          (EventEmitter.prototype.emit = function(t) {
            var e = this._listeners[t];
            if (e) {
              for (var n = [], r = 1; r < arguments.length; )
                n.push(arguments[r++]);
              for (r = 0; r < e.length; ) e[r].fn.apply(e[r++].ctx, n);
            }
            return this;
          });
        var float_1 = factory(factory);
        function factory(t) {
          return (
            "undefined" != typeof Float32Array
              ? (function() {
                  var e = new Float32Array([-0]),
                    n = new Uint8Array(e.buffer),
                    r = 128 === n[3];
                  function i(t, r, i) {
                    (e[0] = t),
                      (r[i] = n[0]),
                      (r[i + 1] = n[1]),
                      (r[i + 2] = n[2]),
                      (r[i + 3] = n[3]);
                  }
                  function a(t, r, i) {
                    (e[0] = t),
                      (r[i] = n[3]),
                      (r[i + 1] = n[2]),
                      (r[i + 2] = n[1]),
                      (r[i + 3] = n[0]);
                  }
                  function o(t, r) {
                    return (
                      (n[0] = t[r]),
                      (n[1] = t[r + 1]),
                      (n[2] = t[r + 2]),
                      (n[3] = t[r + 3]),
                      e[0]
                    );
                  }
                  function s(t, r) {
                    return (
                      (n[3] = t[r]),
                      (n[2] = t[r + 1]),
                      (n[1] = t[r + 2]),
                      (n[0] = t[r + 3]),
                      e[0]
                    );
                  }
                  (t.writeFloatLE = r ? i : a),
                    (t.writeFloatBE = r ? a : i),
                    (t.readFloatLE = r ? o : s),
                    (t.readFloatBE = r ? s : o);
                })()
              : (function() {
                  function e(t, e, n, r) {
                    var i = e < 0 ? 1 : 0;
                    if ((i && (e = -e), 0 === e))
                      t(1 / e > 0 ? 0 : 2147483648, n, r);
                    else if (isNaN(e)) t(2143289344, n, r);
                    else if (e > 3.4028234663852886e38)
                      t(((i << 31) | 2139095040) >>> 0, n, r);
                    else if (e < 1.1754943508222875e-38)
                      t(
                        ((i << 31) | Math.round(e / 1.401298464324817e-45)) >>>
                          0,
                        n,
                        r
                      );
                    else {
                      var a = Math.floor(Math.log(e) / Math.LN2);
                      t(
                        ((i << 31) |
                          ((a + 127) << 23) |
                          (8388607 &
                            Math.round(e * Math.pow(2, -a) * 8388608))) >>>
                          0,
                        n,
                        r
                      );
                    }
                  }
                  function n(t, e, n) {
                    var r = t(e, n),
                      i = 2 * (r >> 31) + 1,
                      a = (r >>> 23) & 255,
                      o = 8388607 & r;
                    return 255 === a
                      ? o
                        ? NaN
                        : i * (1 / 0)
                      : 0 === a
                      ? 1.401298464324817e-45 * i * o
                      : i * Math.pow(2, a - 150) * (o + 8388608);
                  }
                  (t.writeFloatLE = e.bind(null, writeUintLE)),
                    (t.writeFloatBE = e.bind(null, writeUintBE)),
                    (t.readFloatLE = n.bind(null, readUintLE)),
                    (t.readFloatBE = n.bind(null, readUintBE));
                })(),
            "undefined" != typeof Float64Array
              ? (function() {
                  var e = new Float64Array([-0]),
                    n = new Uint8Array(e.buffer),
                    r = 128 === n[7];
                  function i(t, r, i) {
                    (e[0] = t),
                      (r[i] = n[0]),
                      (r[i + 1] = n[1]),
                      (r[i + 2] = n[2]),
                      (r[i + 3] = n[3]),
                      (r[i + 4] = n[4]),
                      (r[i + 5] = n[5]),
                      (r[i + 6] = n[6]),
                      (r[i + 7] = n[7]);
                  }
                  function a(t, r, i) {
                    (e[0] = t),
                      (r[i] = n[7]),
                      (r[i + 1] = n[6]),
                      (r[i + 2] = n[5]),
                      (r[i + 3] = n[4]),
                      (r[i + 4] = n[3]),
                      (r[i + 5] = n[2]),
                      (r[i + 6] = n[1]),
                      (r[i + 7] = n[0]);
                  }
                  function o(t, r) {
                    return (
                      (n[0] = t[r]),
                      (n[1] = t[r + 1]),
                      (n[2] = t[r + 2]),
                      (n[3] = t[r + 3]),
                      (n[4] = t[r + 4]),
                      (n[5] = t[r + 5]),
                      (n[6] = t[r + 6]),
                      (n[7] = t[r + 7]),
                      e[0]
                    );
                  }
                  function s(t, r) {
                    return (
                      (n[7] = t[r]),
                      (n[6] = t[r + 1]),
                      (n[5] = t[r + 2]),
                      (n[4] = t[r + 3]),
                      (n[3] = t[r + 4]),
                      (n[2] = t[r + 5]),
                      (n[1] = t[r + 6]),
                      (n[0] = t[r + 7]),
                      e[0]
                    );
                  }
                  (t.writeDoubleLE = r ? i : a),
                    (t.writeDoubleBE = r ? a : i),
                    (t.readDoubleLE = r ? o : s),
                    (t.readDoubleBE = r ? s : o);
                })()
              : (function() {
                  function e(t, e, n, r, i, a) {
                    var o = r < 0 ? 1 : 0;
                    if ((o && (r = -r), 0 === r))
                      t(0, i, a + e), t(1 / r > 0 ? 0 : 2147483648, i, a + n);
                    else if (isNaN(r)) t(0, i, a + e), t(2146959360, i, a + n);
                    else if (r > 1.7976931348623157e308)
                      t(0, i, a + e),
                        t(((o << 31) | 2146435072) >>> 0, i, a + n);
                    else {
                      var s;
                      if (r < 2.2250738585072014e-308)
                        t((s = r / 5e-324) >>> 0, i, a + e),
                          t(((o << 31) | (s / 4294967296)) >>> 0, i, a + n);
                      else {
                        var u = Math.floor(Math.log(r) / Math.LN2);
                        1024 === u && (u = 1023),
                          t(
                            (4503599627370496 * (s = r * Math.pow(2, -u))) >>>
                              0,
                            i,
                            a + e
                          ),
                          t(
                            ((o << 31) |
                              ((u + 1023) << 20) |
                              ((1048576 * s) & 1048575)) >>>
                              0,
                            i,
                            a + n
                          );
                      }
                    }
                  }
                  function n(t, e, n, r, i) {
                    var a = t(r, i + e),
                      o = t(r, i + n),
                      s = 2 * (o >> 31) + 1,
                      u = (o >>> 20) & 2047,
                      c = 4294967296 * (1048575 & o) + a;
                    return 2047 === u
                      ? c
                        ? NaN
                        : s * (1 / 0)
                      : 0 === u
                      ? 5e-324 * s * c
                      : s * Math.pow(2, u - 1075) * (c + 4503599627370496);
                  }
                  (t.writeDoubleLE = e.bind(null, writeUintLE, 0, 4)),
                    (t.writeDoubleBE = e.bind(null, writeUintBE, 4, 0)),
                    (t.readDoubleLE = n.bind(null, readUintLE, 0, 4)),
                    (t.readDoubleBE = n.bind(null, readUintBE, 4, 0));
                })(),
            t
          );
        }
        function writeUintLE(t, e, n) {
          (e[n] = 255 & t),
            (e[n + 1] = (t >>> 8) & 255),
            (e[n + 2] = (t >>> 16) & 255),
            (e[n + 3] = t >>> 24);
        }
        function writeUintBE(t, e, n) {
          (e[n] = t >>> 24),
            (e[n + 1] = (t >>> 16) & 255),
            (e[n + 2] = (t >>> 8) & 255),
            (e[n + 3] = 255 & t);
        }
        function readUintLE(t, e) {
          return (
            (t[e] | (t[e + 1] << 8) | (t[e + 2] << 16) | (t[e + 3] << 24)) >>> 0
          );
        }
        function readUintBE(t, e) {
          return (
            ((t[e] << 24) | (t[e + 1] << 16) | (t[e + 2] << 8) | t[e + 3]) >>> 0
          );
        }
        var inquire_1 = inquire;
        function inquire(moduleName) {
          try {
            var mod$$1 = eval("quire".replace(/^/, "re"))(moduleName);
            if (mod$$1 && (mod$$1.length || Object.keys(mod$$1).length))
              return mod$$1;
          } catch (e) {}
          return null;
        }
        var utf8_1 = createCommonjsModule(function(t, e) {
            var n = e;
            (n.length = function(t) {
              for (var e = 0, n = 0, r = 0; r < t.length; ++r)
                (n = t.charCodeAt(r)) < 128
                  ? (e += 1)
                  : n < 2048
                  ? (e += 2)
                  : 55296 == (64512 & n) &&
                    56320 == (64512 & t.charCodeAt(r + 1))
                  ? (++r, (e += 4))
                  : (e += 3);
              return e;
            }),
              (n.read = function(t, e, n) {
                if (n - e < 1) return "";
                for (var r, i = null, a = [], o = 0; e < n; )
                  (r = t[e++]) < 128
                    ? (a[o++] = r)
                    : r > 191 && r < 224
                    ? (a[o++] = ((31 & r) << 6) | (63 & t[e++]))
                    : r > 239 && r < 365
                    ? ((r =
                        (((7 & r) << 18) |
                          ((63 & t[e++]) << 12) |
                          ((63 & t[e++]) << 6) |
                          (63 & t[e++])) -
                        65536),
                      (a[o++] = 55296 + (r >> 10)),
                      (a[o++] = 56320 + (1023 & r)))
                    : (a[o++] =
                        ((15 & r) << 12) |
                        ((63 & t[e++]) << 6) |
                        (63 & t[e++])),
                    o > 8191 &&
                      ((i || (i = [])).push(
                        String.fromCharCode.apply(String, a)
                      ),
                      (o = 0));
                return i
                  ? (o &&
                      i.push(String.fromCharCode.apply(String, a.slice(0, o))),
                    i.join(""))
                  : String.fromCharCode.apply(String, a.slice(0, o));
              }),
              (n.write = function(t, e, n) {
                for (var r, i, a = n, o = 0; o < t.length; ++o)
                  (r = t.charCodeAt(o)) < 128
                    ? (e[n++] = r)
                    : r < 2048
                    ? ((e[n++] = (r >> 6) | 192), (e[n++] = (63 & r) | 128))
                    : 55296 == (64512 & r) &&
                      56320 == (64512 & (i = t.charCodeAt(o + 1)))
                    ? ((r = 65536 + ((1023 & r) << 10) + (1023 & i)),
                      ++o,
                      (e[n++] = (r >> 18) | 240),
                      (e[n++] = ((r >> 12) & 63) | 128),
                      (e[n++] = ((r >> 6) & 63) | 128),
                      (e[n++] = (63 & r) | 128))
                    : ((e[n++] = (r >> 12) | 224),
                      (e[n++] = ((r >> 6) & 63) | 128),
                      (e[n++] = (63 & r) | 128));
                return n - a;
              });
          }),
          pool_1 = pool;
        function pool(t, e, n) {
          var r = n || 8192,
            i = r >>> 1,
            a = null,
            o = r;
          return function(n) {
            if (n < 1 || n > i) return t(n);
            o + n > r && ((a = t(r)), (o = 0));
            var s = e.call(a, o, (o += n));
            return 7 & o && (o = 1 + (7 | o)), s;
          };
        }
        var longbits = LongBits;
        function LongBits(t, e) {
          (this.lo = t >>> 0), (this.hi = e >>> 0);
        }
        var zero = (LongBits.zero = new LongBits(0, 0));
        (zero.toNumber = function() {
          return 0;
        }),
          (zero.zzEncode = zero.zzDecode = function() {
            return this;
          }),
          (zero.length = function() {
            return 1;
          });
        var zeroHash = (LongBits.zeroHash = "\0\0\0\0\0\0\0\0");
        (LongBits.fromNumber = function(t) {
          if (0 === t) return zero;
          var e = t < 0;
          e && (t = -t);
          var n = t >>> 0,
            r = ((t - n) / 4294967296) >>> 0;
          return (
            e &&
              ((r = ~r >>> 0),
              (n = ~n >>> 0),
              ++n > 4294967295 && ((n = 0), ++r > 4294967295 && (r = 0))),
            new LongBits(n, r)
          );
        }),
          (LongBits.from = function(t) {
            if ("number" == typeof t) return LongBits.fromNumber(t);
            if (minimal.isString(t)) {
              if (!minimal.Long) return LongBits.fromNumber(parseInt(t, 10));
              t = minimal.Long.fromString(t);
            }
            return t.low || t.high
              ? new LongBits(t.low >>> 0, t.high >>> 0)
              : zero;
          }),
          (LongBits.prototype.toNumber = function(t) {
            if (!t && this.hi >>> 31) {
              var e = (1 + ~this.lo) >>> 0,
                n = ~this.hi >>> 0;
              return e || (n = (n + 1) >>> 0), -(e + 4294967296 * n);
            }
            return this.lo + 4294967296 * this.hi;
          }),
          (LongBits.prototype.toLong = function(t) {
            return minimal.Long
              ? new minimal.Long(0 | this.lo, 0 | this.hi, Boolean(t))
              : { low: 0 | this.lo, high: 0 | this.hi, unsigned: Boolean(t) };
          });
        var charCodeAt = String.prototype.charCodeAt;
        (LongBits.fromHash = function(t) {
          return t === zeroHash
            ? zero
            : new LongBits(
                (charCodeAt.call(t, 0) |
                  (charCodeAt.call(t, 1) << 8) |
                  (charCodeAt.call(t, 2) << 16) |
                  (charCodeAt.call(t, 3) << 24)) >>>
                  0,
                (charCodeAt.call(t, 4) |
                  (charCodeAt.call(t, 5) << 8) |
                  (charCodeAt.call(t, 6) << 16) |
                  (charCodeAt.call(t, 7) << 24)) >>>
                  0
              );
        }),
          (LongBits.prototype.toHash = function() {
            return String.fromCharCode(
              255 & this.lo,
              (this.lo >>> 8) & 255,
              (this.lo >>> 16) & 255,
              this.lo >>> 24,
              255 & this.hi,
              (this.hi >>> 8) & 255,
              (this.hi >>> 16) & 255,
              this.hi >>> 24
            );
          }),
          (LongBits.prototype.zzEncode = function() {
            var t = this.hi >> 31;
            return (
              (this.hi = (((this.hi << 1) | (this.lo >>> 31)) ^ t) >>> 0),
              (this.lo = ((this.lo << 1) ^ t) >>> 0),
              this
            );
          }),
          (LongBits.prototype.zzDecode = function() {
            var t = -(1 & this.lo);
            return (
              (this.lo = (((this.lo >>> 1) | (this.hi << 31)) ^ t) >>> 0),
              (this.hi = ((this.hi >>> 1) ^ t) >>> 0),
              this
            );
          }),
          (LongBits.prototype.length = function() {
            var t = this.lo,
              e = ((this.lo >>> 28) | (this.hi << 4)) >>> 0,
              n = this.hi >>> 24;
            return 0 === n
              ? 0 === e
                ? t < 16384
                  ? t < 128
                    ? 1
                    : 2
                  : t < 2097152
                  ? 3
                  : 4
                : e < 16384
                ? e < 128
                  ? 5
                  : 6
                : e < 2097152
                ? 7
                : 8
              : n < 128
              ? 9
              : 10;
          });
        var minimal = createCommonjsModule(function(t, e) {
            var n = e;
            function r(t, e, n) {
              for (var r = Object.keys(e), i = 0; i < r.length; ++i)
                (void 0 !== t[r[i]] && n) || (t[r[i]] = e[r[i]]);
              return t;
            }
            function i(t) {
              function e(t, n) {
                if (!(this instanceof e)) return new e(t, n);
                Object.defineProperty(this, "message", {
                  get: function() {
                    return t;
                  }
                }),
                  Error.captureStackTrace
                    ? Error.captureStackTrace(this, e)
                    : Object.defineProperty(this, "stack", {
                        value: new Error().stack || ""
                      }),
                  n && r(this, n);
              }
              return (
                ((e.prototype = Object.create(
                  Error.prototype
                )).constructor = e),
                Object.defineProperty(e.prototype, "name", {
                  get: function() {
                    return t;
                  }
                }),
                (e.prototype.toString = function() {
                  return this.name + ": " + this.message;
                }),
                e
              );
            }
            (n.asPromise = aspromise),
              (n.base64 = base64_1),
              (n.EventEmitter = eventemitter),
              (n.float = float_1),
              (n.inquire = inquire_1),
              (n.utf8 = utf8_1),
              (n.pool = pool_1),
              (n.LongBits = longbits),
              (n.global =
                ("undefined" != typeof window && window) ||
                (void 0 !== commonjsGlobal && commonjsGlobal) ||
                ("undefined" != typeof self && self) ||
                commonjsGlobal),
              (n.emptyArray = Object.freeze ? Object.freeze([]) : []),
              (n.emptyObject = Object.freeze ? Object.freeze({}) : {}),
              (n.isNode = Boolean(
                n.global.process &&
                  n.global.process.versions &&
                  n.global.process.versions.node
              )),
              (n.isInteger =
                Number.isInteger ||
                function(t) {
                  return (
                    "number" == typeof t && isFinite(t) && Math.floor(t) === t
                  );
                }),
              (n.isString = function(t) {
                return "string" == typeof t || t instanceof String;
              }),
              (n.isObject = function(t) {
                return t && "object" == typeof t;
              }),
              (n.isset = n.isSet = function(t, e) {
                var n = t[e];
                return (
                  !(null == n || !t.hasOwnProperty(e)) &&
                  ("object" != typeof n ||
                    (Array.isArray(n) ? n.length : Object.keys(n).length) > 0)
                );
              }),
              (n.Buffer = (function() {
                try {
                  var t = n.inquire("buffer").Buffer;
                  return t.prototype.utf8Write ? t : null;
                } catch (t) {
                  return null;
                }
              })()),
              (n._Buffer_from = null),
              (n._Buffer_allocUnsafe = null),
              (n.newBuffer = function(t) {
                return "number" == typeof t
                  ? n.Buffer
                    ? n._Buffer_allocUnsafe(t)
                    : new n.Array(t)
                  : n.Buffer
                  ? n._Buffer_from(t)
                  : "undefined" == typeof Uint8Array
                  ? t
                  : new Uint8Array(t);
              }),
              (n.Array = "undefined" != typeof Uint8Array ? Uint8Array : Array),
              (n.Long =
                (n.global.dcodeIO && n.global.dcodeIO.Long) ||
                n.global.Long ||
                n.inquire("long")),
              (n.key2Re = /^true|false|0|1$/),
              (n.key32Re = /^-?(?:0|[1-9][0-9]*)$/),
              (n.key64Re = /^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/),
              (n.longToHash = function(t) {
                return t ? n.LongBits.from(t).toHash() : n.LongBits.zeroHash;
              }),
              (n.longFromHash = function(t, e) {
                var r = n.LongBits.fromHash(t);
                return n.Long
                  ? n.Long.fromBits(r.lo, r.hi, e)
                  : r.toNumber(Boolean(e));
              }),
              (n.merge = r),
              (n.lcFirst = function(t) {
                return t.charAt(0).toLowerCase() + t.substring(1);
              }),
              (n.newError = i),
              (n.ProtocolError = i("ProtocolError")),
              (n.oneOfGetter = function(t) {
                for (var e = {}, n = 0; n < t.length; ++n) e[t[n]] = 1;
                return function() {
                  for (var t = Object.keys(this), n = t.length - 1; n > -1; --n)
                    if (
                      1 === e[t[n]] &&
                      void 0 !== this[t[n]] &&
                      null !== this[t[n]]
                    )
                      return t[n];
                };
              }),
              (n.oneOfSetter = function(t) {
                return function(e) {
                  for (var n = 0; n < t.length; ++n)
                    t[n] !== e && delete this[t[n]];
                };
              }),
              (n.toJSONOptions = {
                longs: String,
                enums: String,
                bytes: String,
                json: !0
              }),
              (n._configure = function() {
                var t = n.Buffer;
                t
                  ? ((n._Buffer_from =
                      (t.from !== Uint8Array.from && t.from) ||
                      function(e, n) {
                        return new t(e, n);
                      }),
                    (n._Buffer_allocUnsafe =
                      t.allocUnsafe ||
                      function(e) {
                        return new t(e);
                      }))
                  : (n._Buffer_from = n._Buffer_allocUnsafe = null);
              });
          }),
          writer = Writer,
          BufferWriter,
          LongBits$1 = minimal.LongBits,
          base64 = minimal.base64,
          utf8 = minimal.utf8;
        function Op(t, e, n) {
          (this.fn = t), (this.len = e), (this.next = void 0), (this.val = n);
        }
        function noop() {}
        function State(t) {
          (this.head = t.head),
            (this.tail = t.tail),
            (this.len = t.len),
            (this.next = t.states);
        }
        function Writer() {
          (this.len = 0),
            (this.head = new Op(noop, 0, 0)),
            (this.tail = this.head),
            (this.states = null);
        }
        function writeByte(t, e, n) {
          e[n] = 255 & t;
        }
        function writeVarint32(t, e, n) {
          for (; t > 127; ) (e[n++] = (127 & t) | 128), (t >>>= 7);
          e[n] = t;
        }
        function VarintOp(t, e) {
          (this.len = t), (this.next = void 0), (this.val = e);
        }
        function writeVarint64(t, e, n) {
          for (; t.hi; )
            (e[n++] = (127 & t.lo) | 128),
              (t.lo = ((t.lo >>> 7) | (t.hi << 25)) >>> 0),
              (t.hi >>>= 7);
          for (; t.lo > 127; )
            (e[n++] = (127 & t.lo) | 128), (t.lo = t.lo >>> 7);
          e[n++] = t.lo;
        }
        function writeFixed32(t, e, n) {
          (e[n] = 255 & t),
            (e[n + 1] = (t >>> 8) & 255),
            (e[n + 2] = (t >>> 16) & 255),
            (e[n + 3] = t >>> 24);
        }
        (Writer.create = minimal.Buffer
          ? function() {
              return (Writer.create = function() {
                return new BufferWriter();
              })();
            }
          : function() {
              return new Writer();
            }),
          (Writer.alloc = function(t) {
            return new minimal.Array(t);
          }),
          minimal.Array !== Array &&
            (Writer.alloc = minimal.pool(
              Writer.alloc,
              minimal.Array.prototype.subarray
            )),
          (Writer.prototype._push = function(t, e, n) {
            return (
              (this.tail = this.tail.next = new Op(t, e, n)),
              (this.len += e),
              this
            );
          }),
          (VarintOp.prototype = Object.create(Op.prototype)),
          (VarintOp.prototype.fn = writeVarint32),
          (Writer.prototype.uint32 = function(t) {
            return (
              (this.len += (this.tail = this.tail.next = new VarintOp(
                (t >>>= 0) < 128
                  ? 1
                  : t < 16384
                  ? 2
                  : t < 2097152
                  ? 3
                  : t < 268435456
                  ? 4
                  : 5,
                t
              )).len),
              this
            );
          }),
          (Writer.prototype.int32 = function(t) {
            return t < 0
              ? this._push(writeVarint64, 10, LongBits$1.fromNumber(t))
              : this.uint32(t);
          }),
          (Writer.prototype.sint32 = function(t) {
            return this.uint32(((t << 1) ^ (t >> 31)) >>> 0);
          }),
          (Writer.prototype.uint64 = function(t) {
            var e = LongBits$1.from(t);
            return this._push(writeVarint64, e.length(), e);
          }),
          (Writer.prototype.int64 = Writer.prototype.uint64),
          (Writer.prototype.sint64 = function(t) {
            var e = LongBits$1.from(t).zzEncode();
            return this._push(writeVarint64, e.length(), e);
          }),
          (Writer.prototype.bool = function(t) {
            return this._push(writeByte, 1, t ? 1 : 0);
          }),
          (Writer.prototype.fixed32 = function(t) {
            return this._push(writeFixed32, 4, t >>> 0);
          }),
          (Writer.prototype.sfixed32 = Writer.prototype.fixed32),
          (Writer.prototype.fixed64 = function(t) {
            var e = LongBits$1.from(t);
            return this._push(writeFixed32, 4, e.lo)._push(
              writeFixed32,
              4,
              e.hi
            );
          }),
          (Writer.prototype.sfixed64 = Writer.prototype.fixed64),
          (Writer.prototype.float = function(t) {
            return this._push(minimal.float.writeFloatLE, 4, t);
          }),
          (Writer.prototype.double = function(t) {
            return this._push(minimal.float.writeDoubleLE, 8, t);
          });
        var writeBytes = minimal.Array.prototype.set
          ? function(t, e, n) {
              e.set(t, n);
            }
          : function(t, e, n) {
              for (var r = 0; r < t.length; ++r) e[n + r] = t[r];
            };
        (Writer.prototype.bytes = function(t) {
          var e = t.length >>> 0;
          if (!e) return this._push(writeByte, 1, 0);
          if (minimal.isString(t)) {
            var n = Writer.alloc((e = base64.length(t)));
            base64.decode(t, n, 0), (t = n);
          }
          return this.uint32(e)._push(writeBytes, e, t);
        }),
          (Writer.prototype.string = function(t) {
            var e = utf8.length(t);
            return e
              ? this.uint32(e)._push(utf8.write, e, t)
              : this._push(writeByte, 1, 0);
          }),
          (Writer.prototype.fork = function() {
            return (
              (this.states = new State(this)),
              (this.head = this.tail = new Op(noop, 0, 0)),
              (this.len = 0),
              this
            );
          }),
          (Writer.prototype.reset = function() {
            return (
              this.states
                ? ((this.head = this.states.head),
                  (this.tail = this.states.tail),
                  (this.len = this.states.len),
                  (this.states = this.states.next))
                : ((this.head = this.tail = new Op(noop, 0, 0)),
                  (this.len = 0)),
              this
            );
          }),
          (Writer.prototype.ldelim = function() {
            var t = this.head,
              e = this.tail,
              n = this.len;
            return (
              this.reset().uint32(n),
              n &&
                ((this.tail.next = t.next), (this.tail = e), (this.len += n)),
              this
            );
          }),
          (Writer.prototype.finish = function() {
            for (
              var t = this.head.next,
                e = this.constructor.alloc(this.len),
                n = 0;
              t;

            )
              t.fn(t.val, e, n), (n += t.len), (t = t.next);
            return e;
          }),
          (Writer._configure = function(t) {
            BufferWriter = t;
          });
        var writer_buffer = BufferWriter$1;
        (BufferWriter$1.prototype = Object.create(
          writer.prototype
        )).constructor = BufferWriter$1;
        var Buffer$1 = minimal.Buffer;
        function BufferWriter$1() {
          writer.call(this);
        }
        BufferWriter$1.alloc = function(t) {
          return (BufferWriter$1.alloc = minimal._Buffer_allocUnsafe)(t);
        };
        var writeBytesBuffer =
          Buffer$1 &&
          Buffer$1.prototype instanceof Uint8Array &&
          "set" === Buffer$1.prototype.set.name
            ? function(t, e, n) {
                e.set(t, n);
              }
            : function(t, e, n) {
                if (t.copy) t.copy(e, n, 0, t.length);
                else for (var r = 0; r < t.length; ) e[n++] = t[r++];
              };
        function writeStringBuffer(t, e, n) {
          t.length < 40 ? minimal.utf8.write(t, e, n) : e.utf8Write(t, n);
        }
        (BufferWriter$1.prototype.bytes = function(t) {
          minimal.isString(t) && (t = minimal._Buffer_from(t, "base64"));
          var e = t.length >>> 0;
          return this.uint32(e), e && this._push(writeBytesBuffer, e, t), this;
        }),
          (BufferWriter$1.prototype.string = function(t) {
            var e = Buffer$1.byteLength(t);
            return (
              this.uint32(e), e && this._push(writeStringBuffer, e, t), this
            );
          });
        var reader = Reader,
          BufferReader,
          LongBits$2 = minimal.LongBits,
          utf8$1 = minimal.utf8;
        function indexOutOfRange(t, e) {
          return RangeError(
            "index out of range: " + t.pos + " + " + (e || 1) + " > " + t.len
          );
        }
        function Reader(t) {
          (this.buf = t), (this.pos = 0), (this.len = t.length);
        }
        var create_array =
          "undefined" != typeof Uint8Array
            ? function(t) {
                if (t instanceof Uint8Array || Array.isArray(t))
                  return new Reader(t);
                throw Error("illegal buffer");
              }
            : function(t) {
                if (Array.isArray(t)) return new Reader(t);
                throw Error("illegal buffer");
              };
        function readLongVarint() {
          var t = new LongBits$2(0, 0),
            e = 0;
          if (!(this.len - this.pos > 4)) {
            for (; e < 3; ++e) {
              if (this.pos >= this.len) throw indexOutOfRange(this);
              if (
                ((t.lo =
                  (t.lo | ((127 & this.buf[this.pos]) << (7 * e))) >>> 0),
                this.buf[this.pos++] < 128)
              )
                return t;
            }
            return (
              (t.lo = (t.lo | ((127 & this.buf[this.pos++]) << (7 * e))) >>> 0),
              t
            );
          }
          for (; e < 4; ++e)
            if (
              ((t.lo = (t.lo | ((127 & this.buf[this.pos]) << (7 * e))) >>> 0),
              this.buf[this.pos++] < 128)
            )
              return t;
          if (
            ((t.lo = (t.lo | ((127 & this.buf[this.pos]) << 28)) >>> 0),
            (t.hi = (t.hi | ((127 & this.buf[this.pos]) >> 4)) >>> 0),
            this.buf[this.pos++] < 128)
          )
            return t;
          if (((e = 0), this.len - this.pos > 4)) {
            for (; e < 5; ++e)
              if (
                ((t.hi =
                  (t.hi | ((127 & this.buf[this.pos]) << (7 * e + 3))) >>> 0),
                this.buf[this.pos++] < 128)
              )
                return t;
          } else
            for (; e < 5; ++e) {
              if (this.pos >= this.len) throw indexOutOfRange(this);
              if (
                ((t.hi =
                  (t.hi | ((127 & this.buf[this.pos]) << (7 * e + 3))) >>> 0),
                this.buf[this.pos++] < 128)
              )
                return t;
            }
          throw Error("invalid varint encoding");
        }
        function readFixed32_end(t, e) {
          return (
            (t[e - 4] |
              (t[e - 3] << 8) |
              (t[e - 2] << 16) |
              (t[e - 1] << 24)) >>>
            0
          );
        }
        function readFixed64() {
          if (this.pos + 8 > this.len) throw indexOutOfRange(this, 8);
          return new LongBits$2(
            readFixed32_end(this.buf, (this.pos += 4)),
            readFixed32_end(this.buf, (this.pos += 4))
          );
        }
        (Reader.create = minimal.Buffer
          ? function(t) {
              return (Reader.create = function(t) {
                return minimal.Buffer.isBuffer(t)
                  ? new BufferReader(t)
                  : create_array(t);
              })(t);
            }
          : create_array),
          (Reader.prototype._slice =
            minimal.Array.prototype.subarray || minimal.Array.prototype.slice),
          (Reader.prototype.uint32 = (function() {
            var t = 4294967295;
            return function() {
              if (
                ((t = (127 & this.buf[this.pos]) >>> 0),
                this.buf[this.pos++] < 128)
              )
                return t;
              if (
                ((t = (t | ((127 & this.buf[this.pos]) << 7)) >>> 0),
                this.buf[this.pos++] < 128)
              )
                return t;
              if (
                ((t = (t | ((127 & this.buf[this.pos]) << 14)) >>> 0),
                this.buf[this.pos++] < 128)
              )
                return t;
              if (
                ((t = (t | ((127 & this.buf[this.pos]) << 21)) >>> 0),
                this.buf[this.pos++] < 128)
              )
                return t;
              if (
                ((t = (t | ((15 & this.buf[this.pos]) << 28)) >>> 0),
                this.buf[this.pos++] < 128)
              )
                return t;
              if ((this.pos += 5) > this.len)
                throw ((this.pos = this.len), indexOutOfRange(this, 10));
              return t;
            };
          })()),
          (Reader.prototype.int32 = function() {
            return 0 | this.uint32();
          }),
          (Reader.prototype.sint32 = function() {
            var t = this.uint32();
            return ((t >>> 1) ^ -(1 & t)) | 0;
          }),
          (Reader.prototype.bool = function() {
            return 0 !== this.uint32();
          }),
          (Reader.prototype.fixed32 = function() {
            if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);
            return readFixed32_end(this.buf, (this.pos += 4));
          }),
          (Reader.prototype.sfixed32 = function() {
            if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);
            return 0 | readFixed32_end(this.buf, (this.pos += 4));
          }),
          (Reader.prototype.float = function() {
            if (this.pos + 4 > this.len) throw indexOutOfRange(this, 4);
            var t = minimal.float.readFloatLE(this.buf, this.pos);
            return (this.pos += 4), t;
          }),
          (Reader.prototype.double = function() {
            if (this.pos + 8 > this.len) throw indexOutOfRange(this, 4);
            var t = minimal.float.readDoubleLE(this.buf, this.pos);
            return (this.pos += 8), t;
          }),
          (Reader.prototype.bytes = function() {
            var t = this.uint32(),
              e = this.pos,
              n = this.pos + t;
            if (n > this.len) throw indexOutOfRange(this, t);
            return (
              (this.pos += t),
              Array.isArray(this.buf)
                ? this.buf.slice(e, n)
                : e === n
                ? new this.buf.constructor(0)
                : this._slice.call(this.buf, e, n)
            );
          }),
          (Reader.prototype.string = function() {
            var t = this.bytes();
            return utf8$1.read(t, 0, t.length);
          }),
          (Reader.prototype.skip = function(t) {
            if ("number" == typeof t) {
              if (this.pos + t > this.len) throw indexOutOfRange(this, t);
              this.pos += t;
            } else
              do {
                if (this.pos >= this.len) throw indexOutOfRange(this);
              } while (128 & this.buf[this.pos++]);
            return this;
          }),
          (Reader.prototype.skipType = function(t) {
            switch (t) {
              case 0:
                this.skip();
                break;
              case 1:
                this.skip(8);
                break;
              case 2:
                this.skip(this.uint32());
                break;
              case 3:
                for (; 4 != (t = 7 & this.uint32()); ) this.skipType(t);
                break;
              case 5:
                this.skip(4);
                break;
              default:
                throw Error(
                  "invalid wire type " + t + " at offset " + this.pos
                );
            }
            return this;
          }),
          (Reader._configure = function(t) {
            BufferReader = t;
            var e = minimal.Long ? "toLong" : "toNumber";
            minimal.merge(Reader.prototype, {
              int64: function() {
                return readLongVarint.call(this)[e](!1);
              },
              uint64: function() {
                return readLongVarint.call(this)[e](!0);
              },
              sint64: function() {
                return readLongVarint
                  .call(this)
                  .zzDecode()
                  [e](!1);
              },
              fixed64: function() {
                return readFixed64.call(this)[e](!0);
              },
              sfixed64: function() {
                return readFixed64.call(this)[e](!1);
              }
            });
          });
        var reader_buffer = BufferReader$1;
        function BufferReader$1(t) {
          reader.call(this, t);
        }
        ((BufferReader$1.prototype = Object.create(
          reader.prototype
        )).constructor = BufferReader$1),
          minimal.Buffer &&
            (BufferReader$1.prototype._slice = minimal.Buffer.prototype.slice),
          (BufferReader$1.prototype.string = function() {
            var t = this.uint32();
            return this.buf.utf8Slice(
              this.pos,
              (this.pos = Math.min(this.pos + t, this.len))
            );
          });
        var service = Service;
        function Service(t, e, n) {
          if ("function" != typeof t)
            throw TypeError("rpcImpl must be a function");
          minimal.EventEmitter.call(this),
            (this.rpcImpl = t),
            (this.requestDelimited = Boolean(e)),
            (this.responseDelimited = Boolean(n));
        }
        ((Service.prototype = Object.create(
          minimal.EventEmitter.prototype
        )).constructor = Service),
          (Service.prototype.rpcCall = function t(e, n, r, i, a) {
            if (!i) throw TypeError("request must be specified");
            var o = this;
            if (!a) return minimal.asPromise(t, o, e, n, r, i);
            if (o.rpcImpl)
              try {
                return o.rpcImpl(
                  e,
                  n[o.requestDelimited ? "encodeDelimited" : "encode"](
                    i
                  ).finish(),
                  function(t, n) {
                    if (t) return o.emit("error", t, e), a(t);
                    if (null !== n) {
                      if (!(n instanceof r))
                        try {
                          n = r[
                            o.responseDelimited ? "decodeDelimited" : "decode"
                          ](n);
                        } catch (t) {
                          return o.emit("error", t, e), a(t);
                        }
                      return o.emit("data", n, e), a(null, n);
                    }
                    o.end(!0);
                  }
                );
              } catch (t) {
                return (
                  o.emit("error", t, e),
                  void setTimeout(function() {
                    a(t);
                  }, 0)
                );
              }
            else
              setTimeout(function() {
                a(Error("already ended"));
              }, 0);
          }),
          (Service.prototype.end = function(t) {
            return (
              this.rpcImpl &&
                (t || this.rpcImpl(null, null, null),
                (this.rpcImpl = null),
                this.emit("end").off()),
              this
            );
          });
        var rpc_1 = createCommonjsModule(function(t, e) {
            e.Service = service;
          }),
          roots = {},
          indexMinimal = createCommonjsModule(function(t, e) {
            var n = e;
            function r() {
              n.Reader._configure(n.BufferReader), n.util._configure();
            }
            (n.build = "minimal"),
              (n.Writer = writer),
              (n.BufferWriter = writer_buffer),
              (n.Reader = reader),
              (n.BufferReader = reader_buffer),
              (n.util = minimal),
              (n.rpc = rpc_1),
              (n.roots = roots),
              (n.configure = r),
              n.Writer._configure(n.BufferWriter),
              r();
          }),
          minimal$1 = indexMinimal,
          minimal_1 = minimal$1.roots,
          minimal_2 = minimal$1.Reader,
          minimal_3 = minimal$1.util,
          $Reader = minimal$1.Reader,
          $util = minimal$1.util,
          $root = minimal$1.roots.default || (minimal$1.roots.default = {});
        $root.tensorflow = (function() {
          var t,
            e,
            n = {};
          return (
            (n.Any = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.typeUrl = ""),
                (t.prototype.value = $util.newBuffer([])),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.Any();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.typeUrl = t.string();
                        break;
                      case 2:
                        r.value = t.bytes();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                t
              );
            })()),
            (n.DataType = ((t = {}),
            ((e = Object.create(t))[(t[0] = "DT_INVALID")] = 0),
            (e[(t[1] = "DT_FLOAT")] = 1),
            (e[(t[2] = "DT_DOUBLE")] = 2),
            (e[(t[3] = "DT_INT32")] = 3),
            (e[(t[4] = "DT_UINT8")] = 4),
            (e[(t[5] = "DT_INT16")] = 5),
            (e[(t[6] = "DT_INT8")] = 6),
            (e[(t[7] = "DT_STRING")] = 7),
            (e[(t[8] = "DT_COMPLEX64")] = 8),
            (e[(t[9] = "DT_INT64")] = 9),
            (e[(t[10] = "DT_BOOL")] = 10),
            (e[(t[11] = "DT_QINT8")] = 11),
            (e[(t[12] = "DT_QUINT8")] = 12),
            (e[(t[13] = "DT_QINT32")] = 13),
            (e[(t[14] = "DT_BFLOAT16")] = 14),
            (e[(t[101] = "DT_FLOAT_REF")] = 101),
            (e[(t[102] = "DT_DOUBLE_REF")] = 102),
            (e[(t[103] = "DT_INT32_REF")] = 103),
            (e[(t[104] = "DT_UINT8_REF")] = 104),
            (e[(t[105] = "DT_INT16_REF")] = 105),
            (e[(t[106] = "DT_INT8_REF")] = 106),
            (e[(t[107] = "DT_STRING_REF")] = 107),
            (e[(t[108] = "DT_COMPLEX64_REF")] = 108),
            (e[(t[109] = "DT_INT64_REF")] = 109),
            (e[(t[110] = "DT_BOOL_REF")] = 110),
            (e[(t[111] = "DT_QINT8_REF")] = 111),
            (e[(t[112] = "DT_QUINT8_REF")] = 112),
            (e[(t[113] = "DT_QINT32_REF")] = 113),
            (e[(t[114] = "DT_BFLOAT16_REF")] = 114),
            e)),
            (n.TensorShape = (function() {
              function t(t) {
                if (((this.dim = []), t))
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.dim = $util.emptyArray),
                (t.prototype.unknownRank = !1),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.TensorShape();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 2:
                        (r.dim && r.dim.length) || (r.dim = []),
                          r.dim.push(
                            $root.tensorflow.TensorShape.Dim.decode(
                              t,
                              t.uint32()
                            )
                          );
                        break;
                      case 3:
                        r.unknownRank = t.bool();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.Dim = (function() {
                  function t(t) {
                    if (t)
                      for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                        null != t[e[n]] && (this[e[n]] = t[e[n]]);
                  }
                  return (
                    (t.prototype.size = $util.Long
                      ? $util.Long.fromBits(0, 0, !1)
                      : 0),
                    (t.prototype.name = ""),
                    (t.decode = function(t, e) {
                      t instanceof $Reader || (t = $Reader.create(t));
                      for (
                        var n = void 0 === e ? t.len : t.pos + e,
                          r = new $root.tensorflow.TensorShape.Dim();
                        t.pos < n;

                      ) {
                        var i = t.uint32();
                        switch (i >>> 3) {
                          case 1:
                            r.size = t.int64();
                            break;
                          case 2:
                            r.name = t.string();
                            break;
                          default:
                            t.skipType(7 & i);
                        }
                      }
                      return r;
                    }),
                    t
                  );
                })()),
                t
              );
            })()),
            (n.Tensor = (function() {
              function t(t) {
                if (
                  ((this.floatVal = []),
                  (this.doubleVal = []),
                  (this.intVal = []),
                  (this.stringVal = []),
                  (this.scomplexVal = []),
                  (this.int64Val = []),
                  (this.boolVal = []),
                  (this.uint32Val = []),
                  (this.uint64Val = []),
                  t)
                )
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.dtype = 0),
                (t.prototype.tensorShape = null),
                (t.prototype.versionNumber = 0),
                (t.prototype.tensorContent = $util.newBuffer([])),
                (t.prototype.floatVal = $util.emptyArray),
                (t.prototype.doubleVal = $util.emptyArray),
                (t.prototype.intVal = $util.emptyArray),
                (t.prototype.stringVal = $util.emptyArray),
                (t.prototype.scomplexVal = $util.emptyArray),
                (t.prototype.int64Val = $util.emptyArray),
                (t.prototype.boolVal = $util.emptyArray),
                (t.prototype.uint32Val = $util.emptyArray),
                (t.prototype.uint64Val = $util.emptyArray),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.Tensor();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.dtype = t.int32();
                        break;
                      case 2:
                        r.tensorShape = $root.tensorflow.TensorShape.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 3:
                        r.versionNumber = t.int32();
                        break;
                      case 4:
                        r.tensorContent = t.bytes();
                        break;
                      case 5:
                        if (
                          ((r.floatVal && r.floatVal.length) ||
                            (r.floatVal = []),
                          2 == (7 & i))
                        )
                          for (var a = t.uint32() + t.pos; t.pos < a; )
                            r.floatVal.push(t.float());
                        else r.floatVal.push(t.float());
                        break;
                      case 6:
                        if (
                          ((r.doubleVal && r.doubleVal.length) ||
                            (r.doubleVal = []),
                          2 == (7 & i))
                        )
                          for (a = t.uint32() + t.pos; t.pos < a; )
                            r.doubleVal.push(t.double());
                        else r.doubleVal.push(t.double());
                        break;
                      case 7:
                        if (
                          ((r.intVal && r.intVal.length) || (r.intVal = []),
                          2 == (7 & i))
                        )
                          for (a = t.uint32() + t.pos; t.pos < a; )
                            r.intVal.push(t.int32());
                        else r.intVal.push(t.int32());
                        break;
                      case 8:
                        (r.stringVal && r.stringVal.length) ||
                          (r.stringVal = []),
                          r.stringVal.push(t.bytes());
                        break;
                      case 9:
                        if (
                          ((r.scomplexVal && r.scomplexVal.length) ||
                            (r.scomplexVal = []),
                          2 == (7 & i))
                        )
                          for (a = t.uint32() + t.pos; t.pos < a; )
                            r.scomplexVal.push(t.float());
                        else r.scomplexVal.push(t.float());
                        break;
                      case 10:
                        if (
                          ((r.int64Val && r.int64Val.length) ||
                            (r.int64Val = []),
                          2 == (7 & i))
                        )
                          for (a = t.uint32() + t.pos; t.pos < a; )
                            r.int64Val.push(t.int64());
                        else r.int64Val.push(t.int64());
                        break;
                      case 11:
                        if (
                          ((r.boolVal && r.boolVal.length) || (r.boolVal = []),
                          2 == (7 & i))
                        )
                          for (a = t.uint32() + t.pos; t.pos < a; )
                            r.boolVal.push(t.bool());
                        else r.boolVal.push(t.bool());
                        break;
                      case 16:
                        if (
                          ((r.uint32Val && r.uint32Val.length) ||
                            (r.uint32Val = []),
                          2 == (7 & i))
                        )
                          for (a = t.uint32() + t.pos; t.pos < a; )
                            r.uint32Val.push(t.uint32());
                        else r.uint32Val.push(t.uint32());
                        break;
                      case 17:
                        if (
                          ((r.uint64Val && r.uint64Val.length) ||
                            (r.uint64Val = []),
                          2 == (7 & i))
                        )
                          for (a = t.uint32() + t.pos; t.pos < a; )
                            r.uint64Val.push(t.uint64());
                        else r.uint64Val.push(t.uint64());
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                t
              );
            })()),
            (n.AttrValue = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              var e;
              return (
                (t.prototype.list = null),
                (t.prototype.s = $util.newBuffer([])),
                (t.prototype.i = $util.Long
                  ? $util.Long.fromBits(0, 0, !1)
                  : 0),
                (t.prototype.f = 0),
                (t.prototype.b = !1),
                (t.prototype.type = 0),
                (t.prototype.shape = null),
                (t.prototype.tensor = null),
                (t.prototype.placeholder = ""),
                (t.prototype.func = null),
                Object.defineProperty(t.prototype, "value", {
                  get: $util.oneOfGetter(
                    (e = [
                      "list",
                      "s",
                      "i",
                      "f",
                      "b",
                      "type",
                      "shape",
                      "tensor",
                      "placeholder",
                      "func"
                    ])
                  ),
                  set: $util.oneOfSetter(e)
                }),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.AttrValue();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.list = $root.tensorflow.AttrValue.ListValue.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 2:
                        r.s = t.bytes();
                        break;
                      case 3:
                        r.i = t.int64();
                        break;
                      case 4:
                        r.f = t.float();
                        break;
                      case 5:
                        r.b = t.bool();
                        break;
                      case 6:
                        r.type = t.int32();
                        break;
                      case 7:
                        r.shape = $root.tensorflow.TensorShape.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 8:
                        r.tensor = $root.tensorflow.Tensor.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 9:
                        r.placeholder = t.string();
                        break;
                      case 10:
                        r.func = $root.tensorflow.NameAttrList.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.ListValue = (function() {
                  function t(t) {
                    if (
                      ((this.s = []),
                      (this.i = []),
                      (this.f = []),
                      (this.b = []),
                      (this.type = []),
                      (this.shape = []),
                      (this.tensor = []),
                      (this.func = []),
                      t)
                    )
                      for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                        null != t[e[n]] && (this[e[n]] = t[e[n]]);
                  }
                  return (
                    (t.prototype.s = $util.emptyArray),
                    (t.prototype.i = $util.emptyArray),
                    (t.prototype.f = $util.emptyArray),
                    (t.prototype.b = $util.emptyArray),
                    (t.prototype.type = $util.emptyArray),
                    (t.prototype.shape = $util.emptyArray),
                    (t.prototype.tensor = $util.emptyArray),
                    (t.prototype.func = $util.emptyArray),
                    (t.decode = function(t, e) {
                      t instanceof $Reader || (t = $Reader.create(t));
                      for (
                        var n = void 0 === e ? t.len : t.pos + e,
                          r = new $root.tensorflow.AttrValue.ListValue();
                        t.pos < n;

                      ) {
                        var i = t.uint32();
                        switch (i >>> 3) {
                          case 2:
                            (r.s && r.s.length) || (r.s = []),
                              r.s.push(t.bytes());
                            break;
                          case 3:
                            if (
                              ((r.i && r.i.length) || (r.i = []), 2 == (7 & i))
                            )
                              for (var a = t.uint32() + t.pos; t.pos < a; )
                                r.i.push(t.int64());
                            else r.i.push(t.int64());
                            break;
                          case 4:
                            if (
                              ((r.f && r.f.length) || (r.f = []), 2 == (7 & i))
                            )
                              for (a = t.uint32() + t.pos; t.pos < a; )
                                r.f.push(t.float());
                            else r.f.push(t.float());
                            break;
                          case 5:
                            if (
                              ((r.b && r.b.length) || (r.b = []), 2 == (7 & i))
                            )
                              for (a = t.uint32() + t.pos; t.pos < a; )
                                r.b.push(t.bool());
                            else r.b.push(t.bool());
                            break;
                          case 6:
                            if (
                              ((r.type && r.type.length) || (r.type = []),
                              2 == (7 & i))
                            )
                              for (a = t.uint32() + t.pos; t.pos < a; )
                                r.type.push(t.int32());
                            else r.type.push(t.int32());
                            break;
                          case 7:
                            (r.shape && r.shape.length) || (r.shape = []),
                              r.shape.push(
                                $root.tensorflow.TensorShape.decode(
                                  t,
                                  t.uint32()
                                )
                              );
                            break;
                          case 8:
                            (r.tensor && r.tensor.length) || (r.tensor = []),
                              r.tensor.push(
                                $root.tensorflow.Tensor.decode(t, t.uint32())
                              );
                            break;
                          case 9:
                            (r.func && r.func.length) || (r.func = []),
                              r.func.push(
                                $root.tensorflow.NameAttrList.decode(
                                  t,
                                  t.uint32()
                                )
                              );
                            break;
                          default:
                            t.skipType(7 & i);
                        }
                      }
                      return r;
                    }),
                    t
                  );
                })()),
                t
              );
            })()),
            (n.NameAttrList = (function() {
              function t(t) {
                if (((this.attr = {}), t))
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.name = ""),
                (t.prototype.attr = $util.emptyObject),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n,
                      r = void 0 === e ? t.len : t.pos + e,
                      i = new $root.tensorflow.NameAttrList();
                    t.pos < r;

                  ) {
                    var a = t.uint32();
                    switch (a >>> 3) {
                      case 1:
                        i.name = t.string();
                        break;
                      case 2:
                        t.skip().pos++,
                          i.attr === $util.emptyObject && (i.attr = {}),
                          (n = t.string()),
                          t.pos++,
                          (i.attr[n] = $root.tensorflow.AttrValue.decode(
                            t,
                            t.uint32()
                          ));
                        break;
                      default:
                        t.skipType(7 & a);
                    }
                  }
                  return i;
                }),
                t
              );
            })()),
            (n.NodeDef = (function() {
              function t(t) {
                if (((this.input = []), (this.attr = {}), t))
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.name = ""),
                (t.prototype.op = ""),
                (t.prototype.input = $util.emptyArray),
                (t.prototype.device = ""),
                (t.prototype.attr = $util.emptyObject),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n,
                      r = void 0 === e ? t.len : t.pos + e,
                      i = new $root.tensorflow.NodeDef();
                    t.pos < r;

                  ) {
                    var a = t.uint32();
                    switch (a >>> 3) {
                      case 1:
                        i.name = t.string();
                        break;
                      case 2:
                        i.op = t.string();
                        break;
                      case 3:
                        (i.input && i.input.length) || (i.input = []),
                          i.input.push(t.string());
                        break;
                      case 4:
                        i.device = t.string();
                        break;
                      case 5:
                        t.skip().pos++,
                          i.attr === $util.emptyObject && (i.attr = {}),
                          (n = t.string()),
                          t.pos++,
                          (i.attr[n] = $root.tensorflow.AttrValue.decode(
                            t,
                            t.uint32()
                          ));
                        break;
                      default:
                        t.skipType(7 & a);
                    }
                  }
                  return i;
                }),
                t
              );
            })()),
            (n.VersionDef = (function() {
              function t(t) {
                if (((this.badConsumers = []), t))
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.producer = 0),
                (t.prototype.minConsumer = 0),
                (t.prototype.badConsumers = $util.emptyArray),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.VersionDef();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.producer = t.int32();
                        break;
                      case 2:
                        r.minConsumer = t.int32();
                        break;
                      case 3:
                        if (
                          ((r.badConsumers && r.badConsumers.length) ||
                            (r.badConsumers = []),
                          2 == (7 & i))
                        )
                          for (var a = t.uint32() + t.pos; t.pos < a; )
                            r.badConsumers.push(t.int32());
                        else r.badConsumers.push(t.int32());
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                t
              );
            })()),
            (n.GraphDef = (function() {
              function t(t) {
                if (((this.node = []), t))
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.node = $util.emptyArray),
                (t.prototype.versions = null),
                (t.prototype.library = null),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.GraphDef();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        (r.node && r.node.length) || (r.node = []),
                          r.node.push(
                            $root.tensorflow.NodeDef.decode(t, t.uint32())
                          );
                        break;
                      case 4:
                        r.versions = $root.tensorflow.VersionDef.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 2:
                        r.library = $root.tensorflow.FunctionDefLibrary.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                t
              );
            })()),
            (n.CollectionDef = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              var e;
              return (
                (t.prototype.nodeList = null),
                (t.prototype.bytesList = null),
                (t.prototype.int64List = null),
                (t.prototype.floatList = null),
                (t.prototype.anyList = null),
                Object.defineProperty(t.prototype, "kind", {
                  get: $util.oneOfGetter(
                    (e = [
                      "nodeList",
                      "bytesList",
                      "int64List",
                      "floatList",
                      "anyList"
                    ])
                  ),
                  set: $util.oneOfSetter(e)
                }),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.CollectionDef();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.nodeList = $root.tensorflow.CollectionDef.NodeList.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 2:
                        r.bytesList = $root.tensorflow.CollectionDef.BytesList.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 3:
                        r.int64List = $root.tensorflow.CollectionDef.Int64List.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 4:
                        r.floatList = $root.tensorflow.CollectionDef.FloatList.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 5:
                        r.anyList = $root.tensorflow.CollectionDef.AnyList.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.NodeList = (function() {
                  function t(t) {
                    if (((this.value = []), t))
                      for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                        null != t[e[n]] && (this[e[n]] = t[e[n]]);
                  }
                  return (
                    (t.prototype.value = $util.emptyArray),
                    (t.decode = function(t, e) {
                      t instanceof $Reader || (t = $Reader.create(t));
                      for (
                        var n = void 0 === e ? t.len : t.pos + e,
                          r = new $root.tensorflow.CollectionDef.NodeList();
                        t.pos < n;

                      ) {
                        var i = t.uint32();
                        switch (i >>> 3) {
                          case 1:
                            (r.value && r.value.length) || (r.value = []),
                              r.value.push(t.string());
                            break;
                          default:
                            t.skipType(7 & i);
                        }
                      }
                      return r;
                    }),
                    t
                  );
                })()),
                (t.BytesList = (function() {
                  function t(t) {
                    if (((this.value = []), t))
                      for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                        null != t[e[n]] && (this[e[n]] = t[e[n]]);
                  }
                  return (
                    (t.prototype.value = $util.emptyArray),
                    (t.decode = function(t, e) {
                      t instanceof $Reader || (t = $Reader.create(t));
                      for (
                        var n = void 0 === e ? t.len : t.pos + e,
                          r = new $root.tensorflow.CollectionDef.BytesList();
                        t.pos < n;

                      ) {
                        var i = t.uint32();
                        switch (i >>> 3) {
                          case 1:
                            (r.value && r.value.length) || (r.value = []),
                              r.value.push(t.bytes());
                            break;
                          default:
                            t.skipType(7 & i);
                        }
                      }
                      return r;
                    }),
                    t
                  );
                })()),
                (t.Int64List = (function() {
                  function t(t) {
                    if (((this.value = []), t))
                      for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                        null != t[e[n]] && (this[e[n]] = t[e[n]]);
                  }
                  return (
                    (t.prototype.value = $util.emptyArray),
                    (t.decode = function(t, e) {
                      t instanceof $Reader || (t = $Reader.create(t));
                      for (
                        var n = void 0 === e ? t.len : t.pos + e,
                          r = new $root.tensorflow.CollectionDef.Int64List();
                        t.pos < n;

                      ) {
                        var i = t.uint32();
                        switch (i >>> 3) {
                          case 1:
                            if (
                              ((r.value && r.value.length) || (r.value = []),
                              2 == (7 & i))
                            )
                              for (var a = t.uint32() + t.pos; t.pos < a; )
                                r.value.push(t.int64());
                            else r.value.push(t.int64());
                            break;
                          default:
                            t.skipType(7 & i);
                        }
                      }
                      return r;
                    }),
                    t
                  );
                })()),
                (t.FloatList = (function() {
                  function t(t) {
                    if (((this.value = []), t))
                      for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                        null != t[e[n]] && (this[e[n]] = t[e[n]]);
                  }
                  return (
                    (t.prototype.value = $util.emptyArray),
                    (t.decode = function(t, e) {
                      t instanceof $Reader || (t = $Reader.create(t));
                      for (
                        var n = void 0 === e ? t.len : t.pos + e,
                          r = new $root.tensorflow.CollectionDef.FloatList();
                        t.pos < n;

                      ) {
                        var i = t.uint32();
                        switch (i >>> 3) {
                          case 1:
                            if (
                              ((r.value && r.value.length) || (r.value = []),
                              2 == (7 & i))
                            )
                              for (var a = t.uint32() + t.pos; t.pos < a; )
                                r.value.push(t.float());
                            else r.value.push(t.float());
                            break;
                          default:
                            t.skipType(7 & i);
                        }
                      }
                      return r;
                    }),
                    t
                  );
                })()),
                (t.AnyList = (function() {
                  function t(t) {
                    if (((this.value = []), t))
                      for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                        null != t[e[n]] && (this[e[n]] = t[e[n]]);
                  }
                  return (
                    (t.prototype.value = $util.emptyArray),
                    (t.decode = function(t, e) {
                      t instanceof $Reader || (t = $Reader.create(t));
                      for (
                        var n = void 0 === e ? t.len : t.pos + e,
                          r = new $root.tensorflow.CollectionDef.AnyList();
                        t.pos < n;

                      ) {
                        var i = t.uint32();
                        switch (i >>> 3) {
                          case 1:
                            (r.value && r.value.length) || (r.value = []),
                              r.value.push(
                                $root.tensorflow.Any.decode(t, t.uint32())
                              );
                            break;
                          default:
                            t.skipType(7 & i);
                        }
                      }
                      return r;
                    }),
                    t
                  );
                })()),
                t
              );
            })()),
            (n.SaverDef = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              var e, n;
              return (
                (t.prototype.filenameTensorName = ""),
                (t.prototype.saveTensorName = ""),
                (t.prototype.restoreOpName = ""),
                (t.prototype.maxToKeep = 0),
                (t.prototype.sharded = !1),
                (t.prototype.keepCheckpointEveryNHours = 0),
                (t.prototype.version = 0),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.SaverDef();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.filenameTensorName = t.string();
                        break;
                      case 2:
                        r.saveTensorName = t.string();
                        break;
                      case 3:
                        r.restoreOpName = t.string();
                        break;
                      case 4:
                        r.maxToKeep = t.int32();
                        break;
                      case 5:
                        r.sharded = t.bool();
                        break;
                      case 6:
                        r.keepCheckpointEveryNHours = t.float();
                        break;
                      case 7:
                        r.version = t.int32();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.CheckpointFormatVersion = ((e = {}),
                ((n = Object.create(e))[(e[0] = "LEGACY")] = 0),
                (n[(e[1] = "V1")] = 1),
                (n[(e[2] = "V2")] = 2),
                n)),
                t
              );
            })()),
            (n.TensorInfo = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              var e;
              return (
                (t.prototype.name = ""),
                (t.prototype.cooSparse = null),
                (t.prototype.dtype = 0),
                (t.prototype.tensorShape = null),
                Object.defineProperty(t.prototype, "encoding", {
                  get: $util.oneOfGetter((e = ["name", "cooSparse"])),
                  set: $util.oneOfSetter(e)
                }),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.TensorInfo();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.name = t.string();
                        break;
                      case 4:
                        r.cooSparse = $root.tensorflow.TensorInfo.CooSparse.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 2:
                        r.dtype = t.int32();
                        break;
                      case 3:
                        r.tensorShape = $root.tensorflow.TensorShape.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.CooSparse = (function() {
                  function t(t) {
                    if (t)
                      for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                        null != t[e[n]] && (this[e[n]] = t[e[n]]);
                  }
                  return (
                    (t.prototype.valuesTensorName = ""),
                    (t.prototype.indicesTensorName = ""),
                    (t.prototype.denseShapeTensorName = ""),
                    (t.decode = function(t, e) {
                      t instanceof $Reader || (t = $Reader.create(t));
                      for (
                        var n = void 0 === e ? t.len : t.pos + e,
                          r = new $root.tensorflow.TensorInfo.CooSparse();
                        t.pos < n;

                      ) {
                        var i = t.uint32();
                        switch (i >>> 3) {
                          case 1:
                            r.valuesTensorName = t.string();
                            break;
                          case 2:
                            r.indicesTensorName = t.string();
                            break;
                          case 3:
                            r.denseShapeTensorName = t.string();
                            break;
                          default:
                            t.skipType(7 & i);
                        }
                      }
                      return r;
                    }),
                    t
                  );
                })()),
                t
              );
            })()),
            (n.SignatureDef = (function() {
              function t(t) {
                if (((this.inputs = {}), (this.outputs = {}), t))
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.inputs = $util.emptyObject),
                (t.prototype.outputs = $util.emptyObject),
                (t.prototype.methodName = ""),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n,
                      r = void 0 === e ? t.len : t.pos + e,
                      i = new $root.tensorflow.SignatureDef();
                    t.pos < r;

                  ) {
                    var a = t.uint32();
                    switch (a >>> 3) {
                      case 1:
                        t.skip().pos++,
                          i.inputs === $util.emptyObject && (i.inputs = {}),
                          (n = t.string()),
                          t.pos++,
                          (i.inputs[n] = $root.tensorflow.TensorInfo.decode(
                            t,
                            t.uint32()
                          ));
                        break;
                      case 2:
                        t.skip().pos++,
                          i.outputs === $util.emptyObject && (i.outputs = {}),
                          (n = t.string()),
                          t.pos++,
                          (i.outputs[n] = $root.tensorflow.TensorInfo.decode(
                            t,
                            t.uint32()
                          ));
                        break;
                      case 3:
                        i.methodName = t.string();
                        break;
                      default:
                        t.skipType(7 & a);
                    }
                  }
                  return i;
                }),
                t
              );
            })()),
            (n.AssetFileDef = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.tensorInfo = null),
                (t.prototype.filename = ""),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.AssetFileDef();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.tensorInfo = $root.tensorflow.TensorInfo.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 2:
                        r.filename = t.string();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                t
              );
            })()),
            (n.OpDef = (function() {
              function t(t) {
                if (
                  ((this.inputArg = []),
                  (this.outputArg = []),
                  (this.attr = []),
                  t)
                )
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.name = ""),
                (t.prototype.inputArg = $util.emptyArray),
                (t.prototype.outputArg = $util.emptyArray),
                (t.prototype.attr = $util.emptyArray),
                (t.prototype.deprecation = null),
                (t.prototype.summary = ""),
                (t.prototype.description = ""),
                (t.prototype.isCommutative = !1),
                (t.prototype.isAggregate = !1),
                (t.prototype.isStateful = !1),
                (t.prototype.allowsUninitializedInput = !1),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.OpDef();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.name = t.string();
                        break;
                      case 2:
                        (r.inputArg && r.inputArg.length) || (r.inputArg = []),
                          r.inputArg.push(
                            $root.tensorflow.OpDef.ArgDef.decode(t, t.uint32())
                          );
                        break;
                      case 3:
                        (r.outputArg && r.outputArg.length) ||
                          (r.outputArg = []),
                          r.outputArg.push(
                            $root.tensorflow.OpDef.ArgDef.decode(t, t.uint32())
                          );
                        break;
                      case 4:
                        (r.attr && r.attr.length) || (r.attr = []),
                          r.attr.push(
                            $root.tensorflow.OpDef.AttrDef.decode(t, t.uint32())
                          );
                        break;
                      case 8:
                        r.deprecation = $root.tensorflow.OpDef.OpDeprecation.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 5:
                        r.summary = t.string();
                        break;
                      case 6:
                        r.description = t.string();
                        break;
                      case 18:
                        r.isCommutative = t.bool();
                        break;
                      case 16:
                        r.isAggregate = t.bool();
                        break;
                      case 17:
                        r.isStateful = t.bool();
                        break;
                      case 19:
                        r.allowsUninitializedInput = t.bool();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                (t.ArgDef = (function() {
                  function t(t) {
                    if (t)
                      for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                        null != t[e[n]] && (this[e[n]] = t[e[n]]);
                  }
                  return (
                    (t.prototype.name = ""),
                    (t.prototype.description = ""),
                    (t.prototype.type = 0),
                    (t.prototype.typeAttr = ""),
                    (t.prototype.numberAttr = ""),
                    (t.prototype.typeListAttr = ""),
                    (t.prototype.isRef = !1),
                    (t.decode = function(t, e) {
                      t instanceof $Reader || (t = $Reader.create(t));
                      for (
                        var n = void 0 === e ? t.len : t.pos + e,
                          r = new $root.tensorflow.OpDef.ArgDef();
                        t.pos < n;

                      ) {
                        var i = t.uint32();
                        switch (i >>> 3) {
                          case 1:
                            r.name = t.string();
                            break;
                          case 2:
                            r.description = t.string();
                            break;
                          case 3:
                            r.type = t.int32();
                            break;
                          case 4:
                            r.typeAttr = t.string();
                            break;
                          case 5:
                            r.numberAttr = t.string();
                            break;
                          case 6:
                            r.typeListAttr = t.string();
                            break;
                          case 16:
                            r.isRef = t.bool();
                            break;
                          default:
                            t.skipType(7 & i);
                        }
                      }
                      return r;
                    }),
                    t
                  );
                })()),
                (t.AttrDef = (function() {
                  function t(t) {
                    if (t)
                      for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                        null != t[e[n]] && (this[e[n]] = t[e[n]]);
                  }
                  return (
                    (t.prototype.name = ""),
                    (t.prototype.type = ""),
                    (t.prototype.defaultValue = null),
                    (t.prototype.description = ""),
                    (t.prototype.hasMinimum = !1),
                    (t.prototype.minimum = $util.Long
                      ? $util.Long.fromBits(0, 0, !1)
                      : 0),
                    (t.prototype.allowedValues = null),
                    (t.decode = function(t, e) {
                      t instanceof $Reader || (t = $Reader.create(t));
                      for (
                        var n = void 0 === e ? t.len : t.pos + e,
                          r = new $root.tensorflow.OpDef.AttrDef();
                        t.pos < n;

                      ) {
                        var i = t.uint32();
                        switch (i >>> 3) {
                          case 1:
                            r.name = t.string();
                            break;
                          case 2:
                            r.type = t.string();
                            break;
                          case 3:
                            r.defaultValue = $root.tensorflow.AttrValue.decode(
                              t,
                              t.uint32()
                            );
                            break;
                          case 4:
                            r.description = t.string();
                            break;
                          case 5:
                            r.hasMinimum = t.bool();
                            break;
                          case 6:
                            r.minimum = t.int64();
                            break;
                          case 7:
                            r.allowedValues = $root.tensorflow.AttrValue.decode(
                              t,
                              t.uint32()
                            );
                            break;
                          default:
                            t.skipType(7 & i);
                        }
                      }
                      return r;
                    }),
                    t
                  );
                })()),
                (t.OpDeprecation = (function() {
                  function t(t) {
                    if (t)
                      for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                        null != t[e[n]] && (this[e[n]] = t[e[n]]);
                  }
                  return (
                    (t.prototype.version = 0),
                    (t.prototype.explanation = ""),
                    (t.decode = function(t, e) {
                      t instanceof $Reader || (t = $Reader.create(t));
                      for (
                        var n = void 0 === e ? t.len : t.pos + e,
                          r = new $root.tensorflow.OpDef.OpDeprecation();
                        t.pos < n;

                      ) {
                        var i = t.uint32();
                        switch (i >>> 3) {
                          case 1:
                            r.version = t.int32();
                            break;
                          case 2:
                            r.explanation = t.string();
                            break;
                          default:
                            t.skipType(7 & i);
                        }
                      }
                      return r;
                    }),
                    t
                  );
                })()),
                t
              );
            })()),
            (n.OpList = (function() {
              function t(t) {
                if (((this.op = []), t))
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.op = $util.emptyArray),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.OpList();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        (r.op && r.op.length) || (r.op = []),
                          r.op.push(
                            $root.tensorflow.OpDef.decode(t, t.uint32())
                          );
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                t
              );
            })()),
            (n.MetaGraphDef = (function() {
              function t(t) {
                if (
                  ((this.collectionDef = {}),
                  (this.signatureDef = {}),
                  (this.assetFileDef = []),
                  t)
                )
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.metaInfoDef = null),
                (t.prototype.graphDef = null),
                (t.prototype.saverDef = null),
                (t.prototype.collectionDef = $util.emptyObject),
                (t.prototype.signatureDef = $util.emptyObject),
                (t.prototype.assetFileDef = $util.emptyArray),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n,
                      r = void 0 === e ? t.len : t.pos + e,
                      i = new $root.tensorflow.MetaGraphDef();
                    t.pos < r;

                  ) {
                    var a = t.uint32();
                    switch (a >>> 3) {
                      case 1:
                        i.metaInfoDef = $root.tensorflow.MetaGraphDef.MetaInfoDef.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 2:
                        i.graphDef = $root.tensorflow.GraphDef.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 3:
                        i.saverDef = $root.tensorflow.SaverDef.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 4:
                        t.skip().pos++,
                          i.collectionDef === $util.emptyObject &&
                            (i.collectionDef = {}),
                          (n = t.string()),
                          t.pos++,
                          (i.collectionDef[
                            n
                          ] = $root.tensorflow.CollectionDef.decode(
                            t,
                            t.uint32()
                          ));
                        break;
                      case 5:
                        t.skip().pos++,
                          i.signatureDef === $util.emptyObject &&
                            (i.signatureDef = {}),
                          (n = t.string()),
                          t.pos++,
                          (i.signatureDef[
                            n
                          ] = $root.tensorflow.SignatureDef.decode(
                            t,
                            t.uint32()
                          ));
                        break;
                      case 6:
                        (i.assetFileDef && i.assetFileDef.length) ||
                          (i.assetFileDef = []),
                          i.assetFileDef.push(
                            $root.tensorflow.AssetFileDef.decode(t, t.uint32())
                          );
                        break;
                      default:
                        t.skipType(7 & a);
                    }
                  }
                  return i;
                }),
                (t.MetaInfoDef = (function() {
                  function t(t) {
                    if (((this.tags = []), t))
                      for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                        null != t[e[n]] && (this[e[n]] = t[e[n]]);
                  }
                  return (
                    (t.prototype.metaGraphVersion = ""),
                    (t.prototype.strippedOpList = null),
                    (t.prototype.anyInfo = null),
                    (t.prototype.tags = $util.emptyArray),
                    (t.prototype.tensorflowVersion = ""),
                    (t.prototype.tensorflowGitVersion = ""),
                    (t.decode = function(t, e) {
                      t instanceof $Reader || (t = $Reader.create(t));
                      for (
                        var n = void 0 === e ? t.len : t.pos + e,
                          r = new $root.tensorflow.MetaGraphDef.MetaInfoDef();
                        t.pos < n;

                      ) {
                        var i = t.uint32();
                        switch (i >>> 3) {
                          case 1:
                            r.metaGraphVersion = t.string();
                            break;
                          case 2:
                            r.strippedOpList = $root.tensorflow.OpList.decode(
                              t,
                              t.uint32()
                            );
                            break;
                          case 3:
                            r.anyInfo = $root.tensorflow.Any.decode(
                              t,
                              t.uint32()
                            );
                            break;
                          case 4:
                            (r.tags && r.tags.length) || (r.tags = []),
                              r.tags.push(t.string());
                            break;
                          case 5:
                            r.tensorflowVersion = t.string();
                            break;
                          case 6:
                            r.tensorflowGitVersion = t.string();
                            break;
                          default:
                            t.skipType(7 & i);
                        }
                      }
                      return r;
                    }),
                    t
                  );
                })()),
                t
              );
            })()),
            (n.SavedModel = (function() {
              function t(t) {
                if (((this.metaGraphs = []), t))
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.savedModelSchemaVersion = $util.Long
                  ? $util.Long.fromBits(0, 0, !1)
                  : 0),
                (t.prototype.metaGraphs = $util.emptyArray),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.SavedModel();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.savedModelSchemaVersion = t.int64();
                        break;
                      case 2:
                        (r.metaGraphs && r.metaGraphs.length) ||
                          (r.metaGraphs = []),
                          r.metaGraphs.push(
                            $root.tensorflow.MetaGraphDef.decode(t, t.uint32())
                          );
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                t
              );
            })()),
            (n.FunctionDefLibrary = (function() {
              function t(t) {
                if (((this.function = []), (this.gradient = []), t))
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.function = $util.emptyArray),
                (t.prototype.gradient = $util.emptyArray),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.FunctionDefLibrary();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        (r.function && r.function.length) || (r.function = []),
                          r.function.push(
                            $root.tensorflow.FunctionDef.decode(t, t.uint32())
                          );
                        break;
                      case 2:
                        (r.gradient && r.gradient.length) || (r.gradient = []),
                          r.gradient.push(
                            $root.tensorflow.GradientDef.decode(t, t.uint32())
                          );
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                t
              );
            })()),
            (n.FunctionDef = (function() {
              function t(t) {
                if (((this.attr = {}), (this.nodeDef = []), (this.ret = {}), t))
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.signature = null),
                (t.prototype.attr = $util.emptyObject),
                (t.prototype.nodeDef = $util.emptyArray),
                (t.prototype.ret = $util.emptyObject),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n,
                      r = void 0 === e ? t.len : t.pos + e,
                      i = new $root.tensorflow.FunctionDef();
                    t.pos < r;

                  ) {
                    var a = t.uint32();
                    switch (a >>> 3) {
                      case 1:
                        i.signature = $root.tensorflow.OpDef.decode(
                          t,
                          t.uint32()
                        );
                        break;
                      case 5:
                        t.skip().pos++,
                          i.attr === $util.emptyObject && (i.attr = {}),
                          (n = t.string()),
                          t.pos++,
                          (i.attr[n] = $root.tensorflow.AttrValue.decode(
                            t,
                            t.uint32()
                          ));
                        break;
                      case 3:
                        (i.nodeDef && i.nodeDef.length) || (i.nodeDef = []),
                          i.nodeDef.push(
                            $root.tensorflow.NodeDef.decode(t, t.uint32())
                          );
                        break;
                      case 4:
                        t.skip().pos++,
                          i.ret === $util.emptyObject && (i.ret = {}),
                          (n = t.string()),
                          t.pos++,
                          (i.ret[n] = t.string());
                        break;
                      default:
                        t.skipType(7 & a);
                    }
                  }
                  return i;
                }),
                t
              );
            })()),
            (n.GradientDef = (function() {
              function t(t) {
                if (t)
                  for (var e = Object.keys(t), n = 0; n < e.length; ++n)
                    null != t[e[n]] && (this[e[n]] = t[e[n]]);
              }
              return (
                (t.prototype.functionName = ""),
                (t.prototype.gradientFunc = ""),
                (t.decode = function(t, e) {
                  t instanceof $Reader || (t = $Reader.create(t));
                  for (
                    var n = void 0 === e ? t.len : t.pos + e,
                      r = new $root.tensorflow.GradientDef();
                    t.pos < n;

                  ) {
                    var i = t.uint32();
                    switch (i >>> 3) {
                      case 1:
                        r.functionName = t.string();
                        break;
                      case 2:
                        r.gradientFunc = t.string();
                        break;
                      default:
                        t.skipType(7 & i);
                    }
                  }
                  return r;
                }),
                t
              );
            })()),
            n
          );
        })();
        var compiled_api = $root,
          compiled_api_1 = compiled_api.tensorflow;
        function getParamValue(t, e, n, r) {
          var i = e.params[t];
          if (i && void 0 !== i.inputIndex) {
            if ("tensor" === i.type)
              return getTensor(e.inputNames[i.inputIndex], n, r);
            if ("tensors" === i.type)
              return (0 === i.inputIndex
                ? 0 === i.inputParamLength
                  ? e.inputNames
                  : e.inputNames.slice(i.inputIndex, -i.inputParamLength)
                : e.inputNames.splice(i.inputIndex)
              ).map(function(t) {
                return getTensor(t, n, r);
              });
            var a = Array.prototype.slice.call(
              getTensor(e.inputNames.slice(i.inputIndex)[0], n, r).dataSync()
            );
            return "number" === i.type ? a[0] : a;
          }
          return i && i.value;
        }
        function getTensor(t, e, n) {
          var r = parseNodeName(t),
            i = r[0],
            a = r[1],
            o = n.currentContextIds.find(function(t) {
              return !!e[getNodeNameWithContextId(i, t)];
            });
          return void 0 !== o ? e[getNodeNameWithContextId(i, o)][a] : void 0;
        }
        function getTensorsForCurrentContenxt(t, e, n) {
          return e[getNodeNameWithContextId(t, n.currentContextId)];
        }
        function getNodeNameAndIndex(t, e) {
          var n = parseNodeName(t),
            r = n[0],
            i = n[1];
          return [getNodeNameWithContextId(r, e && e.currentContextId), i];
        }
        function getNodeNameWithContextId(t, e) {
          return e ? t + "-" + e : t;
        }
        function parseNodeName(t) {
          var e = t.lastIndexOf(":");
          return -1 === e
            ? [t, 0]
            : [t.substring(0, e), Number(t.substring(e + 1))];
        }
        function split$1(t, e) {
          for (var n = [], r = 0; r < t.length; r += e)
            n.push(t.slice(r, r + e));
          return n;
        }
        var json = [
            {
              tfOpName: "Add",
              dlOpName: "add",
              category: "arithmetic",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "AddN",
              dlOpName: "addN",
              category: "arithmetic",
              params: [
                {
                  tfInputIndex: 0,
                  tfInputParamLength: 0,
                  dlParamName: "tensors",
                  type: "tensors"
                }
              ]
            },
            {
              tfOpName: "BiasAdd",
              dlOpName: "add",
              category: "arithmetic",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Sub",
              dlOpName: "sub",
              category: "arithmetic",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "RealDiv",
              dlOpName: "div",
              category: "arithmetic",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Div",
              dlOpName: "div",
              category: "arithmetic",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "FloorDiv",
              dlOpName: "floorDiv",
              category: "arithmetic",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Mul",
              dlOpName: "mul",
              category: "arithmetic",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Maximum",
              dlOpName: "maximum",
              category: "arithmetic",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" }
              ]
            },
            {
              tfOpName: "Minimum",
              dlOpName: "minimum",
              category: "arithmetic",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" }
              ]
            },
            {
              tfOpName: "Pow",
              dlOpName: "pow",
              category: "arithmetic",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "SquaredDifference",
              dlOpName: "squaredDifference",
              category: "arithmetic",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Mod",
              dlOpName: "mod",
              category: "arithmetic",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "FloorMod",
              dlOpName: "mod",
              category: "arithmetic",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            }
          ],
          arithmetic = Object.freeze({ json: json }),
          json$1 = [
            {
              tfOpName: "Abs",
              dlOpName: "abs",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Acos",
              dlOpName: "acos",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Asin",
              dlOpName: "asin",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Atan",
              dlOpName: "atan",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Atan2",
              dlOpName: "atan2",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "y", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Ceil",
              dlOpName: "ceil",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "ClipByValue",
              dlOpName: "clipByValue",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "clip_value_min",
                  dlParamName: "clipValueMin",
                  type: "number"
                },
                {
                  tfParamName: "clip_value_max",
                  dlParamName: "clipValueMax",
                  type: "number"
                }
              ]
            },
            {
              tfOpName: "Cos",
              dlOpName: "cos",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Cosh",
              dlOpName: "cosh",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Elu",
              dlOpName: "elu",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Exp",
              dlOpName: "exp",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Floor",
              dlOpName: "floor",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Log",
              dlOpName: "log",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Neg",
              dlOpName: "neg",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Relu",
              dlOpName: "relu",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Relu6",
              dlOpName: "clipByValue",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                },
                {
                  dlParamName: "clipValueMin",
                  type: "number",
                  defaultValue: 0
                },
                { dlParamName: "clipValueMax", type: "number", defaultValue: 6 }
              ]
            },
            {
              tfOpName: "Selu",
              dlOpName: "selu",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Sigmoid",
              dlOpName: "sigmoid",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Sin",
              dlOpName: "sin",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Sinh",
              dlOpName: "sinh",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Sqrt",
              dlOpName: "sqrt",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Rsqrt",
              dlOpName: "rsqrt",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Square",
              dlOpName: "square",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Tan",
              dlOpName: "tan",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Tanh",
              dlOpName: "tanh",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Sign",
              dlOpName: "sign",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Round",
              dlOpName: "round",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Expm1",
              dlOpName: "expm1",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Log1p",
              dlOpName: "log1p",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Reciprocal",
              dlOpName: "reciprocal",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Reciprocal",
              dlOpName: "reciprocal",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Softplus",
              dlOpName: "softplus",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Asinh",
              dlOpName: "asinh",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Acosh",
              dlOpName: "acosh",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Atanh",
              dlOpName: "atanh",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Erf",
              dlOpName: "erf",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Prod",
              dlOpName: "prod",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "axes", type: "number[]" },
                {
                  tfParamName: "keep_dims",
                  dlParamName: "keepDims",
                  type: "bool",
                  notSupported: !0
                },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "LeakyRelu",
              dlOpName: "leakyRelu",
              category: "basic_math",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "alpha",
                  dlParamName: "alpha",
                  type: "number",
                  defaultValue: 0.2
                },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            }
          ],
          basicMath = Object.freeze({ json: json$1 }),
          json$2 = [
            {
              tfOpName: "LoopCond",
              dlOpName: "loopCond",
              category: "control",
              params: [{ tfInputIndex: 0, dlParamName: "pred", type: "tensor" }]
            },
            {
              tfOpName: "Switch",
              dlOpName: "switch",
              category: "control",
              params: [
                { tfInputIndex: 0, dlParamName: "data", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "pred", type: "tensor" }
              ]
            },
            {
              tfOpName: "Merge",
              dlOpName: "merge",
              category: "control",
              params: [
                {
                  tfInputIndex: 0,
                  tfInputParamLength: 0,
                  dlParamName: "tensors",
                  type: "tensors"
                }
              ]
            },
            {
              tfOpName: "Enter",
              dlOpName: "enter",
              category: "control",
              params: [
                { tfInputIndex: 0, dlParamName: "tensor", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                },
                {
                  tfParamName: "frame_name",
                  dlParamName: "frameName",
                  type: "string"
                },
                {
                  tfParamName: "is_constant",
                  dlParamName: "isConstant",
                  type: "bool"
                }
              ]
            },
            {
              tfOpName: "Exit",
              dlOpName: "exit",
              category: "control",
              params: [
                { tfInputIndex: 0, dlParamName: "tensor", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "NextIteration",
              dlOpName: "nextIteration",
              category: "control",
              params: [
                { tfInputIndex: 0, dlParamName: "tensor", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "TensorArrayV3",
              dlOpName: "tensorArray",
              category: "control",
              params: [
                { tfInputIndex: 0, dlParamName: "size", type: "number" },
                { tfParamName: "dtype", dlParamName: "dtype", type: "dtype" },
                {
                  tfParamName: "element_shape",
                  dlParamName: "elementShape",
                  type: "shape"
                },
                {
                  tfParamName: "dynamic_size",
                  dlParamName: "dynamicSize",
                  type: "bool"
                },
                {
                  tfParamName: "clear_after_read",
                  dlParamName: "clearAfterRead",
                  type: "bool"
                },
                {
                  tfParamName: "identical_element_shapes",
                  dlParamName: "identicalElementShapes",
                  type: "bool"
                },
                {
                  tfParamName: "tensor_array_name",
                  dlParamName: "name",
                  type: "string"
                }
              ]
            },
            {
              tfOpName: "TensorArrayWriteV3",
              dlOpName: "tensorArrayWrite",
              category: "control",
              params: [
                {
                  tfInputIndex: 0,
                  dlParamName: "tensorArrayId",
                  type: "number"
                },
                { tfInputIndex: 1, dlParamName: "index", type: "number" },
                { tfInputIndex: 2, dlParamName: "tensor", type: "tensor" },
                { tfInputIndex: 3, dlParamName: "flowIn", type: "number" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "TensorArrayReadV3",
              dlOpName: "tensorArrayRead",
              category: "control",
              params: [
                {
                  tfInputIndex: 0,
                  dlParamName: "tensorArrayId",
                  type: "number"
                },
                { tfInputIndex: 1, dlParamName: "index", type: "number" },
                { tfInputIndex: 2, dlParamName: "flowIn", type: "number" },
                {
                  tfParamName: "dtype",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "TensorArrayGatherV3",
              dlOpName: "tensorArrayGather",
              category: "control",
              params: [
                {
                  tfInputIndex: 0,
                  dlParamName: "tensorArrayId",
                  type: "number"
                },
                { tfInputIndex: 1, dlParamName: "indices", type: "number[]" },
                { tfInputIndex: 2, dlParamName: "flowIn", type: "number" },
                { tfParamName: "dtype", dlParamName: "dtype", type: "dtype" },
                {
                  tfParamName: "element_shape",
                  dlParamName: "elementShape",
                  type: "shape"
                }
              ]
            },
            {
              tfOpName: "TensorArrayScatterV3",
              dlOpName: "tensorArrayScatter",
              category: "control",
              params: [
                {
                  tfInputIndex: 0,
                  dlParamName: "tensorArrayId",
                  type: "number"
                },
                { tfInputIndex: 1, dlParamName: "indices", type: "number[]" },
                { tfInputIndex: 2, dlParamName: "tensor", type: "tensor" },
                { tfInputIndex: 3, dlParamName: "flowIn", type: "number" },
                { tfParamName: "T", dlParamName: "dtype", type: "dtype" }
              ]
            },
            {
              tfOpName: "TensorArrayConcatV3",
              dlOpName: "tensorArrayConcat",
              category: "control",
              params: [
                {
                  tfInputIndex: 0,
                  dlParamName: "tensorArrayId",
                  type: "number"
                },
                { tfInputIndex: 1, dlParamName: "flowIn", type: "number" },
                { tfParamName: "dtype", dlParamName: "dtype", type: "dtype" },
                {
                  tfParamName: "element_shape_except0",
                  dlParamName: "elementShapeExcept0",
                  type: "shape",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "TensorArraySplitV3",
              dlOpName: "tensorArraySplit",
              category: "control",
              params: [
                {
                  tfInputIndex: 0,
                  dlParamName: "tensorArrayId",
                  type: "number"
                },
                { tfInputIndex: 1, dlParamName: "tensor", type: "tensor" },
                { tfInputIndex: 2, dlParamName: "lengths", type: "number[]" },
                { tfInputIndex: 3, dlParamName: "flowIn", type: "number" },
                { tfParamName: "T", dlParamName: "dtype", type: "dtype" }
              ]
            },
            {
              tfOpName: "TensorArraySizeV3",
              dlOpName: "tensorArraySize",
              category: "control",
              params: [
                {
                  tfInputIndex: 0,
                  dlParamName: "tensorArrayId",
                  type: "number"
                },
                { tfInputIndex: 1, dlParamName: "flowIn", type: "number" }
              ]
            },
            {
              tfOpName: "TensorArrayCloseV3",
              dlOpName: "tensorArrayClose",
              category: "control",
              params: [
                {
                  tfInputIndex: 0,
                  dlParamName: "tensorArrayId",
                  type: "number"
                }
              ]
            }
          ],
          control = Object.freeze({ json: json$2 }),
          json$3 = [
            {
              tfOpName: "AvgPool",
              dlOpName: "avgPool",
              category: "convolution",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "strides",
                  dlParamName: "strides",
                  type: "number[]"
                },
                { tfParamName: "padding", dlParamName: "pad", type: "string" },
                {
                  tfParamName: "data_format",
                  dlParamName: "dataFormat",
                  type: "string",
                  notSupported: !0
                },
                {
                  tfParamName: "ksize",
                  dlParamName: "kernelSize",
                  type: "number[]"
                },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "MaxPool",
              dlOpName: "maxPool",
              category: "convolution",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "strides",
                  dlParamName: "strides",
                  type: "number[]"
                },
                { tfParamName: "padding", dlParamName: "pad", type: "string" },
                {
                  tfParamName: "data_format",
                  dlParamName: "dataFormat",
                  type: "string",
                  notSupported: !0
                },
                {
                  tfParamName: "ksize",
                  dlParamName: "kernelSize",
                  type: "number[]"
                },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Conv1D",
              dlOpName: "conv1d",
              category: "convolution",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "filter", type: "tensor" },
                {
                  tfParamName: "stride",
                  dlParamName: "stride",
                  type: "number"
                },
                { tfParamName: "padding", dlParamName: "pad", type: "string" },
                {
                  tfParamName: "data_format",
                  dlParamName: "dataFormat",
                  type: "string",
                  defaultValue: "NWC"
                },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                },
                {
                  tfParamName: "dilation",
                  dlParamName: "dilation",
                  type: "number",
                  defaultValue: 1
                }
              ]
            },
            {
              tfOpName: "Conv2D",
              dlOpName: "conv2d",
              category: "convolution",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "filter", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                },
                {
                  tfParamName: "strides",
                  dlParamName: "strides",
                  type: "number[]"
                },
                { tfParamName: "padding", dlParamName: "pad", type: "string" },
                {
                  tfParamName: "useCudnnOnGpu",
                  dlParamName: "useCudnnOnGpu",
                  type: "bool"
                },
                {
                  tfParamName: "data_format",
                  dlParamName: "dataFormat",
                  type: "string",
                  defaultValue: "NHWC"
                },
                {
                  tfParamName: "dilations",
                  dlParamName: "dilations",
                  type: "number[]"
                }
              ]
            },
            {
              tfOpName: "Conv2DBackpropInput",
              dlOpName: "conv2dTranspose",
              category: "convolution",
              params: [
                { tfInputIndex: 2, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "filter", type: "tensor" },
                {
                  tfInputIndex: 0,
                  dlParamName: "outputShape",
                  type: "number[]"
                },
                {
                  tfParamName: "strides",
                  dlParamName: "strides",
                  type: "number[]"
                },
                { tfParamName: "padding", dlParamName: "pad", type: "string" },
                {
                  tfParamName: "data_format",
                  dlParamName: "dataFormat",
                  type: "string",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "DepthwiseConv2d",
              dlOpName: "depthwiseConv2d",
              category: "convolution",
              params: [
                { tfInputIndex: 0, dlParamName: "input", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "filter", type: "tensor" },
                {
                  tfParamName: "strides",
                  dlParamName: "strides",
                  type: "number[]"
                },
                { tfParamName: "padding", dlParamName: "pad", type: "string" },
                {
                  tfParamName: "data_format",
                  dlParamName: "dataFormat",
                  type: "string",
                  defaultValue: "NHWC"
                },
                {
                  tfParamName: "dilations",
                  dlParamName: "dilations",
                  type: "number[]"
                }
              ]
            },
            {
              tfOpName: "DepthwiseConv2dNative",
              dlOpName: "depthwiseConv2d",
              category: "convolution",
              params: [
                { tfInputIndex: 0, dlParamName: "input", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "filter", type: "tensor" },
                {
                  tfParamName: "strides",
                  dlParamName: "strides",
                  type: "number[]"
                },
                { tfParamName: "padding", dlParamName: "pad", type: "string" },
                {
                  tfParamName: "data_format",
                  dlParamName: "dataFormat",
                  type: "string",
                  defaultValue: "NHWC"
                },
                {
                  tfParamName: "dilations",
                  dlParamName: "dilations",
                  type: "number[]"
                }
              ]
            }
          ],
          convolution = Object.freeze({ json: json$3 }),
          json$4 = [
            {
              tfOpName: "Fill",
              dlOpName: "fill",
              category: "creation",
              params: [
                { tfInputIndex: 0, dlParamName: "shape", type: "number[]" },
                { tfInputIndex: 1, dlParamName: "value", type: "number" },
                { tfParamName: "T", dlParamName: "dtype", type: "dtype" }
              ]
            },
            {
              tfOpName: "LinSpace",
              dlOpName: "linspace",
              category: "creation",
              params: [
                { tfInputIndex: 0, dlParamName: "start", type: "number" },
                { tfInputIndex: 1, dlParamName: "stop", type: "number" },
                { tfInputIndex: 2, dlParamName: "num", type: "number" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "OneHot",
              dlOpName: "oneHot",
              category: "creation",
              params: [
                { tfInputIndex: 0, dlParamName: "indices", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "depth", type: "number" },
                {
                  tfInputIndex: 2,
                  dlParamName: "onValue",
                  type: "number",
                  defaultValue: 1
                },
                {
                  tfInputIndex: 3,
                  dlParamName: "offValue",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfParamName: "axis",
                  dlParamName: "axis",
                  type: "number",
                  notSupported: !0
                },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Ones",
              dlOpName: "ones",
              category: "creation",
              params: [
                { tfInputIndex: 0, dlParamName: "shape", type: "number[]" },
                { tfParamName: "T", dlParamName: "dtype", type: "dtype" }
              ]
            },
            {
              tfOpName: "OnesLike",
              dlOpName: "onesLike",
              category: "creation",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfParamName: "dtype", dlParamName: "dtype", type: "dtype" }
              ]
            },
            {
              tfOpName: "RandomUniform",
              dlOpName: "randomUniform",
              category: "creation",
              params: [
                { tfInputIndex: 0, dlParamName: "shape", type: "number[]" },
                {
                  tfParamName: "minval",
                  dlParamName: "minval",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfParamName: "maxval",
                  dlParamName: "maxval",
                  type: "number",
                  defaultValue: 1
                },
                { tfParamName: "dtype", dlParamName: "dtype", type: "dtype" },
                {
                  tfParamName: "seed",
                  dlParamName: "seed",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfParamName: "seed2",
                  dlParamName: "seed2",
                  type: "number",
                  defaultValue: 0,
                  notSupported: !0
                },
                {
                  tfParamName: "T",
                  dlParamName: "T",
                  type: "number",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Range",
              dlOpName: "range",
              category: "creation",
              params: [
                { tfInputIndex: 0, dlParamName: "start", type: "number" },
                { tfInputIndex: 1, dlParamName: "stop", type: "number" },
                {
                  tfInputIndex: 2,
                  dlParamName: "step",
                  type: "number",
                  defaultValue: 0
                },
                { tfParamName: "Tidx", dlParamName: "dtype", type: "dtype" }
              ]
            },
            {
              tfOpName: "truncatedNormal",
              dlOpName: "truncatedNormal",
              category: "creation",
              params: [
                { tfInputIndex: 0, dlParamName: "shape", type: "number[]" },
                {
                  tfParamName: "means",
                  dlParamName: "mean",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfParamName: "stddev",
                  dlParamName: "stdDev",
                  type: "number",
                  defaultValue: 1
                },
                { tfParamName: "seed", dlParamName: "seed", type: "number" },
                {
                  tfParamName: "seed2",
                  dlParamName: "seed2",
                  type: "number",
                  defaultValue: 0,
                  notSupported: !0
                },
                { tfParamName: "dtype", dlParamName: "dtype", type: "dtype" },
                {
                  tfParamName: "T",
                  dlParamName: "T",
                  type: "number",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Zeros",
              dlOpName: "zeros",
              category: "creation",
              params: [
                { tfInputIndex: 0, dlParamName: "shape", type: "number[]" },
                { tfParamName: "T", dlParamName: "dtype", type: "dtype" }
              ]
            },
            {
              tfOpName: "ZerosLike",
              dlOpName: "zerosLike",
              category: "creation",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfParamName: "T", dlParamName: "dtype", type: "dtype" }
              ]
            }
          ],
          creation = Object.freeze({ json: json$4 }),
          json$5 = [
            {
              tfOpName: "NonMaxSuppressionV2",
              dlOpName: "nonMaxSuppression",
              category: "dynamic",
              params: [
                { tfInputIndex: 0, dlParamName: "boxes", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "scores", type: "tensor" },
                {
                  tfInputIndex: 2,
                  dlParamName: "maxOutputSize",
                  type: "number"
                },
                { tfInputIndex: 3, dlParamName: "iouThreshold", type: "number" }
              ]
            },
            {
              tfOpName: "NonMaxSuppressionV3",
              dlOpName: "nonMaxSuppression",
              category: "dynamic",
              params: [
                { tfInputIndex: 0, dlParamName: "boxes", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "scores", type: "tensor" },
                {
                  tfInputIndex: 2,
                  dlParamName: "maxOutputSize",
                  type: "number"
                },
                {
                  tfInputIndex: 3,
                  dlParamName: "iouThreshold",
                  type: "number"
                },
                {
                  tfInputIndex: 4,
                  dlParamName: "scoreThreshold",
                  type: "number"
                }
              ]
            },
            {
              tfOpName: "Where",
              dlOpName: "whereAsync",
              category: "dynamic",
              params: [
                { tfInputIndex: 0, dlParamName: "condition", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "ListDiff",
              dlOpName: "setdiff1dAsync",
              category: "dynamic",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "y", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            }
          ],
          dynamic = Object.freeze({ json: json$5 }),
          json$6 = [
            {
              tfOpName: "TopKV2",
              dlOpName: "topK",
              category: "evaluation",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "k", type: "number" },
                { tfParamName: "sorted", dlParamName: "sorted", type: "bool" }
              ]
            }
          ],
          evaluation = Object.freeze({ json: json$6 }),
          json$7 = [
            {
              tfOpName: "PlaceholderWithDefault",
              dlOpName: "placeholder",
              category: "graph",
              params: [
                { tfInputIndex: 0, dlParamName: "default", type: "tensor" },
                { tfParamName: "shape", dlParamName: "shape", type: "shape" },
                { tfParamName: "dtype", dlParamName: "dtype", type: "dtype" }
              ]
            },
            {
              tfOpName: "Placeholder",
              dlOpName: "placeholder",
              category: "graph",
              params: [
                { tfParamName: "shape", dlParamName: "shape", type: "shape" },
                { tfParamName: "dtype", dlParamName: "dtype", type: "dtype" }
              ]
            },
            { tfOpName: "Const", dlOpName: "const", category: "graph" },
            {
              tfOpName: "Identity",
              dlOpName: "identity",
              category: "graph",
              params: [{ tfInputIndex: 0, dlParamName: "x", type: "tensor" }]
            },
            {
              tfOpName: "Snapshot",
              dlOpName: "snapshot",
              category: "graph",
              params: [{ tfInputIndex: 0, dlParamName: "x", type: "tensor" }]
            },
            {
              tfOpName: "Rank",
              dlOpName: "rank",
              category: "graph",
              params: [{ tfInputIndex: 0, dlParamName: "x", type: "tensor" }]
            },
            {
              tfOpName: "Size",
              dlOpName: "size",
              category: "graph",
              params: [{ tfInputIndex: 0, dlParamName: "x", type: "tensor" }]
            },
            {
              tfOpName: "Shape",
              dlOpName: "shape",
              category: "graph",
              params: [{ tfInputIndex: 0, dlParamName: "x", type: "tensor" }]
            },
            {
              tfOpName: "ShapeN",
              dlOpName: "shapeN",
              category: "graph",
              params: [
                {
                  tfInputIndex: 0,
                  tfInputParamLength: 0,
                  dlParamName: "x",
                  type: "tensors"
                }
              ]
            },
            {
              tfOpName: "Print",
              dlOpName: "print",
              category: "graph",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfInputIndex: 1,
                  tfInputParamLength: 1,
                  dlParamName: "data",
                  type: "tensors"
                },
                {
                  tfParamName: "message",
                  dlParamName: "message",
                  type: "string"
                },
                {
                  tfParamName: "first_n",
                  dlParamName: "firstN",
                  type: "number",
                  notSupprted: !0
                },
                {
                  tfParamName: "summarize",
                  dlParamName: "summarize",
                  type: "number",
                  defaultValue: 3
                }
              ]
            },
            {
              tfOpName: "NoOp",
              dlOpName: "noop",
              category: "graph",
              params: []
            },
            {
              tfOpName: "StopGradient",
              dlOpName: "stopGradient",
              category: "graph",
              params: [{ tfInputIndex: 0, dlParamName: "x", type: "tensor" }]
            },
            {
              tfOpName: "FakeQuantWithMinMaxVars",
              dlOpName: "fakeQuantWithMinMaxVars",
              category: "graph",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfParamName: "min", dlParamName: "min", type: "number" },
                { tfParamName: "max", dlParamName: "max", type: "number" }
              ]
            }
          ],
          graph = Object.freeze({ json: json$7 }),
          json$8 = [
            {
              tfOpName: "ResizeBilinear",
              dlOpName: "resizeBilinear",
              category: "image",
              params: [
                { tfInputIndex: 0, dlParamName: "images", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "size", type: "number[]" },
                {
                  tfParamName: "align_corners",
                  dlParamName: "alignCorners",
                  type: "bool"
                },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "ResizeNearestNeighbor",
              dlOpName: "resizeNearestNeighbor",
              category: "image",
              params: [
                { tfInputIndex: 0, dlParamName: "images", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "size", type: "number[]" },
                {
                  tfParamName: "align_corners",
                  dlParamName: "alignCorners",
                  type: "bool"
                },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "CropAndResize",
              dlOpName: "cropAndResize",
              category: "image",
              params: [
                { tfInputIndex: 0, dlParamName: "image", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "boxes", type: "tensor" },
                { tfInputIndex: 2, dlParamName: "boxInd", type: "tensor" },
                { tfInputIndex: 3, dlParamName: "cropSize", type: "number[]" },
                {
                  tfParamName: "method",
                  dlParamName: "method",
                  type: "string"
                },
                {
                  tfParamName: "extrapolation_value",
                  dlParamName: "extrapolationValue",
                  type: "number"
                }
              ]
            }
          ],
          image$1 = Object.freeze({ json: json$8 }),
          json$9 = [
            {
              tfOpName: "Equal",
              dlOpName: "equal",
              category: "logical",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "NotEqual",
              dlOpName: "notEqual",
              category: "logical",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Greater",
              dlOpName: "greater",
              category: "logical",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "GreaterEqual",
              dlOpName: "greaterEqual",
              category: "logical",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Less",
              dlOpName: "less",
              category: "logical",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "LessEqual",
              dlOpName: "lessEqual",
              category: "logical",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "LogicalAnd",
              dlOpName: "logicalAnd",
              category: "logical",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "LogicalNot",
              dlOpName: "logicalNot",
              category: "logical",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "LogicalOr",
              dlOpName: "logicalOr",
              category: "logical",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Select",
              dlOpName: "where",
              category: "logical",
              params: [
                { tfInputIndex: 0, dlParamName: "condition", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 2, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            }
          ],
          logical = Object.freeze({ json: json$9 }),
          json$10 = [
            {
              tfOpName: "MatMul",
              dlOpName: "matMul",
              category: "matrices",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "transpose_a",
                  dlParamName: "transposeA",
                  type: "bool",
                  defaultValue: !1
                },
                {
                  tfParamName: "transpose_b",
                  dlParamName: "transposeB",
                  type: "bool",
                  defaultValue: !1
                },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "BatchMatMul",
              dlOpName: "matMul",
              category: "matrices",
              params: [
                { tfInputIndex: 0, dlParamName: "a", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "b", type: "tensor" },
                {
                  tfParamName: "adj_x",
                  dlParamName: "transposeA",
                  type: "bool",
                  defaultValue: !1
                },
                {
                  tfParamName: "adj_y",
                  dlParamName: "transposeB",
                  type: "bool",
                  defaultValue: !1
                },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Transpose",
              dlOpName: "transpose",
              category: "matrices",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "perm", type: "number[]" },
                {
                  tfParamName: "T",
                  dlParamName: "dtype",
                  type: "dtype",
                  notSupported: !0
                }
              ]
            }
          ],
          matrices = Object.freeze({ json: json$10 }),
          json$11 = [
            {
              tfOpName: "FusedBatchNorm",
              dlOpName: "batchNormalization",
              category: "normalization",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "scale", type: "tensor" },
                { tfInputIndex: 2, dlParamName: "offset", type: "tensor" },
                { tfInputIndex: 3, dlParamName: "mean", type: "tensor" },
                { tfInputIndex: 4, dlParamName: "variance", type: "tensor" },
                {
                  tfParamName: "epsilon",
                  dlParamName: "epsilon",
                  type: "number",
                  defaultValue: 0.001
                },
                {
                  tfParamName: "data_format",
                  dlParamName: "dataFormat",
                  type: "string",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "FusedBatchNormV2",
              dlOpName: "batchNormalization",
              category: "normalization",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "scale", type: "tensor" },
                { tfInputIndex: 2, dlParamName: "offset", type: "tensor" },
                { tfInputIndex: 3, dlParamName: "mean", type: "tensor" },
                { tfInputIndex: 4, dlParamName: "variance", type: "tensor" },
                {
                  tfParamName: "epsilon",
                  dlParamName: "epsilon",
                  type: "number",
                  defaultValue: 0.001
                },
                {
                  tfParamName: "data_format",
                  dlParamName: "dataFormat",
                  type: "string",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "LRN",
              dlOpName: "localResponseNormalization",
              category: "normalization",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "depth_radius",
                  dlParamName: "radius",
                  type: "number",
                  defaultValue: 5
                },
                {
                  tfParamName: "bias",
                  dlParamName: "bias",
                  type: "number",
                  defaultValue: 1
                },
                {
                  tfParamName: "alpha",
                  dlParamName: "alpha",
                  type: "number",
                  defaultValue: 1
                },
                {
                  tfParamName: "beta",
                  dlParamName: "beta",
                  type: "number",
                  defaultValue: 0.5
                }
              ]
            },
            {
              tfOpName: "Softmax",
              dlOpName: "softmax",
              category: "normalization",
              params: [{ tfInputIndex: 0, dlParamName: "x", type: "tensor" }]
            },
            {
              tfOpName: "LogSoftmax",
              dlOpName: "logSoftmax",
              category: "normalization",
              params: [{ tfInputIndex: 0, dlParamName: "x", type: "tensor" }]
            },
            {
              tfOpName: "SparseToDense",
              dlOpName: "sparseToDense",
              category: "normalization",
              params: [
                {
                  tfInputIndex: 0,
                  dlParamName: "sparseIndices",
                  type: "tensor"
                },
                {
                  tfInputIndex: 1,
                  dlParamName: "outputShape",
                  type: "number[]"
                },
                {
                  tfInputIndex: 2,
                  dlParamName: "sparseValues",
                  type: "tensor"
                },
                {
                  tfInputIndex: 3,
                  dlParamName: "defaultValue",
                  type: "tensor"
                },
                {
                  tfParamName: "validate_indices",
                  dlParamName: "validateIndices",
                  type: "bool",
                  defaultValue: !0,
                  notSupported: !0
                }
              ]
            }
          ],
          normalization = Object.freeze({ json: json$11 }),
          json$12 = [
            {
              tfOpName: "Max",
              dlOpName: "max",
              category: "reduction",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "axis", type: "number[]" },
                {
                  tfParamName: "keep_dims",
                  dlParamName: "keepDims",
                  type: "bool"
                }
              ]
            },
            {
              tfOpName: "Mean",
              dlOpName: "mean",
              category: "reduction",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "axis", type: "number[]" },
                {
                  tfParamName: "keep_dims",
                  dlParamName: "keepDims",
                  type: "bool"
                }
              ]
            },
            {
              tfOpName: "Min",
              dlOpName: "min",
              category: "reduction",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "axis", type: "number[]" },
                {
                  tfParamName: "keep_dims",
                  dlParamName: "keepDims",
                  type: "bool"
                }
              ]
            },
            {
              tfOpName: "Sum",
              dlOpName: "sum",
              category: "reduction",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "axis", type: "number[]" },
                {
                  tfParamName: "keep_dims",
                  dlParamName: "keepDims",
                  type: "bool"
                }
              ]
            },
            {
              tfOpName: "All",
              dlOpName: "all",
              category: "reduction",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "axis", type: "number[]" },
                {
                  tfParamName: "keep_dims",
                  dlParamName: "keepDims",
                  type: "bool"
                }
              ]
            },
            {
              tfOpName: "Any",
              dlOpName: "any",
              category: "reduction",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "axis", type: "number[]" },
                {
                  tfParamName: "keep_dims",
                  dlParamName: "keepDims",
                  type: "bool"
                }
              ]
            },
            {
              tfOpName: "ArgMax",
              dlOpName: "argMax",
              category: "reduction",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "axis", type: "number" }
              ]
            },
            {
              tfOpName: "ArgMin",
              dlOpName: "argMin",
              category: "reduction",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "axis", type: "number" }
              ]
            },
            {
              tfOpName: "Prod",
              dlOpName: "prod",
              category: "reduction",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "axis", type: "number[]" },
                {
                  tfParamName: "keep_dims",
                  dlParamName: "keepDims",
                  type: "bool"
                }
              ]
            }
          ],
          reduction = Object.freeze({ json: json$12 }),
          json$13 = [
            {
              tfOpName: "ConcatV2",
              dlOpName: "concat",
              category: "slice_join",
              params: [
                {
                  tfInputIndex: 0,
                  tfInputParamLength: 1,
                  dlParamName: "tensors",
                  type: "tensors"
                },
                { tfInputIndex: -1, dlParamName: "axis", type: "number" }
              ]
            },
            {
              tfOpName: "Concat",
              dlOpName: "concat",
              category: "slice_join",
              params: [
                {
                  tfInputIndex: 1,
                  tfInputParamLength: 1,
                  dlParamName: "tensors",
                  type: "tensors"
                },
                { tfInputIndex: 0, dlParamName: "axis", type: "number" }
              ]
            },
            {
              tfOpName: "GatherV2",
              dlOpName: "gather",
              category: "slice_join",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "indices", type: "tensor" },
                {
                  tfInputIndex: 2,
                  dlParamName: "axis",
                  type: "number",
                  defaultValue: 0
                }
              ]
            },
            {
              tfOpName: "Gather",
              dlOpName: "gather",
              category: "slice_join",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "indices", type: "tensor" },
                {
                  tfParamName: "axis",
                  dlParamName: "axis",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfParamName: "validate_indices",
                  dlParamName: "validateIndices",
                  type: "bool",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Reverse",
              dlOpName: "reverse",
              category: "slice_join",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfInputIndex: 1,
                  dlParamName: "dims",
                  type: "bool",
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "ReverseV2",
              dlOpName: "reverse",
              category: "slice_join",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "axis", type: "number[]" }
              ]
            },
            {
              tfOpName: "Slice",
              dlOpName: "slice",
              category: "slice_join",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "begin", type: "number[]" },
                { tfInputIndex: 2, dlParamName: "size", type: "number[]" }
              ]
            },
            {
              tfOpName: "StridedSlice",
              dlOpName: "stridedSlice",
              category: "slice_join",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "begin", type: "number[]" },
                { tfInputIndex: 2, dlParamName: "end", type: "number[]" },
                { tfInputIndex: 3, dlParamName: "strides", type: "number[]" },
                {
                  tfParamName: "begin_mask",
                  dlParamName: "beginMask",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfParamName: "end_mask",
                  dlParamName: "endMask",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfParamName: "new_axis_mask",
                  dlParamName: "newAxisMask",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfParamName: "ellipsis_mask",
                  dlParamName: "ellipsisMask",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfParamName: "shrink_axis_mask",
                  dlParamName: "shrinkAxisMask",
                  type: "number",
                  defaultValue: 0
                }
              ]
            },
            {
              tfOpName: "Pack",
              dlOpName: "stack",
              category: "slice_join",
              params: [
                {
                  tfInputIndex: 0,
                  tfInputParamLength: 0,
                  dlParamName: "tensors",
                  type: "tensors"
                },
                {
                  tfParamName: "axis",
                  dlParamName: "axis",
                  type: "number",
                  defaultValue: 0
                }
              ]
            },
            {
              tfOpName: "Unpack",
              dlOpName: "unstack",
              category: "slice_join",
              params: [
                {
                  tfInputIndex: 0,
                  tfInputParamLength: 0,
                  dlParamName: "tensor",
                  type: "tensor"
                },
                {
                  tfParamName: "axis",
                  dlParamName: "axis",
                  type: "number",
                  defaultValue: 0
                },
                {
                  tfParamName: "num",
                  dlParamName: "num",
                  type: "number",
                  defaultValue: 0,
                  notSupported: !0
                }
              ]
            },
            {
              tfOpName: "Tile",
              dlOpName: "tile",
              category: "slice_join",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "reps", type: "number[]" }
              ]
            },
            {
              tfOpName: "Split",
              dlOpName: "split",
              category: "slice_join",
              params: [
                {
                  tfInputIndex: 0,
                  dlParamName: "axis",
                  type: "number",
                  defaultValue: 0
                },
                { tfInputIndex: 1, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "num_split",
                  dlParamName: "numOrSizeSplits",
                  type: "number",
                  defaultValue: 1
                }
              ]
            },
            {
              tfOpName: "SplitV",
              dlOpName: "split",
              category: "slice_join",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfInputIndex: 1,
                  dlParamName: "numOrSizeSplits",
                  type: "number[]"
                },
                {
                  tfInputIndex: 2,
                  dlParamName: "axis",
                  type: "number",
                  defaultValue: 0
                }
              ]
            },
            {
              tfOpName: "ScatterNd",
              dlOpName: "scatterNd",
              category: "slice_join",
              params: [
                { tfInputIndex: 0, dlParamName: "indices", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "values", type: "tensor" },
                { tfInputIndex: 2, dlParamName: "shape", type: "number[]" }
              ]
            },
            {
              tfOpName: "GatherNd",
              dlOpName: "gatherNd",
              category: "slice_join",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "indices", type: "tensor" }
              ]
            },
            {
              tfOpName: "SparseToDense",
              dlOpName: "sparseToDense",
              category: "slice_join",
              params: [
                {
                  tfInputIndex: 0,
                  dlParamName: "sparseIndices",
                  type: "tensor"
                },
                {
                  tfInputIndex: 1,
                  dlParamName: "outputShape",
                  type: "number[]"
                },
                {
                  tfInputIndex: 2,
                  dlParamName: "sparseValues",
                  type: "tensor"
                },
                {
                  tfInputIndex: 3,
                  dlParamName: "defaultValue",
                  type: "tensor"
                },
                {
                  tfParamName: "validate_indices",
                  dlParamName: "validateIndices",
                  type: "bool",
                  defaultValue: !1,
                  notSupported: !0
                }
              ]
            }
          ],
          sliceJoin = Object.freeze({ json: json$13 }),
          json$14 = [
            {
              tfOpName: "FFT",
              dlOpName: "fft",
              category: "spectral",
              params: [{ tfInputIndex: 0, dlParamName: "x", type: "tensor" }]
            },
            {
              tfOpName: "IFFT",
              dlOpName: "ifft",
              category: "spectral",
              params: [{ tfInputIndex: 0, dlParamName: "x", type: "tensor" }]
            },
            {
              tfOpName: "RFFT",
              dlOpName: "rfft",
              category: "spectral",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfInputIndex: 1,
                  dlParamName: "fft_length",
                  type: "number",
                  unsupported: !0
                }
              ]
            },
            {
              tfOpName: "IRFFT",
              dlOpName: "irfft",
              category: "spectral",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfInputIndex: 1,
                  dlParamName: "fft_length",
                  type: "number",
                  unsupported: !0
                }
              ]
            }
          ],
          spectral = Object.freeze({ json: json$14 }),
          json$15 = [
            {
              tfOpName: "Cast",
              dlOpName: "cast",
              category: "transformation",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "SrcT",
                  dlParamName: "sdtype",
                  type: "dtype",
                  notSupported: !0
                },
                { tfParamName: "DstT", dlParamName: "dtype", type: "dtype" }
              ]
            },
            {
              tfOpName: "ExpandDims",
              dlOpName: "expandDims",
              category: "transformation",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfInputIndex: 1,
                  tfParamNameDeprecated: "dim",
                  dlParamName: "axis",
                  type: "number"
                }
              ]
            },
            {
              tfOpName: "Pad",
              dlOpName: "pad",
              category: "transformation",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "padding", type: "number[]" },
                {
                  tfParamName: "constant_value",
                  dlParamName: "constantValue",
                  type: "number",
                  defaultValue: 0
                }
              ]
            },
            {
              tfOpName: "PadV2",
              dlOpName: "pad",
              category: "transformation",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "padding", type: "number[]" },
                {
                  tfInputIndex: 2,
                  dlParamName: "constantValue",
                  type: "number",
                  defaultValue: 0
                }
              ]
            },
            {
              tfOpName: "Reshape",
              dlOpName: "reshape",
              category: "transformation",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                { tfInputIndex: 1, dlParamName: "shape", type: "number[]" }
              ]
            },
            {
              tfOpName: "Squeeze",
              dlOpName: "squeeze",
              category: "transformation",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "axis",
                  tfParamNameDeprecated: "squeeze_dims",
                  dlParamName: "axis",
                  type: "number[]"
                }
              ]
            },
            {
              tfOpName: "SpaceToBatchND",
              dlOpName: "spaceToBatchND",
              category: "transformation",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfInputIndex: 1,
                  dlParamName: "blockShape",
                  type: "number[]"
                },
                { tfInputIndex: 2, dlParamName: "paddings", type: "number[]" }
              ]
            },
            {
              tfOpName: "BatchToSpaceND",
              dlOpName: "batchToSpaceND",
              category: "transformation",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfInputIndex: 1,
                  dlParamName: "blockShape",
                  type: "number[]"
                },
                { tfInputIndex: 2, dlParamName: "crops", type: "number[]" }
              ]
            },
            {
              tfOpName: "DepthToSpace",
              dlOpName: "depthToSpace",
              category: "transformation",
              params: [
                { tfInputIndex: 0, dlParamName: "x", type: "tensor" },
                {
                  tfParamName: "block_size",
                  dlParamName: "blockSize",
                  type: "number"
                },
                {
                  tfParamName: "data_format",
                  dlParamName: "dataFormat",
                  type: "string"
                }
              ]
            }
          ],
          transformation = Object.freeze({ json: json$15 }),
          CONTROL_FLOW_OPS = [
            "Switch",
            "Merge",
            "Enter",
            "Exit",
            "NextIteration"
          ],
          DYNAMIC_SHAPE_OPS = [
            "NonMaxSuppressionV2",
            "NonMaxSuppressionV3",
            "Where"
          ],
          OperationMapper = (function() {
            function t() {
              var t = [
                  arithmetic,
                  basicMath,
                  control,
                  convolution,
                  creation,
                  dynamic,
                  evaluation,
                  logical,
                  image$1,
                  graph,
                  matrices,
                  normalization,
                  reduction,
                  sliceJoin,
                  spectral,
                  transformation
                ],
                e = [].concat.apply(
                  [],
                  t.map(function(t) {
                    return t.json;
                  })
                );
              this.opMappers = e.reduce(function(t, e) {
                return (t[e.tfOpName] = e), t;
              }, {});
            }
            return (
              Object.defineProperty(t, "Instance", {
                get: function() {
                  return this._instance || (this._instance = new this());
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.isControlFlow = function(t) {
                return CONTROL_FLOW_OPS.some(function(e) {
                  return e === t.op;
                });
              }),
              (t.prototype.isDynamicShape = function(t) {
                return DYNAMIC_SHAPE_OPS.some(function(e) {
                  return e === t.op;
                });
              }),
              (t.prototype.transformGraph = function(t) {
                var e = this,
                  n = !1,
                  r = !1,
                  i = [],
                  a = [],
                  o = t.node.reduce(function(t, o) {
                    return (
                      (t[o.name] = e.mapNode(o)),
                      e.isControlFlow(o) && (n = !0),
                      e.isDynamicShape(o) && (r = !0),
                      "Placeholder" === o.op && i.push(t[o.name]),
                      "Const" === o.op && a.push(t[o.name]),
                      t
                    );
                  }, {}),
                  s = [],
                  u = [];
                return (
                  Object.keys(o).forEach(function(t) {
                    var e = o[t];
                    e.inputNames.forEach(function(t) {
                      var n = getNodeNameAndIndex(t)[0];
                      e.inputs.push(o[n]), o[n].children.push(e);
                    }),
                      0 === e.inputs.length && s.push(e);
                  }),
                  Object.keys(o).forEach(function(t) {
                    var e = o[t];
                    0 === e.children.length && u.push(e);
                  }),
                  {
                    nodes: o,
                    inputs: s,
                    outputs: u,
                    weights: a,
                    placeholders: i,
                    withControlFlow: n,
                    withDynamicShape: r
                  }
                );
              }),
              (t.prototype.mapNode = function(t) {
                var e = this,
                  n = this.opMappers[t.op];
                if (void 0 === n)
                  throw new Error("Tensorflow Op is not supported: " + t.op);
                var r = {
                  name: t.name,
                  op: n.dlOpName,
                  category: n.category,
                  inputNames: (t.input || []).map(function(t) {
                    return t.startsWith("^") ? t.substr(1) : t;
                  }),
                  inputs: [],
                  children: [],
                  params: {}
                };
                return (
                  n.params &&
                    (r.params = n.params.reduce(function(n, r) {
                      var i = r.tfInputIndex,
                        a = r.tfInputParamLength,
                        o = r.type,
                        s = void 0;
                      if (void 0 === i)
                        switch (r.type) {
                          case "string":
                            void 0 ===
                              (s = e.getStringParam(
                                t.attr,
                                r.tfParamName,
                                r.defaultValue
                              )) &&
                              r.tfParamNameDeprecated &&
                              (s = e.getStringParam(
                                t.attr,
                                r.tfParamNameDeprecated,
                                r.defaultValue
                              ));
                            break;
                          case "number":
                            void 0 ===
                              (s = e.getNumberParam(
                                t.attr,
                                r.tfParamName,
                                r.defaultValue || 0
                              )) &&
                              r.tfParamNameDeprecated &&
                              (s = e.getNumberParam(
                                t.attr,
                                r.tfParamNameDeprecated,
                                r.defaultValue
                              ));
                            break;
                          case "number[]":
                            void 0 ===
                              (s = e.getNumericArrayParam(
                                t.attr,
                                r.tfParamName,
                                r.defaultValue
                              )) &&
                              r.tfParamNameDeprecated &&
                              (s = e.getNumericArrayParam(
                                t.attr,
                                r.tfParamNameDeprecated,
                                r.defaultValue
                              ));
                            break;
                          case "bool":
                            void 0 ===
                              (s = e.getBoolParam(
                                t.attr,
                                r.tfParamName,
                                r.defaultValue
                              )) &&
                              r.tfParamNameDeprecated &&
                              (s = e.getBoolParam(
                                t.attr,
                                r.tfParamNameDeprecated,
                                r.defaultValue
                              ));
                            break;
                          case "shape":
                            void 0 ===
                              (s = e.getTensorShapeParam(
                                t.attr,
                                r.tfParamName,
                                r.defaultValue
                              )) &&
                              r.tfParamNameDeprecated &&
                              (s = e.getTensorShapeParam(
                                t.attr,
                                r.tfParamNameDeprecated,
                                r.defaultValue
                              ));
                            break;
                          case "dtype":
                            void 0 ===
                              (s = e.getDtypeParam(
                                t.attr,
                                r.tfParamName,
                                r.defaultValue
                              )) &&
                              r.tfParamNameDeprecated &&
                              (s = e.getDtypeParam(
                                t.attr,
                                r.tfParamNameDeprecated,
                                r.defaultValue
                              ));
                            break;
                          case "tensor":
                          case "tensors":
                            break;
                          default:
                            throw new Error(
                              "Unsupported param type: " +
                                r.type +
                                " for op: " +
                                t.op
                            );
                        }
                      return (
                        (n[r.dlParamName] = {
                          value: s,
                          inputIndex: i,
                          type: o,
                          inputParamLength: a
                        }),
                        n
                      );
                    }, {})),
                  r
                );
              }),
              (t.prototype.getStringParam = function(t, e, n, r) {
                void 0 === r && (r = !1);
                var i = t[e];
                if (void 0 !== i) {
                  var a = String.fromCharCode.apply(null, i.s);
                  return r ? a : a.toLowerCase();
                }
                return n;
              }),
              (t.prototype.getBoolParam = function(t, e, n) {
                var r = t[e];
                return r ? r.b : n;
              }),
              (t.prototype.getNumberParam = function(t, e, n) {
                var r = t[e],
                  i = r ? r[r.value] : n;
                return "number" == typeof i ? i : i.toInt();
              }),
              (t.prototype.getDtypeParam = function(t, e, n) {
                var r = t[e];
                if (r && r.type)
                  switch (r.type) {
                    case compiled_api_1.DataType.DT_FLOAT:
                      return "float32";
                    case compiled_api_1.DataType.DT_INT32:
                      return "int32";
                    case compiled_api_1.DataType.DT_BOOL:
                      return "bool";
                    default:
                      return n;
                  }
                return n;
              }),
              (t.prototype.getTensorShapeParam = function(t, e, n) {
                var r = t[e];
                return r && r.shape
                  ? r.shape.dim.map(function(t) {
                      return "number" == typeof t.size
                        ? t.size
                        : t.size.toInt();
                    })
                  : n;
              }),
              (t.prototype.getNumericArrayParam = function(t, e, n) {
                var r = t[e];
                return r
                  ? (r.list.f && r.list.f.length ? r.list.f : r.list.i).map(
                      function(t) {
                        return "number" == typeof t ? t : t.toInt();
                      }
                    )
                  : n;
              }),
              t
            );
          })(),
          executeOp = function(t, e, n) {
            switch (t.op) {
              case "add":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["g"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "addN":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["h"]
                  )(getParamValue("tensors", t, e, n))
                ];
              case "mod":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Fb"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "mul":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Hb"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "div":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Q"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "floorDiv":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["bb"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "sub":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Dc"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "minimum":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Eb"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "maximum":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Ab"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "pow":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Qb"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "squaredDifference":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["yc"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              default:
                throw TypeError("Node type " + t.op + " is not implemented");
            }
          },
          executeOp$1 = function(t, e, n) {
            switch (t.op) {
              case "abs":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["d"]
                  )(getParamValue("x", t, e, n))
                ];
              case "acos":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["e"]
                  )(getParamValue("x", t, e, n))
                ];
              case "acosh":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["f"]
                  )(getParamValue("x", t, e, n))
                ];
              case "asin":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["m"]
                  )(getParamValue("x", t, e, n))
                ];
              case "asinh":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["n"]
                  )(getParamValue("x", t, e, n))
                ];
              case "atan":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["o"]
                  )(getParamValue("x", t, e, n))
                ];
              case "atan2":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["p"]
                  )(getParamValue("x", t, e, n), getParamValue("y", t, e, n))
                ];
              case "atanh":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["q"]
                  )(getParamValue("x", t, e, n))
                ];
              case "ceil":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["z"]
                  )(getParamValue("x", t, e, n))
                ];
              case "cos":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["K"]
                  )(getParamValue("x", t, e, n))
                ];
              case "cosh":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["L"]
                  )(getParamValue("x", t, e, n))
                ];
              case "elu":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["R"]
                  )(getParamValue("x", t, e, n))
                ];
              case "erf":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["T"]
                  )(getParamValue("x", t, e, n))
                ];
              case "exp":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["U"]
                  )(getParamValue("x", t, e, n))
                ];
              case "expm1":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["W"]
                  )(getParamValue("x", t, e, n))
                ];
              case "floor":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["ab"]
                  )(getParamValue("x", t, e, n))
                ];
              case "log":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["rb"]
                  )(getParamValue("x", t, e, n))
                ];
              case "log1p":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["sb"]
                  )(getParamValue("x", t, e, n))
                ];
              case "neg":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Jb"]
                  )(getParamValue("x", t, e, n))
                ];
              case "reciprocal":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Wb"]
                  )(getParamValue("x", t, e, n))
                ];
              case "relu":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Xb"]
                  )(getParamValue("x", t, e, n))
                ];
              case "round":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["bc"]
                  )(getParamValue("x", t, e, n))
                ];
              case "selu":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["ec"]
                  )(getParamValue("x", t, e, n))
                ];
              case "sigmoid":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["ic"]
                  )(getParamValue("x", t, e, n))
                ];
              case "sin":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["kc"]
                  )(getParamValue("x", t, e, n))
                ];
              case "sign":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["jc"]
                  )(getParamValue("x", t, e, n))
                ];
              case "sinh":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["lc"]
                  )(getParamValue("x", t, e, n))
                ];
              case "softplus":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["sc"]
                  )(getParamValue("x", t, e, n))
                ];
              case "sqrt":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["wc"]
                  )(getParamValue("x", t, e, n))
                ];
              case "square":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["xc"]
                  )(getParamValue("x", t, e, n))
                ];
              case "tanh":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Gc"]
                  )(getParamValue("x", t, e, n))
                ];
              case "tan":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Fc"]
                  )(getParamValue("x", t, e, n))
                ];
              case "clipByValue":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["A"]
                  )(
                    getParamValue("x", t, e, n),
                    getParamValue("clipValueMin", t, e, n),
                    getParamValue("clipValueMax", t, e, n)
                  )
                ];
              case "rsqrt":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Q"]
                  )(
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["cc"]
                    )(1, "float32"),
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["wc"]
                    )(getTensor(t.inputNames[0], e, n))
                  )
                ];
              case "prod":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Sb"]
                  )(getParamValue("x", t, e, n), getParamValue("axes", t, e, n))
                ];
              case "leakyRelu":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["lb"]
                  )(
                    getParamValue("x", t, e, n),
                    getParamValue("alpha", t, e, n)
                  )
                ];
              default:
                throw TypeError("Node type " + t.op + " is not implemented");
            }
          },
          TensorArray = (function() {
            function t(e, n, r, i, a, o, s) {
              (this.name = e),
                (this.dtype = n),
                (this.maxSize = r),
                (this.elementShape = i),
                (this.identicalElementShapes = a),
                (this.dynamicSize = o),
                (this.clearAfterRead = s),
                (this.tensors = []),
                (this.closed_ = !1),
                (this.id = t.nextId++);
            }
            return (
              Object.defineProperty(t.prototype, "closed", {
                get: function() {
                  return this.closed_;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.clearAndClose = function() {
                this.tensors.forEach(function(t) {
                  return t.tensor.dispose();
                }),
                  (this.tensors = []),
                  (this.closed_ = !0);
              }),
              (t.prototype.size = function() {
                return this.tensors.length;
              }),
              (t.prototype.read = function(t) {
                if (this.closed_)
                  throw new Error(
                    "TensorArray " + this.name + " has already been closed."
                  );
                if (t < 0 || t >= this.tensors.length)
                  throw new Error(
                    "Tried to read from index " +
                      t +
                      ", but array size is: " +
                      this.tensors.length
                  );
                var e = this.tensors[t];
                if (e.cleared)
                  throw new Error(
                    "TensorArray " +
                      this.name +
                      ": Could not read index " +
                      t +
                      " twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?)."
                  );
                return (
                  this.clearAfterRead && (e.cleared = !0),
                  (e.read = !0),
                  e.tensor
                );
              }),
              (t.prototype.readMany = function(t) {
                var e = this;
                return t.map(function(t) {
                  return e.read(t);
                });
              }),
              (t.prototype.write = function(t, e) {
                if (this.closed_)
                  throw new Error(
                    "TensorArray " + this.name + " has already been closed."
                  );
                if (t < 0 || (!this.dynamicSize && t >= this.maxSize))
                  throw new Error(
                    "Tried to write to index " +
                      t +
                      ", but array is not resizeable and size is: " +
                      this.maxSize
                  );
                var n = this.tensors[t] || {};
                if (e.dtype !== this.dtype)
                  throw new Error(
                    "TensorArray " +
                      this.name +
                      ": Could not write to TensorArray index " +
                      t +
                      ",\n          because the value dtype is " +
                      e.dtype +
                      ", but TensorArray dtype is " +
                      this.dtype +
                      "."
                  );
                if (
                  (0 !== this.size() ||
                    (null != this.elementShape &&
                      0 !== this.elementShape.length) ||
                    (this.elementShape = e.shape),
                  this.assertShapesMatch(
                    this.elementShape,
                    e.shape,
                    "TensorArray " +
                      this.name +
                      ": Could not write to TensorArray index " +
                      t +
                      "."
                  ),
                  n && n.read)
                )
                  throw new Error(
                    "TensorArray " +
                      this.name +
                      ": Could not write to TensorArray index " +
                      t +
                      ", because it has already been read."
                  );
                if (n && n.written)
                  throw new Error(
                    "TensorArray " +
                      this.name +
                      ": Could not write to TensorArray index " +
                      t +
                      ", because it has already been written."
                  );
                (n.tensor = e), (n.written = !0), (this.tensors[t] = n);
              }),
              (t.prototype.writeMany = function(t, e) {
                var n = this;
                if (t.length !== e.length)
                  throw new Error(
                    "TensorArray " +
                      this.name +
                      ": could not write multiple tensors,because the index size: " +
                      t.length +
                      " is not the same as tensors size: " +
                      e.length +
                      "."
                  );
                t.forEach(function(t, r) {
                  return n.write(t, e[r]);
                });
              }),
              (t.prototype.gather = function(t, e) {
                if (e && e !== this.dtype)
                  throw new Error(
                    "TensorArray dtype is " +
                      this.dtype +
                      " but gather requested dtype " +
                      e
                  );
                if (!t) {
                  t = [];
                  for (var n = 0; n < this.size(); n++) t.push(n);
                }
                if (0 === t.length)
                  return Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Hc"]
                  )([], [0].concat(this.elementShape));
                var r = this.readMany(t);
                return (
                  this.assertShapesMatch(
                    this.elementShape,
                    r[0].shape,
                    "TensorArray shape mismatch: "
                  ),
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Ac"]
                  )(r, 0)
                );
              }),
              (t.prototype.concat = function(t) {
                if (t && t !== this.dtype)
                  throw new Error(
                    "TensorArray dtype is " +
                      this.dtype +
                      " but concat requested dtype " +
                      t
                  );
                if (0 === this.size())
                  return Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Hc"]
                  )([], [0].concat(this.elementShape));
                for (var e = [], n = 0; n < this.size(); n++) e.push(n);
                var r = this.readMany(e);
                return (
                  this.assertShapesMatch(
                    this.elementShape,
                    r[0].shape,
                    "TensorArray shape mismatch: tensor array shape (" +
                      this.elementShape +
                      ") vs first tensor shape (" +
                      r[0].shape +
                      ")"
                  ),
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["C"]
                  )(r, 0)
                );
              }),
              (t.prototype.scatter = function(t, e) {
                if (e.dtype !== this.dtype)
                  throw new Error(
                    "TensorArray dtype is " +
                      this.dtype +
                      " but tensor has dtype " +
                      e.dtype
                  );
                if (t.length !== e.shape[0])
                  throw new Error(
                    "Expected len(indices) == tensor.shape[0], but saw: " +
                      t.length +
                      " vs. " +
                      e.shape[0]
                  );
                var n = Math.max.apply(Math, t);
                if (!this.dynamicSize && n >= this.maxSize)
                  throw new Error(
                    "Max index must be < array size (" +
                      n +
                      "  vs. " +
                      this.maxSize +
                      ")"
                  );
                this.writeMany(
                  t,
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Pc"]
                  )(e, 0)
                );
              }),
              (t.prototype.split = function(t, e) {
                var n = this;
                if (e.dtype !== this.dtype)
                  throw new Error(
                    "TensorArray dtype is " +
                      this.dtype +
                      " but tensor has dtype " +
                      e.dtype
                  );
                var r = 0,
                  i = t.map(function(t) {
                    return (r += t);
                  });
                if (r !== e.shape[0])
                  throw new Error(
                    "Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        " +
                      r +
                      ", and tensor's shape is: " +
                      e.shape
                  );
                if (!this.dynamicSize && t.length !== this.maxSize)
                  throw new Error(
                    "TensorArray's size is not equal to the size of lengths (" +
                      this.maxSize +
                      " vs. " +
                      t.length +
                      "), and the TensorArray is not marked as dynamically resizeable"
                  );
                var a = 0 === r ? 0 : e.size / r,
                  o = [];
                Object(
                  _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Jc"]
                )(function() {
                  e = e.reshape([1, r, a]);
                  for (var s = 0; s < t.length; ++s) {
                    var u = [0, 0 === s ? 0 : i[s - 1], 0],
                      c = [1, t[s], a];
                    o[s] = Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["mc"]
                    )(e, u, c).reshape(n.elementShape);
                  }
                  return o;
                });
                for (var s = [], u = 0; u < t.length; u++) s[u] = u;
                this.writeMany(s, o);
              }),
              (t.prototype.assertShapesMatch = function(t, e, n) {
                void 0 === n && (n = ""),
                  _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                    "Qc"
                  ].assert(
                    this.arraysEqual(t, e),
                    n + " Shapes " + t + " and " + e + " must match"
                  );
              }),
              (t.prototype.arraysEqual = function(t, e) {
                if (t.length !== e.length) return !1;
                for (var n = 0; n < t.length; n++)
                  if (-1 !== t[n] && -1 !== e[n] && t[n] !== e[n]) return !1;
                return !0;
              }),
              (t.nextId = 0),
              t
            );
          })();
        function executeOp$2(t, e, n) {
          return __awaiter(this, void 0, void 0, function() {
            var r,
              i,
              a,
              o,
              s,
              u,
              c,
              l,
              f,
              h,
              p,
              d,
              m,
              v,
              y,
              g,
              b,
              w,
              _,
              x,
              E,
              S,
              N,
              O,
              I,
              C,
              A,
              k,
              P,
              T,
              R,
              D,
              M,
              j,
              L;
            return __generator(this, function(B) {
              switch (B.label) {
                case 0:
                  switch (t.op) {
                    case "loopCond":
                      return [3, 1];
                    case "switch":
                      return [3, 2];
                    case "merge":
                      return [3, 4];
                    case "enter":
                      return [3, 5];
                    case "exit":
                      return [3, 6];
                    case "nextIteration":
                      return [3, 7];
                    case "tensorArray":
                      return [3, 8];
                    case "tensorArrayWrite":
                      return [3, 9];
                    case "tensorArrayRead":
                      return [3, 10];
                    case "tensorArrayGather":
                      return [3, 11];
                    case "tensorArrayScatter":
                      return [3, 12];
                    case "tensorArrayConcat":
                      return [3, 13];
                    case "tensorArraySplit":
                      return [3, 14];
                    case "tensorArraySize":
                      return [3, 15];
                    case "tensorArrayClose":
                      return [3, 16];
                  }
                  return [3, 17];
                case 1:
                  return [2, [getParamValue("pred", t, e, n).clone()]];
                case 2:
                  return (
                    (r = getParamValue("pred", t, e, n)),
                    (i = getParamValue("data", t, e, n)),
                    [4, r.data()]
                  );
                case 3:
                  return [
                    2,
                    B.sent()[0] ? [void 0, i.clone()] : [i.clone(), void 0]
                  ];
                case 4:
                  return [
                    2,
                    (a = t.inputNames.find(function(t) {
                      return void 0 !== getTensor(t, e, n);
                    }))
                      ? [getTensor(a, e, n).clone()]
                      : void 0
                  ];
                case 5:
                  return (
                    (o = getParamValue("frameName", t, e, n)),
                    (s = getParamValue("tensor", t, e, n)),
                    n.enterFrame(o),
                    [2, [s.clone()]]
                  );
                case 6:
                  return (
                    (u = getParamValue("tensor", t, e, n)),
                    n.exitFrame(),
                    [2, [u.clone()]]
                  );
                case 7:
                  return (
                    (c = getParamValue("tensor", t, e, n)),
                    n.nextIteration(),
                    [2, [c.clone()]]
                  );
                case 8:
                  return (
                    (l = getParamValue("size", t, e, n)),
                    (f = getParamValue("dtype", t, e, n)),
                    (h = getParamValue("elementShape", t, e, n)),
                    (p = getParamValue("dynamicSize", t, e, n)),
                    (d = getParamValue("clearAfterRead", t, e, n)),
                    (m = getParamValue("identicalElementShapes", t, e, n)),
                    (v = getParamValue("name", t, e, n)),
                    (y = new TensorArray(v, f, l, h, m, p, d)),
                    n.addTensorArray(y),
                    [
                      2,
                      [
                        Object(
                          _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                            "cc"
                          ]
                        )(y.id),
                        Object(
                          _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                            "cc"
                          ]
                        )(1)
                      ]
                    ]
                  );
                case 9:
                  return (
                    (g = getParamValue("tensorArrayId", t, e, n)),
                    (b = getParamValue("index", t, e, n)),
                    (w = getParamValue("tensor", t, e, n)),
                    n.getTensorArray(g).write(b, w),
                    [
                      2,
                      [
                        Object(
                          _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                            "cc"
                          ]
                        )(1)
                      ]
                    ]
                  );
                case 10:
                  return (
                    (_ = getParamValue("tensorArrayId", t, e, n)),
                    (x = getParamValue("index", t, e, n)),
                    [2, [n.getTensorArray(_).read(x)]]
                  );
                case 11:
                  return (
                    (E = getParamValue("tensorArrayId", t, e, n)),
                    (S = getParamValue("indices", t, e, n)),
                    (N = getParamValue("dtype", t, e, n)),
                    [2, [n.getTensorArray(E).gather(S, N)]]
                  );
                case 12:
                  return (
                    (O = getParamValue("tensorArrayId", t, e, n)),
                    (I = getParamValue("indices", t, e, n)),
                    (C = getParamValue("tensor", t, e, n)),
                    n.getTensorArray(O).scatter(I, C),
                    [
                      2,
                      [
                        Object(
                          _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                            "cc"
                          ]
                        )(1)
                      ]
                    ]
                  );
                case 13:
                  return (
                    (A = getParamValue("tensorArrayId", t, e, n)),
                    (k = n.getTensorArray(A)),
                    (P = getParamValue("dtype", t, e, n)),
                    [2, [k.concat(P)]]
                  );
                case 14:
                  return (
                    (T = getParamValue("tensorArrayId", t, e, n)),
                    (R = getParamValue("tensor", t, e, n)),
                    (D = getParamValue("lengths", t, e, n)),
                    n.getTensorArray(T).split(D, R),
                    [
                      2,
                      [
                        Object(
                          _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                            "cc"
                          ]
                        )(1)
                      ]
                    ]
                  );
                case 15:
                  return (
                    (M = getParamValue("tensorArrayId", t, e, n)),
                    (j = n.getTensorArray(M)),
                    [
                      2,
                      [
                        Object(
                          _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                            "cc"
                          ]
                        )(j.size(), "int32")
                      ]
                    ]
                  );
                case 16:
                  return (
                    (L = getParamValue("tensorArrayId", t, e, n)),
                    n.getTensorArray(L).clearAndClose(),
                    [2, []]
                  );
                case 17:
                  throw TypeError("Node type " + t.op + " is not implemented");
              }
            });
          });
        }
        var executeOp$3 = function(t, e, n) {
            switch (t.op) {
              case "conv1d":
                var r = getParamValue("stride", t, e, n),
                  i = getParamValue("pad", t, e, n),
                  a = getParamValue("dataFormat", t, e, n).toUpperCase(),
                  o = getParamValue("dilation", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["H"]
                  )(
                    getParamValue("x", t, e, n),
                    getParamValue("filter", t, e, n),
                    r,
                    i,
                    a,
                    o
                  )
                ];
              case "conv2d":
                (r = getParamValue("strides", t, e, n)),
                  (i = getParamValue("pad", t, e, n)),
                  (a = getParamValue("dataFormat", t, e, n).toUpperCase());
                var s = getParamValue("dilations", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["I"]
                  )(
                    getParamValue("x", t, e, n),
                    getParamValue("filter", t, e, n),
                    [r[1], r[2]],
                    i,
                    a,
                    [s[0], s[1]]
                  )
                ];
              case "conv2dTranspose":
                var u = getParamValue("outputShape", t, e, n);
                return (
                  (r = getParamValue("strides", t, e, n)),
                  (i = getParamValue("pad", t, e, n)),
                  [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["J"]
                    )(
                      getParamValue("x", t, e, n),
                      getParamValue("filter", t, e, n),
                      u,
                      [r[1], r[2]],
                      i
                    )
                  ]
                );
              case "depthwiseConv2d":
                return (
                  (r = getParamValue("strides", t, e, n)),
                  (i = getParamValue("pad", t, e, n)),
                  (s = getParamValue("dilations", t, e, n)),
                  (a = getParamValue("dataFormat", t, e, n).toUpperCase()),
                  [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["O"]
                    )(
                      getParamValue("input", t, e, n),
                      getParamValue("filter", t, e, n),
                      [r[1], r[2]],
                      i,
                      a,
                      [s[0], s[1]]
                    )
                  ]
                );
              case "avgPool":
                (r = getParamValue("strides", t, e, n)),
                  (i = getParamValue("pad", t, e, n));
                var c = getParamValue("kernelSize", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["r"]
                  )(getParamValue("x", t, e, n), [c[1], c[2]], [r[1], r[2]], i)
                ];
              case "maxPool":
                return (
                  (r = getParamValue("strides", t, e, n)),
                  (i = getParamValue("pad", t, e, n)),
                  (c = getParamValue("kernelSize", t, e, n)),
                  [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["zb"]
                    )(
                      getParamValue("x", t, e, n),
                      [c[1], c[2]],
                      [r[1], r[2]],
                      i
                    )
                  ]
                );
              default:
                throw TypeError("Node type " + t.op + " is not implemented");
            }
          },
          executeOp$4 = function(t, e, n) {
            switch (t.op) {
              case "fill":
                var r = getParamValue("shape", t, e, n),
                  i = getParamValue("dtype", t, e, n),
                  a = getParamValue("value", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Z"]
                  )(r, a, i)
                ];
              case "linspace":
                var o = getParamValue("start", t, e, n),
                  s = getParamValue("stop", t, e, n),
                  u = getParamValue("num", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["pb"]
                  )(o, s, u)
                ];
              case "oneHot":
                var c = getParamValue("indices", t, e, n),
                  l = getParamValue("depth", t, e, n),
                  f = getParamValue("onValue", t, e, n),
                  h = getParamValue("offValue", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Mb"]
                  )(c, l, f, h)
                ];
              case "ones":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Nb"]
                  )(
                    getParamValue("shape", t, e, n),
                    getParamValue("dtype", t, e, n)
                  )
                ];
              case "onesLike":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Ob"]
                  )(getParamValue("x", t, e, n))
                ];
              case "randomUniform":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Ub"]
                  )(
                    getParamValue("shape", t, e, n),
                    getParamValue("minval", t, e, n),
                    getParamValue("maxval", t, e, n),
                    getParamValue("dtype", t, e, n)
                  )
                ];
              case "range":
                o = getParamValue("start", t, e, n);
                var p = getParamValue("stop", t, e, n),
                  d = getParamValue("step", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Vb"]
                  )(o, p, d, getParamValue("dtype", t, e, n))
                ];
              case "truncatedNormal":
                r = getParamValue("shape", t, e, n);
                var m = getParamValue("mean", t, e, n),
                  v = getParamValue("stdDev", t, e, n),
                  y = getParamValue("seed", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Oc"]
                  )(r, m, v, getParamValue("dtype", t, e, n), y)
                ];
              case "zeros":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Vc"]
                  )(
                    getParamValue("shape", t, e, n),
                    getParamValue("dtype", t, e, n)
                  )
                ];
              case "zerosLike":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Wc"]
                  )(getParamValue("x", t, e, n))
                ];
              default:
                throw TypeError("Node type " + t.op + " is not implemented");
            }
          };
        function executeOp$5(t, e, n) {
          return __awaiter(this, void 0, void 0, function() {
            var r, i, a, o, s;
            return __generator(this, function(u) {
              switch (u.label) {
                case 0:
                  switch (t.op) {
                    case "nonMaxSuppression":
                      return [3, 1];
                    case "whereAsync":
                      return [3, 3];
                    case "setdiff1dAsync":
                      return [3, 5];
                  }
                  return [3, 7];
                case 1:
                  return (
                    (r = getParamValue("boxes", t, e, n)),
                    (i = getParamValue("scores", t, e, n)),
                    (a = getParamValue("maxOutputSize", t, e, n)),
                    (o = getParamValue("iouThreshold", t, e, n)),
                    (s = getParamValue("scoreThreshold", t, e, n)),
                    [
                      4,
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                        "hb"
                      ].nonMaxSuppressionAsync(r, i, a, o, s)
                    ]
                  );
                case 2:
                  return [2, [u.sent()]];
                case 3:
                  return [
                    4,
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Uc"]
                    )(getParamValue("condition", t, e, n))
                  ];
                case 4:
                  return [2, [u.sent()]];
                case 5:
                  return [
                    4,
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["hc"]
                    )(getParamValue("x", t, e, n), getParamValue("y", t, e, n))
                  ];
                case 6:
                  return [2, u.sent()];
                case 7:
                  throw TypeError("Node type " + t.op + " is not implemented");
              }
            });
          });
        }
        var executeOp$6 = function(t, e, n) {
            switch (t.op) {
              case "topK":
                var r = getParamValue("x", t, e, n),
                  i = getParamValue("k", t, e, n),
                  a = getParamValue("sorted", t, e, n),
                  o = Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Lc"]
                  )(r, i, a);
                return [o.values, o.indices];
              default:
                throw TypeError("Node type " + t.op + " is not implemented");
            }
          },
          executeOp$7 = function(t, e, n) {
            switch (t.op) {
              case "const":
                return e[t.name];
              case "placeholder":
                var r = getParamValue("default", t, e, n);
                return [getTensor(t.name, e, n) || r];
              case "identity":
              case "stopGradient":
              case "fakeQuantWithMinMaxVars":
                return [getParamValue("x", t, e, n).clone()];
              case "snapshot":
                return [getParamValue("x", t, e, n).clone()];
              case "shape":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Ic"]
                  )(getParamValue("x", t, e, n).shape, "int32")
                ];
              case "shapeN":
                return getParamValue("x", t, e, n).map(function(t) {
                  return Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Ic"]
                  )(t.shape);
                });
              case "size":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["cc"]
                  )(getParamValue("x", t, e, n).size, "int32")
                ];
              case "rank":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["cc"]
                  )(getParamValue("x", t, e, n).rank, "int32")
                ];
              case "noop":
                return [];
              case "print":
                var i = getParamValue("x", t, e, n),
                  a = getParamValue("data", t, e, n),
                  o = getParamValue("message", t, e, n),
                  s = getParamValue("summarize", t, e, n);
                console.warn(
                  "The graph has a tf.print() operation,usually used for debugging, which slows down performance."
                ),
                  console.log(o);
                for (var u = 0; u < a.length; u++)
                  console.log(
                    Array.prototype.slice.call(a[0].dataSync()).slice(0, s)
                  );
                return [i];
              default:
                throw TypeError("Node type " + t.op + " is not implemented");
            }
          },
          executeOp$8 = function(t, e, n) {
            switch (t.op) {
              case "resizeBilinear":
                var r = getParamValue("images", t, e, n),
                  i = getParamValue("size", t, e, n),
                  a = getParamValue("alignCorners", t, e, n);
                return [
                  _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                    "hb"
                  ].resizeBilinear(r, [i[0], i[1]], a)
                ];
              case "resizeNearestNeighbor":
                return (
                  (r = getParamValue("images", t, e, n)),
                  (i = getParamValue("size", t, e, n)),
                  (a = getParamValue("alignCorners", t, e, n)),
                  [
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                      "hb"
                    ].resizeNearestNeighbor(r, [i[0], i[1]], a)
                  ]
                );
              case "cropAndResize":
                var o = getParamValue("image", t, e, n),
                  s = getParamValue("boxes", t, e, n),
                  u = getParamValue("boxInd", t, e, n),
                  c = getParamValue("cropSize", t, e, n),
                  l = getParamValue("method", t, e, n),
                  f = getParamValue("extrapolationValue", t, e, n);
                return [
                  _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                    "hb"
                  ].cropAndResize(o, s, u, c, l, f)
                ];
              default:
                throw TypeError("Node type " + t.op + " is not implemented");
            }
          },
          executeOp$9 = function(t, e, n) {
            switch (t.op) {
              case "equal":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["S"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "notEqual":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Lb"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "greater":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["eb"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "greaterEqual":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["fb"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "less":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["mb"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "lessEqual":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["nb"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "logicalAnd":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["ub"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "logicalNot":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["vb"]
                  )(getParamValue("a", t, e, n))
                ];
              case "logicalOr":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["wb"]
                  )(getParamValue("a", t, e, n), getParamValue("b", t, e, n))
                ];
              case "where":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Tc"]
                  )(
                    getParamValue("condition", t, e, n),
                    getParamValue("a", t, e, n),
                    getParamValue("b", t, e, n)
                  )
                ];
              default:
                throw TypeError("Node type " + t.op + " is not implemented");
            }
          },
          executeOp$10 = function(t, e, n) {
            switch (t.op) {
              case "matMul":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["xb"]
                  )(
                    getParamValue("a", t, e, n),
                    getParamValue("b", t, e, n),
                    getParamValue("transposeA", t, e, n),
                    getParamValue("transposeB", t, e, n)
                  )
                ];
              case "transpose":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Nc"]
                  )(getParamValue("x", t, e, n), getParamValue("perm", t, e, n))
                ];
              default:
                throw TypeError("Node type " + t.op + " is not implemented");
            }
          },
          executeOp$11 = function(t, e, n) {
            switch (t.op) {
              case "batchNormalization":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["s"]
                  )(
                    getParamValue("x", t, e, n),
                    getParamValue("mean", t, e, n),
                    getParamValue("variance", t, e, n),
                    getParamValue("offset", t, e, n),
                    getParamValue("scale", t, e, n),
                    getParamValue("epsilon", t, e, n)
                  )
                ];
              case "localResponseNormalization":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["qb"]
                  )(
                    getParamValue("x", t, e, n),
                    getParamValue("radius", t, e, n),
                    getParamValue("bias", t, e, n),
                    getParamValue("alpha", t, e, n),
                    getParamValue("beta", t, e, n)
                  )
                ];
              case "softmax":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["rc"]
                  )(getParamValue("x", t, e, n))
                ];
              case "logSoftmax":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["tb"]
                  )(getParamValue("x", t, e, n))
                ];
              case "sparseToDense":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["uc"]
                  )(
                    getParamValue("sparseIndices", t, e, n),
                    getParamValue("outputShape", t, e, n),
                    getParamValue("sparseValues", t, e, n),
                    getParamValue("defaultValue", t, e, n)
                  )
                ];
              default:
                throw TypeError("Node type " + t.op + " is not implemented");
            }
          },
          executeOp$12 = function(t, e, n) {
            switch (t.op) {
              case "max":
                var r = getParamValue("axis", t, e, n),
                  i = getParamValue("keepDims", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["yb"]
                  )(getParamValue("x", t, e, n), r, i)
                ];
              case "mean":
                return (
                  (r = getParamValue("axis", t, e, n)),
                  (i = getParamValue("keepDims", t, e, n)),
                  [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Bb"]
                    )(getParamValue("x", t, e, n), r, i)
                  ]
                );
              case "min":
                return (
                  (r = getParamValue("axis", t, e, n)),
                  (i = getParamValue("keepDims", t, e, n)),
                  [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Db"]
                    )(getParamValue("x", t, e, n), r, i)
                  ]
                );
              case "sum":
                return (
                  (r = getParamValue("axis", t, e, n)),
                  (i = getParamValue("keepDims", t, e, n)),
                  [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Ec"]
                    )(getParamValue("x", t, e, n), r, i)
                  ]
                );
              case "all":
                return (
                  (r = getParamValue("axis", t, e, n)),
                  (i = getParamValue("keepDims", t, e, n)),
                  [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["i"]
                    )(getParamValue("x", t, e, n), r, i)
                  ]
                );
              case "any":
                return (
                  (r = getParamValue("axis", t, e, n)),
                  (i = getParamValue("keepDims", t, e, n)),
                  [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["j"]
                    )(getParamValue("x", t, e, n), r, i)
                  ]
                );
              case "argMax":
                return (
                  (r = getParamValue("axis", t, e, n)),
                  [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["k"]
                    )(getParamValue("x", t, e, n), r)
                  ]
                );
              case "argMin":
                return (
                  (r = getParamValue("axis", t, e, n)),
                  [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["l"]
                    )(getParamValue("x", t, e, n), r)
                  ]
                );
              case "prod":
                return (
                  (r = getParamValue("axis", t, e, n)),
                  (i = getParamValue("keepDims", t, e, n)),
                  [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Sb"]
                    )(getParamValue("x", t, e, n), r, i)
                  ]
                );
              default:
                throw TypeError("Node type " + t.op + " is not implemented");
            }
          },
          executeOp$13 = function(t, e, n) {
            switch (t.op) {
              case "concat":
                var r = getParamValue("axis", t, e, n),
                  i = getParamValue("tensors", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["C"]
                  )(i, r)
                ];
              case "gather":
                r = getParamValue("axis", t, e, n);
                var a = getParamValue("x", t, e, n),
                  o = getParamValue("indices", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["cb"]
                  )(a, o, r)
                ];
              case "reverse":
                return (
                  (r = getParamValue("axis", t, e, n)),
                  (a = getParamValue("x", t, e, n)),
                  [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Zb"]
                    )(a, r)
                  ]
                );
              case "slice":
                var s = getParamValue("begin", t, e, n),
                  u = getParamValue("size", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["mc"]
                  )(getParamValue("x", t, e, n), s, u)
                ];
              case "stridedSlice":
                s = getParamValue("begin", t, e, n);
                var c = getParamValue("end", t, e, n),
                  l = getParamValue("strides", t, e, n),
                  f = getParamValue("beginMask", t, e, n),
                  h = getParamValue("endMask", t, e, n),
                  p = getParamValue("ellipsisMask", t, e, n),
                  d = getParamValue("newAxisMask", t, e, n),
                  m = getParamValue("shrinkAxisMask", t, e, n),
                  v = getParamValue("x", t, e, n);
                if (1 === s.length && v.shape.length > 1)
                  for (var y = 1; y < v.shape.length; y++)
                    s.push(0), c.push(v.shape[y]), l.push(l[0]);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Cc"]
                  )(v, s, c, l, f, h, p, d, m)
                ];
              case "stack":
                return Object(
                  _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Jc"]
                )(function() {
                  var r = getParamValue("axis", t, e, n),
                    i = getParamValue("tensors", t, e, n),
                    a = i[0].shape,
                    o = i[0].squeeze().shape,
                    s = i.map(function(t) {
                      var e = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                        "Qc"
                      ].arraysEqual(t.shape, a);
                      if (
                        !e &&
                        !_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                          "Qc"
                        ].arraysEqual(t.squeeze().shape, o)
                      )
                        throw new Error(
                          "the input tensors shape does not match"
                        );
                      return e ? t : t.reshape(a);
                    });
                  return [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Ac"]
                    )(s, r)
                  ];
                });
              case "unstack":
                return Object(
                  _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Jc"]
                )(function() {
                  var r = getParamValue("axis", t, e, n),
                    i = getParamValue("tensor", t, e, n);
                  return Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Pc"]
                  )(i, r);
                });
              case "tile":
                var g = getParamValue("reps", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Kc"]
                  )(getParamValue("x", t, e, n), g)
                ];
              case "split":
                r = getParamValue("axis", t, e, n);
                var b = getParamValue("numOrSizeSplits", t, e, n);
                return Object(
                  _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["vc"]
                )(getParamValue("x", t, e, n), b, r);
              case "scatterNd":
                o = getParamValue("indices", t, e, n);
                var w = getParamValue("values", t, e, n),
                  _ = getParamValue("shape", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["dc"]
                  )(o, w, _)
                ];
              case "gatherNd":
                var x = getParamValue("x", t, e, n);
                return (
                  (o = getParamValue("indices", t, e, n)),
                  [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["db"]
                    )(x, o)
                  ]
                );
              case "sparseToDense":
                (o = getParamValue("sparseIndices", t, e, n)),
                  (_ = getParamValue("outputShape", t, e, n));
                var E = getParamValue("sparseValues", t, e, n),
                  S = getParamValue("defaultValue", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["uc"]
                  )(o, E, _, S)
                ];
              default:
                throw TypeError("Node type " + t.op + " is not implemented");
            }
          },
          executeOp$14 = function(t, e, n) {
            switch (t.op) {
              case "fft":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Y"]
                  )(getParamValue("x", t, e, n))
                ];
              case "ifft":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["gb"]
                  )(getParamValue("x", t, e, n))
                ];
              case "rfft":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["ac"]
                  )(getParamValue("x", t, e, n))
                ];
              case "irfft":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["jb"]
                  )(getParamValue("x", t, e, n))
                ];
              default:
                throw TypeError("Node type " + t.op + " is not implemented");
            }
          },
          executeOp$15 = function(t, e, n) {
            switch (t.op) {
              case "cast":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["y"]
                  )(
                    getParamValue("x", t, e, n),
                    getParamValue("dtype", t, e, n)
                  )
                ];
              case "expandDims":
                var r = getParamValue("axis", t, e, n);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["V"]
                  )(getParamValue("x", t, e, n), r)
                ];
              case "squeeze":
                return (
                  (r = getParamValue("axis", t, e, n)),
                  [
                    Object(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["zc"]
                    )(getParamValue("x", t, e, n), r)
                  ]
                );
              case "reshape":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Yb"]
                  )(
                    getParamValue("x", t, e, n),
                    getParamValue("shape", t, e, n)
                  )
                ];
              case "pad":
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Pb"]
                  )(
                    getParamValue("x", t, e, n),
                    split$1(getParamValue("padding", t, e, n), 2),
                    getParamValue("constantValue", t, e, n)
                  )
                ];
              case "spaceToBatchND":
                var i = getParamValue("blockShape", t, e, n),
                  a = split$1(getParamValue("paddings", t, e, n), 2);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["tc"]
                  )(getParamValue("x", t, e, n), i, a)
                ];
              case "batchToSpaceND":
                i = getParamValue("blockShape", t, e, n);
                var o = split$1(getParamValue("crops", t, e, n), 2);
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["w"]
                  )(getParamValue("x", t, e, n), i, o)
                ];
              case "depthToSpace":
                var s = getParamValue("blockSize", t, e, n),
                  u = getParamValue("dataFormat", t, e, n).toUpperCase();
                return [
                  Object(
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["N"]
                  )(getParamValue("x", t, e, n), s, u)
                ];
              default:
                throw TypeError("Node type " + t.op + " is not implemented");
            }
          };
        function executeOp$16(t, e, n) {
          switch (t.category) {
            case "arithmetic":
              return executeOp(t, e, n);
            case "basic_math":
              return executeOp$1(t, e, n);
            case "control":
              return executeOp$2(t, e, n);
            case "convolution":
              return executeOp$3(t, e, n);
            case "creation":
              return executeOp$4(t, e, n);
            case "dynamic":
              return executeOp$5(t, e, n);
            case "evaluation":
              return executeOp$6(t, e, n);
            case "image":
              return executeOp$8(t, e, n);
            case "graph":
              return executeOp$7(t, e, n);
            case "logical":
              return executeOp$9(t, e, n);
            case "matrices":
              return executeOp$10(t, e, n);
            case "normalization":
              return executeOp$11(t, e, n);
            case "reduction":
              return executeOp$12(t, e, n);
            case "slice_join":
              return executeOp$13(t, e, n);
            case "spectral":
              return executeOp$14(t, e, n);
            case "transformation":
              return executeOp$15(t, e, n);
            default:
              throw TypeError("Node type " + t.op + " is not implemented");
          }
        }
        var ExecutionContext = (function() {
            function t(t, e) {
              (this.weightMap = t),
                (this.tensorArrayMap = e),
                (this.rootContext = { id: 0, frameName: "", iterationId: 0 }),
                (this.contexts = [this.rootContext]),
                (this.lastId = 0),
                this.generateCurrentContextIds();
            }
            return (
              (t.prototype.newFrame = function(t, e) {
                return { id: t, frameName: e, iterationId: 0 };
              }),
              Object.defineProperty(t.prototype, "currentContext", {
                get: function() {
                  return this.contexts;
                },
                set: function(t) {
                  this.contexts !== t &&
                    ((this.contexts = t), this.generateCurrentContextIds());
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "currentContextId", {
                get: function() {
                  return this._currentContextIds[0];
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "currentContextIds", {
                get: function() {
                  return this._currentContextIds;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.generateCurrentContextIds = function() {
                for (var t = [], e = 0; e < this.contexts.length - 1; e++) {
                  var n = this.contexts.slice(0, this.contexts.length - e);
                  t.push(this.contextIdforContexts(n));
                }
                t.push(""), (this._currentContextIds = t);
              }),
              (t.prototype.contextIdforContexts = function(t) {
                return t
                  ? t
                      .map(function(t) {
                        return 0 === t.id && 0 === t.iterationId
                          ? ""
                          : t.frameName + "-" + t.iterationId;
                      })
                      .join("/")
                  : "";
              }),
              (t.prototype.enterFrame = function(t) {
                this.contexts &&
                  (this.lastId++,
                  (this.contexts = this.contexts.slice()),
                  this.contexts.push(this.newFrame(this.lastId, t)),
                  this._currentContextIds.unshift(
                    this.contextIdforContexts(this.contexts)
                  ));
              }),
              (t.prototype.exitFrame = function() {
                if (!(this.contexts && this.contexts.length > 1))
                  throw new Error("Cannot exit frame, the context is empty");
                (this.contexts = this.contexts.slice()),
                  this.contexts.splice(-1),
                  this.currentContextIds.shift();
              }),
              (t.prototype.nextIteration = function() {
                if (!(this.contexts && this.contexts.length > 0))
                  throw new Error(
                    "Cannot increase frame iteration, the context is empty"
                  );
                (this.contexts = this.contexts.slice()), this.lastId++;
                var t = Object.assign(
                  {},
                  this.contexts[this.contexts.length - 1]
                );
                (t.iterationId += 1),
                  (t.id = this.lastId),
                  this.contexts.splice(-1, 1, t),
                  this._currentContextIds.splice(
                    0,
                    1,
                    this.contextIdforContexts(this.contexts)
                  );
              }),
              (t.prototype.getWeight = function(t) {
                return this.weightMap[t];
              }),
              (t.prototype.addTensorArray = function(t) {
                this.tensorArrayMap[t.id] = t;
              }),
              (t.prototype.getTensorArray = function(t) {
                return this.tensorArrayMap[t];
              }),
              t
            );
          })(),
          GraphExecutor = (function() {
            function t(t) {
              (this.graph = t),
                (this.compiledMap = new Map()),
                (this._weightMap = {}),
                (this.SEPERATOR = ","),
                (this.placeholders = t.placeholders),
                (this._outputs = t.outputs),
                this.compile();
            }
            return (
              Object.defineProperty(t.prototype, "weightMap", {
                get: function() {
                  return this._weightMap;
                },
                set: function(t) {
                  var e = Object.keys(t).map(function(e) {
                    return t[e].map(function(t) {
                      return t.id;
                    });
                  });
                  (this.weightIds = [].concat.apply([], e)),
                    (this._weightMap = t);
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "inputs", {
                get: function() {
                  return this.placeholders.map(function(t) {
                    return {
                      name: t.name,
                      shape: t.params.shape ? t.params.shape.value : void 0,
                      dtype: t.params.dtype ? t.params.dtype.value : void 0
                    };
                  });
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "outputs", {
                get: function() {
                  return this._outputs.map(function(t) {
                    return {
                      name: t.name,
                      shape: t.params.shape ? t.params.shape.value : void 0,
                      dtype: t.params.dtype ? t.params.dtype.value : void 0
                    };
                  });
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "inputNodes", {
                get: function() {
                  return this.placeholders.map(function(t) {
                    return t.name;
                  });
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "outputNodes", {
                get: function() {
                  return this.outputs.map(function(t) {
                    return t.name;
                  });
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "isControlFlowModel", {
                get: function() {
                  return this.graph.withControlFlow;
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "isDynamicShapeModel", {
                get: function() {
                  return this.graph.withDynamicShape;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.compile = function(t) {
                if (
                  !this.graph.withControlFlow &&
                  !this.graph.withDynamicShape
                ) {
                  var e = [],
                    n = t || this.graph.placeholders,
                    r = n
                      .map(function(t) {
                        return t.name;
                      })
                      .sort()
                      .join(this.SEPERATOR);
                  if (!this.compiledMap.get(r)) {
                    for (
                      var i = n.concat(this.graph.weights), a = {};
                      i.length > 0;

                    ) {
                      var o = i.pop();
                      (a[o.name] = !0),
                        e.push(o),
                        o.children.forEach(function(t) {
                          !a[t.name] &&
                            t.inputNames.every(function(t) {
                              var e = getNodeNameAndIndex(t)[0];
                              return a[e];
                            }) &&
                            i.push(t);
                        });
                    }
                    this.compiledMap.set(r, e);
                  }
                }
              }),
              (t.prototype.execute = function(t, e, n) {
                var r = this;
                void 0 === e && (e = !0);
                var i = Object.keys(t).sort();
                this.checkInput(t, e),
                  this.checkInputShapeAndType(t, e),
                  this.compile(
                    i.map(function(t) {
                      return r.graph.nodes[t];
                    })
                  );
                var a = this.calculateOutputs(n);
                this.checkOutput(
                  this.compiledMap.get(i.join(this.SEPERATOR)),
                  a
                );
                var o = {};
                return Object(
                  _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["Jc"]
                )(function() {
                  for (
                    var e = new ExecutionContext(r._weightMap, o),
                      n = __assign({}, r.weightMap, t),
                      s = r.getFrozenTensorIds(n),
                      u = {},
                      c = r.compiledMap.get(i.join(r.SEPERATOR)),
                      l = 0;
                    l < c.length;
                    l++
                  ) {
                    var f = c[l];
                    if (
                      (n[f.name] ||
                        ((n[f.name] = executeOp$16(f, n, e)),
                        r.checkTensorForDisposal(f.name, f, n, e, s, a, u)),
                      a.every(function(t) {
                        return !!n[t];
                      }))
                    )
                      break;
                  }
                  return r.findOutputs(n, e, a);
                });
              }),
              (t.prototype.getFrozenTensorIds = function(t) {
                var e = [].concat.apply(
                  [],
                  Object.keys(t)
                    .map(function(e) {
                      return t[e];
                    })
                    .map(function(t) {
                      return t.map(function(t) {
                        return t.id;
                      });
                    })
                );
                return new Set(e);
              }),
              (t.prototype.checkTensorForDisposal = function(
                t,
                e,
                n,
                r,
                i,
                a,
                o
              ) {
                "control" !== e.category &&
                  -1 === a.indexOf(t) &&
                  (n[t].forEach(function(t) {
                    null != t && (o[t.id] = (o[t.id] || 0) + e.children.length);
                  }),
                  e.inputs.forEach(function(t) {
                    if ("control" !== t.category) {
                      var e = getTensorsForCurrentContenxt(t.name, n, r);
                      null != e &&
                        e.forEach(function(t) {
                          if (t && !i.has(t.id)) {
                            var e = o[t.id];
                            1 === e
                              ? (t.dispose(), delete o[t.id])
                              : null != e && o[t.id]--;
                          }
                        });
                    }
                  }));
              }),
              (t.prototype.executeAsync = function(t, e) {
                return __awaiter(this, void 0, void 0, function() {
                  var n,
                    r,
                    i,
                    a,
                    o,
                    s,
                    u,
                    c,
                    l = this;
                  return __generator(this, function(f) {
                    switch (f.label) {
                      case 0:
                        return (
                          this.checkInput(t, !1),
                          this.checkInputShapeAndType(t, !1),
                          (n = {}),
                          (r = new ExecutionContext(this._weightMap, n)),
                          (i = this.calculateOutputs(e)),
                          [4, this.executeWithControlFlow(t, r, i)]
                        );
                      case 1:
                        return (
                          (a = f.sent()),
                          (o = this.findOutputs(a, r, e)),
                          (s = Object.keys(o).map(function(t) {
                            return o[t].id;
                          })),
                          (u = Object.keys(t).map(function(e) {
                            return t[e].map(function(t) {
                              return t.id;
                            });
                          })),
                          (c = [].concat.apply([], u)),
                          Object.keys(a).forEach(function(t) {
                            a[t].forEach(function(t) {
                              t &&
                                -1 === s.indexOf(t.id) &&
                                -1 === c.indexOf(t.id) &&
                                -1 === l.weightIds.indexOf(t.id) &&
                                t.dispose();
                            });
                          }),
                          [2, o]
                        );
                    }
                  });
                });
              }),
              (t.prototype.executeWithControlFlow = function(t, e, n) {
                return __awaiter(this, void 0, void 0, function() {
                  var r,
                    i,
                    a,
                    o,
                    s,
                    u,
                    c,
                    l,
                    f = this;
                  return __generator(this, function(h) {
                    switch (h.label) {
                      case 0:
                        (r = Object.keys(t)),
                          (i = r.map(function(t) {
                            return f.graph.nodes[t];
                          })),
                          (a = i.concat(this.graph.weights).map(function(t) {
                            return { node: t, contexts: e.currentContext };
                          })),
                          (o = __assign({}, this.weightMap, t)),
                          (s = {}),
                          (u = this.getFrozenTensorIds(o)),
                          (c = {}),
                          (h.label = 1);
                      case 1:
                        return a.length > 0
                          ? ((l = this.processStack(i, a, e, o, c, u, n, s)),
                            [4, Promise.all(l)])
                          : [3, 3];
                      case 2:
                        return h.sent(), [3, 1];
                      case 3:
                        return [2, o];
                    }
                  });
                });
              }),
              (t.prototype.processStack = function(t, e, n, r, i, a, o, s) {
                for (
                  var u = this,
                    c = [],
                    l = function() {
                      var l = e.pop();
                      n.currentContext = l.contexts;
                      var h = "";
                      if (
                        ("enter" === l.node.op &&
                          getParamValue("isConstant", l.node, r, n) &&
                          (h = getNodeNameAndIndex(l.node.name, n)[0]),
                        -1 === t.indexOf(l.node))
                      ) {
                        var p = executeOp$16(l.node, r, n);
                        h || (h = getNodeNameAndIndex(l.node.name, n)[0]);
                        var d = n.currentContext;
                        p instanceof Promise
                          ? c.push(
                              p.then(function(t) {
                                return (
                                  (r[h] = t),
                                  (n.currentContext = d),
                                  u.checkTensorForDisposal(
                                    h,
                                    l.node,
                                    r,
                                    n,
                                    a,
                                    o,
                                    s
                                  ),
                                  u.processChildNodes(l.node, e, n, r, i),
                                  t
                                );
                              })
                            )
                          : ((r[h] = p),
                            f.checkTensorForDisposal(h, l.node, r, n, a, o, s),
                            f.processChildNodes(l.node, e, n, r, i));
                      } else f.processChildNodes(l.node, e, n, r, i);
                    },
                    f = this;
                  e.length > 0;

                )
                  l();
                return c;
              }),
              (t.prototype.processChildNodes = function(t, e, n, r, i) {
                t.children.forEach(function(t) {
                  var a = getNodeNameAndIndex(t.name, n)[0];
                  i[a] ||
                    ("merge" === t.op
                      ? t.inputNames.some(function(t) {
                          return !!getTensor(t, r, n);
                        }) &&
                        ((i[a] = !0),
                        e.push({ contexts: n.currentContext, node: t }))
                      : t.inputNames.every(function(t) {
                          return !!getTensor(t, r, n);
                        }) &&
                        ((i[a] = !0),
                        e.push({ contexts: n.currentContext, node: t })));
                });
              }),
              (t.prototype.calculateOutputs = function(t) {
                return (
                  !t || t instanceof Array || (t = [t]),
                  t ||
                    this.graph.outputs.map(function(t) {
                      return t.name;
                    })
                );
              }),
              (t.prototype.findOutputs = function(t, e, n) {
                return this.calculateOutputs(n).reduce(function(n, r) {
                  return (n[r] = getTensor(r, t, e)), n;
                }, {});
              }),
              (t.prototype.dispose = function() {
                var t = this;
                Object.keys(this.weightMap).forEach(function(e) {
                  return t.weightMap[e].forEach(function(t) {
                    return t.dispose();
                  });
                });
              }),
              (t.prototype.checkInputShapeAndType = function(t, e) {
                void 0 === e && (e = !0),
                  this.placeholders.forEach(function(n) {
                    var r = t[n.name];
                    if (e || r) {
                      var i = r[0];
                      if (n.params.shape && n.params.shape.value) {
                        var a = n.params.shape.value,
                          o =
                            a.length === i.shape.length &&
                            i.shape.every(function(t, e) {
                              return -1 === a[e] || a[e] === t;
                            });
                        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                          "Qc"
                        ].assert(
                          o,
                          "The shape of dict['" +
                            n.name +
                            "'] provided in model.execute(dict) must be [" +
                            a +
                            "], but was [" +
                            i.shape +
                            "]"
                        );
                      }
                      n.params.dtype &&
                        n.params.dtype.value &&
                        _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                          "Qc"
                        ].assert(
                          i.dtype === n.params.dtype.value,
                          "The dtype of dict['" +
                            n.name +
                            "'] provided in model.execute(dict) must be " +
                            n.params.dtype.value +
                            ", but was " +
                            i.dtype
                        );
                    }
                  });
              }),
              (t.prototype.checkInput = function(t, e) {
                var n = this;
                void 0 === e && (e = !0);
                var r = Object.keys(t),
                  i = [],
                  a = [];
                this.inputNodes.forEach(function(t) {
                  -1 === r.indexOf(t) && i.push(t);
                }),
                  r.forEach(function(t) {
                    -1 === n.inputNodes.indexOf(t) && a.push(t);
                  });
                var o = a.filter(function(t) {
                  return !n.graph.nodes[t];
                });
                if (i.length > 0 && e)
                  throw new Error(
                    "The dict provided in model.execute(dict) has the keys [" +
                      r +
                      "], but is missing the required keys: [" +
                      i +
                      "]."
                  );
                if (a.length > 0 && e)
                  throw new Error(
                    "The dict provided in model.execute(dict) has unused keys: [" +
                      a +
                      "]. Please provide only the following keys: [" +
                      this.inputNodes +
                      "]."
                  );
                if (o.length > 0)
                  throw new Error(
                    "The dict provided in model.execute(dict) has keys: [" +
                      o +
                      "] not part of model graph."
                  );
              }),
              (t.prototype.checkOutput = function(t, e) {
                var n = t.map(function(t) {
                    return t.name;
                  }),
                  r = [];
                if (
                  (e.forEach(function(t) {
                    var e = parseNodeName(t)[0];
                    -1 === n.indexOf(e) && r.push(e);
                  }),
                  r.length > 0)
                )
                  throw new Error(
                    "The following outputs are not generated by the execution: [" +
                      r +
                      "]."
                  );
              }),
              t
            );
          })(),
          TFHUB_SEARCH_PARAM = "?tfjs-format=file",
          DEFAULT_MODEL_NAME = "tensorflowjs_model.pb",
          DEFAULT_MANIFEST_NAME = "weights_manifest.json",
          FrozenModel = (function() {
            function t(t, e, n, r, i) {
              (this.modelUrl = t),
                (this.weightManifestUrl = e),
                (this.requestOption = n),
                (this.weightPrefix = r),
                (this.onProgress = i),
                (this.version = "n/a");
            }
            return (
              Object.defineProperty(t.prototype, "modelVersion", {
                get: function() {
                  return this.version;
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "inputNodes", {
                get: function() {
                  return this.executor.inputNodes;
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "outputNodes", {
                get: function() {
                  return this.executor.outputNodes;
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "inputs", {
                get: function() {
                  return this.executor.inputs;
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "outputs", {
                get: function() {
                  return this.executor.outputs;
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "weights", {
                get: function() {
                  return this.executor.weightMap;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.findIOHandler = function() {
                var t = [this.modelUrl, this.weightManifestUrl];
                if (this.requestOption || this.weightPrefix)
                  this.handler = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                    "ib"
                  ].browserHTTPRequest(
                    t,
                    this.requestOption,
                    this.weightPrefix,
                    null,
                    this.onProgress
                  );
                else {
                  var e = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                    "ib"
                  ].getLoadHandlers(t, this.onProgress);
                  if (0 === e.length)
                    e.push(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                        "ib"
                      ].browserHTTPRequest(
                        t,
                        this.requestOption,
                        this.weightPrefix,
                        null,
                        this.onProgress
                      )
                    );
                  else if (e.length > 1)
                    throw new Error(
                      "Found more than one (" +
                        e.length +
                        ") load handlers for URL '" +
                        [t] +
                        "'"
                    );
                  this.handler = e[0];
                }
              }),
              (t.prototype.load = function() {
                return __awaiter(this, void 0, void 0, function() {
                  var t, e, n;
                  return __generator(this, function(r) {
                    switch (r.label) {
                      case 0:
                        if ((this.findIOHandler(), null == this.handler.load))
                          throw new Error(
                            "Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented."
                          );
                        return [4, this.handler.load()];
                      case 1:
                        return (
                          (t = r.sent()),
                          (e = compiled_api_1.GraphDef.decode(
                            new Uint8Array(t.modelTopology)
                          )),
                          (this.version =
                            e.versions.producer + "." + e.versions.minConsumer),
                          (n = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                            "ib"
                          ].decodeWeights(t.weightData, t.weightSpecs)),
                          (this.executor = new GraphExecutor(
                            OperationMapper.Instance.transformGraph(e)
                          )),
                          (this.executor.weightMap = this.convertTensorMapToTensorsMap(
                            n
                          )),
                          [2, !0]
                        );
                    }
                  });
                });
              }),
              (t.prototype.predict = function(t, e) {
                return this.execute_(t, !0, this.outputNodes);
              }),
              (t.prototype.constructTensorMap = function(t) {
                var e =
                  t instanceof
                  _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["c"]
                    ? [t]
                    : t;
                if (e.length !== this.inputNodes.length)
                  throw new Error(
                    "Input tensor count mismatch,the frozen model has " +
                      this.inputNodes.length +
                      " placeholders, while there are " +
                      e.length +
                      " input tensors."
                  );
                return this.inputNodes.reduce(function(t, n, r) {
                  return (t[n] = e[r]), t;
                }, {});
              }),
              (t.prototype.execute = function(t, e) {
                return this.execute_(t, !1, e);
              }),
              (t.prototype.execute_ = function(t, e, n) {
                if (
                  (void 0 === e && (e = !0),
                  (n = n || this.outputNodes),
                  (t instanceof
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["c"] ||
                    Array.isArray(t)) &&
                    (t = this.constructTensorMap(t)),
                  this.executor.isControlFlowModel ||
                    this.executor.isDynamicShapeModel)
                )
                  throw new Error(
                    "The model contains control flow or dynamic shape ops, please use executeAsync method"
                  );
                var r = this.executor.execute(
                    this.convertTensorMapToTensorsMap(t),
                    e,
                    n
                  ),
                  i = Object.keys(r);
                return Array.isArray(n) && n.length > 1
                  ? n.map(function(t) {
                      return r[t];
                    })
                  : r[i[0]];
              }),
              (t.prototype.executeAsync = function(t, e) {
                return __awaiter(this, void 0, void 0, function() {
                  var n, r;
                  return __generator(this, function(i) {
                    switch (i.label) {
                      case 0:
                        if (
                          !this.executor.isControlFlowModel &&
                          !this.executor.isDynamicShapeModel
                        )
                          throw new Error(
                            "The model does not contain control flow or dynamic shape ops, please use execute method for better performance."
                          );
                        return (
                          (e = e || this.outputNodes),
                          (t instanceof
                            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                              "c"
                            ] ||
                            Array.isArray(t)) &&
                            (t = this.constructTensorMap(t)),
                          [
                            4,
                            this.executor.executeAsync(
                              this.convertTensorMapToTensorsMap(t),
                              e
                            )
                          ]
                        );
                      case 1:
                        return (
                          (n = i.sent()),
                          (r = Object.keys(n)),
                          [
                            2,
                            Array.isArray(e) && e.length > 1
                              ? e.map(function(t) {
                                  return n[t];
                                })
                              : n[r[0]]
                          ]
                        );
                    }
                  });
                });
              }),
              (t.prototype.convertTensorMapToTensorsMap = function(t) {
                return Object.keys(t).reduce(function(e, n) {
                  return (e[n] = [t[n]]), e;
                }, {});
              }),
              (t.prototype.dispose = function() {
                this.executor.dispose();
              }),
              t
            );
          })(),
          tensorflow_json;
        function loadFrozenModel(t, e, n, r) {
          return __awaiter(this, void 0, void 0, function() {
            var i;
            return __generator(this, function(a) {
              switch (a.label) {
                case 0:
                  return [4, (i = new FrozenModel(t, e, n, null, r)).load()];
                case 1:
                  return a.sent(), [2, i];
              }
            });
          });
        }
        function loadTfHubModule(t, e, n) {
          return __awaiter(this, void 0, void 0, function() {
            return __generator(this, function(r) {
              return (
                t.endsWith("/") || (t += "/"),
                [
                  2,
                  loadFrozenModel(
                    "" + t + DEFAULT_MODEL_NAME + TFHUB_SEARCH_PARAM,
                    "" + t + DEFAULT_MANIFEST_NAME + TFHUB_SEARCH_PARAM,
                    e,
                    n
                  )
                ]
              );
            });
          });
        }
        !(function(t) {
          !(function(t) {
            (t[(t.DT_INVALID = 0)] = "DT_INVALID"),
              (t[(t.DT_FLOAT = 1)] = "DT_FLOAT"),
              (t[(t.DT_DOUBLE = 2)] = "DT_DOUBLE"),
              (t[(t.DT_INT32 = 3)] = "DT_INT32"),
              (t[(t.DT_UINT8 = 4)] = "DT_UINT8"),
              (t[(t.DT_INT16 = 5)] = "DT_INT16"),
              (t[(t.DT_INT8 = 6)] = "DT_INT8"),
              (t[(t.DT_STRING = 7)] = "DT_STRING"),
              (t[(t.DT_COMPLEX64 = 8)] = "DT_COMPLEX64"),
              (t[(t.DT_INT64 = 9)] = "DT_INT64"),
              (t[(t.DT_BOOL = 10)] = "DT_BOOL"),
              (t[(t.DT_QINT8 = 11)] = "DT_QINT8"),
              (t[(t.DT_QUINT8 = 12)] = "DT_QUINT8"),
              (t[(t.DT_QINT32 = 13)] = "DT_QINT32"),
              (t[(t.DT_BFLOAT16 = 14)] = "DT_BFLOAT16"),
              (t[(t.DT_FLOAT_REF = 101)] = "DT_FLOAT_REF"),
              (t[(t.DT_DOUBLE_REF = 102)] = "DT_DOUBLE_REF"),
              (t[(t.DT_INT32_REF = 103)] = "DT_INT32_REF"),
              (t[(t.DT_UINT8_REF = 104)] = "DT_UINT8_REF"),
              (t[(t.DT_INT16_REF = 105)] = "DT_INT16_REF"),
              (t[(t.DT_INT8_REF = 106)] = "DT_INT8_REF"),
              (t[(t.DT_STRING_REF = 107)] = "DT_STRING_REF"),
              (t[(t.DT_COMPLEX64_REF = 108)] = "DT_COMPLEX64_REF"),
              (t[(t.DT_INT64_REF = 109)] = "DT_INT64_REF"),
              (t[(t.DT_BOOL_REF = 110)] = "DT_BOOL_REF"),
              (t[(t.DT_QINT8_REF = 111)] = "DT_QINT8_REF"),
              (t[(t.DT_QUINT8_REF = 112)] = "DT_QUINT8_REF"),
              (t[(t.DT_QINT32_REF = 113)] = "DT_QINT32_REF"),
              (t[(t.DT_BFLOAT16_REF = 114)] = "DT_BFLOAT16_REF");
          })(t.DataType || (t.DataType = {})),
            (function(t) {
              !(function(t) {
                (t[(t.LEGACY = 0)] = "LEGACY"),
                  (t[(t.V1 = 1)] = "V1"),
                  (t[(t.V2 = 2)] = "V2");
              })(t.CheckpointFormatVersion || (t.CheckpointFormatVersion = {}));
            })(t.SaverDef || (t.SaverDef = {}));
        })(tensorflow_json || (tensorflow_json = {}));
        var CONTROL_FLOW_OPS$1 = [
            "Switch",
            "Merge",
            "Enter",
            "Exit",
            "NextIteration"
          ],
          DYNAMIC_SHAPE_OPS$1 = [
            "NonMaxSuppressionV2",
            "NonMaxSuppressionV3",
            "Where"
          ],
          OperationMapper$1 = (function() {
            function t() {
              var t = [
                  arithmetic,
                  basicMath,
                  control,
                  convolution,
                  creation,
                  dynamic,
                  evaluation,
                  logical,
                  image$1,
                  graph,
                  matrices,
                  normalization,
                  reduction,
                  sliceJoin,
                  spectral,
                  transformation
                ],
                e = [].concat.apply(
                  [],
                  t.map(function(t) {
                    return t.json;
                  })
                );
              this.opMappers = e.reduce(function(t, e) {
                return (t[e.tfOpName] = e), t;
              }, {});
            }
            return (
              Object.defineProperty(t, "Instance", {
                get: function() {
                  return this._instance || (this._instance = new this());
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.isControlFlow = function(t) {
                return CONTROL_FLOW_OPS$1.some(function(e) {
                  return e === t.op;
                });
              }),
              (t.prototype.isDynamicShape = function(t) {
                return DYNAMIC_SHAPE_OPS$1.some(function(e) {
                  return e === t.op;
                });
              }),
              (t.prototype.transformGraph = function(t) {
                var e = this,
                  n = !1,
                  r = !1,
                  i = [],
                  a = [],
                  o = t.node.reduce(function(t, o) {
                    return (
                      (t[o.name] = e.mapNode(o)),
                      e.isControlFlow(o) && (n = !0),
                      e.isDynamicShape(o) && (r = !0),
                      "Placeholder" === o.op && i.push(t[o.name]),
                      "Const" === o.op && a.push(t[o.name]),
                      t
                    );
                  }, {}),
                  s = [],
                  u = [];
                return (
                  Object.keys(o).forEach(function(t) {
                    var e = o[t];
                    e.inputNames.forEach(function(t) {
                      var n = getNodeNameAndIndex(t)[0];
                      e.inputs.push(o[n]), o[n].children.push(e);
                    }),
                      0 === e.inputs.length && s.push(e);
                  }),
                  Object.keys(o).forEach(function(t) {
                    var e = o[t];
                    0 === e.children.length && u.push(e);
                  }),
                  {
                    nodes: o,
                    inputs: s,
                    outputs: u,
                    weights: a,
                    placeholders: i,
                    withControlFlow: n,
                    withDynamicShape: r
                  }
                );
              }),
              (t.prototype.mapNode = function(t) {
                var e = this,
                  n = this.opMappers[t.op];
                if (void 0 === n)
                  throw new Error("Tensorflow Op is not supported: " + t.op);
                var r = {
                  name: t.name,
                  op: n.dlOpName,
                  category: n.category,
                  inputNames: (t.input || []).map(function(t) {
                    return t.startsWith("^") ? t.substr(1) : t;
                  }),
                  inputs: [],
                  children: [],
                  params: {}
                };
                return (
                  n.params &&
                    (r.params = n.params.reduce(function(n, r) {
                      var i = r.tfInputIndex,
                        a = r.tfInputParamLength,
                        o = r.type,
                        s = void 0;
                      if (void 0 === i)
                        switch (r.type) {
                          case "string":
                            void 0 ===
                              (s = e.getStringParam(
                                t.attr,
                                r.tfParamName,
                                r.defaultValue
                              )) &&
                              r.tfParamNameDeprecated &&
                              (s = e.getStringParam(
                                t.attr,
                                r.tfParamNameDeprecated,
                                r.defaultValue
                              ));
                            break;
                          case "number":
                            void 0 ===
                              (s = e.getNumberParam(
                                t.attr,
                                r.tfParamName,
                                r.defaultValue || 0
                              )) &&
                              r.tfParamNameDeprecated &&
                              (s = e.getNumberParam(
                                t.attr,
                                r.tfParamNameDeprecated,
                                r.defaultValue
                              ));
                            break;
                          case "number[]":
                            void 0 ===
                              (s = e.getNumericArrayParam(
                                t.attr,
                                r.tfParamName,
                                r.defaultValue
                              )) &&
                              r.tfParamNameDeprecated &&
                              (s = e.getNumericArrayParam(
                                t.attr,
                                r.tfParamNameDeprecated,
                                r.defaultValue
                              ));
                            break;
                          case "bool":
                            void 0 ===
                              (s = e.getBoolParam(
                                t.attr,
                                r.tfParamName,
                                r.defaultValue
                              )) &&
                              r.tfParamNameDeprecated &&
                              (s = e.getBoolParam(
                                t.attr,
                                r.tfParamNameDeprecated,
                                r.defaultValue
                              ));
                            break;
                          case "shape":
                            void 0 ===
                              (s = e.getTensorShapeParam(
                                t.attr,
                                r.tfParamName,
                                r.defaultValue
                              )) &&
                              r.tfParamNameDeprecated &&
                              (s = e.getTensorShapeParam(
                                t.attr,
                                r.tfParamNameDeprecated,
                                r.defaultValue
                              ));
                            break;
                          case "dtype":
                            void 0 ===
                              (s = e.getDtypeParam(
                                t.attr,
                                r.tfParamName,
                                r.defaultValue
                              )) &&
                              r.tfParamNameDeprecated &&
                              (s = e.getDtypeParam(
                                t.attr,
                                r.tfParamNameDeprecated,
                                r.defaultValue
                              ));
                            break;
                          case "tensor":
                          case "tensors":
                            break;
                          default:
                            throw new Error(
                              "Unsupported param type: " +
                                r.type +
                                " for op: " +
                                t.op
                            );
                        }
                      return (
                        (n[r.dlParamName] = {
                          value: s,
                          inputIndex: i,
                          type: o,
                          inputParamLength: a
                        }),
                        n
                      );
                    }, {})),
                  r
                );
              }),
              (t.prototype.decodeBase64 = function(t) {
                if ("undefined" != typeof atob) return atob(t);
                if ("undefined" != typeof Buffer)
                  return new Buffer(t, "base64").toString();
                throw new Error(
                  "Unable to decode base64 in this environment. Missing built-in atob() or Buffer()"
                );
              }),
              (t.prototype.getStringParam = function(t, e, n, r) {
                void 0 === r && (r = !1);
                var i = t[e];
                if (void 0 !== i) {
                  var a = Array.isArray(i.s)
                    ? String.fromCharCode.apply(null, i.s)
                    : this.decodeBase64(i.s);
                  return r ? a : a.toLowerCase();
                }
                return n;
              }),
              (t.prototype.getBoolParam = function(t, e, n) {
                var r = t[e];
                return r ? r.b : n;
              }),
              (t.prototype.getNumberParam = function(t, e, n) {
                var r = t[e] || {},
                  i = r.i ? r.i : r.f ? r.f : n;
                return "number" == typeof i ? i : parseInt(i, 10);
              }),
              (t.prototype.getDtypeParam = function(t, e, n) {
                var r = t[e];
                if (r && r.type) {
                  var i = r.type;
                  switch (
                    ("string" == typeof r.type &&
                      (i = tensorflow_json.DataType[r.type]),
                    i)
                  ) {
                    case tensorflow_json.DataType.DT_FLOAT:
                      return "float32";
                    case tensorflow_json.DataType.DT_INT32:
                      return "int32";
                    case tensorflow_json.DataType.DT_BOOL:
                      return "bool";
                    default:
                      return n;
                  }
                }
                return n;
              }),
              (t.prototype.getTensorShapeParam = function(t, e, n) {
                var r = t[e];
                if (r && r.shape) {
                  if (r.shape.unknownRank) return;
                  if (null != r.shape.dim)
                    return r.shape.dim.map(function(t) {
                      return "number" == typeof t.size
                        ? t.size
                        : parseInt(t.size, 10);
                    });
                }
                return n;
              }),
              (t.prototype.getNumericArrayParam = function(t, e, n) {
                var r = t[e];
                return r
                  ? (r.list.f && r.list.f.length ? r.list.f : r.list.i).map(
                      function(t) {
                        return "number" == typeof t ? t : parseInt(t, 10);
                      }
                    )
                  : n;
              }),
              t
            );
          })(),
          FrozenModel$1 = (function() {
            function t(t, e, n, r) {
              (this.modelUrl = t),
                (this.requestOption = e),
                (this.weightPrefix = n),
                (this.onProgress = r),
                (this.version = "n/a");
            }
            return (
              Object.defineProperty(t.prototype, "modelVersion", {
                get: function() {
                  return this.version;
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "inputNodes", {
                get: function() {
                  return this.executor.inputNodes;
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "outputNodes", {
                get: function() {
                  return this.executor.outputNodes;
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "inputs", {
                get: function() {
                  return this.executor.inputs;
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "outputs", {
                get: function() {
                  return this.executor.outputs;
                },
                enumerable: !0,
                configurable: !0
              }),
              Object.defineProperty(t.prototype, "weights", {
                get: function() {
                  return this.executor.weightMap;
                },
                enumerable: !0,
                configurable: !0
              }),
              (t.prototype.findIOHandler = function() {
                var t = this.modelUrl;
                if (this.requestOption || this.weightPrefix)
                  this.handler = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                    "ib"
                  ].browserHTTPRequest(
                    t,
                    this.requestOption,
                    this.weightPrefix,
                    null,
                    this.onProgress
                  );
                else {
                  var e = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                    "ib"
                  ].getLoadHandlers(t, this.onProgress);
                  if (0 === e.length)
                    e.push(
                      _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                        "ib"
                      ].browserHTTPRequest(
                        t,
                        this.requestOption,
                        this.weightPrefix,
                        null,
                        this.onProgress
                      )
                    );
                  else if (e.length > 1)
                    throw new Error(
                      "Found more than one (" +
                        e.length +
                        ") load handlers for URL '" +
                        [t] +
                        "'"
                    );
                  this.handler = e[0];
                }
              }),
              (t.prototype.load = function() {
                return __awaiter(this, void 0, void 0, function() {
                  var t, e, n;
                  return __generator(this, function(r) {
                    switch (r.label) {
                      case 0:
                        if ((this.findIOHandler(), null == this.handler.load))
                          throw new Error(
                            "Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented."
                          );
                        return [4, this.handler.load()];
                      case 1:
                        return (
                          (t = r.sent()),
                          (e = t.modelTopology),
                          (this.version =
                            e.versions.producer + "." + e.versions.minConsumer),
                          (n = _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                            "ib"
                          ].decodeWeights(t.weightData, t.weightSpecs)),
                          (this.executor = new GraphExecutor(
                            OperationMapper$1.Instance.transformGraph(e)
                          )),
                          (this.executor.weightMap = this.convertTensorMapToTensorsMap(
                            n
                          )),
                          [2, !0]
                        );
                    }
                  });
                });
              }),
              (t.prototype.predict = function(t, e) {
                return this.execute_(t, !0, this.outputNodes);
              }),
              (t.prototype.constructTensorMap = function(t) {
                var e =
                  t instanceof
                  _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["c"]
                    ? [t]
                    : t;
                if (e.length !== this.inputNodes.length)
                  throw new Error(
                    "Input tensor count mismatch,the frozen model has " +
                      this.inputNodes.length +
                      " placeholders, while there are " +
                      e.length +
                      " input tensors."
                  );
                return this.inputNodes.reduce(function(t, n, r) {
                  return (t[n] = e[r]), t;
                }, {});
              }),
              (t.prototype.execute = function(t, e) {
                return this.execute_(t, !1, e);
              }),
              (t.prototype.execute_ = function(t, e, n) {
                if (
                  (void 0 === e && (e = !0),
                  (n = n || this.outputNodes),
                  (t instanceof
                    _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["c"] ||
                    Array.isArray(t)) &&
                    (t = this.constructTensorMap(t)),
                  this.executor.isControlFlowModel ||
                    this.executor.isDynamicShapeModel)
                )
                  throw new Error(
                    "The model contains control flow or dynamic shape ops, please use executeAsync method"
                  );
                var r = this.executor.execute(
                    this.convertTensorMapToTensorsMap(t),
                    e,
                    n
                  ),
                  i = Object.keys(r);
                return Array.isArray(n) && n.length > 1
                  ? n.map(function(t) {
                      return r[t];
                    })
                  : r[i[0]];
              }),
              (t.prototype.executeAsync = function(t, e) {
                return __awaiter(this, void 0, void 0, function() {
                  var n, r;
                  return __generator(this, function(i) {
                    switch (i.label) {
                      case 0:
                        if (
                          !this.executor.isControlFlowModel &&
                          !this.executor.isDynamicShapeModel
                        )
                          throw new Error(
                            "The model does not contain control flow or dynamic shape ops, please use execute method for better performance."
                          );
                        return (
                          (e = e || this.outputNodes),
                          (t instanceof
                            _tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__[
                              "c"
                            ] ||
                            Array.isArray(t)) &&
                            (t = this.constructTensorMap(t)),
                          [
                            4,
                            this.executor.executeAsync(
                              this.convertTensorMapToTensorsMap(t),
                              e
                            )
                          ]
                        );
                      case 1:
                        return (
                          (n = i.sent()),
                          (r = Object.keys(n)),
                          [
                            2,
                            Array.isArray(e) && e.length > 1
                              ? e.map(function(t) {
                                  return n[t];
                                })
                              : n[r[0]]
                          ]
                        );
                    }
                  });
                });
              }),
              (t.prototype.convertTensorMapToTensorsMap = function(t) {
                return Object.keys(t).reduce(function(e, n) {
                  return (e[n] = [t[n]]), e;
                }, {});
              }),
              (t.prototype.dispose = function() {
                this.executor.dispose();
              }),
              t
            );
          })();
        function loadFrozenModel$1(t, e, n) {
          return __awaiter(this, void 0, void 0, function() {
            var r;
            return __generator(this, function(i) {
              switch (i.label) {
                case 0:
                  return [4, (r = new FrozenModel$1(t, e, null, n)).load()];
                case 1:
                  return i.sent(), [2, r];
              }
            });
          });
        }
        var version = "0.8.4";
        function loadFrozenModel$2(t, e, n, r) {
          return (
            Object(_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__["M"])(
              "tf.loadFrozenModel() is going away. Use tf.loadGraphModel() instead, and note the positional argument changes."
            ),
            t && t.endsWith(".json")
              ? loadFrozenModel$1(t, n, r)
              : (null != t && null == e && (e = getWeightsManifestUrl(t)),
                loadFrozenModel(t, e, n, r))
          );
        }
        function getWeightsManifestUrl(t) {
          var e;
          return (
            null != t &&
              (e =
                t.substr(0, t.lastIndexOf("/")) + "/" + DEFAULT_MANIFEST_NAME),
            e
          );
        }
        function loadGraphModel(t, e) {
          if ((void 0 === e && (e = {}), null == e && (e = {}), e.fromTFHub))
            return loadTfHubModule(t, e.requestInit, e.onProgress);
          var n = void 0;
          return t && t.endsWith(".json")
            ? loadFrozenModel$1(t, e.requestInit, e.onProgress)
            : (null != t && null == n && (n = getWeightsManifestUrl(t)),
              loadFrozenModel(t, n, e.requestInit, e.onProgress));
        }
      }.call(
        this,
        __webpack_require__("c8ba"),
        __webpack_require__("b639").Buffer
      ));
    },
    d17b: function(t, e, n) {
      t.exports = n("e372").Transform;
    },
    d1c8: function(t, e, n) {
      var r = n("3fb5");
      function i(t) {
        this._reporterState = {
          obj: null,
          path: [],
          options: t || {},
          errors: []
        };
      }
      function a(t, e) {
        (this.path = t), this.rethrow(e);
      }
      (e.Reporter = i),
        (i.prototype.isError = function(t) {
          return t instanceof a;
        }),
        (i.prototype.save = function() {
          var t = this._reporterState;
          return { obj: t.obj, pathLen: t.path.length };
        }),
        (i.prototype.restore = function(t) {
          var e = this._reporterState;
          (e.obj = t.obj), (e.path = e.path.slice(0, t.pathLen));
        }),
        (i.prototype.enterKey = function(t) {
          return this._reporterState.path.push(t);
        }),
        (i.prototype.exitKey = function(t) {
          var e = this._reporterState;
          e.path = e.path.slice(0, t - 1);
        }),
        (i.prototype.leaveKey = function(t, e, n) {
          var r = this._reporterState;
          this.exitKey(t), null !== r.obj && (r.obj[e] = n);
        }),
        (i.prototype.path = function() {
          return this._reporterState.path.join("/");
        }),
        (i.prototype.enterObject = function() {
          var t = this._reporterState,
            e = t.obj;
          return (t.obj = {}), e;
        }),
        (i.prototype.leaveObject = function(t) {
          var e = this._reporterState,
            n = e.obj;
          return (e.obj = t), n;
        }),
        (i.prototype.error = function(t) {
          var e,
            n = this._reporterState,
            r = t instanceof a;
          if (
            ((e = r
              ? t
              : new a(
                  n.path
                    .map(function(t) {
                      return "[" + JSON.stringify(t) + "]";
                    })
                    .join(""),
                  t.message || t,
                  t.stack
                )),
            !n.options.partial)
          )
            throw e;
          return r || n.errors.push(e), e;
        }),
        (i.prototype.wrapResult = function(t) {
          var e = this._reporterState;
          return e.options.partial
            ? { result: this.isError(t) ? null : t, errors: e.errors }
            : t;
        }),
        r(a, Error),
        (a.prototype.rethrow = function(t) {
          if (
            ((this.message = t + " at: " + (this.path || "(shallow)")),
            Error.captureStackTrace && Error.captureStackTrace(this, a),
            !this.stack)
          )
            try {
              throw new Error(this.message);
            } catch (e) {
              this.stack = e.stack;
            }
          return this;
        });
    },
    d3f4: function(t, e) {
      t.exports = function(t) {
        return "object" === typeof t ? null !== t : "function" === typeof t;
      };
    },
    d424: function(t, e, n) {
      "use strict";
      var r = n("3fb5"),
        i = n("8707").Buffer,
        a = n("6430"),
        o = i.alloc(128),
        s = 64;
      function u(t, e) {
        a.call(this, "digest"),
          "string" === typeof e && (e = i.from(e)),
          (this._alg = t),
          (this._key = e),
          e.length > s ? (e = t(e)) : e.length < s && (e = i.concat([e, o], s));
        for (
          var n = (this._ipad = i.allocUnsafe(s)),
            r = (this._opad = i.allocUnsafe(s)),
            u = 0;
          u < s;
          u++
        )
          (n[u] = 54 ^ e[u]), (r[u] = 92 ^ e[u]);
        this._hash = [n];
      }
      r(u, a),
        (u.prototype._update = function(t) {
          this._hash.push(t);
        }),
        (u.prototype._final = function() {
          var t = this._alg(i.concat(this._hash));
          return this._alg(i.concat([this._opad, t]));
        }),
        (t.exports = u);
    },
    d485: function(t, e, n) {
      t.exports = a;
      var r = n("faa1").EventEmitter,
        i = n("3fb5");
      function a() {
        r.call(this);
      }
      i(a, r),
        (a.Readable = n("e372")),
        (a.Writable = n("2c63")),
        (a.Duplex = n("0960")),
        (a.Transform = n("d17b")),
        (a.PassThrough = n("c2ae")),
        (a.Stream = a),
        (a.prototype.pipe = function(t, e) {
          var n = this;
          function i(e) {
            t.writable && !1 === t.write(e) && n.pause && n.pause();
          }
          function a() {
            n.readable && n.resume && n.resume();
          }
          n.on("data", i),
            t.on("drain", a),
            t._isStdio ||
              (e && !1 === e.end) ||
              (n.on("end", s), n.on("close", u));
          var o = !1;
          function s() {
            o || ((o = !0), t.end());
          }
          function u() {
            o || ((o = !0), "function" === typeof t.destroy && t.destroy());
          }
          function c(t) {
            if ((l(), 0 === r.listenerCount(this, "error"))) throw t;
          }
          function l() {
            n.removeListener("data", i),
              t.removeListener("drain", a),
              n.removeListener("end", s),
              n.removeListener("close", u),
              n.removeListener("error", c),
              t.removeListener("error", c),
              n.removeListener("end", l),
              n.removeListener("close", l),
              t.removeListener("close", l);
          }
          return (
            n.on("error", c),
            t.on("error", c),
            n.on("end", l),
            n.on("close", l),
            t.on("close", l),
            t.emit("pipe", n),
            t
          );
        });
    },
    d4c0: function(t, e, n) {
      var r = n("0d58"),
        i = n("2621"),
        a = n("52a7");
      t.exports = function(t) {
        var e = r(t),
          n = i.f;
        if (n) {
          var o,
            s = n(t),
            u = a.f,
            c = 0;
          while (s.length > c) u.call(t, (o = s[c++])) && e.push(o);
        }
        return e;
      };
    },
    d53b: function(t, e) {
      t.exports = function(t, e) {
        return { value: e, done: !!t };
      };
    },
    d70e: function(t) {
      t.exports = {
        "2.16.840.1.101.3.4.1.1": "aes-128-ecb",
        "2.16.840.1.101.3.4.1.2": "aes-128-cbc",
        "2.16.840.1.101.3.4.1.3": "aes-128-ofb",
        "2.16.840.1.101.3.4.1.4": "aes-128-cfb",
        "2.16.840.1.101.3.4.1.21": "aes-192-ecb",
        "2.16.840.1.101.3.4.1.22": "aes-192-cbc",
        "2.16.840.1.101.3.4.1.23": "aes-192-ofb",
        "2.16.840.1.101.3.4.1.24": "aes-192-cfb",
        "2.16.840.1.101.3.4.1.41": "aes-256-ecb",
        "2.16.840.1.101.3.4.1.42": "aes-256-cbc",
        "2.16.840.1.101.3.4.1.43": "aes-256-ofb",
        "2.16.840.1.101.3.4.1.44": "aes-256-cfb"
      };
    },
    d864: function(t, e, n) {
      var r = n("79aa");
      t.exports = function(t, e, n) {
        if ((r(t), void 0 === e)) return t;
        switch (n) {
          case 1:
            return function(n) {
              return t.call(e, n);
            };
          case 2:
            return function(n, r) {
              return t.call(e, n, r);
            };
          case 3:
            return function(n, r, i) {
              return t.call(e, n, r, i);
            };
        }
        return function() {
          return t.apply(e, arguments);
        };
      };
    },
    d8e8: function(t, e) {
      t.exports = function(t) {
        if ("function" != typeof t) throw TypeError(t + " is not a function!");
        return t;
      };
    },
    d9f6: function(t, e, n) {
      var r = n("e4ae"),
        i = n("794b"),
        a = n("1bc3"),
        o = Object.defineProperty;
      e.f = n("8e60")
        ? Object.defineProperty
        : function(t, e, n) {
            if ((r(t), (e = a(e, !0)), r(n), i))
              try {
                return o(t, e, n);
              } catch (s) {}
            if ("get" in n || "set" in n)
              throw TypeError("Accessors not supported!");
            return "value" in n && (t[e] = n.value), t;
          };
    },
    da3e: function(t, e) {
      function n(t, e) {
        if (!t) throw new Error(e || "Assertion failed");
      }
      (t.exports = n),
        (n.equal = function(t, e, n) {
          if (t != e)
            throw new Error(n || "Assertion failed: " + t + " != " + e);
        });
    },
    dbdb: function(t, e, n) {
      var r = n("584a"),
        i = n("e53d"),
        a = "__core-js_shared__",
        o = i[a] || (i[a] = {});
      (t.exports = function(t, e) {
        return o[t] || (o[t] = void 0 !== e ? e : {});
      })("versions", []).push({
        version: r.version,
        mode: n("b8e3") ? "pure" : "global",
        copyright: "© 2019 Denis Pushkarev (zloirock.ru)"
      });
    },
    dc14: function(t, e, n) {
      "use strict";
      (function(e, r) {
        var i = n("966d");
        function a(t) {
          var e = this;
          (this.next = null),
            (this.entry = null),
            (this.finish = function() {
              j(e, t);
            });
        }
        t.exports = b;
        var o,
          s =
            !e.browser && ["v0.10", "v0.9."].indexOf(e.version.slice(0, 5)) > -1
              ? setImmediate
              : i.nextTick;
        b.WritableState = g;
        var u = n("3a7c");
        u.inherits = n("3fb5");
        var c = { deprecate: n("b7d1") },
          l = n("429b"),
          f = n("8707").Buffer,
          h = r.Uint8Array || function() {};
        function p(t) {
          return f.from(t);
        }
        function d(t) {
          return f.isBuffer(t) || t instanceof h;
        }
        var m,
          v = n("4681");
        function y() {}
        function g(t, e) {
          (o = o || n("b19a")), (t = t || {});
          var r = e instanceof o;
          (this.objectMode = !!t.objectMode),
            r && (this.objectMode = this.objectMode || !!t.writableObjectMode);
          var i = t.highWaterMark,
            s = t.writableHighWaterMark,
            u = this.objectMode ? 16 : 16384;
          (this.highWaterMark = i || 0 === i ? i : r && (s || 0 === s) ? s : u),
            (this.highWaterMark = Math.floor(this.highWaterMark)),
            (this.finalCalled = !1),
            (this.needDrain = !1),
            (this.ending = !1),
            (this.ended = !1),
            (this.finished = !1),
            (this.destroyed = !1);
          var c = !1 === t.decodeStrings;
          (this.decodeStrings = !c),
            (this.defaultEncoding = t.defaultEncoding || "utf8"),
            (this.length = 0),
            (this.writing = !1),
            (this.corked = 0),
            (this.sync = !0),
            (this.bufferProcessing = !1),
            (this.onwrite = function(t) {
              I(e, t);
            }),
            (this.writecb = null),
            (this.writelen = 0),
            (this.bufferedRequest = null),
            (this.lastBufferedRequest = null),
            (this.pendingcb = 0),
            (this.prefinished = !1),
            (this.errorEmitted = !1),
            (this.bufferedRequestCount = 0),
            (this.corkedRequestsFree = new a(this));
        }
        function b(t) {
          if (((o = o || n("b19a")), !m.call(b, this) && !(this instanceof o)))
            return new b(t);
          (this._writableState = new g(t, this)),
            (this.writable = !0),
            t &&
              ("function" === typeof t.write && (this._write = t.write),
              "function" === typeof t.writev && (this._writev = t.writev),
              "function" === typeof t.destroy && (this._destroy = t.destroy),
              "function" === typeof t.final && (this._final = t.final)),
            l.call(this);
        }
        function w(t, e) {
          var n = new Error("write after end");
          t.emit("error", n), i.nextTick(e, n);
        }
        function _(t, e, n, r) {
          var a = !0,
            o = !1;
          return (
            null === n
              ? (o = new TypeError("May not write null values to stream"))
              : "string" === typeof n ||
                void 0 === n ||
                e.objectMode ||
                (o = new TypeError("Invalid non-string/buffer chunk")),
            o && (t.emit("error", o), i.nextTick(r, o), (a = !1)),
            a
          );
        }
        function x(t, e, n) {
          return (
            t.objectMode ||
              !1 === t.decodeStrings ||
              "string" !== typeof e ||
              (e = f.from(e, n)),
            e
          );
        }
        function E(t, e, n, r, i, a) {
          if (!n) {
            var o = x(e, r, i);
            r !== o && ((n = !0), (i = "buffer"), (r = o));
          }
          var s = e.objectMode ? 1 : r.length;
          e.length += s;
          var u = e.length < e.highWaterMark;
          if ((u || (e.needDrain = !0), e.writing || e.corked)) {
            var c = e.lastBufferedRequest;
            (e.lastBufferedRequest = {
              chunk: r,
              encoding: i,
              isBuf: n,
              callback: a,
              next: null
            }),
              c
                ? (c.next = e.lastBufferedRequest)
                : (e.bufferedRequest = e.lastBufferedRequest),
              (e.bufferedRequestCount += 1);
          } else S(t, e, !1, s, r, i, a);
          return u;
        }
        function S(t, e, n, r, i, a, o) {
          (e.writelen = r),
            (e.writecb = o),
            (e.writing = !0),
            (e.sync = !0),
            n ? t._writev(i, e.onwrite) : t._write(i, a, e.onwrite),
            (e.sync = !1);
        }
        function N(t, e, n, r, a) {
          --e.pendingcb,
            n
              ? (i.nextTick(a, r),
                i.nextTick(D, t, e),
                (t._writableState.errorEmitted = !0),
                t.emit("error", r))
              : (a(r),
                (t._writableState.errorEmitted = !0),
                t.emit("error", r),
                D(t, e));
        }
        function O(t) {
          (t.writing = !1),
            (t.writecb = null),
            (t.length -= t.writelen),
            (t.writelen = 0);
        }
        function I(t, e) {
          var n = t._writableState,
            r = n.sync,
            i = n.writecb;
          if ((O(n), e)) N(t, n, r, e, i);
          else {
            var a = P(n);
            a ||
              n.corked ||
              n.bufferProcessing ||
              !n.bufferedRequest ||
              k(t, n),
              r ? s(C, t, n, a, i) : C(t, n, a, i);
          }
        }
        function C(t, e, n, r) {
          n || A(t, e), e.pendingcb--, r(), D(t, e);
        }
        function A(t, e) {
          0 === e.length &&
            e.needDrain &&
            ((e.needDrain = !1), t.emit("drain"));
        }
        function k(t, e) {
          e.bufferProcessing = !0;
          var n = e.bufferedRequest;
          if (t._writev && n && n.next) {
            var r = e.bufferedRequestCount,
              i = new Array(r),
              o = e.corkedRequestsFree;
            o.entry = n;
            var s = 0,
              u = !0;
            while (n) (i[s] = n), n.isBuf || (u = !1), (n = n.next), (s += 1);
            (i.allBuffers = u),
              S(t, e, !0, e.length, i, "", o.finish),
              e.pendingcb++,
              (e.lastBufferedRequest = null),
              o.next
                ? ((e.corkedRequestsFree = o.next), (o.next = null))
                : (e.corkedRequestsFree = new a(e)),
              (e.bufferedRequestCount = 0);
          } else {
            while (n) {
              var c = n.chunk,
                l = n.encoding,
                f = n.callback,
                h = e.objectMode ? 1 : c.length;
              if (
                (S(t, e, !1, h, c, l, f),
                (n = n.next),
                e.bufferedRequestCount--,
                e.writing)
              )
                break;
            }
            null === n && (e.lastBufferedRequest = null);
          }
          (e.bufferedRequest = n), (e.bufferProcessing = !1);
        }
        function P(t) {
          return (
            t.ending &&
            0 === t.length &&
            null === t.bufferedRequest &&
            !t.finished &&
            !t.writing
          );
        }
        function T(t, e) {
          t._final(function(n) {
            e.pendingcb--,
              n && t.emit("error", n),
              (e.prefinished = !0),
              t.emit("prefinish"),
              D(t, e);
          });
        }
        function R(t, e) {
          e.prefinished ||
            e.finalCalled ||
            ("function" === typeof t._final
              ? (e.pendingcb++, (e.finalCalled = !0), i.nextTick(T, t, e))
              : ((e.prefinished = !0), t.emit("prefinish")));
        }
        function D(t, e) {
          var n = P(e);
          return (
            n &&
              (R(t, e),
              0 === e.pendingcb && ((e.finished = !0), t.emit("finish"))),
            n
          );
        }
        function M(t, e, n) {
          (e.ending = !0),
            D(t, e),
            n && (e.finished ? i.nextTick(n) : t.once("finish", n)),
            (e.ended = !0),
            (t.writable = !1);
        }
        function j(t, e, n) {
          var r = t.entry;
          t.entry = null;
          while (r) {
            var i = r.callback;
            e.pendingcb--, i(n), (r = r.next);
          }
          e.corkedRequestsFree
            ? (e.corkedRequestsFree.next = t)
            : (e.corkedRequestsFree = t);
        }
        u.inherits(b, l),
          (g.prototype.getBuffer = function() {
            var t = this.bufferedRequest,
              e = [];
            while (t) e.push(t), (t = t.next);
            return e;
          }),
          (function() {
            try {
              Object.defineProperty(g.prototype, "buffer", {
                get: c.deprecate(
                  function() {
                    return this.getBuffer();
                  },
                  "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.",
                  "DEP0003"
                )
              });
            } catch (t) {}
          })(),
          "function" === typeof Symbol &&
          Symbol.hasInstance &&
          "function" === typeof Function.prototype[Symbol.hasInstance]
            ? ((m = Function.prototype[Symbol.hasInstance]),
              Object.defineProperty(b, Symbol.hasInstance, {
                value: function(t) {
                  return (
                    !!m.call(this, t) ||
                    (this === b && (t && t._writableState instanceof g))
                  );
                }
              }))
            : (m = function(t) {
                return t instanceof this;
              }),
          (b.prototype.pipe = function() {
            this.emit("error", new Error("Cannot pipe, not readable"));
          }),
          (b.prototype.write = function(t, e, n) {
            var r = this._writableState,
              i = !1,
              a = !r.objectMode && d(t);
            return (
              a && !f.isBuffer(t) && (t = p(t)),
              "function" === typeof e && ((n = e), (e = null)),
              a ? (e = "buffer") : e || (e = r.defaultEncoding),
              "function" !== typeof n && (n = y),
              r.ended
                ? w(this, n)
                : (a || _(this, r, t, n)) &&
                  (r.pendingcb++, (i = E(this, r, a, t, e, n))),
              i
            );
          }),
          (b.prototype.cork = function() {
            var t = this._writableState;
            t.corked++;
          }),
          (b.prototype.uncork = function() {
            var t = this._writableState;
            t.corked &&
              (t.corked--,
              t.writing ||
                t.corked ||
                t.finished ||
                t.bufferProcessing ||
                !t.bufferedRequest ||
                k(this, t));
          }),
          (b.prototype.setDefaultEncoding = function(t) {
            if (
              ("string" === typeof t && (t = t.toLowerCase()),
              !(
                [
                  "hex",
                  "utf8",
                  "utf-8",
                  "ascii",
                  "binary",
                  "base64",
                  "ucs2",
                  "ucs-2",
                  "utf16le",
                  "utf-16le",
                  "raw"
                ].indexOf((t + "").toLowerCase()) > -1
              ))
            )
              throw new TypeError("Unknown encoding: " + t);
            return (this._writableState.defaultEncoding = t), this;
          }),
          Object.defineProperty(b.prototype, "writableHighWaterMark", {
            enumerable: !1,
            get: function() {
              return this._writableState.highWaterMark;
            }
          }),
          (b.prototype._write = function(t, e, n) {
            n(new Error("_write() is not implemented"));
          }),
          (b.prototype._writev = null),
          (b.prototype.end = function(t, e, n) {
            var r = this._writableState;
            "function" === typeof t
              ? ((n = t), (t = null), (e = null))
              : "function" === typeof e && ((n = e), (e = null)),
              null !== t && void 0 !== t && this.write(t, e),
              r.corked && ((r.corked = 1), this.uncork()),
              r.ending || r.finished || M(this, r, n);
          }),
          Object.defineProperty(b.prototype, "destroyed", {
            get: function() {
              return (
                void 0 !== this._writableState && this._writableState.destroyed
              );
            },
            set: function(t) {
              this._writableState && (this._writableState.destroyed = t);
            }
          }),
          (b.prototype.destroy = v.destroy),
          (b.prototype._undestroy = v.undestroy),
          (b.prototype._destroy = function(t, e) {
            this.end(), e(t);
          });
      }.call(this, n("f28c"), n("c8ba")));
    },
    dcbc: function(t, e, n) {
      var r = n("2aba");
      t.exports = function(t, e, n) {
        for (var i in e) r(t, i, e[i], n);
        return t;
      };
    },
    e07b: function(t, e, n) {
      var r = n("5a76"),
        i = n("b5ca"),
        a = n("69f2"),
        o = n("7d2a"),
        s = n("9f9d"),
        u = n("8707").Buffer,
        c = u.alloc(128),
        l = {
          md5: 16,
          sha1: 20,
          sha224: 28,
          sha256: 32,
          sha384: 48,
          sha512: 64,
          rmd160: 20,
          ripemd160: 20
        };
      function f(t, e, n) {
        var r = h(t),
          i = "sha512" === t || "sha384" === t ? 128 : 64;
        e.length > i ? (e = r(e)) : e.length < i && (e = u.concat([e, c], i));
        for (
          var a = u.allocUnsafe(i + l[t]), o = u.allocUnsafe(i + l[t]), s = 0;
          s < i;
          s++
        )
          (a[s] = 54 ^ e[s]), (o[s] = 92 ^ e[s]);
        var f = u.allocUnsafe(i + n + 4);
        a.copy(f, 0, 0, i),
          (this.ipad1 = f),
          (this.ipad2 = a),
          (this.opad = o),
          (this.alg = t),
          (this.blocksize = i),
          (this.hash = r),
          (this.size = l[t]);
      }
      function h(t) {
        function e(e) {
          return a(t)
            .update(e)
            .digest();
        }
        function n(t) {
          return new i().update(t).digest();
        }
        return "rmd160" === t || "ripemd160" === t ? n : "md5" === t ? r : e;
      }
      function p(t, e, n, r, i) {
        o(t, e, n, r),
          u.isBuffer(t) || (t = u.from(t, s)),
          u.isBuffer(e) || (e = u.from(e, s)),
          (i = i || "sha1");
        var a = new f(i, t, e.length),
          c = u.allocUnsafe(r),
          h = u.allocUnsafe(e.length + 4);
        e.copy(h, 0, 0, e.length);
        for (var p = 0, d = l[i], m = Math.ceil(r / d), v = 1; v <= m; v++) {
          h.writeUInt32BE(v, e.length);
          for (var y = a.run(h, a.ipad1), g = y, b = 1; b < n; b++) {
            g = a.run(g, a.ipad2);
            for (var w = 0; w < d; w++) y[w] ^= g[w];
          }
          y.copy(c, p), (p += d);
        }
        return c;
      }
      (f.prototype.run = function(t, e) {
        t.copy(e, this.blocksize);
        var n = this.hash(e);
        return n.copy(this.opad, this.blocksize), this.hash(this.opad);
      }),
        (t.exports = p);
    },
    e11e: function(t, e) {
      t.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(
        ","
      );
    },
    e1d3: function(t, e, n) {
      (function(e) {
        var r = n("3337"),
          i = n("399f");
        t.exports = function(t) {
          return new o(t);
        };
        var a = {
          secp256k1: { name: "secp256k1", byteLength: 32 },
          secp224r1: { name: "p224", byteLength: 28 },
          prime256v1: { name: "p256", byteLength: 32 },
          prime192v1: { name: "p192", byteLength: 24 },
          ed25519: { name: "ed25519", byteLength: 32 },
          secp384r1: { name: "p384", byteLength: 48 },
          secp521r1: { name: "p521", byteLength: 66 }
        };
        function o(t) {
          (this.curveType = a[t]),
            this.curveType || (this.curveType = { name: t }),
            (this.curve = new r.ec(this.curveType.name)),
            (this.keys = void 0);
        }
        function s(t, n, r) {
          Array.isArray(t) || (t = t.toArray());
          var i = new e(t);
          if (r && i.length < r) {
            var a = new e(r - i.length);
            a.fill(0), (i = e.concat([a, i]));
          }
          return n ? i.toString(n) : i;
        }
        (a.p224 = a.secp224r1),
          (a.p256 = a.secp256r1 = a.prime256v1),
          (a.p192 = a.secp192r1 = a.prime192v1),
          (a.p384 = a.secp384r1),
          (a.p521 = a.secp521r1),
          (o.prototype.generateKeys = function(t, e) {
            return (
              (this.keys = this.curve.genKeyPair()), this.getPublicKey(t, e)
            );
          }),
          (o.prototype.computeSecret = function(t, n, r) {
            (n = n || "utf8"), e.isBuffer(t) || (t = new e(t, n));
            var i = this.curve.keyFromPublic(t).getPublic(),
              a = i.mul(this.keys.getPrivate()).getX();
            return s(a, r, this.curveType.byteLength);
          }),
          (o.prototype.getPublicKey = function(t, e) {
            var n = this.keys.getPublic("compressed" === e, !0);
            return (
              "hybrid" === e && (n[n.length - 1] % 2 ? (n[0] = 7) : (n[0] = 6)),
              s(n, t)
            );
          }),
          (o.prototype.getPrivateKey = function(t) {
            return s(this.keys.getPrivate(), t);
          }),
          (o.prototype.setPublicKey = function(t, n) {
            return (
              (n = n || "utf8"),
              e.isBuffer(t) || (t = new e(t, n)),
              this.keys._importPublic(t),
              this
            );
          }),
          (o.prototype.setPrivateKey = function(t, n) {
            (n = n || "utf8"), e.isBuffer(t) || (t = new e(t, n));
            var r = new i(t);
            return (
              (r = r.toString(16)),
              (this.keys = this.curve.genKeyPair()),
              this.keys._importPrivate(r),
              this
            );
          });
      }.call(this, n("b639").Buffer));
    },
    e372: function(t, e, n) {
      (e = t.exports = n("ad71")),
        (e.Stream = e),
        (e.Readable = e),
        (e.Writable = n("dc14")),
        (e.Duplex = n("b19a")),
        (e.Transform = n("27bf")),
        (e.PassThrough = n("780f"));
    },
    e3db: function(t, e) {
      var n = {}.toString;
      t.exports =
        Array.isArray ||
        function(t) {
          return "[object Array]" == n.call(t);
        };
    },
    e4ae: function(t, e, n) {
      var r = n("f772");
      t.exports = function(t) {
        if (!r(t)) throw TypeError(t + " is not an object!");
        return t;
      };
    },
    e53d: function(t, e) {
      var n = (t.exports =
        "undefined" != typeof window && window.Math == Math
          ? window
          : "undefined" != typeof self && self.Math == Math
          ? self
          : Function("return this")());
      "number" == typeof __g && (__g = n);
    },
    e6f3: function(t, e, n) {
      var r = n("07e3"),
        i = n("36c3"),
        a = n("5b4e")(!1),
        o = n("5559")("IE_PROTO");
      t.exports = function(t, e) {
        var n,
          s = i(t),
          u = 0,
          c = [];
        for (n in s) n != o && r(s, n) && c.push(n);
        while (e.length > u) r(s, (n = e[u++])) && (~a(c, n) || c.push(n));
        return c;
      };
    },
    e85f: function(t) {
      t.exports = {
        "aes-128-ecb": {
          cipher: "AES",
          key: 128,
          iv: 0,
          mode: "ECB",
          type: "block"
        },
        "aes-192-ecb": {
          cipher: "AES",
          key: 192,
          iv: 0,
          mode: "ECB",
          type: "block"
        },
        "aes-256-ecb": {
          cipher: "AES",
          key: 256,
          iv: 0,
          mode: "ECB",
          type: "block"
        },
        "aes-128-cbc": {
          cipher: "AES",
          key: 128,
          iv: 16,
          mode: "CBC",
          type: "block"
        },
        "aes-192-cbc": {
          cipher: "AES",
          key: 192,
          iv: 16,
          mode: "CBC",
          type: "block"
        },
        "aes-256-cbc": {
          cipher: "AES",
          key: 256,
          iv: 16,
          mode: "CBC",
          type: "block"
        },
        aes128: { cipher: "AES", key: 128, iv: 16, mode: "CBC", type: "block" },
        aes192: { cipher: "AES", key: 192, iv: 16, mode: "CBC", type: "block" },
        aes256: { cipher: "AES", key: 256, iv: 16, mode: "CBC", type: "block" },
        "aes-128-cfb": {
          cipher: "AES",
          key: 128,
          iv: 16,
          mode: "CFB",
          type: "stream"
        },
        "aes-192-cfb": {
          cipher: "AES",
          key: 192,
          iv: 16,
          mode: "CFB",
          type: "stream"
        },
        "aes-256-cfb": {
          cipher: "AES",
          key: 256,
          iv: 16,
          mode: "CFB",
          type: "stream"
        },
        "aes-128-cfb8": {
          cipher: "AES",
          key: 128,
          iv: 16,
          mode: "CFB8",
          type: "stream"
        },
        "aes-192-cfb8": {
          cipher: "AES",
          key: 192,
          iv: 16,
          mode: "CFB8",
          type: "stream"
        },
        "aes-256-cfb8": {
          cipher: "AES",
          key: 256,
          iv: 16,
          mode: "CFB8",
          type: "stream"
        },
        "aes-128-cfb1": {
          cipher: "AES",
          key: 128,
          iv: 16,
          mode: "CFB1",
          type: "stream"
        },
        "aes-192-cfb1": {
          cipher: "AES",
          key: 192,
          iv: 16,
          mode: "CFB1",
          type: "stream"
        },
        "aes-256-cfb1": {
          cipher: "AES",
          key: 256,
          iv: 16,
          mode: "CFB1",
          type: "stream"
        },
        "aes-128-ofb": {
          cipher: "AES",
          key: 128,
          iv: 16,
          mode: "OFB",
          type: "stream"
        },
        "aes-192-ofb": {
          cipher: "AES",
          key: 192,
          iv: 16,
          mode: "OFB",
          type: "stream"
        },
        "aes-256-ofb": {
          cipher: "AES",
          key: 256,
          iv: 16,
          mode: "OFB",
          type: "stream"
        },
        "aes-128-ctr": {
          cipher: "AES",
          key: 128,
          iv: 16,
          mode: "CTR",
          type: "stream"
        },
        "aes-192-ctr": {
          cipher: "AES",
          key: 192,
          iv: 16,
          mode: "CTR",
          type: "stream"
        },
        "aes-256-ctr": {
          cipher: "AES",
          key: 256,
          iv: 16,
          mode: "CTR",
          type: "stream"
        },
        "aes-128-gcm": {
          cipher: "AES",
          key: 128,
          iv: 12,
          mode: "GCM",
          type: "auth"
        },
        "aes-192-gcm": {
          cipher: "AES",
          key: 192,
          iv: 12,
          mode: "GCM",
          type: "auth"
        },
        "aes-256-gcm": {
          cipher: "AES",
          key: 256,
          iv: 12,
          mode: "GCM",
          type: "auth"
        }
      };
    },
    ea53: function(t, e, n) {
      "use strict";
      var r = n("399f"),
        i = n("3337"),
        a = i.utils,
        o = a.getNAF,
        s = a.getJSF,
        u = a.assert;
      function c(t, e) {
        (this.type = t),
          (this.p = new r(e.p, 16)),
          (this.red = e.prime ? r.red(e.prime) : r.mont(this.p)),
          (this.zero = new r(0).toRed(this.red)),
          (this.one = new r(1).toRed(this.red)),
          (this.two = new r(2).toRed(this.red)),
          (this.n = e.n && new r(e.n, 16)),
          (this.g = e.g && this.pointFromJSON(e.g, e.gRed)),
          (this._wnafT1 = new Array(4)),
          (this._wnafT2 = new Array(4)),
          (this._wnafT3 = new Array(4)),
          (this._wnafT4 = new Array(4));
        var n = this.n && this.p.div(this.n);
        !n || n.cmpn(100) > 0
          ? (this.redN = null)
          : ((this._maxwellTrick = !0), (this.redN = this.n.toRed(this.red)));
      }
      function l(t, e) {
        (this.curve = t), (this.type = e), (this.precomputed = null);
      }
      (t.exports = c),
        (c.prototype.point = function() {
          throw new Error("Not implemented");
        }),
        (c.prototype.validate = function() {
          throw new Error("Not implemented");
        }),
        (c.prototype._fixedNafMul = function(t, e) {
          u(t.precomputed);
          var n = t._getDoubles(),
            r = o(e, 1),
            i = (1 << (n.step + 1)) - (n.step % 2 === 0 ? 2 : 1);
          i /= 3;
          for (var a = [], s = 0; s < r.length; s += n.step) {
            var c = 0;
            for (e = s + n.step - 1; e >= s; e--) c = (c << 1) + r[e];
            a.push(c);
          }
          for (
            var l = this.jpoint(null, null, null),
              f = this.jpoint(null, null, null),
              h = i;
            h > 0;
            h--
          ) {
            for (s = 0; s < a.length; s++) {
              c = a[s];
              c === h
                ? (f = f.mixedAdd(n.points[s]))
                : c === -h && (f = f.mixedAdd(n.points[s].neg()));
            }
            l = l.add(f);
          }
          return l.toP();
        }),
        (c.prototype._wnafMul = function(t, e) {
          var n = 4,
            r = t._getNAFPoints(n);
          n = r.wnd;
          for (
            var i = r.points,
              a = o(e, n),
              s = this.jpoint(null, null, null),
              c = a.length - 1;
            c >= 0;
            c--
          ) {
            for (e = 0; c >= 0 && 0 === a[c]; c--) e++;
            if ((c >= 0 && e++, (s = s.dblp(e)), c < 0)) break;
            var l = a[c];
            u(0 !== l),
              (s =
                "affine" === t.type
                  ? l > 0
                    ? s.mixedAdd(i[(l - 1) >> 1])
                    : s.mixedAdd(i[(-l - 1) >> 1].neg())
                  : l > 0
                  ? s.add(i[(l - 1) >> 1])
                  : s.add(i[(-l - 1) >> 1].neg()));
          }
          return "affine" === t.type ? s.toP() : s;
        }),
        (c.prototype._wnafMulAdd = function(t, e, n, r, i) {
          for (
            var a = this._wnafT1,
              u = this._wnafT2,
              c = this._wnafT3,
              l = 0,
              f = 0;
            f < r;
            f++
          ) {
            var h = e[f],
              p = h._getNAFPoints(t);
            (a[f] = p.wnd), (u[f] = p.points);
          }
          for (f = r - 1; f >= 1; f -= 2) {
            var d = f - 1,
              m = f;
            if (1 === a[d] && 1 === a[m]) {
              var v = [e[d], null, null, e[m]];
              0 === e[d].y.cmp(e[m].y)
                ? ((v[1] = e[d].add(e[m])),
                  (v[2] = e[d].toJ().mixedAdd(e[m].neg())))
                : 0 === e[d].y.cmp(e[m].y.redNeg())
                ? ((v[1] = e[d].toJ().mixedAdd(e[m])),
                  (v[2] = e[d].add(e[m].neg())))
                : ((v[1] = e[d].toJ().mixedAdd(e[m])),
                  (v[2] = e[d].toJ().mixedAdd(e[m].neg())));
              var y = [-3, -1, -5, -7, 0, 7, 5, 1, 3],
                g = s(n[d], n[m]);
              (l = Math.max(g[0].length, l)),
                (c[d] = new Array(l)),
                (c[m] = new Array(l));
              for (var b = 0; b < l; b++) {
                var w = 0 | g[0][b],
                  _ = 0 | g[1][b];
                (c[d][b] = y[3 * (w + 1) + (_ + 1)]), (c[m][b] = 0), (u[d] = v);
              }
            } else
              (c[d] = o(n[d], a[d])),
                (c[m] = o(n[m], a[m])),
                (l = Math.max(c[d].length, l)),
                (l = Math.max(c[m].length, l));
          }
          var x = this.jpoint(null, null, null),
            E = this._wnafT4;
          for (f = l; f >= 0; f--) {
            var S = 0;
            while (f >= 0) {
              var N = !0;
              for (b = 0; b < r; b++)
                (E[b] = 0 | c[b][f]), 0 !== E[b] && (N = !1);
              if (!N) break;
              S++, f--;
            }
            if ((f >= 0 && S++, (x = x.dblp(S)), f < 0)) break;
            for (b = 0; b < r; b++) {
              var O = E[b];
              0 !== O &&
                (O > 0
                  ? (h = u[b][(O - 1) >> 1])
                  : O < 0 && (h = u[b][(-O - 1) >> 1].neg()),
                (x = "affine" === h.type ? x.mixedAdd(h) : x.add(h)));
            }
          }
          for (f = 0; f < r; f++) u[f] = null;
          return i ? x : x.toP();
        }),
        (c.BasePoint = l),
        (l.prototype.eq = function() {
          throw new Error("Not implemented");
        }),
        (l.prototype.validate = function() {
          return this.curve.validate(this);
        }),
        (c.prototype.decodePoint = function(t, e) {
          t = a.toArray(t, e);
          var n = this.p.byteLength();
          if (
            (4 === t[0] || 6 === t[0] || 7 === t[0]) &&
            t.length - 1 === 2 * n
          ) {
            6 === t[0]
              ? u(t[t.length - 1] % 2 === 0)
              : 7 === t[0] && u(t[t.length - 1] % 2 === 1);
            var r = this.point(t.slice(1, 1 + n), t.slice(1 + n, 1 + 2 * n));
            return r;
          }
          if ((2 === t[0] || 3 === t[0]) && t.length - 1 === n)
            return this.pointFromX(t.slice(1, 1 + n), 3 === t[0]);
          throw new Error("Unknown point format");
        }),
        (l.prototype.encodeCompressed = function(t) {
          return this.encode(t, !0);
        }),
        (l.prototype._encode = function(t) {
          var e = this.curve.p.byteLength(),
            n = this.getX().toArray("be", e);
          return t
            ? [this.getY().isEven() ? 2 : 3].concat(n)
            : [4].concat(n, this.getY().toArray("be", e));
        }),
        (l.prototype.encode = function(t, e) {
          return a.encode(this._encode(e), t);
        }),
        (l.prototype.precompute = function(t) {
          if (this.precomputed) return this;
          var e = { doubles: null, naf: null, beta: null };
          return (
            (e.naf = this._getNAFPoints(8)),
            (e.doubles = this._getDoubles(4, t)),
            (e.beta = this._getBeta()),
            (this.precomputed = e),
            this
          );
        }),
        (l.prototype._hasDoubles = function(t) {
          if (!this.precomputed) return !1;
          var e = this.precomputed.doubles;
          return (
            !!e && e.points.length >= Math.ceil((t.bitLength() + 1) / e.step)
          );
        }),
        (l.prototype._getDoubles = function(t, e) {
          if (this.precomputed && this.precomputed.doubles)
            return this.precomputed.doubles;
          for (var n = [this], r = this, i = 0; i < e; i += t) {
            for (var a = 0; a < t; a++) r = r.dbl();
            n.push(r);
          }
          return { step: t, points: n };
        }),
        (l.prototype._getNAFPoints = function(t) {
          if (this.precomputed && this.precomputed.naf)
            return this.precomputed.naf;
          for (
            var e = [this],
              n = (1 << t) - 1,
              r = 1 === n ? null : this.dbl(),
              i = 1;
            i < n;
            i++
          )
            e[i] = e[i - 1].add(r);
          return { wnd: t, points: e };
        }),
        (l.prototype._getBeta = function() {
          return null;
        }),
        (l.prototype.dblp = function(t) {
          for (var e = this, n = 0; n < t; n++) e = e.dbl();
          return e;
        });
    },
    ebd6: function(t, e, n) {
      var r = n("cb7c"),
        i = n("d8e8"),
        a = n("2b4c")("species");
      t.exports = function(t, e) {
        var n,
          o = r(t).constructor;
        return void 0 === o || void 0 == (n = r(o)[a]) ? e : i(n);
      };
    },
    edc9: function(t, e, n) {
      "use strict";
      var r = n("c3c0"),
        i = n("da3e");
      function a() {
        (this.pending = null),
          (this.pendingTotal = 0),
          (this.blockSize = this.constructor.blockSize),
          (this.outSize = this.constructor.outSize),
          (this.hmacStrength = this.constructor.hmacStrength),
          (this.padLength = this.constructor.padLength / 8),
          (this.endian = "big"),
          (this._delta8 = this.blockSize / 8),
          (this._delta32 = this.blockSize / 32);
      }
      (e.BlockHash = a),
        (a.prototype.update = function(t, e) {
          if (
            ((t = r.toArray(t, e)),
            this.pending
              ? (this.pending = this.pending.concat(t))
              : (this.pending = t),
            (this.pendingTotal += t.length),
            this.pending.length >= this._delta8)
          ) {
            t = this.pending;
            var n = t.length % this._delta8;
            (this.pending = t.slice(t.length - n, t.length)),
              0 === this.pending.length && (this.pending = null),
              (t = r.join32(t, 0, t.length - n, this.endian));
            for (var i = 0; i < t.length; i += this._delta32)
              this._update(t, i, i + this._delta32);
          }
          return this;
        }),
        (a.prototype.digest = function(t) {
          return (
            this.update(this._pad()), i(null === this.pending), this._digest(t)
          );
        }),
        (a.prototype._pad = function() {
          var t = this.pendingTotal,
            e = this._delta8,
            n = e - ((t + this.padLength) % e),
            r = new Array(n + this.padLength);
          r[0] = 128;
          for (var i = 1; i < n; i++) r[i] = 0;
          if (((t <<= 3), "big" === this.endian)) {
            for (var a = 8; a < this.padLength; a++) r[i++] = 0;
            (r[i++] = 0),
              (r[i++] = 0),
              (r[i++] = 0),
              (r[i++] = 0),
              (r[i++] = (t >>> 24) & 255),
              (r[i++] = (t >>> 16) & 255),
              (r[i++] = (t >>> 8) & 255),
              (r[i++] = 255 & t);
          } else
            for (
              r[i++] = 255 & t,
                r[i++] = (t >>> 8) & 255,
                r[i++] = (t >>> 16) & 255,
                r[i++] = (t >>> 24) & 255,
                r[i++] = 0,
                r[i++] = 0,
                r[i++] = 0,
                r[i++] = 0,
                a = 8;
              a < this.padLength;
              a++
            )
              r[i++] = 0;
          return r;
        });
    },
    ee34: function(t, e) {
      var n = [].indexOf;
      t.exports = function(t, e) {
        if (n) return t.indexOf(e);
        for (var r = 0; r < t.length; ++r) if (t[r] === e) return r;
        return -1;
      };
    },
    ef3a: function(t, e, n) {
      var r = n("7f7a"),
        i = n("3fb5"),
        a = e;
      function o(t, e) {
        (this.name = t),
          (this.body = e),
          (this.decoders = {}),
          (this.encoders = {});
      }
      (a.define = function(t, e) {
        return new o(t, e);
      }),
        (o.prototype._createNamed = function(t) {
          var e;
          try {
            e = n("0706").runInThisContext(
              "(function " +
                this.name +
                "(entity) {\n  this._initNamed(entity);\n})"
            );
          } catch (r) {
            e = function(t) {
              this._initNamed(t);
            };
          }
          return (
            i(e, t),
            (e.prototype._initNamed = function(e) {
              t.call(this, e);
            }),
            new e(this)
          );
        }),
        (o.prototype._getDecoder = function(t) {
          return (
            (t = t || "der"),
            this.decoders.hasOwnProperty(t) ||
              (this.decoders[t] = this._createNamed(r.decoders[t])),
            this.decoders[t]
          );
        }),
        (o.prototype.decode = function(t, e, n) {
          return this._getDecoder(e).decode(t, n);
        }),
        (o.prototype._getEncoder = function(t) {
          return (
            (t = t || "der"),
            this.encoders.hasOwnProperty(t) ||
              (this.encoders[t] = this._createNamed(r.encoders[t])),
            this.encoders[t]
          );
        }),
        (o.prototype.encode = function(t, e, n) {
          return this._getEncoder(e).encode(t, n);
        });
    },
    f201: function(t, e, n) {
      var r = n("e4ae"),
        i = n("79aa"),
        a = n("5168")("species");
      t.exports = function(t, e) {
        var n,
          o = r(t).constructor;
        return void 0 === o || void 0 == (n = r(o)[a]) ? e : i(n);
      };
    },
    f28c: function(t, e) {
      var n,
        r,
        i = (t.exports = {});
      function a() {
        throw new Error("setTimeout has not been defined");
      }
      function o() {
        throw new Error("clearTimeout has not been defined");
      }
      function s(t) {
        if (n === setTimeout) return setTimeout(t, 0);
        if ((n === a || !n) && setTimeout)
          return (n = setTimeout), setTimeout(t, 0);
        try {
          return n(t, 0);
        } catch (e) {
          try {
            return n.call(null, t, 0);
          } catch (e) {
            return n.call(this, t, 0);
          }
        }
      }
      function u(t) {
        if (r === clearTimeout) return clearTimeout(t);
        if ((r === o || !r) && clearTimeout)
          return (r = clearTimeout), clearTimeout(t);
        try {
          return r(t);
        } catch (e) {
          try {
            return r.call(null, t);
          } catch (e) {
            return r.call(this, t);
          }
        }
      }
      (function() {
        try {
          n = "function" === typeof setTimeout ? setTimeout : a;
        } catch (t) {
          n = a;
        }
        try {
          r = "function" === typeof clearTimeout ? clearTimeout : o;
        } catch (t) {
          r = o;
        }
      })();
      var c,
        l = [],
        f = !1,
        h = -1;
      function p() {
        f &&
          c &&
          ((f = !1), c.length ? (l = c.concat(l)) : (h = -1), l.length && d());
      }
      function d() {
        if (!f) {
          var t = s(p);
          f = !0;
          var e = l.length;
          while (e) {
            (c = l), (l = []);
            while (++h < e) c && c[h].run();
            (h = -1), (e = l.length);
          }
          (c = null), (f = !1), u(t);
        }
      }
      function m(t, e) {
        (this.fun = t), (this.array = e);
      }
      function v() {}
      (i.nextTick = function(t) {
        var e = new Array(arguments.length - 1);
        if (arguments.length > 1)
          for (var n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
        l.push(new m(t, e)), 1 !== l.length || f || s(d);
      }),
        (m.prototype.run = function() {
          this.fun.apply(null, this.array);
        }),
        (i.title = "browser"),
        (i.browser = !0),
        (i.env = {}),
        (i.argv = []),
        (i.version = ""),
        (i.versions = {}),
        (i.on = v),
        (i.addListener = v),
        (i.once = v),
        (i.off = v),
        (i.removeListener = v),
        (i.removeAllListeners = v),
        (i.emit = v),
        (i.prependListener = v),
        (i.prependOnceListener = v),
        (i.listeners = function(t) {
          return [];
        }),
        (i.binding = function(t) {
          throw new Error("process.binding is not supported");
        }),
        (i.cwd = function() {
          return "/";
        }),
        (i.chdir = function(t) {
          throw new Error("process.chdir is not supported");
        }),
        (i.umask = function() {
          return 0;
        });
    },
    f3a3: function(t, e, n) {
      "use strict";
      var r = e,
        i = n("399f"),
        a = n("da3e"),
        o = n("7658");
      function s(t, e) {
        var n = [],
          r = 1 << (e + 1),
          i = t.clone();
        while (i.cmpn(1) >= 0) {
          var a;
          if (i.isOdd()) {
            var o = i.andln(r - 1);
            (a = o > (r >> 1) - 1 ? (r >> 1) - o : o), i.isubn(a);
          } else a = 0;
          n.push(a);
          for (
            var s = 0 !== i.cmpn(0) && 0 === i.andln(r - 1) ? e + 1 : 1, u = 1;
            u < s;
            u++
          )
            n.push(0);
          i.iushrn(s);
        }
        return n;
      }
      function u(t, e) {
        var n = [[], []];
        (t = t.clone()), (e = e.clone());
        var r = 0,
          i = 0;
        while (t.cmpn(-r) > 0 || e.cmpn(-i) > 0) {
          var a,
            o,
            s = (t.andln(3) + r) & 3,
            u = (e.andln(3) + i) & 3;
          if ((3 === s && (s = -1), 3 === u && (u = -1), 0 === (1 & s))) a = 0;
          else {
            var c = (t.andln(7) + r) & 7;
            a = (3 !== c && 5 !== c) || 2 !== u ? s : -s;
          }
          if ((n[0].push(a), 0 === (1 & u))) o = 0;
          else {
            c = (e.andln(7) + i) & 7;
            o = (3 !== c && 5 !== c) || 2 !== s ? u : -u;
          }
          n[1].push(o),
            2 * r === a + 1 && (r = 1 - r),
            2 * i === o + 1 && (i = 1 - i),
            t.iushrn(1),
            e.iushrn(1);
        }
        return n;
      }
      function c(t, e, n) {
        var r = "_" + e;
        t.prototype[e] = function() {
          return void 0 !== this[r] ? this[r] : (this[r] = n.call(this));
        };
      }
      function l(t) {
        return "string" === typeof t ? r.toArray(t, "hex") : t;
      }
      function f(t) {
        return new i(t, "hex", "le");
      }
      (r.assert = a),
        (r.toArray = o.toArray),
        (r.zero2 = o.zero2),
        (r.toHex = o.toHex),
        (r.encode = o.encode),
        (r.getNAF = s),
        (r.getJSF = u),
        (r.cachedProperty = c),
        (r.parseBytes = l),
        (r.intFromLE = f);
    },
    f460: function(t, e, n) {
      var r = n("98e6"),
        i = n("8707").Buffer;
      function a(t) {
        var e = i.allocUnsafe(4);
        return e.writeUInt32BE(t, 0), e;
      }
      t.exports = function(t, e) {
        var n,
          o = i.alloc(0),
          s = 0;
        while (o.length < e)
          (n = a(s++)),
            (o = i.concat([
              o,
              r("sha1")
                .update(t)
                .update(n)
                .digest()
            ]));
        return o.slice(0, e);
      };
    },
    f576: function(t, e, n) {
      "use strict";
      var r = n("3fb5"),
        i = n("93e6"),
        a = n("8707").Buffer,
        o = new Array(16);
      function s() {
        i.call(this, 64),
          (this._a = 1732584193),
          (this._b = 4023233417),
          (this._c = 2562383102),
          (this._d = 271733878);
      }
      function u(t, e) {
        return (t << e) | (t >>> (32 - e));
      }
      function c(t, e, n, r, i, a, o) {
        return (u((t + ((e & n) | (~e & r)) + i + a) | 0, o) + e) | 0;
      }
      function l(t, e, n, r, i, a, o) {
        return (u((t + ((e & r) | (n & ~r)) + i + a) | 0, o) + e) | 0;
      }
      function f(t, e, n, r, i, a, o) {
        return (u((t + (e ^ n ^ r) + i + a) | 0, o) + e) | 0;
      }
      function h(t, e, n, r, i, a, o) {
        return (u((t + (n ^ (e | ~r)) + i + a) | 0, o) + e) | 0;
      }
      r(s, i),
        (s.prototype._update = function() {
          for (var t = o, e = 0; e < 16; ++e)
            t[e] = this._block.readInt32LE(4 * e);
          var n = this._a,
            r = this._b,
            i = this._c,
            a = this._d;
          (n = c(n, r, i, a, t[0], 3614090360, 7)),
            (a = c(a, n, r, i, t[1], 3905402710, 12)),
            (i = c(i, a, n, r, t[2], 606105819, 17)),
            (r = c(r, i, a, n, t[3], 3250441966, 22)),
            (n = c(n, r, i, a, t[4], 4118548399, 7)),
            (a = c(a, n, r, i, t[5], 1200080426, 12)),
            (i = c(i, a, n, r, t[6], 2821735955, 17)),
            (r = c(r, i, a, n, t[7], 4249261313, 22)),
            (n = c(n, r, i, a, t[8], 1770035416, 7)),
            (a = c(a, n, r, i, t[9], 2336552879, 12)),
            (i = c(i, a, n, r, t[10], 4294925233, 17)),
            (r = c(r, i, a, n, t[11], 2304563134, 22)),
            (n = c(n, r, i, a, t[12], 1804603682, 7)),
            (a = c(a, n, r, i, t[13], 4254626195, 12)),
            (i = c(i, a, n, r, t[14], 2792965006, 17)),
            (r = c(r, i, a, n, t[15], 1236535329, 22)),
            (n = l(n, r, i, a, t[1], 4129170786, 5)),
            (a = l(a, n, r, i, t[6], 3225465664, 9)),
            (i = l(i, a, n, r, t[11], 643717713, 14)),
            (r = l(r, i, a, n, t[0], 3921069994, 20)),
            (n = l(n, r, i, a, t[5], 3593408605, 5)),
            (a = l(a, n, r, i, t[10], 38016083, 9)),
            (i = l(i, a, n, r, t[15], 3634488961, 14)),
            (r = l(r, i, a, n, t[4], 3889429448, 20)),
            (n = l(n, r, i, a, t[9], 568446438, 5)),
            (a = l(a, n, r, i, t[14], 3275163606, 9)),
            (i = l(i, a, n, r, t[3], 4107603335, 14)),
            (r = l(r, i, a, n, t[8], 1163531501, 20)),
            (n = l(n, r, i, a, t[13], 2850285829, 5)),
            (a = l(a, n, r, i, t[2], 4243563512, 9)),
            (i = l(i, a, n, r, t[7], 1735328473, 14)),
            (r = l(r, i, a, n, t[12], 2368359562, 20)),
            (n = f(n, r, i, a, t[5], 4294588738, 4)),
            (a = f(a, n, r, i, t[8], 2272392833, 11)),
            (i = f(i, a, n, r, t[11], 1839030562, 16)),
            (r = f(r, i, a, n, t[14], 4259657740, 23)),
            (n = f(n, r, i, a, t[1], 2763975236, 4)),
            (a = f(a, n, r, i, t[4], 1272893353, 11)),
            (i = f(i, a, n, r, t[7], 4139469664, 16)),
            (r = f(r, i, a, n, t[10], 3200236656, 23)),
            (n = f(n, r, i, a, t[13], 681279174, 4)),
            (a = f(a, n, r, i, t[0], 3936430074, 11)),
            (i = f(i, a, n, r, t[3], 3572445317, 16)),
            (r = f(r, i, a, n, t[6], 76029189, 23)),
            (n = f(n, r, i, a, t[9], 3654602809, 4)),
            (a = f(a, n, r, i, t[12], 3873151461, 11)),
            (i = f(i, a, n, r, t[15], 530742520, 16)),
            (r = f(r, i, a, n, t[2], 3299628645, 23)),
            (n = h(n, r, i, a, t[0], 4096336452, 6)),
            (a = h(a, n, r, i, t[7], 1126891415, 10)),
            (i = h(i, a, n, r, t[14], 2878612391, 15)),
            (r = h(r, i, a, n, t[5], 4237533241, 21)),
            (n = h(n, r, i, a, t[12], 1700485571, 6)),
            (a = h(a, n, r, i, t[3], 2399980690, 10)),
            (i = h(i, a, n, r, t[10], 4293915773, 15)),
            (r = h(r, i, a, n, t[1], 2240044497, 21)),
            (n = h(n, r, i, a, t[8], 1873313359, 6)),
            (a = h(a, n, r, i, t[15], 4264355552, 10)),
            (i = h(i, a, n, r, t[6], 2734768916, 15)),
            (r = h(r, i, a, n, t[13], 1309151649, 21)),
            (n = h(n, r, i, a, t[4], 4149444226, 6)),
            (a = h(a, n, r, i, t[11], 3174756917, 10)),
            (i = h(i, a, n, r, t[2], 718787259, 15)),
            (r = h(r, i, a, n, t[9], 3951481745, 21)),
            (this._a = (this._a + n) | 0),
            (this._b = (this._b + r) | 0),
            (this._c = (this._c + i) | 0),
            (this._d = (this._d + a) | 0);
        }),
        (s.prototype._digest = function() {
          (this._block[this._blockOffset++] = 128),
            this._blockOffset > 56 &&
              (this._block.fill(0, this._blockOffset, 64),
              this._update(),
              (this._blockOffset = 0)),
            this._block.fill(0, this._blockOffset, 56),
            this._block.writeUInt32LE(this._length[0], 56),
            this._block.writeUInt32LE(this._length[1], 60),
            this._update();
          var t = a.allocUnsafe(16);
          return (
            t.writeInt32LE(this._a, 0),
            t.writeInt32LE(this._b, 4),
            t.writeInt32LE(this._c, 8),
            t.writeInt32LE(this._d, 12),
            t
          );
        }),
        (t.exports = s);
    },
    f605: function(t, e) {
      t.exports = function(t, e, n, r) {
        if (!(t instanceof e) || (void 0 !== r && r in t))
          throw TypeError(n + ": incorrect invocation!");
        return t;
      };
    },
    f751: function(t, e, n) {
      var r = n("5ca1");
      r(r.S + r.F, "Object", { assign: n("7333") });
    },
    f772: function(t, e) {
      t.exports = function(t) {
        return "object" === typeof t ? null !== t : "function" === typeof t;
      };
    },
    fa5b: function(t, e, n) {
      t.exports = n("5537")("native-function-to-string", Function.toString);
    },
    faa1: function(t, e, n) {
      "use strict";
      var r,
        i = "object" === typeof Reflect ? Reflect : null,
        a =
          i && "function" === typeof i.apply
            ? i.apply
            : function(t, e, n) {
                return Function.prototype.apply.call(t, e, n);
              };
      function o(t) {
        console && console.warn && console.warn(t);
      }
      r =
        i && "function" === typeof i.ownKeys
          ? i.ownKeys
          : Object.getOwnPropertySymbols
          ? function(t) {
              return Object.getOwnPropertyNames(t).concat(
                Object.getOwnPropertySymbols(t)
              );
            }
          : function(t) {
              return Object.getOwnPropertyNames(t);
            };
      var s =
        Number.isNaN ||
        function(t) {
          return t !== t;
        };
      function u() {
        u.init.call(this);
      }
      (t.exports = u),
        (u.EventEmitter = u),
        (u.prototype._events = void 0),
        (u.prototype._eventsCount = 0),
        (u.prototype._maxListeners = void 0);
      var c = 10;
      function l(t) {
        return void 0 === t._maxListeners
          ? u.defaultMaxListeners
          : t._maxListeners;
      }
      function f(t, e, n, r) {
        var i, a, s;
        if ("function" !== typeof n)
          throw new TypeError(
            'The "listener" argument must be of type Function. Received type ' +
              typeof n
          );
        if (
          ((a = t._events),
          void 0 === a
            ? ((a = t._events = Object.create(null)), (t._eventsCount = 0))
            : (void 0 !== a.newListener &&
                (t.emit("newListener", e, n.listener ? n.listener : n),
                (a = t._events)),
              (s = a[e])),
          void 0 === s)
        )
          (s = a[e] = n), ++t._eventsCount;
        else if (
          ("function" === typeof s
            ? (s = a[e] = r ? [n, s] : [s, n])
            : r
            ? s.unshift(n)
            : s.push(n),
          (i = l(t)),
          i > 0 && s.length > i && !s.warned)
        ) {
          s.warned = !0;
          var u = new Error(
            "Possible EventEmitter memory leak detected. " +
              s.length +
              " " +
              String(e) +
              " listeners added. Use emitter.setMaxListeners() to increase limit"
          );
          (u.name = "MaxListenersExceededWarning"),
            (u.emitter = t),
            (u.type = e),
            (u.count = s.length),
            o(u);
        }
        return t;
      }
      function h() {
        for (var t = [], e = 0; e < arguments.length; e++) t.push(arguments[e]);
        this.fired ||
          (this.target.removeListener(this.type, this.wrapFn),
          (this.fired = !0),
          a(this.listener, this.target, t));
      }
      function p(t, e, n) {
        var r = { fired: !1, wrapFn: void 0, target: t, type: e, listener: n },
          i = h.bind(r);
        return (i.listener = n), (r.wrapFn = i), i;
      }
      function d(t, e, n) {
        var r = t._events;
        if (void 0 === r) return [];
        var i = r[e];
        return void 0 === i
          ? []
          : "function" === typeof i
          ? n
            ? [i.listener || i]
            : [i]
          : n
          ? g(i)
          : v(i, i.length);
      }
      function m(t) {
        var e = this._events;
        if (void 0 !== e) {
          var n = e[t];
          if ("function" === typeof n) return 1;
          if (void 0 !== n) return n.length;
        }
        return 0;
      }
      function v(t, e) {
        for (var n = new Array(e), r = 0; r < e; ++r) n[r] = t[r];
        return n;
      }
      function y(t, e) {
        for (; e + 1 < t.length; e++) t[e] = t[e + 1];
        t.pop();
      }
      function g(t) {
        for (var e = new Array(t.length), n = 0; n < e.length; ++n)
          e[n] = t[n].listener || t[n];
        return e;
      }
      Object.defineProperty(u, "defaultMaxListeners", {
        enumerable: !0,
        get: function() {
          return c;
        },
        set: function(t) {
          if ("number" !== typeof t || t < 0 || s(t))
            throw new RangeError(
              'The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' +
                t +
                "."
            );
          c = t;
        }
      }),
        (u.init = function() {
          (void 0 !== this._events &&
            this._events !== Object.getPrototypeOf(this)._events) ||
            ((this._events = Object.create(null)), (this._eventsCount = 0)),
            (this._maxListeners = this._maxListeners || void 0);
        }),
        (u.prototype.setMaxListeners = function(t) {
          if ("number" !== typeof t || t < 0 || s(t))
            throw new RangeError(
              'The value of "n" is out of range. It must be a non-negative number. Received ' +
                t +
                "."
            );
          return (this._maxListeners = t), this;
        }),
        (u.prototype.getMaxListeners = function() {
          return l(this);
        }),
        (u.prototype.emit = function(t) {
          for (var e = [], n = 1; n < arguments.length; n++)
            e.push(arguments[n]);
          var r = "error" === t,
            i = this._events;
          if (void 0 !== i) r = r && void 0 === i.error;
          else if (!r) return !1;
          if (r) {
            var o;
            if ((e.length > 0 && (o = e[0]), o instanceof Error)) throw o;
            var s = new Error(
              "Unhandled error." + (o ? " (" + o.message + ")" : "")
            );
            throw ((s.context = o), s);
          }
          var u = i[t];
          if (void 0 === u) return !1;
          if ("function" === typeof u) a(u, this, e);
          else {
            var c = u.length,
              l = v(u, c);
            for (n = 0; n < c; ++n) a(l[n], this, e);
          }
          return !0;
        }),
        (u.prototype.addListener = function(t, e) {
          return f(this, t, e, !1);
        }),
        (u.prototype.on = u.prototype.addListener),
        (u.prototype.prependListener = function(t, e) {
          return f(this, t, e, !0);
        }),
        (u.prototype.once = function(t, e) {
          if ("function" !== typeof e)
            throw new TypeError(
              'The "listener" argument must be of type Function. Received type ' +
                typeof e
            );
          return this.on(t, p(this, t, e)), this;
        }),
        (u.prototype.prependOnceListener = function(t, e) {
          if ("function" !== typeof e)
            throw new TypeError(
              'The "listener" argument must be of type Function. Received type ' +
                typeof e
            );
          return this.prependListener(t, p(this, t, e)), this;
        }),
        (u.prototype.removeListener = function(t, e) {
          var n, r, i, a, o;
          if ("function" !== typeof e)
            throw new TypeError(
              'The "listener" argument must be of type Function. Received type ' +
                typeof e
            );
          if (((r = this._events), void 0 === r)) return this;
          if (((n = r[t]), void 0 === n)) return this;
          if (n === e || n.listener === e)
            0 === --this._eventsCount
              ? (this._events = Object.create(null))
              : (delete r[t],
                r.removeListener &&
                  this.emit("removeListener", t, n.listener || e));
          else if ("function" !== typeof n) {
            for (i = -1, a = n.length - 1; a >= 0; a--)
              if (n[a] === e || n[a].listener === e) {
                (o = n[a].listener), (i = a);
                break;
              }
            if (i < 0) return this;
            0 === i ? n.shift() : y(n, i),
              1 === n.length && (r[t] = n[0]),
              void 0 !== r.removeListener &&
                this.emit("removeListener", t, o || e);
          }
          return this;
        }),
        (u.prototype.off = u.prototype.removeListener),
        (u.prototype.removeAllListeners = function(t) {
          var e, n, r;
          if (((n = this._events), void 0 === n)) return this;
          if (void 0 === n.removeListener)
            return (
              0 === arguments.length
                ? ((this._events = Object.create(null)),
                  (this._eventsCount = 0))
                : void 0 !== n[t] &&
                  (0 === --this._eventsCount
                    ? (this._events = Object.create(null))
                    : delete n[t]),
              this
            );
          if (0 === arguments.length) {
            var i,
              a = Object.keys(n);
            for (r = 0; r < a.length; ++r)
              (i = a[r]), "removeListener" !== i && this.removeAllListeners(i);
            return (
              this.removeAllListeners("removeListener"),
              (this._events = Object.create(null)),
              (this._eventsCount = 0),
              this
            );
          }
          if (((e = n[t]), "function" === typeof e)) this.removeListener(t, e);
          else if (void 0 !== e)
            for (r = e.length - 1; r >= 0; r--) this.removeListener(t, e[r]);
          return this;
        }),
        (u.prototype.listeners = function(t) {
          return d(this, t, !0);
        }),
        (u.prototype.rawListeners = function(t) {
          return d(this, t, !1);
        }),
        (u.listenerCount = function(t, e) {
          return "function" === typeof t.listenerCount
            ? t.listenerCount(e)
            : m.call(t, e);
        }),
        (u.prototype.listenerCount = m),
        (u.prototype.eventNames = function() {
          return this._eventsCount > 0 ? r(this._events) : [];
        });
    },
    fab2: function(t, e, n) {
      var r = n("7726").document;
      t.exports = r && r.documentElement;
    },
    fda6: function(t, e, n) {
      var r = n("8947"),
        i = n("4228"),
        a = n("e85f");
      function o() {
        return Object.keys(a);
      }
      (e.createCipher = e.Cipher = r.createCipher),
        (e.createCipheriv = e.Cipheriv = r.createCipheriv),
        (e.createDecipher = e.Decipher = i.createDecipher),
        (e.createDecipheriv = e.Decipheriv = i.createDecipheriv),
        (e.listCiphers = e.getCiphers = o);
    },
    fdac: function(t, e, n) {
      var r;
      function i(t) {
        this.rand = t;
      }
      if (
        ((t.exports = function(t) {
          return r || (r = new i(null)), r.generate(t);
        }),
        (t.exports.Rand = i),
        (i.prototype.generate = function(t) {
          return this._rand(t);
        }),
        (i.prototype._rand = function(t) {
          if (this.rand.getBytes) return this.rand.getBytes(t);
          for (var e = new Uint8Array(t), n = 0; n < e.length; n++)
            e[n] = this.rand.getByte();
          return e;
        }),
        "object" === typeof self)
      )
        self.crypto && self.crypto.getRandomValues
          ? (i.prototype._rand = function(t) {
              var e = new Uint8Array(t);
              return self.crypto.getRandomValues(e), e;
            })
          : self.msCrypto && self.msCrypto.getRandomValues
          ? (i.prototype._rand = function(t) {
              var e = new Uint8Array(t);
              return self.msCrypto.getRandomValues(e), e;
            })
          : "object" === typeof window &&
            (i.prototype._rand = function() {
              throw new Error("Not implemented yet");
            });
      else
        try {
          var a = n(4);
          if ("function" !== typeof a.randomBytes)
            throw new Error("Not supported");
          i.prototype._rand = function(t) {
            return a.randomBytes(t);
          };
        } catch (o) {}
    }
  }
]);
//# sourceMappingURL=chunk-vendors.8caacedf.js.map
